import{M as E,f as _}from"./useFiles-vwJDhcJW.js";import{l as h}from"./index-Bfg6Y5Td.js";import{j as r}from"./jsx-runtime-C2zdKJwt.js";import"./VerificationSubmission-CMrrYimb.js";import"./StringUtils-Bdqa-HwM.js";import"./OrientationBanner-DdeIw4R5.js";import"./index-CVh1Ipa7.js";import{n as x}from"./useAccessRequirements-Y2TErnp8.js";import{p as T}from"./pluralize-ME3O7i1J.js";import{E as O}from"./EntityLink-Cb02G8Ec.js";import{T as M}from"./Typography-D2DkYKYV.js";import{L as S}from"./List-DLtXx5UF.js";import{L as k}from"./ListItem-C1vMp9c4.js";import{A as C}from"./Alert-CUgd9TuU.js";import"./SynapseConstants-DKhjtb2A.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useTimeout-CQnJRQmv.js";import"./FullWidthAlert-XWywqNuH.js";import"./spreadSx-CwcO6WA9.js";import"./Stack-BaAbaV6L.js";import"./DefaultPropsProvider-UWqbWpxF.js";import"./createTheme-BWtMJkqk.js";import"./extendSxProp-B1oyFkfJ.js";import"./getThemeProps-CMN7RrnV.js";import"./useTheme-iqUFZMBT.js";import"./Box-CMAchTxS.js";import"./AlertTitle-CJMCoaRf.js";import"./useForkRef-9eN_inJs.js";import"./useSlot-DDPOHm6f.js";import"./useTheme-DbZeLE77.js";import"./ClickAwayListener-Cgkgf3jo.js";import"./getReactElementRef-IPwxiBWh.js";import"./index-Bt-y4T2Z.js";import"./iframe-DvA1At3T.js";import"./index-BnMdIwEL.js";import"./ownerDocument-DW-IO8s5.js";import"./Paper-CyCmlL1Y.js";import"./Grow-Djp00MY2.js";import"./Tooltip-BWvRAt5V.js";import"./index-C7NuAW-E.js";import"./useControlled-D_aFISVB.js";import"./Popper-Dk-Zkxvi.js";import"./isFocusVisible-B8k4qzLc.js";import"./Button-CWLDo0aq.js";import"./createSimplePaletteValueFilter-DAe34k5M.js";import"./ButtonBase-RPLFf9rD.js";import"./CircularProgress-BhFXqvhB.js";import"./useQuery-BbzlL3Qp.js";import"./utils-DToYn1OR.js";import"./Link-C6Ym6MsW.js";import"./Collapse-rwS9aSTb.js";import"./_baseUniq-BzmPl_Sm.js";import"./_Uint8Array-4o0NZ71j.js";import"./_baseTimes-36S_kd0L.js";import"./isObjectLike-D11HbiLa.js";import"./isArray-Dxzbedgu.js";import"./_getTag-Fq-fPTon.js";import"./isEqual-eKG6CiW1.js";import"./merge-DKMVabw-.js";import"./_initCloneObject-LJZTQyZs.js";import"./identity-DKeuBCMA.js";import"./createSvgIcon-Bgt5hS8C.js";import"./tinycolor-Begke6kS.js";import"./Fade-DyZk-6A5.js";import"./inputBaseClasses-B3DlAxML.js";import"./calculateFriendlyFileSize-Dt7Ai019.js";import"./CheckCircleTwoTone-DvEV9_7H.js";import"./InfoTwoTone-D2bcAgsD.js";import"./index-BFPJ1VZ0.js";import"./useMutation-DszXITcc.js";import"./dayjs.min-C2Wj_Xdb.js";import"./chunk-AYJ5UCUI-CQxyT5Nz.js";import"./cloneDeep-BVNTYblI.js";import"./Skeleton-DTzjIlY_.js";import"./util-ogrUCbJF.js";import"./index-DSNjHJYf.js";import"./react-BxEHnInM.js";import"./index-BxantnVd.js";import"./_baseOrderBy-C5tdeQ2C.js";import"./toString-CGqi7q7R.js";import"./isSymbol-BiJqj4py.js";import"./_baseGet-CSqV-Xy-.js";import"./_baseIteratee-rnLfZanA.js";import"./hasIn-BL56YgZX.js";import"./_baseMap-B4YKVKvu.js";import"./_baseEach-DVGAx4Qh.js";import"./useQueries-CHUn8ke-.js";import"./useInfiniteQuery-DFh6D0lI.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./useEntity-CEg5rMuA.js";import"./pickBy-Dr5LyqIG.js";import"./isString-DTWBuXZa.js";import"./toInteger-BFkiz_i_.js";import"./pick-CidkCvuf.js";import"./_baseSet-DzVLYIci.js";import"./omit-DpKYAwdv.js";import"./_baseSlice-F8doVSIJ.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntityBundle-C3VjUHMo.js";import"./useGetEntityHeaders-Db84k8JE.js";import"./EntityIcon-Dnbogwfh.js";import"./IconSvg-Dl7tKKmV.js";import"./LayersTwoTone-CR6fGZ5k.js";import"./ContentCopyTwoTone-ChgRMhcs.js";import"./HelpOutlineTwoTone-D6SggfFG.js";import"./ErrorOutlined-DkXnMzKa.js";import"./GetAppTwoTone-g6pU5miQ.js";import"./InfoOutlined-kglnPXv_.js";import"./PhoneTwoTone-Bldel5cT.js";import"./DeleteTwoTone-DCqo43uX.js";import"./ErrorChip-OF4PgBYb.js";import"./Chip-ZEsozDfK.js";import"./Avatar-CbfTK2jA.js";import"./isHostComponent-DVu5iVWx.js";import"./isMuiElement-Bdc7Ubye.js";import"./listItemButtonClasses-XAEWQLXc.js";import"./Close-DRddyT85.js";import"./IconButton-BvfnLvJn.js";const c=p=>{const n={ids:[p.accessRequirementId]},{data:e,isError:a,error:f}=x(n),t=(e==null?void 0:e.pages.flatMap(o=>o.results)[0])??void 0,d=(t==null?void 0:t.relatedProjectIds.length)||0,A=`${T("project",d,!0)}${d>0?":":""}`;return r.jsxs(r.Fragment,{children:[t&&r.jsxs(r.Fragment,{children:[r.jsx(M,{variant:"body1",children:A}),r.jsx(S,{sx:{listStyleType:"disc",pl:4},children:t.relatedProjectIds.map(o=>r.jsx(k,{sx:{display:"list-item",py:"4px",".no-margin-y":{my:0}},children:r.jsx(O,{entity:o,link:!1,showIcon:!1,className:"no-margin-y"})},o))})]}),a&&r.jsx(C,{severity:"error",children:f.message})]})};try{c.displayName="AccessRequirementRelatedProjectsList",c.__docgenInfo={description:"",displayName:"AccessRequirementRelatedProjectsList",props:{accessRequirementId:{defaultValue:null,description:"",name:"accessRequirementId",required:!0,type:{name:"number"}}}}}catch{}const He={title:"Governance/AccessRequirementRelatedProjectsList",component:c},i={args:{accessRequirementId:9603055}},s={args:{accessRequirementId:9605913}},m={args:{accessRequirementId:1234567},parameters:{stack:"mock",msw:{handlers:[h.rest.post(`${E}${_}`,async(p,n,e)=>{const a={results:[{id:"1234567",type:"org.sagebionetworks.repo.model.ManagedACTAccessRequirement",createdOn:"2017-08-23T18:48:20.892Z",modifiedOn:"2023-12-14T00:43:41.315Z",name:"Team AR without Related Projects",version:"1",relatedProjectIds:[],reviewerIds:[]}]};return n(e.status(200),e.json(a))})]}}};var l,u,R;i.parameters={...i.parameters,docs:{...(l=i.parameters)==null?void 0:l.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 9603055
  }
}`,...(R=(u=i.parameters)==null?void 0:u.docs)==null?void 0:R.source}}};var j,g,y;s.parameters={...s.parameters,docs:{...(j=s.parameters)==null?void 0:j.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 9605913
  }
}`,...(y=(g=s.parameters)==null?void 0:g.docs)==null?void 0:y.source}}};var I,P,q;m.parameters={...m.parameters,docs:{...(I=m.parameters)==null?void 0:I.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 1234567
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [
      // searchAccessRequirements
      rest.post(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_SEARCH}\`, async (req, res, ctx) => {
        const zeroRelatedProjects = {
          results: [{
            id: '1234567',
            type: 'org.sagebionetworks.repo.model.ManagedACTAccessRequirement',
            createdOn: '2017-08-23T18:48:20.892Z',
            modifiedOn: '2023-12-14T00:43:41.315Z',
            name: 'Team AR without Related Projects',
            version: '1',
            relatedProjectIds: [],
            reviewerIds: []
          }]
        };
        return res(ctx.status(200), ctx.json(zeroRelatedProjects));
      })]
    }
  }
}`,...(q=(P=m.parameters)==null?void 0:P.docs)==null?void 0:q.source}}};const Ke=["ManyProjects","OneProject","ZeroProjectsMock"];export{i as ManyProjects,s as OneProject,m as ZeroProjectsMock,Ke as __namedExportsOrder,He as default};
