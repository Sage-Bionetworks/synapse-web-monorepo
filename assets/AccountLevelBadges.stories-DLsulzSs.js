import{g as f}from"./userProfileHandlers-DLD5fCpy.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-CoUOOnVS.js";import{A}from"./AccountLevelBadges-DGAkOTK1.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-A58qAGTG.js";import"./iframe-ClVMoJvW.js";import"./mockEntity-iPOZeMsS.js";import"./mockFileEntity-C4DS0Cbw.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-esvCXCCP.js";import"./mockTeam-BuvxOenJ.js";import"./SynapseConstants-aXu1tDOr.js";import"./OrientationBanner-BWBFJ0yy.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-e6oeiiS4.js";import"./index-CHVMFH7M.js";import"./spreadSx-CwcO6WA9.js";import"./react-CNW0viHv.js";import"./FullWidthAlert-D-Y85AGg.js";import"./Alert-DBkyC7v2.js";import"./createTheme-Dh0f-PI4.js";import"./DefaultPropsProvider-CBzoMWiB.js";import"./useSlot-CPBRkNk2.js";import"./useForkRef-DoDgdNBT.js";import"./createSimplePaletteValueFilter-CJ4RsiJ_.js";import"./createSvgIcon-1VmyitDI.js";import"./Close-DT5SYQ5j.js";import"./IconButton-CQJFqUxJ.js";import"./useTimeout-_MPtwmvh.js";import"./ButtonBase-C6tiUzg6.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DssauoHK.js";import"./Paper-CscxC-nZ.js";import"./useTheme-xwvFlxes.js";import"./useTheme-CXK0bmkJ.js";import"./Stack-DNPip1HK.js";import"./extendSxProp-DlCy7HXm.js";import"./getThemeProps-Bw20A-vb.js";import"./Box-3JYTO1WU.js";import"./AlertTitle-T3qK4lpH.js";import"./Typography-CceGoqtm.js";import"./index-zQj8wIhf.js";import"./ClickAwayListener-BYjt3j0D.js";import"./getReactElementRef-ERmAiXQ4.js";import"./index-BxoVh5lP.js";import"./index-D0ejypGL.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BlQIFe45.js";import"./Tooltip-Bsspg9XV.js";import"./index-YAqICTwX.js";import"./useControlled-CMLV-P_i.js";import"./Popper-jRWuHQW0.js";import"./Button-D88emua3.js";import"./uniqueId-CYzg0bjW.js";import"./toString-BGPxifEX.js";import"./isArray-D2RVMlgB.js";import"./isSymbol-v-QfZ1AY.js";import"./times-CfRbgfJN.js";import"./_Uint8Array-W6b_8ZQL.js";import"./identity-DKeuBCMA.js";import"./toInteger-CjWX7q7R.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-DRP9e10O.js";import"./QueryClientProvider-eW7_5tl_.js";import"./Link-DXQkQAZf.js";import"./Collapse-CQU-jh41.js";import"./_baseUniq-ChE4L4Qu.js";import"./_getTag-C3EbY4Ni.js";import"./isEqual-CYsEo0q4.js";import"./merge-C0nipVuY.js";import"./_initCloneObject-CMOQzCqQ.js";import"./tinycolor-Begke6kS.js";import"./Fade-B2i4us37.js";import"./inputBaseClasses-DwHiXH96.js";import"./calculateFriendlyFileSize-BnpOZOH-.js";import"./CheckCircleTwoTone-DFLozXHx.js";import"./InfoTwoTone-DjBjCg4X.js";import"./useMutation-Db9mxQyg.js";import"./dayjs.min-BdWLMgSP.js";import"./chunk-AYJ5UCUI-6ko_yZTB.js";import"./cloneDeep-BpRUwq2a.js";import"./Skeleton-CEGItXWQ.js";import"./AccountLevelBadge-kJLGSBnu.js";import"./Card-DVvAoatY.js";import"./ConfirmationDialog-CA5e_9VS.js";import"./DialogBase-Nu749yO2.js";import"./Close-DLlRFHKi.js";import"./HelpPopover-CLky0nFv.js";import"./MarkdownPopover-IsNpiamV.js";import"./LightTooltip-Dd5mB-K5.js";import"./MarkdownSynapse-U32NW5Az.js";import"./SkeletonButton-Bd_vzPoo.js";import"./SkeletonInlineBlock-DBsZPe8E.js";import"./SkeletonTable-Mvokz47V.js";import"./SkeletonParagraph-Ds9YC-ap.js";import"./HelpOutlineTwoTone-DwvzCYNq.js";import"./DialogTitle-DrMCXLgr.js";import"./DialogContent-BVKoY5gc.js";import"./DialogActions-DV_FTwoQ.js";import"./Dialog-WjrnPyuM.js";import"./Modal-tReFgoo2.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-CKvDIej3.js";import"./LoadingScreen-OYnuucOF.js";import"./LinearProgress-DJMgDffj.js";import"./ToastMessage-ScE-VJij.js";import"./CSSTransition-FYkgH4k6.js";const St={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Et=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Et as __namedExportsOrder,St as default};
