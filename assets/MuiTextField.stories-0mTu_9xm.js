import{j as m}from"./jsx-runtime-D_zvdyIk.js";import{T as a}from"./TextField-D7FrMoNR.js";import"./index-BiZonhDH.js";import"./iframe-KhA6412S.js";import"./createTheme-1jm5ezYP.js";import"./useSlot-xBg9ATiI.js";import"./useForkRef-BESM7ku1.js";import"./DefaultPropsProvider-CWzj9DzQ.js";import"./useTimeout-DJBvZtwQ.js";import"./Select-DUTRWbVV.js";import"./Menu-IacIOTYp.js";import"./index-Bs9Rydsp.js";import"./Grow-DyIUulWJ.js";import"./index-Y07cJu9Y.js";import"./index-Xo5PhUpn.js";import"./getReactElementRef-d88flgGN.js";import"./useTheme-B6M16tYP.js";import"./useTheme-BMWmfRcC.js";import"./Popover-KoMZZRLP.js";import"./isHostComponent-DVu5iVWx.js";import"./ownerDocument-DW-IO8s5.js";import"./ownerWindow-HkKU3E4x.js";import"./debounce-Be36O1Ab.js";import"./mergeSlotProps-BS6SOWBj.js";import"./Modal--NgKv0kB.js";import"./getScrollbarSize-CaCM53D3.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-DjUerqbG.js";import"./Fade-BtLpzY4K.js";import"./Paper-ABqWba6I.js";import"./MenuList-DRfxubG_.js";import"./List-D2GfJqt_.js";import"./FormControl-C1ruAbFB.js";import"./useFormControl-BaiFKB6E.js";import"./isMuiElement-ByTXerCY.js";import"./useControlled-DxMP8c3u.js";import"./formControlState-Dq1zat_P.js";import"./createSvgIcon-CrhVCK6n.js";import"./createSimplePaletteValueFilter-Cihnsp1l.js";import"./inputBaseClasses-CplbFm5w.js";import"./InputBase-BT_ZUF0Y.js";import"./index-B3yBNt-L.js";import"./extendSxProp-A_0H_slr.js";import"./Input-B3AKKZnc.js";import"./InputLabel-Batjnnlr.js";import"./FormLabel-DahT7JJj.js";import"./FormHelperText-CCD8hWEk.js";const t=r=>m.jsx(a,{...r});try{t.displayName="TextField",t.__docgenInfo={description:"",displayName:"TextField",props:{component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"Partial<TextFieldSlots>"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.",name:"slotProps",required:!1,type:{name:"{ root?: SlotProps<ElementType<FormControlProps, keyof IntrinsicElements>, {}, BaseTextFieldProps>; ... 4 more ...; select?: SlotProps<...>; } | { ...; } | { ...; }"}}}}}catch{}const te={title:"UI/MUI/TextField",component:t,parameters:{design:{type:"figma",url:"https://www.figma.com/file/0oPm5lLSUva8kyfVNMS6FA/Sage-Style-%26-Component-Library?type=design&node-id=540-19147"}}},e={name:"Text Field",args:{label:"My Label Text Here",placeholder:"Placeholder text",error:!0}};var o,i,p;e.parameters={...e.parameters,docs:{...(o=e.parameters)==null?void 0:o.docs,source:{originalSource:`{
  name: 'Text Field',
  args: {
    label: 'My Label Text Here',
    placeholder: 'Placeholder text',
    error: true
  }
}`,...(p=(i=e.parameters)==null?void 0:i.docs)==null?void 0:p.source}}};const re=["Demo"];export{e as Demo,re as __namedExportsOrder,te as default};
