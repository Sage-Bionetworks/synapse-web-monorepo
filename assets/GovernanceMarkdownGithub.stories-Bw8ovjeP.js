import{u as o}from"./VerificationSubmission-BDh1zA9f.js";import{g as u,bd as d,be as l,B as f,bf as S,M as O}from"./useFiles-BZV17LRY.js";import"./StringUtils-C95LMFI-.js";import{h as i,H as n}from"./index-CtQM2pY5.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-BKPA81kr.js";import"./SynapseConstants-VIskHFE7.js";import"./OrientationBanner-mYD1KLJ5.js";import"./index-C6oCx5Q4.js";import"./index-CREGy4JU.js";import"./iframe-DFtThXn_.js";import"./spreadSx-CwcO6WA9.js";import"./react-B2udbvLI.js";import"./FullWidthAlert-ZCTjro34.js";import"./Alert-AqaPj6PE.js";import"./createTheme-CE1nmSdD.js";import"./DefaultPropsProvider-BHzoV1Dn.js";import"./useSlot-DMKKbB6i.js";import"./useForkRef-CyS_o1Iz.js";import"./createSimplePaletteValueFilter-C9Flh5mR.js";import"./createSvgIcon-CkgBCV8y.js";import"./Close-DQp0oEqq.js";import"./IconButton-BUM-FX0_.js";import"./useTimeout-BE5W8YJ8.js";import"./ButtonBase-DaZ_7lRI.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DfEpdioV.js";import"./Paper-DBVwlpo2.js";import"./useTheme-CwYhMF_O.js";import"./useTheme-JvF5LZla.js";import"./Stack-CPIUTT_1.js";import"./useThemeProps-zgF3fqlo.js";import"./getThemeProps-CRUQo9sp.js";import"./extendSxProp-BOce1nm_.js";import"./Box-DZiaVZnl.js";import"./AlertTitle-ChsCM4TP.js";import"./Typography-ANEGaihN.js";import"./index-B74xXF-A.js";import"./ClickAwayListener-YW0z3svG.js";import"./getReactElementRef-DO_5aoCT.js";import"./index-DD8x44wX.js";import"./index-C1cgcAs1.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DpBJrWe9.js";import"./Tooltip-Dr1XL-Zz.js";import"./index-ClwLs2xL.js";import"./useControlled-D4h4kRjW.js";import"./Popper-C1co2brQ.js";import"./Button-Mc4n0qjd.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-DI2Ey6nc.js";import"./QueryClientProvider-BA1QpnVt.js";import"./Link-D3QslX_P.js";import"./Collapse-DD7JCiwU.js";import"./_baseUniq-7YcikviV.js";import"./_Uint8Array-B6jpFBB6.js";import"./isArray-CV7tcOmy.js";import"./_getTag-HkVF-QgG.js";import"./isEqual-KtQk5CnN.js";import"./noop-DX6rZLP_.js";import"./merge-PkoklwUB.js";import"./_initCloneObject-Bh5HWbpD.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-CbrDphCM.js";import"./inputBaseClasses-BMTzFsPJ.js";import"./calculateFriendlyFileSize-B4sPoU2L.js";import"./CheckCircleTwoTone-Ty_us4is.js";import"./InfoTwoTone-rbOzY5QT.js";import"./useMutation-DaNzmEzQ.js";import"./dayjs.min-CbGnbLpw.js";import"./chunk-AYJ5UCUI-DCSckdQY.js";import"./cloneDeep-CvkUHlHg.js";import"./Skeleton-CvrJKXGx.js";import"./SkeletonButton-P6oJpSSt.js";import"./SkeletonInlineBlock-DftsGBov.js";import"./SkeletonTable-peC_qq9f.js";import"./times-Bv1KFJrp.js";import"./toInteger-BtKyyIvD.js";import"./isSymbol-BhCFEInU.js";import"./SkeletonParagraph-OPHV_-1G.js";import"./MarkdownSynapse-CChBjwIr.js";import"./Container-CNR3hdaL.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Qr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Xr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Xr as __namedExportsOrder,Qr as default};
