import{j as l}from"./jsx-runtime-DAw_QoWs.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-BXCPXtUK.js";import{aH as S,M as a}from"./useFiles-D5p9mEeJ.js";import"./OrientationBanner-oeQY9W6x.js";import"./index-B1D9r8pK.js";import"./StringUtils-Df7AZImX.js";import{l as _}from"./index-C-oQXe45.js";import{S as E}from"./SynapseFormSubmissionGrid-BFV6vwQ6.js";import"./mockSchema-l6iOH9nU.js";import"./mockFileEntity-D2WnWPS6.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-i28Z7vHk.js";import"./mockTeam-Ckn1YPsR.js";import"./SynapseConstants-ChwKCKUe.js";import"./uniqueId-BsecQqrz.js";import"./toString-CWaKz3gu.js";import"./isObjectLike-l2stp93q.js";import"./iframe-BcOC2yHy.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-EEZWc-Yf.js";import"./times-BFOjRvrC.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-CceQtdBS.js";import"./asyncJobHandlers-IzpYh3Rc.js";import"./BasicMockedCrudService-CE8x01sS.js";import"./cloneDeep-cFlRRiur.js";import"./_Uint8Array-DpxWhSn9.js";import"./_initCloneObject-X1pr-NFE.js";import"./_getTag-BmfB6MEh.js";import"./isEqual-BZl8ciHp.js";import"./_baseIsEqual-D9NgJpr4.js";import"./mockAnnotationColumns-veg2qYhX.js";import"./tableQueryHandlers-Em3FKjBD.js";import"./omit-BN-aUAEJ.js";import"./_baseGet-BEQ8mqfI.js";import"./isNil-trK1jsU5.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-TeTmR9Lg.js";import"./_baseFlatten-BJNPEdBb.js";import"./pick-CXWAiOI8.js";import"./_baseSet-6JigYBtT.js";import"./hasIn-QdAOYnj7.js";import"./accessRequirementAclHandlers-xs0LOQSM.js";import"./mockAccessRequirementAcls-6mgxZW6V.js";import"./mockAccessRequirements-DlGWS7Fi.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-ClwrMfz3.js";import"./wikiHandlers-BhA9pbze.js";import"./mockWikiPageKey-CoMiNNIg.js";import"./teamHandlers-BNi7rHIx.js";import"./dataAccessRequestHandlers-BuwIFKWI.js";import"./MockResearchProject-B3Tt0aSE.js";import"./mock_discussion-B3VBMOT-.js";import"./fakerUtils-CIilamLt.js";import"./index-CDJYojuC.js";import"./mockTableEntity-z97RuG1R.js";import"./mockFileEntityACLVariants-DRRuRkrD.js";import"./entityHandlers-COFhIVdI.js";import"./mockEntity-Cm0ET6eO.js";import"./mockEvaluationQueue-QHEUOwuC.js";import"./featureFlagHandlers-Cw5Qr0jJ.js";import"./fileHandlers-Rwzinqsz.js";import"./personalAccessTokenHandlers-DE3jpMl1.js";import"./researchProjectHandlers-BE6boB5f.js";import"./resetTwoFactorAuthHandlers-S1QaKCcy.js";import"./userProfileHandlers-BweCQG4p.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-Bl3cUyHW.js";import"./FullWidthAlert-CqKKYlX-.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-Bd4UixhE.js";import"./createTheme-C3x6mOsc.js";import"./resolveComponentProps-Bml2h3Vr.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-BvktJw4g.js";import"./createSvgIcon-DFCLsq46.js";import"./DefaultPropsProvider-BRQN9N2m.js";import"./Close-DQBgDOSz.js";import"./IconButton-CQEpaTId.js";import"./ButtonBase-CxNTjvXH.js";import"./useTimeout-DOooaOO7.js";import"./useIsFocusVisible-B_nwMbU_.js";import"./useEventCallback-C_4PLi3H.js";import"./Paper-CLLam5eU.js";import"./Stack-MFmmhnKS.js";import"./getThemeProps-DX1gnVmC.js";import"./useTheme-ChDKy_2u.js";import"./Box-D-8YJusE.js";import"./AlertTitle-C83HUI2e.js";import"./Typography-VOjsn5Pz.js";import"./useTheme-bvUc0IYs.js";import"./Grow-BPCk84L6.js";import"./index-C88ldYJB.js";import"./utils-Bzb8CGjQ.js";import"./ClickAwayListener-BMStZymP.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-Dp2Znnys.js";import"./index-CHIJk7Ky.js";import"./useControlled-BzTXu6R5.js";import"./useId-BgwkmMHa.js";import"./Popper-Cbo0s97p.js";import"./Button-LzYkJm9V.js";import"./useQuery-CWk1d_fS.js";import"./utils-D8g86RT1.js";import"./Link-C5RxPrJ3.js";import"./Collapse-DxRVa4rj.js";import"./tinycolor-Begke6kS.js";import"./Fade-C5PK1kHy.js";import"./Skeleton-BAZzAkN6.js";import"./inputBaseClasses-DXZf_3PC.js";import"./calculateFriendlyFileSize-DmhL_8oc.js";import"./CheckCircleTwoTone-CNnVInjh.js";import"./InfoTwoTone-BmfNDtit.js";import"./mutation-CINg4fey.js";import"./dayjs.min-DQJgKjZd.js";import"./chunk-AYJ5UCUI-B9_CWiKA.js";import"./index-CSHqL8lk.js";import"./react-CaHgI2xI.js";import"./util-4oadqp_4.js";import"./WideButton-BR6zen0w.js";import"./DeleteTwoTone-BlUmGyhA.js";import"./createSvgIcon-CRg4UfW-.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-Dc3FXgG4.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-CeIunebm.js";import"./DialogBase-BvUTMEg1.js";import"./Close-DCpdaEB7.js";import"./HelpPopover-qKEVljBK.js";import"./MarkdownPopover-CgQ5oaRP.js";import"./LightTooltip-Dz7vP1-V.js";import"./MarkdownSynapse-DuDhK4qX.js";import"./SkeletonButton-C1ocO452.js";import"./SkeletonInlineBlock-i7c7PImv.js";import"./SkeletonTable-B9yUjImF.js";import"./SkeletonParagraph-rclSDo9e.js";import"./HelpOutlineTwoTone-CxO7ysgK.js";import"./DialogTitle-BbaQ4P1K.js";import"./DialogContent-Bs7DcYoy.js";import"./Dialog-DwKDr623.js";import"./Modal-D4fEk5dI.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-H_np-adY.js";import"./WarningDialog-DBEdEqUV.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
