import{j as t}from"./jsx-runtime-CdKXYHq3.js";import{W as s}from"./WideButton-DgxA01RJ.js";import{E as d}from"./SynapseConstants-BanPYtN2.js";import{A as c}from"./ActionRequiredCard-DcKB29eq.js";import{T as u}from"./Typography-CYinS4Gd.js";import{B as g}from"./Button-B082zdSZ.js";import"./index-pFihaiJB.js";import"./iframe-DGWk3dtm.js";import"./DefaultPropsProvider-B9KQWTTu.js";import"./createTheme-6OKFmZq8.js";import"./OrientationBanner-DzTWIvmN.js";import"./index-vb57DutA.js";import"./spreadSx-CwcO6WA9.js";import"./react-WVV_Bngv.js";import"./FullWidthAlert-3Lw8ZGai.js";import"./Alert-DsIOtgCY.js";import"./resolveComponentProps-BuENAeaX.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-LxaFHDGW.js";import"./createSvgIcon-BkjJkEMb.js";import"./Close-BJDJEVVG.js";import"./IconButton-BM_7udd3.js";import"./ButtonBase-CE1J5Bjq.js";import"./useTimeout-B3NVn0q2.js";import"./TransitionGroupContext-VJeEL-bF.js";import"./useIsFocusVisible-DtTWJUhG.js";import"./useEventCallback-Rz2loLNW.js";import"./Paper-BNcB9yJp.js";import"./Stack-DjjVVnDH.js";import"./getThemeProps-V7XIfBtU.js";import"./useTheme-TYTrCo8P.js";import"./Box-BksAr4qV.js";import"./AlertTitle-CrJmCFK9.js";import"./useTheme-BK0D5BzJ.js";import"./Grow-D8wu1iHX.js";import"./index-CX5jh9yq.js";import"./utils-8j5hwKUm.js";import"./ClickAwayListener-rrs22D9n.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DVMPSB7k.js";import"./index-rhqfbkIa.js";import"./useControlled-DH3KsJOY.js";import"./useId-CvtASGF1.js";import"./Popper-Dza_qJqA.js";import"./Icon-L5nMnMlP.js";import"./mouse-0IiuURzq.js";import"./SortDown-CEELrZMD.js";import"./IconSvg-DzkJ9fa2.js";import"./LayersTwoTone-BhKsj3JZ.js";import"./ContentCopyTwoTone-SWEt0ZWK.js";import"./HelpOutlineTwoTone-DSXyyE-x.js";import"./ErrorOutlined-D9kG7kh_.js";import"./GetAppTwoTone-BTbTM377.js";import"./InfoOutlined-Dmf7tVvW.js";import"./DeleteTwoTone-BImXh635.js";import"./CheckCircleTwoTone-B9avxx8U.js";import"./Skeleton-Dyn6VGG3.js";const xt={title:"Download/ActionRequiredCard",component:c,tags:["autodocs"],argTypes:{actionNode:{options:["Button","Button with text (Sharing Settings)"],mapping:{Button:t.jsx(s,{variant:"contained",children:"Start"}),"Button with text (Sharing Settings)":t.jsxs(t.Fragment,{children:[t.jsx(u,{variant:"smallText1",sx:{color:"grey.700"},children:"Contact an administrator to request download permission"}),t.jsx(g,{variant:"outlined",children:"View Sharing Settings"})]})}}}},o={args:{isLoading:!0}},r={args:{isLoading:!1,title:"The title of the card",description:"The description of the card",actionNode:"Button",iconType:d,count:42}};var i,p,m;o.parameters={...o.parameters,docs:{...(i=o.parameters)==null?void 0:i.docs,source:{originalSource:`{
  args: {
    isLoading: true
  }
}`,...(m=(p=o.parameters)==null?void 0:p.docs)==null?void 0:m.source}}};var e,a,n;r.parameters={...r.parameters,docs:{...(e=r.parameters)==null?void 0:e.docs,source:{originalSource:`{
  args: {
    isLoading: false,
    title: 'The title of the card',
    description: 'The description of the card',
    actionNode: 'Button',
    iconType: EASY_DIFFICULTY,
    count: 42
  }
}`,...(n=(a=r.parameters)==null?void 0:a.docs)==null?void 0:n.source}}};const Tt=["Loading","Card"];export{r as Card,o as Loading,Tt as __namedExportsOrder,xt as default};
