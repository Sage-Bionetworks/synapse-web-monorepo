import{j as l}from"./jsx-runtime-BhYgtz2a.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-Ct7KGzj4.js";import{aH as S,M as a}from"./useFiles-DYAnKXqx.js";import"./OrientationBanner-Cxt7qCaJ.js";import"./index-TnDTBzFf.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-BjAXK14T.js";import{S as E}from"./SynapseFormSubmissionGrid--phzdn7a.js";import"./mockSchema-CRkiEFT7.js";import"./mockFileEntity-Ck-DJ_Vg.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-Bnv5oPAT.js";import"./mockTeam-D6CxLND7.js";import"./SynapseConstants-gkdcnAma.js";import"./uniqueId-s-ZdSPNf.js";import"./toString-SlzxmsmN.js";import"./isObjectLike-Cgap4Gvx.js";import"./iframe-CuKEFSiv.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-SUyKWxT2.js";import"./times-Cu64ZQfK.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-CvHZi1em.js";import"./asyncJobHandlers-DtPq0O4m.js";import"./BasicMockedCrudService-Cq8XecKQ.js";import"./cloneDeep-Gs3EDVNV.js";import"./_Uint8Array-C6rSnNnZ.js";import"./_initCloneObject-Bo4fS92M.js";import"./_getTag-DjjFc0nJ.js";import"./isEqual-BBsO-C2U.js";import"./_baseIsEqual-C_QgXv57.js";import"./mockAnnotationColumns-DNh8hnse.js";import"./tableQueryHandlers-BPA-HcXK.js";import"./omit-D2TzRvta.js";import"./_baseGet-CVMTpF06.js";import"./isNil-B6T7CFbI.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-Dj9R6MmV.js";import"./_baseFlatten-CCEtXf8q.js";import"./pick-DMaHD4AG.js";import"./_baseSet-ChvwwCOy.js";import"./hasIn-BfALqDVk.js";import"./accessRequirementAclHandlers-umx8Z9q6.js";import"./mockAccessRequirementAcls-C0bOz0M4.js";import"./mockAccessRequirements-R3FevpIP.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-BlAXwoLl.js";import"./wikiHandlers-Czh-s_vD.js";import"./mockWikiPageKey-CoInGwiS.js";import"./teamHandlers-B_-pOuZO.js";import"./dataAccessRequestHandlers-wtWropKn.js";import"./MockResearchProject-DYjqJ23h.js";import"./mock_discussion-CzSjajRU.js";import"./fakerUtils-BML5cHZZ.js";import"./index-_wwYlad9.js";import"./mockTableEntity-CfsjwQov.js";import"./mockFileEntityACLVariants-CEEw30JT.js";import"./entityHandlers-CS21DSwj.js";import"./mockEntity-DCIP3JPG.js";import"./mockEvaluationQueue-CiiTn0Rr.js";import"./featureFlagHandlers-BFxyseQ0.js";import"./fileHandlers-GYmKlD7L.js";import"./personalAccessTokenHandlers-DQqDvS2A.js";import"./researchProjectHandlers-hROamzTw.js";import"./resetTwoFactorAuthHandlers-DdEcRLEo.js";import"./userProfileHandlers-2kRfakXb.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-D1ipvWwM.js";import"./FullWidthAlert-DOInkpIF.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-D33iOhM3.js";import"./createTheme-CiTCtaPq.js";import"./resolveComponentProps-CX2YNoCK.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-YmPuCFu8.js";import"./createSvgIcon-PYlHuLfO.js";import"./DefaultPropsProvider-Dj24Y2Xr.js";import"./Close-BTgdsF2d.js";import"./IconButton-Btlm9KUL.js";import"./ButtonBase-Ck0XLcvU.js";import"./useTimeout-Do5JDutj.js";import"./useIsFocusVisible-CZe6Gkhu.js";import"./useEventCallback-DApRzhme.js";import"./Paper-CYE3NXP2.js";import"./Stack-BZm-4vsJ.js";import"./getThemeProps-BNyY6QJd.js";import"./useTheme-K5JEE0Rs.js";import"./Box-CjckbGK_.js";import"./AlertTitle-0i1SwaRE.js";import"./Typography-BHacpJuX.js";import"./useTheme-DOFgFuwm.js";import"./Grow-CP00JTgt.js";import"./index-OQkrhSPO.js";import"./utils-DBPX0-1k.js";import"./ClickAwayListener-B7QLYZZn.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DRjJPI8u.js";import"./index-DRLnAiW7.js";import"./useControlled-C3ftmNlQ.js";import"./useId-CBzLqrSr.js";import"./Popper-BDQKAv4l.js";import"./Button-BfAXo1Lk.js";import"./useQuery-BViQs6v7.js";import"./utils-BprPXMtG.js";import"./Link-C3TGAzuv.js";import"./Collapse-BQyvnYTI.js";import"./tinycolor-Begke6kS.js";import"./Fade-BvJPDuul.js";import"./Skeleton-BGy2m945.js";import"./inputBaseClasses-MLdP7SJy.js";import"./calculateFriendlyFileSize-KWbP0lKx.js";import"./CheckCircleTwoTone-DCcgpwt_.js";import"./InfoTwoTone-Cj98hI2s.js";import"./mutation-CE1ugUAr.js";import"./dayjs.min-B38EMs9S.js";import"./chunk-AYJ5UCUI-DNdPl_oj.js";import"./index-CiypzW3i.js";import"./react-BPX5T-jr.js";import"./util-BCx4wCVd.js";import"./WideButton-Cj-C2gCb.js";import"./DeleteTwoTone-HroNU5KY.js";import"./createSvgIcon-Cjm7LP-w.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-B2_Ysbvj.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-uNJSbRH2.js";import"./DialogBase-Ce6-PwhI.js";import"./Close-rj1GQmlR.js";import"./HelpPopover-CNDNsivB.js";import"./MarkdownPopover-DzSM4rCy.js";import"./LightTooltip-DHf9Y88C.js";import"./MarkdownSynapse-45gJTMPQ.js";import"./SkeletonButton-DUGp1FfO.js";import"./SkeletonInlineBlock-CSUAkSmM.js";import"./SkeletonTable-CMgcD7Dg.js";import"./SkeletonParagraph-DSaeA_Nm.js";import"./HelpOutlineTwoTone-C7EL3P3d.js";import"./DialogTitle-BWRiRoOE.js";import"./DialogContent-CeT2jNla.js";import"./Dialog-dRLL5iVr.js";import"./Modal-BVwJWnwG.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-wju8tcdJ.js";import"./WarningDialog-y_Tu7tZv.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
