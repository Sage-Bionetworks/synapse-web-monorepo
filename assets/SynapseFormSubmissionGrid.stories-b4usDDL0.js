import{j as l}from"./jsx-runtime-CgBRLEa-.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-tdRRXkFM.js";import{aH as S,M as a}from"./useFiles-Bj1qDzht.js";import"./OrientationBanner-BfQKEM6f.js";import"./index-Cm3VAqvi.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-VLOqtSvy.js";import{S as E}from"./SynapseFormSubmissionGrid-DE9M4Yr1.js";import"./mockSchema-DHHFzv_W.js";import"./mockFileEntity-BqOlUjvd.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-D_88GNvN.js";import"./mockTeam-f3wSrr3a.js";import"./SynapseConstants-C4_BSfJX.js";import"./uniqueId-Cd-JRmz4.js";import"./toString-BXBassw-.js";import"./isObjectLike-C5sgg6cm.js";import"./iframe-D-z5eryP.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-DNGSiwFZ.js";import"./times-YvWrZUsp.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-BsWus-vZ.js";import"./asyncJobHandlers-BumHBxBh.js";import"./BasicMockedCrudService-_QweBMuS.js";import"./cloneDeep-4cLsR06D.js";import"./_Uint8Array-Bx9A3vk2.js";import"./_initCloneObject-DPNyC6eJ.js";import"./_getTag-CItFztzL.js";import"./isEqual-CjzFxgA_.js";import"./_baseIsEqual-BpqpksID.js";import"./mockAnnotationColumns-DzKFQsP4.js";import"./tableQueryHandlers-DZGhlbIv.js";import"./omit-Cp7LIW98.js";import"./_baseGet-CtmLeas5.js";import"./isNil-Ant6sUSY.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BmbNGbHm.js";import"./_baseFlatten-CUGNcIgD.js";import"./pick-Bz7bE234.js";import"./_baseSet-DKaJ1au5.js";import"./hasIn-DEcg6jsa.js";import"./accessRequirementAclHandlers-Cnccvgvl.js";import"./mockAccessRequirementAcls-CvF-9Ddt.js";import"./mockAccessRequirements-BR41OIYL.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-ws2Zf8S4.js";import"./wikiHandlers-jJ_LsYKV.js";import"./mockWikiPageKey-AqHRcBk2.js";import"./teamHandlers-DUrt0A5O.js";import"./dataAccessRequestHandlers--egX9Ahb.js";import"./MockResearchProject-B6mvNQna.js";import"./mock_discussion-JWOIKFHG.js";import"./fakerUtils-COrySx-d.js";import"./index-RU4LwN33.js";import"./mockTableEntity-VfadHGtR.js";import"./mockFileEntityACLVariants-C_ZaXH9n.js";import"./entityHandlers-D15TJHAh.js";import"./mockEntity-BH29BdvH.js";import"./mockEvaluationQueue-Bs-CgjM9.js";import"./featureFlagHandlers-Dr0yRGS_.js";import"./fileHandlers-hE8nhyjz.js";import"./personalAccessTokenHandlers-B2QcOMIH.js";import"./researchProjectHandlers-fym-RgFf.js";import"./resetTwoFactorAuthHandlers--Z2M5oEl.js";import"./userProfileHandlers-Mm3cDo6N.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-B4SgA8fZ.js";import"./FullWidthAlert-DhrO65_m.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-4kvTLzfn.js";import"./createTheme-D3A4yulZ.js";import"./resolveComponentProps-BYCi2bu3.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-JdeycaeZ.js";import"./createSvgIcon-kNdxJAy9.js";import"./DefaultPropsProvider-CoJm6rCv.js";import"./Close-agg9DekZ.js";import"./IconButton-eVrh23VG.js";import"./ButtonBase-C0HDqlf7.js";import"./useTimeout-CtGwrGZE.js";import"./useIsFocusVisible-CdG0Xk-w.js";import"./useEventCallback-D4tUhhl4.js";import"./Paper-C1f04ktM.js";import"./Stack-BC_fHXlJ.js";import"./getThemeProps-BIMvOQzE.js";import"./useTheme-B4dGVzj9.js";import"./Box-wR1-okkc.js";import"./AlertTitle-CiwBKXMY.js";import"./Typography-ByTWsZ15.js";import"./useTheme-BI2S4QNb.js";import"./Grow-RHuPc6fz.js";import"./index-DW4Ai1wC.js";import"./utils-D287OKWf.js";import"./ClickAwayListener-Bk44fSg7.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BerKoCs9.js";import"./index-6MOF0f3P.js";import"./useControlled-BPLd89bY.js";import"./useId-BzDDLVft.js";import"./Popper-DpEkWGMI.js";import"./Button-LaCGCM-J.js";import"./useQuery-jCh7k4c8.js";import"./utils-C1QIpVL-.js";import"./Link-BcIkkE9V.js";import"./Collapse-DpmNiXw9.js";import"./tinycolor-Begke6kS.js";import"./Fade-DgzFB8i7.js";import"./Skeleton-Ccnh0KXd.js";import"./inputBaseClasses-BegAz63u.js";import"./calculateFriendlyFileSize-BXtfvFHv.js";import"./CheckCircleTwoTone-DgUHfpw1.js";import"./InfoTwoTone-BpDpNORF.js";import"./mutation-Ds3RVbc1.js";import"./dayjs.min-BcfQFtj1.js";import"./chunk-AYJ5UCUI-DyvibXab.js";import"./index-CQbK4M81.js";import"./react-BszH1LB1.js";import"./util-Bpsy8r7Z.js";import"./WideButton-CDQrhVW9.js";import"./DeleteTwoTone-B3E4ulBA.js";import"./createSvgIcon-DQ12L3o2.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-CSS7xjEl.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-STIUTdMv.js";import"./DialogBase-HsyTB1cI.js";import"./Close-BSpF7JUF.js";import"./HelpPopover-EJvmLzTo.js";import"./MarkdownPopover-C5fst4lH.js";import"./LightTooltip-CMTeQU21.js";import"./MarkdownSynapse-QW4yDwzM.js";import"./SkeletonButton-ClLhiNKW.js";import"./SkeletonInlineBlock-CcnGrXa9.js";import"./SkeletonTable-ChhpYf35.js";import"./SkeletonParagraph-CdjKSc_q.js";import"./HelpOutlineTwoTone-BOQvUHal.js";import"./DialogTitle-B0vby0TL.js";import"./DialogContent-CRahSTiX.js";import"./Dialog-DP7xeZIs.js";import"./Modal-Dk0zDpvX.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-CDTUMtib.js";import"./WarningDialog-WrgdiFQa.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
