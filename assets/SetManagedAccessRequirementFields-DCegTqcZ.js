import{j as r}from"./jsx-runtime-Du8NFWEI.js";import{v as C}from"./useFiles-D-hdekB1.js";import{F as P}from"./VerificationSubmission-BnFne12N.js";import"./StringUtils-CXT0ex8W.js";import{D as T}from"./SynapseConstants-dY7DQPl6.js";import{r as o}from"./index-Dl6G-zuu.js";import"./OrientationBanner-FCMHzA9o.js";import{h as M,g as H}from"./useAccessRequirements-BplBUGE4.js";import{U as O}from"./UploadDocumentField-CjUFv6tl.js";import{S as B}from"./LoadingScreen-Cpeaoznz.js";import{A as k,a as N}from"./SetBasicAccessRequirementFields-DMClPiFr.js";import{A as h}from"./Alert-Dcz6JZ5x.js";import{B as m}from"./Box-DN73Q90z.js";import{T as A}from"./Typography-Cqa7rFgc.js";import{F as a}from"./FormControlLabel-DnTLgYas.js";import{C as l}from"./Checkbox-DdbW-GT9.js";import{T as V}from"./TextField-BDNZH-7j.js";const $="There was an error uploading the DUC template. ",f=n=>{if(n==="")return 0;const c="Please enter a valid expiration period (in days): ";if(/^[-]?\d+$/.test(n)){const d=Number(n);return d<0?`${c}If expiration period is set, then it must be greater than 0.`:d*T}return`${c}For input string: "${n}"`},_=o.forwardRef(function(c,d){const{accessRequirementId:U,onSave:D,onError:x}=c,{data:u,error:R}=M(U,{staleTime:1/0});o.useEffect(()=>{u&&(i(u),y((u.expirationPeriod/T).toString()))},[u]);const[q,j]=o.useState(null),[I,g]=o.useState(null),[e,i]=o.useState(null),[p,y]=o.useState(""),E=o.useMemo(()=>{if(e!=null&&e.ducTemplateFileHandleId)return{fileHandleId:e.ducTemplateFileHandleId,associateObjectType:P.AccessRequirementAttachment,associateObjectId:e.id.toString()}},[e==null?void 0:e.ducTemplateFileHandleId,e==null?void 0:e.id]),F=s=>{if(s.resp&&s.success&&e){j(null);const t=s.resp;i({...e,ducTemplateFileHandleId:t.fileHandleId})}else!s.success&&s.error&&j(`${$} ${s.error.reason}`)},{mutate:b,isPending:S,error:v}=H({onSuccess:()=>D(),onError:()=>x()});return o.useImperativeHandle(d,()=>({save(){if(e){const s=f(p);typeof s=="string"?(g(s),x()):b({...e,expirationPeriod:s})}}}),[p,e,b,x]),e?r.jsxs(r.Fragment,{children:[r.jsx(k,{accessRequirement:e}),r.jsxs(m,{children:[r.jsx(A,{bgcolor:"#f5f5f5",borderBottom:"1px solid #ddd",color:"#333",px:2,py:1,children:"Data Access Request Parameters"}),r.jsxs(m,{mt:2,mb:4,children:[r.jsx(N,{accessRequirement:e,onChange:s=>i(s)}),r.jsxs(m,{mb:2,children:[r.jsx(A,{variant:"body1",fontWeight:700,children:"DUC"}),r.jsx(a,{control:r.jsx(l,{}),label:"DUC is required.",checked:e.isDUCRequired,onChange:(s,t)=>i({...e,isDUCRequired:t})}),r.jsxs(C,{children:[r.jsx(O,{id:"duc",isLoading:S,uploadCallback:s=>F(s),documentName:"Template DUC",fileHandleAssociations:E?[E]:void 0,isMultiFileUpload:!1,uploadBtnVariant:"contained"}),q&&r.jsx(h,{severity:"error",sx:{marginTop:2},children:q})]}),r.jsx(a,{label:"IRB approval is required.",checked:e.isIRBApprovalRequired,control:r.jsx(l,{}),onChange:(s,t)=>i({...e,isIRBApprovalRequired:t}),sx:{ml:0}}),r.jsx(a,{control:r.jsx(l,{}),label:"Other documents are required.",checked:e.areOtherAttachmentsRequired,onChange:(s,t)=>i({...e,areOtherAttachmentsRequired:t})}),r.jsx(V,{id:"expirationPeriod",name:"expirationPeriod",label:"Expiration period (days)",value:p,error:!!I,helperText:I,sx:{mt:1},fullWidth:!0,onChange:s=>{g(null),y(s.target.value)},onBlur:()=>{const s=f(p);typeof s=="string"&&g(s)}}),r.jsxs(m,{mt:1,children:[r.jsx(a,{control:r.jsx(l,{}),label:"Intended Data Use statement is required.",checked:e.isIDURequired,onChange:(s,t)=>{i(t?{...e,isIDURequired:!0}:{...e,isIDURequired:!1,isIDUPublic:!1})}}),r.jsx(a,{control:r.jsx(l,{}),label:"Intended Data Use statements will be publicly available.",checked:e.isIDUPublic,disabled:!e.isIDURequired,onChange:(s,t)=>i({...e,isIDUPublic:t})})]})]})]})]}),v&&r.jsx(h,{severity:"error",sx:{marginTop:2},children:v.reason})]}):R?r.jsx(h,{severity:"error",children:R.reason}):r.jsx(B,{})});try{f.displayName="getValidExpirationPeriodOrErrorMessage",f.__docgenInfo={description:"",displayName:"getValidExpirationPeriodOrErrorMessage",props:{}}}catch{}try{_.displayName="SetManagedAccessRequirementFields",_.__docgenInfo={description:"",displayName:"SetManagedAccessRequirementFields",props:{accessRequirementId:{defaultValue:null,description:"",name:"accessRequirementId",required:!0,type:{name:"string"}},onSave:{defaultValue:null,description:"",name:"onSave",required:!0,type:{name:"() => void"}},onError:{defaultValue:null,description:"",name:"onError",required:!0,type:{name:"() => void"}}}}}catch{}export{_ as S};
