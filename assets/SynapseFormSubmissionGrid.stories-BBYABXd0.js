import{j as l}from"./jsx-runtime-3OrYGa-A.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-eIzxKyCC.js";import{aF as S,M as a}from"./useFiles-DUA-Jj-0.js";import"./OrientationBanner-CccXL3x3.js";import"./index-E0Zgd8PJ.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-CRfnf7TR.js";import{S as E}from"./SynapseFormSubmissionGrid-C5eW08uY.js";import"./mockSchema-Da4zN6yj.js";import"./mockFileEntity-BErCRvco.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-D66QpCoH.js";import"./mockTeam-BzhVHRvo.js";import"./SynapseConstants-jSYxgpcu.js";import"./uniqueId-BFwgHMKM.js";import"./toString-Db4Tn8Kw.js";import"./isObjectLike-DBRiHJjl.js";import"./iframe-DGKewhZ-.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BGDhtyVY.js";import"./times-Do5Yo5av.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-B_5vdWpr.js";import"./asyncJobHandlers-Dj_9PlFS.js";import"./BasicMockedCrudService-DOcfgrbv.js";import"./cloneDeep-Dr-I4MgV.js";import"./_Uint8Array-Bvb5BnvN.js";import"./_initCloneObject-DR5O-GqP.js";import"./_getTag-t_JCQRAi.js";import"./isEqual-oelJpyyy.js";import"./_baseIsEqual-0jby8jfS.js";import"./mockAnnotationColumns-CaaS6Y78.js";import"./tableQueryHandlers-HiaHL0GE.js";import"./omit-DCzmu9hv.js";import"./_baseGet-C_5aErMG.js";import"./isNil-BmumFaXA.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-3rJ4KN2X.js";import"./_baseFlatten-DCn0IDo5.js";import"./pick-D4Py_zT7.js";import"./_baseSet-pYffEMSs.js";import"./hasIn-CAqc_O8U.js";import"./accessRequirementAclHandlers-Csn-DvFI.js";import"./mockAccessRequirementAcls-Dsp0Oooh.js";import"./mockAccessRequirements-Dnyti19S.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-pK4WLGpy.js";import"./wikiHandlers-sqCkZfeh.js";import"./mockWikiPageKey-BXjnMYAk.js";import"./teamHandlers-Bn5BA7oV.js";import"./dataAccessRequestHandlers-D44dlA_N.js";import"./MockResearchProject-CpfSqi9b.js";import"./mock_discussion-y-L6gFuU.js";import"./fakerUtils-Bsi9kZMH.js";import"./index-Bw1Cp-8x.js";import"./mockTableEntity-f7ZqpLvK.js";import"./mockFileEntityACLVariants-Dbir5oD6.js";import"./entityHandlers-BPihsQAc.js";import"./mockEntity-0a53WAQf.js";import"./mockEvaluationQueue-B4h4mFwr.js";import"./featureFlagHandlers-CC2kHhN_.js";import"./fileHandlers-BU5Un8jN.js";import"./personalAccessTokenHandlers-Cs9xPy-T.js";import"./researchProjectHandlers-QbhP8nX8.js";import"./resetTwoFactorAuthHandlers-5gEaeYe2.js";import"./userProfileHandlers-DJTz1ues.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-DyqmDSGM.js";import"./FullWidthAlert-0pF52_M1.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-DonyAFK0.js";import"./createTheme-BnTuIRv6.js";import"./resolveComponentProps-CSqydSMD.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-fbjtUiV8.js";import"./createSvgIcon-eKjsHGUK.js";import"./DefaultPropsProvider-B5yGAE64.js";import"./Close-CGILoACs.js";import"./IconButton-B9wVP-A1.js";import"./ButtonBase-BzsSFjIg.js";import"./useTimeout-b192V-41.js";import"./useIsFocusVisible-DHNMeGMf.js";import"./useEventCallback-ByjSGWYF.js";import"./Paper-Bzm_Nx-y.js";import"./Stack-C7Who12C.js";import"./getThemeProps-BeGrbUHB.js";import"./useTheme-CA91lOJv.js";import"./Box-347FjrZL.js";import"./AlertTitle-e1QbrWbH.js";import"./Typography-BqXAY_j_.js";import"./useTheme-YD2d8a2f.js";import"./Grow-BGnhXozI.js";import"./index-DK7lSTXT.js";import"./utils-D9FR9N58.js";import"./ClickAwayListener-vy6Nn4he.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DJrmkq86.js";import"./index-EEjFQgdf.js";import"./useControlled-DoAv-Xot.js";import"./useId-BmJ6jTVu.js";import"./Popper-OySlr5Dd.js";import"./Button-CIP1MA1L.js";import"./useQuery-BqSCqwMR.js";import"./utils-CYumXUBm.js";import"./Link-HA4mk3tW.js";import"./Collapse-D67OGycD.js";import"./tinycolor-Begke6kS.js";import"./Fade-LqP4BbTu.js";import"./Skeleton-BCoikWZP.js";import"./inputBaseClasses-BSS9qqFG.js";import"./calculateFriendlyFileSize-5_UVqq-F.js";import"./CheckCircleTwoTone-G4C_D7UA.js";import"./InfoTwoTone-CaLHzJw9.js";import"./useMutation-BWqLpdaP.js";import"./dayjs.min-B6dWaLXc.js";import"./chunk-AYJ5UCUI-CBOKgxJt.js";import"./index-DyAapOrS.js";import"./react-Bs2L_zF6.js";import"./util-B0ETe3rJ.js";import"./WideButton-BYwc22ni.js";import"./DeleteTwoTone-CkTMjW4F.js";import"./createSvgIcon-mtngnY8G.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-ncvq6Eep.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-DywxcfTB.js";import"./DialogBase-scZVAlBn.js";import"./Close-K8pG2kOE.js";import"./HelpPopover-BRZi_JfC.js";import"./MarkdownPopover-Cu9g35Mg.js";import"./LightTooltip-kpN2g2ec.js";import"./MarkdownSynapse-eq7DRkDm.js";import"./SkeletonButton-B5tyk9KZ.js";import"./SkeletonInlineBlock-Cbewt1uc.js";import"./SkeletonTable-Ca19cf4g.js";import"./SkeletonParagraph-Dcaau3Gk.js";import"./HelpOutlineTwoTone-Bc_nNkZ1.js";import"./DialogTitle-BpJvJjmT.js";import"./DialogContent-DZVYTpg2.js";import"./Dialog-DWm5otKM.js";import"./Modal-B1tsSmjh.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-B_jRy5C5.js";import"./WarningDialog-BuzoXfuC.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
