import{j as t}from"./jsx-runtime-BgCq8gwN.js";import{W as s}from"./WideButton-WBe0R7e1.js";import{E as d}from"./SynapseConstants-DIGbeuIK.js";import{A as c}from"./ActionRequiredCard-BEEHzOGi.js";import{T as u}from"./Typography-ooch0MpL.js";import{B as g}from"./Button-BoTYrHNG.js";import"./index-C_gnWP_t.js";import"./iframe-CbIreDb2.js";import"./DefaultPropsProvider-BseDZ5eB.js";import"./createTheme-OkraJ5eJ.js";import"./OrientationBanner-CdVTuGgb.js";import"./index-DsPoo2Ro.js";import"./spreadSx-CwcO6WA9.js";import"./react-D4nFN3Ah.js";import"./FullWidthAlert-BWkqCL07.js";import"./Alert-zI21t_ct.js";import"./resolveComponentProps-CePEpoP1.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-dNLbFQVo.js";import"./createSvgIcon-BHiZORw5.js";import"./Close-CDYC--wl.js";import"./IconButton-DAaKFUzV.js";import"./ButtonBase-IB6_m_jw.js";import"./useTimeout-Cye8bwlJ.js";import"./TransitionGroupContext-CS2phJ3S.js";import"./useIsFocusVisible-pfxCMmj4.js";import"./useEventCallback-Bck77aoL.js";import"./Paper-CRf9WCXu.js";import"./Stack-CtKa76FJ.js";import"./getThemeProps-CZUDRWGj.js";import"./useTheme-D5uDEtFj.js";import"./Box-SbfP01m2.js";import"./AlertTitle-YuhibS0Q.js";import"./useTheme-BxZhO2mg.js";import"./Grow-BRU2ZIec.js";import"./index-BLcRfihU.js";import"./utils-BOrTgFDN.js";import"./ClickAwayListener-0jLBZ_NF.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-CnSmt6JP.js";import"./index-C8hSn997.js";import"./useControlled-B5xsJp7-.js";import"./useId-B3qv0Fqa.js";import"./Popper-BJu7XYtc.js";import"./Icon-CSfiAuSM.js";import"./mouse-CL6sGY84.js";import"./SortDown-irrUgC46.js";import"./IconSvg-C65Bzs44.js";import"./LayersTwoTone-BoTnVLQQ.js";import"./ContentCopyTwoTone-M04lWVFG.js";import"./HelpOutlineTwoTone-DDf0-Rdu.js";import"./ErrorOutlined-CvOCmuq2.js";import"./GetAppTwoTone-Dl4b6VGV.js";import"./InfoOutlined-DR5KPCak.js";import"./DeleteTwoTone-IJ39Wi31.js";import"./CheckCircleTwoTone-WEcEfruf.js";import"./Skeleton-aBWFkCqk.js";const xt={title:"Download/ActionRequiredCard",component:c,tags:["autodocs"],argTypes:{actionNode:{options:["Button","Button with text (Sharing Settings)"],mapping:{Button:t.jsx(s,{variant:"contained",children:"Start"}),"Button with text (Sharing Settings)":t.jsxs(t.Fragment,{children:[t.jsx(u,{variant:"smallText1",sx:{color:"grey.700"},children:"Contact an administrator to request download permission"}),t.jsx(g,{variant:"outlined",children:"View Sharing Settings"})]})}}}},o={args:{isLoading:!0}},r={args:{isLoading:!1,title:"The title of the card",description:"The description of the card",actionNode:"Button",iconType:d,count:42}};var i,p,m;o.parameters={...o.parameters,docs:{...(i=o.parameters)==null?void 0:i.docs,source:{originalSource:`{
  args: {
    isLoading: true
  }
}`,...(m=(p=o.parameters)==null?void 0:p.docs)==null?void 0:m.source}}};var e,a,n;r.parameters={...r.parameters,docs:{...(e=r.parameters)==null?void 0:e.docs,source:{originalSource:`{
  args: {
    isLoading: false,
    title: 'The title of the card',
    description: 'The description of the card',
    actionNode: 'Button',
    iconType: EASY_DIFFICULTY,
    count: 42
  }
}`,...(n=(a=r.parameters)==null?void 0:a.docs)==null?void 0:n.source}}};const Tt=["Loading","Card"];export{r as Card,o as Loading,Tt as __namedExportsOrder,xt as default};
