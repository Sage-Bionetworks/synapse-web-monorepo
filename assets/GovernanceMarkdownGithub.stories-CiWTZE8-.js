import{u as o}from"./VerificationSubmission-BDh1zA9f.js";import{g as u,bd as d,be as l,B as f,bf as S,M as O}from"./useFiles-I_Ljsvpl.js";import"./StringUtils-C95LMFI-.js";import{h as i,H as n}from"./index-3qXkwng6.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-sDOLI6P7.js";import"./SynapseConstants-DXlbb83s.js";import"./OrientationBanner-DIMiS6-X.js";import"./index-ChlY0ty7.js";import"./index-DEXVlyEC.js";import"./iframe-CTaKRDzK.js";import"./spreadSx-CwcO6WA9.js";import"./react-D4Ag4Khl.js";import"./FullWidthAlert-BQi4k6sm.js";import"./Alert-oJFeNTPf.js";import"./createTheme-DSMh9aMK.js";import"./DefaultPropsProvider-tscWNgRV.js";import"./useSlot-5fSGsjd4.js";import"./useForkRef-Bpi5glj8.js";import"./createSimplePaletteValueFilter-z7ViS40H.js";import"./createSvgIcon-IuSm3jpw.js";import"./Close-BYMa4NgR.js";import"./IconButton-B7n5ygWB.js";import"./useTimeout-Bcmt8HaF.js";import"./ButtonBase-CtgJMkFI.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BXvEMjjW.js";import"./Paper-BJO20Q9K.js";import"./useTheme-nF84TQI6.js";import"./useTheme-pMmDZBIO.js";import"./Stack-EBx-64RF.js";import"./useThemeProps-CwzyAdAY.js";import"./getThemeProps-BLGqyFKd.js";import"./extendSxProp-DysauLlL.js";import"./Box-B7xLSVbU.js";import"./AlertTitle-DohnoRzz.js";import"./Typography-BV8NZaJG.js";import"./index-C2jv3Yen.js";import"./ClickAwayListener-DUKbMkLR.js";import"./getReactElementRef-C_fwGmzx.js";import"./index-CwKkrkMc.js";import"./index-Dv8O9azN.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-Dvv4NuhG.js";import"./Tooltip-CivR37xg.js";import"./index-C1fK7QTW.js";import"./useControlled-Cy9MDY45.js";import"./Popper-DCuGWZxy.js";import"./Button-DWmqEVyK.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-lmzAG6mX.js";import"./QueryClientProvider-5d7cgiKu.js";import"./Link-Bcp540VX.js";import"./Collapse-DbB5zYpu.js";import"./_baseUniq-D6itCMNh.js";import"./_Uint8Array-CFylZ-gm.js";import"./isArray-gvpvXSFg.js";import"./_getTag-H4oDIWkK.js";import"./isEqual-hwpo_E0H.js";import"./noop-DX6rZLP_.js";import"./merge-Ckv_4s3g.js";import"./_initCloneObject-oqJaqUxv.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-CgqBXsZL.js";import"./inputBaseClasses-R5GcZRQ_.js";import"./calculateFriendlyFileSize-4KlCbfW-.js";import"./CheckCircleTwoTone-BPpE4vcS.js";import"./InfoTwoTone-C2z4ZzAx.js";import"./useMutation-DVVhu_SN.js";import"./dayjs.min-d6L6EHLF.js";import"./chunk-AYJ5UCUI-UVlhN5ws.js";import"./cloneDeep-Co63vGR4.js";import"./Skeleton-B3iwvpLy.js";import"./SkeletonButton-BWRM0Dij.js";import"./SkeletonInlineBlock-lUnoaja9.js";import"./SkeletonTable-CK152fT3.js";import"./times-DdMuS02x.js";import"./toInteger-5JZx54ve.js";import"./isSymbol-3W0mAepu.js";import"./SkeletonParagraph-Dr1sPB-1.js";import"./MarkdownSynapse-isEOdrNF.js";import"./Container--Kpc40RM.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Qr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Xr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Xr as __namedExportsOrder,Qr as default};
