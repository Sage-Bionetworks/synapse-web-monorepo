import{g as f}from"./userProfileHandlers-BTs10-xw.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-DkJCHeA3.js";import{A}from"./AccountLevelBadges-BCb9XIaY.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-p2gxLfTe.js";import"./iframe-KhA6412S.js";import"./mockEntity-BflDuc7c.js";import"./mockFileEntity-CJ0_kQXR.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-nNOtsmHZ.js";import"./mockTeam-Ck-PBlX9.js";import"./SynapseConstants-DAiqgyg1.js";import"./OrientationBanner-D4wTKRw8.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-DRNEewT0.js";import"./index-BiZonhDH.js";import"./spreadSx-CwcO6WA9.js";import"./react-Bf6tZNz9.js";import"./FullWidthAlert-CEBDcxDb.js";import"./Alert-Si5Sm7uX.js";import"./createTheme-1jm5ezYP.js";import"./DefaultPropsProvider-CWzj9DzQ.js";import"./useSlot-xBg9ATiI.js";import"./useForkRef-BESM7ku1.js";import"./createSimplePaletteValueFilter-Cihnsp1l.js";import"./createSvgIcon-CrhVCK6n.js";import"./Close-C2_S8l8h.js";import"./IconButton-CzceikyK.js";import"./useTimeout-DJBvZtwQ.js";import"./ButtonBase-DbSCIXDh.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-CWj0IvOC.js";import"./Paper-ABqWba6I.js";import"./useTheme-B6M16tYP.js";import"./useTheme-BMWmfRcC.js";import"./Stack-DWSzmDyR.js";import"./extendSxProp-A_0H_slr.js";import"./getThemeProps-Db880qGR.js";import"./Box-BUnumDhd.js";import"./AlertTitle-BszRCW5W.js";import"./Typography-BETUzylk.js";import"./index-B3yBNt-L.js";import"./ClickAwayListener-DxBKDWMy.js";import"./getReactElementRef-d88flgGN.js";import"./index-Y07cJu9Y.js";import"./index-Xo5PhUpn.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DyIUulWJ.js";import"./Tooltip-Bo4_h0TM.js";import"./index-Bs9Rydsp.js";import"./useControlled-DxMP8c3u.js";import"./Popper-I1BUdcss.js";import"./Button-BryWV2Kx.js";import"./uniqueId-lLF_zJ3l.js";import"./toString-DimUG_hT.js";import"./isArray-CDuRcB0M.js";import"./isSymbol-BhkmuJt6.js";import"./times-BMqDTTIB.js";import"./_Uint8Array-BuKzuZ_U.js";import"./identity-DKeuBCMA.js";import"./toInteger-Bduhqu2B.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-DtcY72pw.js";import"./QueryClientProvider-CnMpTV32.js";import"./Link-DyfbRNUw.js";import"./Collapse-A2nC22g8.js";import"./_baseUniq-B6yOCfKH.js";import"./_getTag-Bf7qzLHR.js";import"./isEqual-Bin5dEGo.js";import"./merge-CHIVU8Rn.js";import"./_initCloneObject-CMoDBQQ6.js";import"./tinycolor-Begke6kS.js";import"./Fade-BtLpzY4K.js";import"./inputBaseClasses-CplbFm5w.js";import"./calculateFriendlyFileSize-CxNXhpME.js";import"./CheckCircleTwoTone-CJ92NpYr.js";import"./InfoTwoTone-39J4YKRz.js";import"./useMutation-CHMb5Grd.js";import"./dayjs.min-7SCA9Rrv.js";import"./chunk-AYJ5UCUI-C95cDugv.js";import"./cloneDeep-CR3aRAiR.js";import"./Skeleton-xaP9f2sv.js";import"./AccountLevelBadge-zA0FQl5L.js";import"./Card-KlH6V9yN.js";import"./ConfirmationDialog-CSSDaS6C.js";import"./DialogBase-j9-D42Dl.js";import"./Close-vTaLRieP.js";import"./HelpPopover-CT8eWsbp.js";import"./MarkdownPopover-B2YwxW1s.js";import"./LightTooltip-Djc_wZIi.js";import"./MarkdownSynapse-CtAwuiri.js";import"./SkeletonButton-DJcFYvzr.js";import"./SkeletonInlineBlock-Dh6VUFge.js";import"./SkeletonTable-DGdS0HXy.js";import"./SkeletonParagraph-DpugCB1g.js";import"./HelpOutlineTwoTone-CoVOdbGJ.js";import"./DialogTitle-C5aW1Q2z.js";import"./DialogContent-uTT6bxtJ.js";import"./DialogActions-CCUOWujR.js";import"./Dialog-DPzxxAfH.js";import"./Modal--NgKv0kB.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-DjUerqbG.js";import"./LoadingScreen-D49qJksN.js";import"./LinearProgress-Cs6qw1ma.js";import"./ToastMessage-CZlP_pnT.js";import"./CSSTransition-CIqSmyHr.js";const St={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Et=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Et as __namedExportsOrder,St as default};
