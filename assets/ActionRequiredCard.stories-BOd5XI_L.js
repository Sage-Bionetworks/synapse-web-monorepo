import{j as t}from"./jsx-runtime-BZeBjSIS.js";import{W as s}from"./WideButton-DLwmyHxr.js";import{E as d}from"./SynapseConstants-DV83Gi-b.js";import{A as c}from"./ActionRequiredCard-CDShuUIx.js";import{T as u}from"./Typography-DUG2FEmz.js";import{B as g}from"./Button-DMakyqZH.js";import"./index-CjoTohT0.js";import"./iframe-CvhAkLtT.js";import"./DefaultPropsProvider-DUfDTxF6.js";import"./createTheme-bwx9K6ts.js";import"./OrientationBanner-DELzGaI_.js";import"./index-CZ6nZZM5.js";import"./spreadSx-CwcO6WA9.js";import"./react-B_ep3ieK.js";import"./FullWidthAlert-BXqxc3wv.js";import"./Alert-7_PfCLqB.js";import"./resolveComponentProps-a0-4iTOu.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-D4KURWw8.js";import"./createSvgIcon-DbCE1SVw.js";import"./Close-CimlcXQB.js";import"./IconButton-C6l0SFmN.js";import"./ButtonBase-BbwScQV5.js";import"./useTimeout-CVOpskps.js";import"./TransitionGroupContext-UobnCySz.js";import"./useIsFocusVisible-BO1LLD9d.js";import"./useEventCallback-Cf7PpRR2.js";import"./Paper-BYyNkBER.js";import"./Stack-B020NLmB.js";import"./getThemeProps-BKFu32XS.js";import"./useTheme-SJCcizRe.js";import"./Box-DHzWNABX.js";import"./AlertTitle-Dgp4KesF.js";import"./useTheme-uJlIsAiP.js";import"./Grow-x5lwJPlc.js";import"./index-DTVgpHag.js";import"./utils-CAcyHLoV.js";import"./ClickAwayListener-Dt9keXb4.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-CLFxhQMN.js";import"./index-BH5wt59E.js";import"./useControlled-Cbsj5wQj.js";import"./useId-ByMtCpEj.js";import"./Popper-DsfBWyJe.js";import"./Icon-SAebWPj0.js";import"./mouse-DP9uer6N.js";import"./SortDown-DptKF8BT.js";import"./IconSvg-GC35QVjU.js";import"./LayersTwoTone-BTQvpAdP.js";import"./ContentCopyTwoTone-BM9PkEIE.js";import"./HelpOutlineTwoTone-CLncRXxx.js";import"./ErrorOutlined-DFflPQsW.js";import"./GetAppTwoTone-DfHtZd5a.js";import"./InfoOutlined-DbWx_Oqu.js";import"./DeleteTwoTone-CthiLRDX.js";import"./CheckCircleTwoTone-UctgIY4f.js";import"./Skeleton-BcT1rE-U.js";const xt={title:"Download/ActionRequiredCard",component:c,tags:["autodocs"],argTypes:{actionNode:{options:["Button","Button with text (Sharing Settings)"],mapping:{Button:t.jsx(s,{variant:"contained",children:"Start"}),"Button with text (Sharing Settings)":t.jsxs(t.Fragment,{children:[t.jsx(u,{variant:"smallText1",sx:{color:"grey.700"},children:"Contact an administrator to request download permission"}),t.jsx(g,{variant:"outlined",children:"View Sharing Settings"})]})}}}},o={args:{isLoading:!0}},r={args:{isLoading:!1,title:"The title of the card",description:"The description of the card",actionNode:"Button",iconType:d,count:42}};var i,p,m;o.parameters={...o.parameters,docs:{...(i=o.parameters)==null?void 0:i.docs,source:{originalSource:`{
  args: {
    isLoading: true
  }
}`,...(m=(p=o.parameters)==null?void 0:p.docs)==null?void 0:m.source}}};var e,a,n;r.parameters={...r.parameters,docs:{...(e=r.parameters)==null?void 0:e.docs,source:{originalSource:`{
  args: {
    isLoading: false,
    title: 'The title of the card',
    description: 'The description of the card',
    actionNode: 'Button',
    iconType: EASY_DIFFICULTY,
    count: 42
  }
}`,...(n=(a=r.parameters)==null?void 0:a.docs)==null?void 0:n.source}}};const Tt=["Loading","Card"];export{r as Card,o as Loading,Tt as __namedExportsOrder,xt as default};
