import{l as r,aO as c}from"./useFiles-oSmayrgb.js";import{d as y}from"./fetchWithExponentialTimeout-CXmnpl-T.js";import{u}from"./useQuery-BS7IYLBJ.js";import{u as l}from"./utils-CV6o2mhJ.js";import{u as p}from"./useMutation-yogh6qC8.js";const C={ENTITY:"ENTITY"};async function d(e,a){let t=125;const s=1e3;let o=await e();for(;"jobState"in o&&o.jobState==="PROCESSING";)await y(t),o=await e(),t=Math.min(t*2,s);return o}function f(e,a){const{synapseClient:t,keyFactory:s}=r();return u({...a,queryKey:s.getDOIAssociationQueryKey(e),queryFn:()=>c(()=>t.doiServicesClient.getRepoV1DoiAssociation(e))})}function O(e,a){const{synapseClient:t,keyFactory:s}=r();return u({...a,queryKey:s.getDOIQueryKey(e),queryFn:()=>c(()=>t.doiServicesClient.getRepoV1Doi(e))})}function R(e){const a=l(),{synapseClient:t,keyFactory:s}=r();return p({...e,mutationFn:async o=>{const n=await t.doiServicesClient.postRepoV1DoiAsyncStart({doiRequest:o});return(await d(()=>t.asynchronousJobServicesClient.getRepoV1AsynchronousJobJobId({jobId:n.token}))).responseBody},onSuccess(...o){e!=null&&e.onSuccess&&e.onSuccess(...o);const n=o[1].doi;if(n){const i={id:n.objectId,type:n.objectType,portalId:n.portalId,version:n.objectVersion};a.invalidateQueries({queryKey:s.getDOIQueryKey(i)})}}})}export{C as D,R as a,f as b,O as u};
