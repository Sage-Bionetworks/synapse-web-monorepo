import{j as i}from"./jsx-runtime-DqkftVdl.js";import{W as m,a as t}from"./WizardChoiceButton-L7VT8E97.js";import{I as l}from"./LayersTwoTone-DwFTeXo_.js";import{F as d}from"./IconSvg-Bf870V_g.js";import"./index-DePaHtiF.js";import"./iframe-BROhmg6M.js";import"./Box-D9NrrPyX.js";import"./createTheme-5Fe3luW2.js";import"./useTheme-U-7hfo9l.js";import"./Typography-OD-ts1pz.js";import"./DefaultPropsProvider-DjeLsGG1.js";import"./createSvgIcon-BC6UvAwx.js";import"./spreadSx-CwcO6WA9.js";import"./useTheme-CTLaU0Ir.js";import"./Tooltip-CuUlmnbr.js";import"./index-DXHrkCm3.js";import"./Grow-BU8iQ-gL.js";import"./resolveComponentProps-B_dOnkEG.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-DxGWz-nP.js";import"./index-CBZYBfor.js";import"./utils-CJvWoSDr.js";import"./TransitionGroupContext-DQEZvtFj.js";import"./useEventCallback-BZ6D7d5A.js";import"./useTimeout-D5dvr_Gi.js";import"./useControlled-BOD8q2oj.js";import"./useId-wERg8hog.js";import"./useIsFocusVisible-DI2M56aP.js";import"./Popper-Cuj0UtxU.js";import"./ownerDocument-DW-IO8s5.js";import"./ContentCopyTwoTone-Lnh4gqPj.js";import"./HelpOutlineTwoTone-BQw6pVym.js";import"./ErrorOutlined-RTN5yUvT.js";import"./GetAppTwoTone-DsYNqLsI.js";import"./InfoOutlined-Db3XxTSO.js";import"./DeleteTwoTone-DgyTgEx9.js";import"./CheckCircleTwoTone-_t8YNrIT.js";const V={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},e={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),i.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:i.jsx(l,{fontSize:"large"})}),i.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:i.jsx(d,{fontSize:"large"})})]})}};var r,s,n;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const Y=["Basic","WithIcons"];export{e as Basic,o as WithIcons,Y as __namedExportsOrder,V as default};
