import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-BotM9FxX.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-BuAq4SEw.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-DgdQJgML.js";import"./SynapseConstants-BLHb5NQT.js";import"./OrientationBanner-C7fwD44_.js";import"./index-BKsYyMgB.js";import"./index-Fct1fJYK.js";import"./iframe-CdaSO_eF.js";import"./spreadSx-CwcO6WA9.js";import"./react-Dzv6eqoj.js";import"./FullWidthAlert-BHvp60rx.js";import"./Alert-BbpltcOr.js";import"./createTheme-KT6ovmnU.js";import"./DefaultPropsProvider-D5VkK-GM.js";import"./useSlot-DToWd5Xc.js";import"./useForkRef-BejQGHNG.js";import"./createSimplePaletteValueFilter-Bn1ICdwZ.js";import"./createSvgIcon-DxxuQnaJ.js";import"./Close-ByQsBb02.js";import"./IconButton-BHwbAkE7.js";import"./useTimeout-CGysDwV5.js";import"./ButtonBase-BzMUbCTS.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BPhMjjgU.js";import"./Paper-BtRLv9QE.js";import"./useTheme-CpppXMwN.js";import"./useTheme-BNWr4apX.js";import"./Stack-D36c7fPZ.js";import"./extendSxProp-CWnjY0x8.js";import"./getThemeProps-B9214kqk.js";import"./Box-BdQqh4Aq.js";import"./AlertTitle-CtxXO7s0.js";import"./Typography-DJMsLYCm.js";import"./index-CRCsf55N.js";import"./ClickAwayListener-DGulCAS9.js";import"./getReactElementRef-9rAAbMvM.js";import"./index-CkufiiNZ.js";import"./index-CRUr0FzG.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-Dekp173Y.js";import"./Tooltip-DM5GcwoG.js";import"./index-BTvSqKmm.js";import"./useControlled-DKD0UIT1.js";import"./Popper-DpM5olrR.js";import"./Button-DT2sB6xE.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-CDo5Q5Z3.js";import"./QueryClientProvider-WmtJ9HUx.js";import"./Link-DTBVsOid.js";import"./Collapse-CmKZpyr5.js";import"./_baseUniq-CflXaZO6.js";import"./_Uint8Array-CsoACzV4.js";import"./isArray-g99Ar8f5.js";import"./_getTag-jXoVqQQH.js";import"./isEqual-B4-VOX98.js";import"./merge-CwmLDA8E.js";import"./_initCloneObject-BZXOr0F1.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-amiIB_kc.js";import"./inputBaseClasses-gdVCUkrF.js";import"./calculateFriendlyFileSize-Bc5NU5Eo.js";import"./CheckCircleTwoTone-B29SNO7l.js";import"./InfoTwoTone-CGAeQS_q.js";import"./useMutation-CeP1vCsj.js";import"./dayjs.min-Ctz8f95b.js";import"./chunk-AYJ5UCUI-GVgUekA6.js";import"./cloneDeep-CiUfLbXh.js";import"./Skeleton-CtXnJt7s.js";import"./SkeletonButton-B3quJdQA.js";import"./SkeletonInlineBlock-Bjrqzwby.js";import"./SkeletonTable-D0i1uJYM.js";import"./times-B9gEeoGP.js";import"./toInteger-V_s355FP.js";import"./isSymbol-DntpYaZ4.js";import"./SkeletonParagraph-BAQslhsQ.js";import"./MarkdownSynapse-Dyw6xW-3.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
