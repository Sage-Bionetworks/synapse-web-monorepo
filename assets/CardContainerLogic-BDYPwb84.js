import{j as r}from"./jsx-runtime-DNP5ZHPF.js";import{r as g}from"./index-C9LqO53Z.js";import{aW as L,aX as T}from"./useFiles-DxEFRl-N.js";import{k as h,i as A,f as F,j as V,z as N,m as b,l as D,y as I,n as v}from"./SynapseConstants-x7wBmLwm.js";import{p as U,g as x}from"./SqlFunctions-DnxC6kpb.js";import"./StringUtils-CzgJJW-6.js";import"./VerificationSubmission-B0kBNeMy.js";import"./OrientationBanner-lGnlzz1n.js";import{u as _}from"./QueryContext-DfvEq5GV.js";import{c as Q,u as O,Q as R,a as M,N as w}from"./QueryWrapper-DutBOCKd.js";import{A as j}from"./Autocomplete-BbV6v9kE.js";import{T as P}from"./TextField-NRUXNsvd.js";import{S as k}from"./UserSearchBoxV2-wd0qOHzK.js";import{f as B}from"./JsonSchemaForm-CgVVLA17.js";import{T as K}from"./Typography-BdVBJyiw.js";import{Q as Y}from"./QueryWrapperErrorBoundary-BUm3Tbxh.js";import{R as W}from"./RowSetView-D1PccVh6.js";function S(e){const f=_(),{getCurrentQueryRequest:p,addValueToSelectedFacet:c,removeSelectedFacet:a}=f,{data:s}=Q(),{topLevelEnumeratedFacetToFilter:n}=e,u=p(),l=((s==null?void 0:s.facets)??[]).find(o=>L(o,n)),m=(l==null?void 0:l.facetValues.map(({value:o})=>o))??[],i=T(n,u.query.selectedFacets),d=(i==null?void 0:i.facetValues)||[],t=(o,y)=>{a(n),y.forEach(E=>c(n,E))};return r.jsx("div",{children:m.length>0&&r.jsx(j,{multiple:!0,options:m,value:d,onChange:t,renderInput:o=>r.jsx(P,{...o,placeholder:"Select Filter(s)"})})})}try{S.displayName="ColumnFilter",S.__docgenInfo={description:"",displayName:"ColumnFilter",props:{topLevelEnumeratedFacetToFilter:{defaultValue:null,description:"",name:"topLevelEnumeratedFacetToFilter",required:!0,type:{name:"UniqueFacetIdentifier"}}}}}catch{}function C({sortConfig:e}){const{defaultColumn:f,defaultDirection:p,sortableColumns:c}=e,{executeQueryRequest:a}=_(),{getColumnDisplayName:s}=O(),[n,u]=g.useState(f),[l,m]=g.useState(p),i=c.map(t=>({value:t,label:s(t)})),d=t=>{a(o=>{let y="ASC";return t===n&&(y=l==="ASC"?"DESC":"ASC"),o.query.sort=t?[{column:t,direction:y}]:void 0,u(t),m(y),o})};return r.jsxs("div",{className:"QuerySortSelector",children:[r.jsx(K,{variant:"label",className:"sort-by-label SRC-inlineBlock",children:"Sort by"}),r.jsx(k,{className:"react-select-container SRC-inlineBlock",value:B(n,i),options:i,onChange:t=>d(t==null?void 0:t.value),styles:{control:t=>({...t,marginLeft:"15px"})}})]})}try{C.displayName="QuerySortSelector",C.__docgenInfo={description:"",displayName:"QuerySortSelector",props:{sortConfig:{defaultValue:null,description:"",name:"sortConfig",required:!0,type:{name:"SortConfiguration"}}}}}catch{}function q(e){var i;const{sql:f}=e,p=((i=e.query)==null?void 0:i.sql)??f??"",c=U(p),{sortConfig:a,columnAliases:s,topLevelEnumeratedFacetToFilter:n}=e,u=g.useMemo(()=>a?[{column:a.defaultColumn,direction:a.defaultDirection}]:void 0,[a]),l=g.useMemo(()=>{let d;if(e.query)d={sort:u,limit:h,...e.query};else{const t=x(e.searchParams,e.sqlOperator,e.additionalFiltersSessionStorageKey);d={sql:e.sql,limit:e.limit??h,sort:u,additionalFilters:t}}return{concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",entityId:c,query:d,partMask:A|F|V|N|b|D|I|v}},[u,c,e.additionalFiltersSessionStorageKey,e.limit,e.query,e.searchParams,e.sql,e.sqlOperator]),m=JSON.stringify(l);return g.createElement(R,{...e,initQueryRequest:l,isInfinite:!0,key:m},r.jsx(M,{rgbIndex:e.rgbIndex,unitDescription:e.unitDescription,columnAliases:s,noContentPlaceholderType:e.noContentPlaceholderType??w.STATIC,children:r.jsxs(Y,{children:[a&&r.jsx(C,{sortConfig:a}),n&&r.jsx(S,{topLevelEnumeratedFacetToFilter:n}),r.jsx(W,{cardConfiguration:e.cardConfiguration,initialLimit:e.initialLimit,multiCardList:e.multiCardList})]})}))}try{q.displayName="CardContainerLogic",q.__docgenInfo={description:"Class wraps around CardContainer and serves as a standalone logic container for rendering cards.",displayName:"CardContainerLogic",props:{query:{defaultValue:null,description:"The initial SQL query which will be used to populate the data in the component",name:"query",required:!1,type:{name:"Query"}},sql:{defaultValue:null,description:"@deprecated use `query`",name:"sql",required:!1,type:{name:"string"}},limit:{defaultValue:null,description:"Optional limit for the number of cards shown per page\n@deprecated use `query",name:"limit",required:!1,type:{name:"number"}},searchParams:{defaultValue:null,description:"Applies filters to the query where the key is the column name and the value is the value to filter on.\nThe filter function is controlled by sqlOperator.\n@deprecated use `query`",name:"searchParams",required:!1,type:{name:"Record<string, string>"}},sqlOperator:{defaultValue:null,description:"Operator used in the filter created using the searchParams prop\n@deprecated use `query`",name:"sqlOperator",required:!1,type:{name:"SQLOperator"}},title:{defaultValue:null,description:"Optional title to display above the component",name:"title",required:!1,type:{name:"string"}},isAlignToLeftNav:{defaultValue:null,description:"",name:"isAlignToLeftNav",required:!1,type:{name:"boolean"}},sortConfig:{defaultValue:null,description:"Provide a `SortConfiguration` that can be used to render UI to toggle the sorting of the cards.",name:"sortConfig",required:!1,type:{name:"SortConfiguration"}},topLevelEnumeratedFacetToFilter:{defaultValue:null,description:"Configuration used to render UI that can be used to alter a filter against a column with enumerated facets.",name:"topLevelEnumeratedFacetToFilter",required:!1,type:{name:"UniqueFacetIdentifier"}},lockedColumn:{defaultValue:null,description:"Optional column to 'lock'; Values and filter controls for a locked column will not be displayed in the UI.",name:"lockedColumn",required:!1,type:{name:"LockedColumn"}},initialLimit:{defaultValue:null,description:"Optionally limit the initial number of cards shown on the first page",name:"initialLimit",required:!1,type:{name:"number"}},multiCardList:{defaultValue:null,description:"",name:"multiCardList",required:!1,type:{name:"boolean"}},cardConfiguration:{defaultValue:null,description:"",name:"cardConfiguration",required:!0,type:{name:"CardConfiguration"}},rgbIndex:{defaultValue:null,description:"",name:"rgbIndex",required:!1,type:{name:"number"}},columnAliases:{defaultValue:null,description:"Mapping from column name to the name that should be shown for the column",name:"columnAliases",required:!1,type:{name:"Record<string, string>"}},noContentPlaceholderType:{defaultValue:null,description:"Default is INTERACTIVE",name:"noContentPlaceholderType",required:!1,type:{name:"enum",value:[{value:'"INTERACTIVE"'},{value:'"STATIC"'},{value:'"HIDDEN"'}]}},unitDescription:{defaultValue:null,description:'The singular word to use to describe a what a row represents (e.g. "file"). Defaults to "result"',name:"unitDescription",required:!1,type:{name:"string"}},additionalFiltersSessionStorageKey:{defaultValue:null,description:`Look for additional filters using the given key.  If not provided, the entity ID will be used.
@deprecated - configure the filter before passing a query`,name:"additionalFiltersSessionStorageKey",required:!1,type:{name:"string"}}}}}catch{}export{q as C};
