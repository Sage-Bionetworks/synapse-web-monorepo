import{g as f}from"./userProfileHandlers-LhquZXOH.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-Db54t-tY.js";import{A}from"./AccountLevelBadges-B8mShhyd.js";import"./VerificationSubmission-DHtRxRPZ.js";import"./index-BGyWZ6JM.js";import"./iframe-Cr6ezPsl.js";import"./mockEntity-_Mg8pQw0.js";import"./mockFileEntity-CJzyS553.js";import"./StringUtils-DP1EOPFU.js";import"./mock_file_handle-BIJh-7D7.js";import"./mockProject-B_1x7Uas.js";import"./mockTeam-DDt4QvSP.js";import"./SynapseConstants-DaRxMVmF.js";import"./OrientationBanner-B1qNwquP.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-DGL3HO56.js";import"./index-BuJDQnUk.js";import"./spreadSx-CwcO6WA9.js";import"./react-AlFvuvNv.js";import"./FullWidthAlert-mRZoSYPq.js";import"./Alert-Be0A-LgM.js";import"./createTheme-BK6UElHJ.js";import"./DefaultPropsProvider-Dvr-tTK6.js";import"./useSlot-DalP7ee8.js";import"./useForkRef-CF7zyPlu.js";import"./createSimplePaletteValueFilter-Cpx97Rr9.js";import"./createSvgIcon-D2yClPAP.js";import"./Close-UkcISrWM.js";import"./IconButton-Ck0nC-my.js";import"./useTimeout-DM9L0rxB.js";import"./ButtonBase-D82xi4uS.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DcfM6f79.js";import"./Paper-BPJSyr-F.js";import"./useTheme-B7yNuM8W.js";import"./useTheme-C-Nrlkd0.js";import"./Stack-B7Qpj5Ki.js";import"./extendSxProp-DLwRLLo9.js";import"./getThemeProps-sKYYbfmA.js";import"./Box-D7QdnBU4.js";import"./AlertTitle-C-dr4K0A.js";import"./Typography-BHnBpTHA.js";import"./index-BKX1-w9C.js";import"./ClickAwayListener-CmfTuM2N.js";import"./getReactElementRef-BRpsy5_3.js";import"./index-DLfqkzAN.js";import"./index-YcRuu0bH.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-D254RFQI.js";import"./Tooltip-2iC1TBx7.js";import"./index-Ci5oPOxK.js";import"./useControlled-DgIckgW6.js";import"./Popper-CucXU77N.js";import"./Button-DDnrRDpv.js";import"./uniqueId-NfKwKjxg.js";import"./toString-DKSUWCSU.js";import"./isArray-CQL2Omy9.js";import"./isSymbol-CoBgEu09.js";import"./times-CowncrEP.js";import"./_Uint8Array-okef9fpr.js";import"./identity-DKeuBCMA.js";import"./toInteger-XmTA-Ygd.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-DYvqTKcd.js";import"./QueryClientProvider-D35J8jSd.js";import"./Link-B4y9rQD-.js";import"./Collapse-Bd3x3sfg.js";import"./_baseUniq-BL-JTcV7.js";import"./_getTag-oDqqQs_x.js";import"./isEqual-D3NjyQZR.js";import"./merge-d6zHDzVE.js";import"./_initCloneObject-zeb2rLvj.js";import"./tinycolor-Begke6kS.js";import"./Fade-B3b9dqgH.js";import"./inputBaseClasses-BKILOaiU.js";import"./calculateFriendlyFileSize-D-5lh9-e.js";import"./CheckCircleTwoTone-BWGId32i.js";import"./InfoTwoTone-BSHHymaY.js";import"./useMutation-d2WF_4zr.js";import"./dayjs.min-D3lvmW2A.js";import"./chunk-AYJ5UCUI-qjDTf1To.js";import"./cloneDeep-Ct9R0eu9.js";import"./Skeleton-B7QVWXYf.js";import"./AccountLevelBadge-BwM3hfew.js";import"./Card-Nui_FSep.js";import"./ConfirmationDialog-mmUnS5DF.js";import"./DialogBase-BACyLV-X.js";import"./Close-rjCJekZX.js";import"./HelpPopover-B1hXwAfI.js";import"./MarkdownPopover-Bmsqk3iB.js";import"./LightTooltip-ZNmQZaEq.js";import"./MarkdownSynapse-DE5wmMdD.js";import"./SkeletonButton-AU737DlS.js";import"./SkeletonInlineBlock-CFBBV12t.js";import"./SkeletonTable-BcYRfnrM.js";import"./SkeletonParagraph-DYb909WB.js";import"./HelpOutlineTwoTone-Cm4dEege.js";import"./DialogTitle-ChdOTDLc.js";import"./DialogContent-BKWd3og2.js";import"./Dialog-BWxPjWUn.js";import"./Modal-DB7dP8aH.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-a8GybRm_.js";import"./LoadingScreen-Di2hObSj.js";import"./LinearProgress-CkYoi2yU.js";import"./ToastMessage-BNnt-EXh.js";import"./CSSTransition-c0yFd_rl.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
