import{j as l}from"./jsx-runtime-CUNTCE37.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-B3Cwz679.js";import{aH as S,M as a}from"./useFiles-CXziUBBk.js";import"./OrientationBanner-DVC-9Eoc.js";import"./index-iwduSq60.js";import"./StringUtils-Df7AZImX.js";import{l as _}from"./index-CaIe1M6P.js";import{S as E}from"./SynapseFormSubmissionGrid-BSBiV2Th.js";import"./mockSchema-CxyAU77a.js";import"./mockFileEntity-BpAoLfuX.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-BTBa1BAf.js";import"./mockTeam-DX_RatWU.js";import"./SynapseConstants-Cjwg7_uO.js";import"./uniqueId-Bs0Q2gT7.js";import"./toString-Dp4fmWBD.js";import"./isObjectLike-DT3TzfLw.js";import"./iframe-C20v7OTK.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-Dh3PThA0.js";import"./times-5LA6YEbn.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DaNlToTZ.js";import"./asyncJobHandlers-DX0ysZp4.js";import"./BasicMockedCrudService-BsCHkMvA.js";import"./cloneDeep-BgTSkX-U.js";import"./_Uint8Array-D9ObtfO1.js";import"./_initCloneObject-DG7zrIU5.js";import"./_getTag-C7xJJ-SW.js";import"./isEqual-BQr9gFrf.js";import"./_baseIsEqual-DnjdWqDr.js";import"./mockAnnotationColumns-CeKTHXf7.js";import"./tableQueryHandlers-Bpw8qTK-.js";import"./omit-DCljpRyV.js";import"./_baseGet-DwJCjSCT.js";import"./isNil-G1VRTy0g.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-uXuCjRdd.js";import"./_baseFlatten-CqDOSttX.js";import"./pick-gDFMQqch.js";import"./_baseSet-C3Pap6_Z.js";import"./hasIn-BloHwN0o.js";import"./accessRequirementAclHandlers-d1trrwLa.js";import"./mockAccessRequirementAcls-BRsbagkI.js";import"./mockAccessRequirements-B8i8Ly1s.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-695Twm_w.js";import"./wikiHandlers-CbVYOIGH.js";import"./mockWikiPageKey-rtbdbpg9.js";import"./teamHandlers-BouF9qa4.js";import"./dataAccessRequestHandlers-CD6B0fea.js";import"./MockResearchProject-DWA-nu_L.js";import"./mock_discussion-D19PFZGO.js";import"./fakerUtils-Bu4US9M6.js";import"./index-BqMayQuj.js";import"./mockTableEntity-De7twmk7.js";import"./mockFileEntityACLVariants-DRKHx-yO.js";import"./entityHandlers-DDFkDNAn.js";import"./mockEntity-B7YSsqe-.js";import"./mockEvaluationQueue-C94FTMF-.js";import"./featureFlagHandlers-1mGw4xa2.js";import"./fileHandlers-BLiB4Bgi.js";import"./personalAccessTokenHandlers-BvR7Ql-q.js";import"./researchProjectHandlers-CK6Z7v1J.js";import"./resetTwoFactorAuthHandlers-Da7wpLSr.js";import"./userProfileHandlers-CtqV805G.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-o00riV6l.js";import"./FullWidthAlert-De1OStOb.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-Dx1Z4kwv.js";import"./createTheme-cbFkRPvu.js";import"./resolveComponentProps-sWNv9AD3.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-B6qEDlfe.js";import"./createSvgIcon-DmVeL3l0.js";import"./DefaultPropsProvider-B-PYyZlm.js";import"./Close-BUEGeIV1.js";import"./IconButton-frjP_Efe.js";import"./ButtonBase-BrOL7gGJ.js";import"./useTimeout-C3h3mG7S.js";import"./useIsFocusVisible-u8aLHlah.js";import"./useEventCallback-CPv-PfNW.js";import"./Paper-C468jb6w.js";import"./Stack-hux_BLUA.js";import"./getThemeProps-PcWr3yTI.js";import"./useTheme-B9l0cioF.js";import"./Box-iBYOIJJh.js";import"./AlertTitle-BcDXofxw.js";import"./Typography-iNw74tXo.js";import"./useTheme-B9obp0jV.js";import"./Grow-Di3YNtHT.js";import"./index-08h1k3rT.js";import"./utils-l3nTcCRT.js";import"./ClickAwayListener-BwaqJqmk.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-CJIzasCr.js";import"./index-CO9B5BSx.js";import"./useControlled-BK1ZS50s.js";import"./useId-B_jteS8E.js";import"./Popper-CGefBYUp.js";import"./Button-Cew0p3xf.js";import"./useQuery-CvCohokr.js";import"./utils-D2MpK3mA.js";import"./Link-DidmzCYQ.js";import"./Collapse-krv0lCh4.js";import"./tinycolor-Begke6kS.js";import"./Fade-2dK6sQpn.js";import"./Skeleton-CSwpW9Og.js";import"./inputBaseClasses-lMdWkQYH.js";import"./calculateFriendlyFileSize-CLdbY7DA.js";import"./CheckCircleTwoTone-CeiR3Sbp.js";import"./InfoTwoTone-BhrV1Jbi.js";import"./mutation-BEG6eulq.js";import"./dayjs.min-C4wwLUbt.js";import"./chunk-AYJ5UCUI-brQ4jQk2.js";import"./index-DrGL5Z6h.js";import"./react-BHuDLgyy.js";import"./util-Bd48Oa8n.js";import"./WideButton-BVgKkVVr.js";import"./DeleteTwoTone-Cb3NPVhu.js";import"./createSvgIcon-vJobI2vs.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-CASXba0d.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-BB5lIy4g.js";import"./DialogBase-DFCB19wd.js";import"./Close-DSqUSGh4.js";import"./HelpPopover-CN3KTn53.js";import"./MarkdownPopover-BHZJD3hB.js";import"./LightTooltip-BEPUEO8h.js";import"./MarkdownSynapse-Bf3Hfj-d.js";import"./SkeletonButton-BBdGtSp9.js";import"./SkeletonInlineBlock-DMhLGskz.js";import"./SkeletonTable-XVwOdhwB.js";import"./SkeletonParagraph-D4WYiEP8.js";import"./HelpOutlineTwoTone-D-F4sP7O.js";import"./DialogTitle-JTTmMk6j.js";import"./DialogContent-CBlxdbnH.js";import"./Dialog-T8M5K-wJ.js";import"./Modal-DX8InOos.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-B5C6M46u.js";import"./WarningDialog-D8C7O3N_.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
