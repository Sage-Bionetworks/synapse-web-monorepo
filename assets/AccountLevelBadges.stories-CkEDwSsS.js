import{g as f}from"./userProfileHandlers-D8ZcPVoO.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-DfV3g7j3.js";import{A}from"./AccountLevelBadges-DXclvTzo.js";import"./VerificationSubmission-DHtRxRPZ.js";import"./index-B4qEVUho.js";import"./iframe-Dyc1tvxa.js";import"./mockEntity-Dfm7eFmZ.js";import"./mockFileEntity-DzAKa2c5.js";import"./StringUtils-DP1EOPFU.js";import"./mock_file_handle-BIJh-7D7.js";import"./mockProject--R5k8wMU.js";import"./mockTeam-B4QkKGjC.js";import"./SynapseConstants-BeeeLEMb.js";import"./OrientationBanner-Do4jzaCq.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-BFZGQ6OZ.js";import"./index-B6sCHtko.js";import"./spreadSx-CwcO6WA9.js";import"./react-D7gwMTFz.js";import"./FullWidthAlert-Bewi29vo.js";import"./Alert-Cz1bM932.js";import"./createTheme-BWzdH0Tw.js";import"./DefaultPropsProvider-CCvcxJNd.js";import"./useSlot-Db71F0Ap.js";import"./useForkRef-DUqjROYa.js";import"./createSimplePaletteValueFilter-CMkrO5Gi.js";import"./createSvgIcon-C--GKjVa.js";import"./Close-oTdZr2QN.js";import"./IconButton-TfKmbk1q.js";import"./useTimeout-DUwBfTM5.js";import"./ButtonBase-CUnnAwa6.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-CT39lesf.js";import"./Paper-CI2WrX6i.js";import"./useTheme-C3WRzWQr.js";import"./useTheme-DrGalr3E.js";import"./Stack-CYHPltJP.js";import"./extendSxProp-D8MMv9HH.js";import"./getThemeProps-cCUYVmNA.js";import"./Box-B4DT_63e.js";import"./AlertTitle-C0GFUGtD.js";import"./Typography-CjHB-jF7.js";import"./index-COs8OngO.js";import"./ClickAwayListener-9Td87dKe.js";import"./getReactElementRef-6O_b0WmK.js";import"./index-5LQf57Zc.js";import"./index-f60bxPXB.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DCOXsKMM.js";import"./Tooltip-CgudnGYK.js";import"./index-Bedvx39d.js";import"./useControlled-CkNRWmXj.js";import"./Popper-Cv8b6PxU.js";import"./Button-8h_8cD3R.js";import"./uniqueId-BEcpnsI3.js";import"./toString-BsB0_4zq.js";import"./isArray-NVQNoNUM.js";import"./isSymbol-BsM13KWl.js";import"./times-DaOGDYas.js";import"./_Uint8Array-CuRypYcz.js";import"./identity-DKeuBCMA.js";import"./toInteger-17ZRF0UA.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-CO7ddoea.js";import"./QueryClientProvider-Bsm8Viqu.js";import"./Link-BqVElqqF.js";import"./Collapse-CpLblW_e.js";import"./_baseUniq-9gO7m8Ct.js";import"./_getTag-BL5NJBfU.js";import"./isEqual-BogDr9UX.js";import"./merge-BOVQlJlI.js";import"./_initCloneObject-BD93w92L.js";import"./tinycolor-Begke6kS.js";import"./Fade-DGN7jsVH.js";import"./inputBaseClasses-LiHImfCr.js";import"./calculateFriendlyFileSize-EeAcNQrV.js";import"./CheckCircleTwoTone-B107xYF1.js";import"./InfoTwoTone-D2pybSip.js";import"./useMutation-DJj0HLy6.js";import"./dayjs.min-DDBsyKwq.js";import"./chunk-AYJ5UCUI-0eZLL8Z-.js";import"./cloneDeep-DopPwT4s.js";import"./Skeleton-Cifl5Ozt.js";import"./AccountLevelBadge-D8bjGKn9.js";import"./Card-DCE17XWP.js";import"./ConfirmationDialog-beI8Uak1.js";import"./DialogBase-DlpN0KAE.js";import"./Close-o2vZupC4.js";import"./HelpPopover-BUlFW9eW.js";import"./MarkdownPopover-B6VKP_DE.js";import"./LightTooltip-C4lYclSl.js";import"./MarkdownSynapse-DQEmBEcr.js";import"./SkeletonButton-Hv7eHZtl.js";import"./SkeletonInlineBlock-Bb5_zCTg.js";import"./SkeletonTable-Dgt4HG_b.js";import"./SkeletonParagraph-dwV57w-B.js";import"./HelpOutlineTwoTone-Cnd3fVzG.js";import"./DialogTitle-Cdn0zPrv.js";import"./DialogContent-DIIx50QK.js";import"./Dialog-jdQK1HJ9.js";import"./Modal-B6qHqhOP.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-DRdOboRQ.js";import"./LoadingScreen-BExdnYTH.js";import"./LinearProgress-BvjIaNt7.js";import"./ToastMessage-CfNOXtMl.js";import"./CSSTransition-ttl2O7Ed.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
