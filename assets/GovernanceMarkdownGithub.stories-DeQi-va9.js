import{u as o}from"./VerificationSubmission-BDh1zA9f.js";import{g as u,bd as d,be as l,B as f,bf as S,M as O}from"./useFiles-D3DLEnco.js";import"./StringUtils-C95LMFI-.js";import{h as i,H as n}from"./index-BPa6VMf4.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-hXvBjAJS.js";import"./SynapseConstants-CdVOt2dc.js";import"./OrientationBanner-DY4cNwXq.js";import"./index-xJTQyrwQ.js";import"./index-ijsm3mBy.js";import"./iframe-2dG-YY9-.js";import"./spreadSx-CwcO6WA9.js";import"./react-BpjFLlG7.js";import"./FullWidthAlert-B3BBpfmE.js";import"./Alert-CksGxhHq.js";import"./createTheme-BxansSaP.js";import"./DefaultPropsProvider-C0BG17d4.js";import"./useSlot-DwNJrAe8.js";import"./useForkRef-BUPBxQCC.js";import"./createSimplePaletteValueFilter-DF0-Q_sR.js";import"./createSvgIcon-Tjl1dYM0.js";import"./Close-BEpv9aVr.js";import"./IconButton-BSE-Wm4J.js";import"./useTimeout-BHJGkgoe.js";import"./ButtonBase-COXFE6tZ.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DuN8C9YO.js";import"./Paper-Cra7tOWX.js";import"./useTheme-BlIhEXZO.js";import"./useTheme-BguFC_Yf.js";import"./Stack-DkqLNuQk.js";import"./useThemeProps-Dfd8LZYq.js";import"./getThemeProps-D6jrdoYB.js";import"./extendSxProp-D6bOc2yu.js";import"./Box-D11bBFwR.js";import"./AlertTitle-CUnCZtfx.js";import"./Typography-DKWA_FkP.js";import"./index-BYBjn3Mm.js";import"./ClickAwayListener-CeIKyymb.js";import"./getReactElementRef-BqqLpY_U.js";import"./index-BwEXD9Sp.js";import"./index-CLoZ34tt.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-Ddu7BFI0.js";import"./Tooltip-D4GNWK6u.js";import"./index-DD_DY1ge.js";import"./useControlled-fSPDUO3C.js";import"./Popper-CQCjOtHT.js";import"./Button-sd4ooRmS.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-DJmCx-dC.js";import"./QueryClientProvider-BMd9N-KC.js";import"./Link-DTbmoeb_.js";import"./Collapse-J-Fir_Qt.js";import"./_baseUniq-xOxQiqA9.js";import"./_Uint8Array-wJdmpIr7.js";import"./isArray-CTByjuZm.js";import"./_getTag-CccqWhF2.js";import"./isEqual-CL_VQgn2.js";import"./noop-DX6rZLP_.js";import"./merge-CJQkSP_u.js";import"./_initCloneObject-COJXPyDD.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-DPwN_GcI.js";import"./inputBaseClasses-8L5uwA3P.js";import"./calculateFriendlyFileSize-D3lSxj6e.js";import"./CheckCircleTwoTone-DVKZgV-7.js";import"./InfoTwoTone-CAJyCA_f.js";import"./useMutation-BTNFEee6.js";import"./dayjs.min-BMe_1oX1.js";import"./chunk-AYJ5UCUI-BXNkd_hA.js";import"./cloneDeep-Cbc43DTf.js";import"./Skeleton-CxQUKy7B.js";import"./SkeletonButton-OG_8qymJ.js";import"./SkeletonInlineBlock-eCtKwkUk.js";import"./SkeletonTable-CidKEXe3.js";import"./times-DWVvU70H.js";import"./toInteger-8xUgGmXe.js";import"./isSymbol-Ce6KKZ8W.js";import"./SkeletonParagraph-Ciy1WJIp.js";import"./MarkdownSynapse-DYzXP4SZ.js";import"./Container-jGrSI4HR.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Qr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Xr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Xr as __namedExportsOrder,Qr as default};
