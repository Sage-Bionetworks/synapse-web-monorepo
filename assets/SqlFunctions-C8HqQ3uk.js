import{C as u,f as c}from"./VerificationSubmission-OWkqLMYZ.js";import{S as f}from"./StringUtils-C5rFena9.js";const d=3,p=t=>`${t}-temp-QueryFilter-array`;function a(t){return t.match(f)?t.substring(d):t}const g="FTS_SEARCH_TERM",E=(t,r=u.LIKE,o)=>{const s=o?sessionStorage.getItem(p(o)):void 0;let n=[];if(s&&(n=JSON.parse(s)),t){const i=e=>e.startsWith("QueryWrapper")||e.startsWith("__");n=n.concat(Object.keys(t||{}).filter(e=>!i(e)&&t[e]!=null&&t[e].trim()!="").map(e=>{if(e==g)return{concreteType:"org.sagebionetworks.repo.model.table.TextMatchesQueryFilter",searchExpression:t[e]};switch(r){case u.EQUAL:return{concreteType:"org.sagebionetworks.repo.model.table.ColumnSingleValueQueryFilter",columnName:e,operator:r,values:[t[e]]};case u.IN:return{concreteType:"org.sagebionetworks.repo.model.table.ColumnSingleValueQueryFilter",columnName:e,operator:r,values:t[e].split(",")};case c.HAS:return{concreteType:"org.sagebionetworks.repo.model.table.ColumnMultiValueFunctionQueryFilter",columnName:e,function:r,values:t[e].split(",")};case u.LIKE:return{concreteType:"org.sagebionetworks.repo.model.table.ColumnSingleValueQueryFilter",columnName:e,operator:r,values:[`%${a(t[e])}%`]};case c.HAS_LIKE:return{concreteType:"org.sagebionetworks.repo.model.table.ColumnMultiValueFunctionQueryFilter",columnName:e,function:r,values:t[e].split(",").map(m=>`%${a(m)}%`)}}}))}return n.length===0?void 0:n},F=t=>{const r=t.match(/(from)\s+(syn)\d+/gi);return r&&r[0]?r[0].substr(5).trim():""},b=t=>{const o=/from\s+(syn\d+)(?:\.(\d+))?/i.exec(t);return o?{entityId:o[1],versionNumber:o[2]?parseInt(o[2]):void 0}:{entityId:void 0,versionNumber:void 0}},T=(t,r)=>{const o=r.map(n=>n.values),s=t.map(n=>n.name);return o.map(n=>{const i={};return n.forEach((e,l)=>{i[s[l]]=e}),i})},_=(t,r,o)=>{if(!t)return;const s=t.toLowerCase();if(r){const n=r.findIndex(i=>{var e;return((e=i.name)==null?void 0:e.toLowerCase())===s});if(n!=-1)return n}if(o){const n=o.findIndex(i=>{var e;return((e=i.name)==null?void 0:e.toLowerCase())===s});if(n!==-1)return n}};export{p as Q,_ as a,b,E as g,F as p,T as r};
