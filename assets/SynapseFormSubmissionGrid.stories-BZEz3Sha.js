import{j as l}from"./jsx-runtime-CqspjScI.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-eGNgVZKH.js";import{aH as S,M as a}from"./useFiles-DzrQRRrm.js";import"./OrientationBanner-2eG-FyEA.js";import"./index-DwELiOEm.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-Bxt7vX-r.js";import{S as E}from"./SynapseFormSubmissionGrid-C4jr9yJE.js";import"./mockSchema-VNnBeIwB.js";import"./mockFileEntity-BuwZXMJI.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-Dr2TVkiS.js";import"./mockTeam-CAsfD_U3.js";import"./SynapseConstants-DDq6k8Bk.js";import"./uniqueId-Ciufq9ZU.js";import"./toString-D_WczTLv.js";import"./isObjectLike-DwKTkmxs.js";import"./iframe-CKpkvSud.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-Cv-P4Rs9.js";import"./times-CTk1mNYV.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-Bil1tW-c.js";import"./asyncJobHandlers-BGgkdp8N.js";import"./BasicMockedCrudService-DzJBNlbk.js";import"./cloneDeep-ti_eOLLH.js";import"./_Uint8Array-AY3rwX4N.js";import"./_initCloneObject-CTeuSNQJ.js";import"./_getTag-C6cJi8CE.js";import"./isEqual-bSNg52dZ.js";import"./_baseIsEqual-blO9GVwM.js";import"./mockAnnotationColumns-BnhTg2Iz.js";import"./tableQueryHandlers-CXv6QQnf.js";import"./omit-BsNufI8z.js";import"./_baseGet-bTzTciH9.js";import"./isNil-Yh1UL_xP.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BByWj7sc.js";import"./_baseFlatten-VlWM10d-.js";import"./pick-BJHIEpFI.js";import"./_baseSet-DVEBglXN.js";import"./hasIn-C93cXEkc.js";import"./accessRequirementAclHandlers-P9tlegAB.js";import"./mockAccessRequirementAcls-Y6MifUu3.js";import"./mockAccessRequirements-CHn1xAue.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-DbmIi750.js";import"./wikiHandlers-Dr1s7jfC.js";import"./mockWikiPageKey-DbeyT2v2.js";import"./teamHandlers-BTGlwebC.js";import"./dataAccessRequestHandlers-DZhL-yxk.js";import"./MockResearchProject-DJ2vwdgM.js";import"./mock_discussion-iPa8Xsx6.js";import"./fakerUtils-B_O9yZd2.js";import"./index-7RkkznFH.js";import"./mockTableEntity-DqW-JcT1.js";import"./mockFileEntityACLVariants-BZpF1r16.js";import"./entityHandlers-CBcucfNo.js";import"./mockEntity-BVWgOGrO.js";import"./mockEvaluationQueue-UzK2Y6km.js";import"./featureFlagHandlers-BTmy2zdQ.js";import"./fileHandlers-DtaphE3c.js";import"./personalAccessTokenHandlers-BdjOd-Bq.js";import"./researchProjectHandlers-BUIj2t-p.js";import"./resetTwoFactorAuthHandlers-Bzg_uy6H.js";import"./userProfileHandlers-BH7GqNB0.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-_kMZOmjP.js";import"./FullWidthAlert-BAOByKqU.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-C8X3IXXe.js";import"./createTheme-C2yLSCAv.js";import"./resolveComponentProps-Bsjh6FAz.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-6nS14oXc.js";import"./createSvgIcon-Dw7Y1Pmy.js";import"./DefaultPropsProvider-BIi4x-Qk.js";import"./Close-_v6Lyygk.js";import"./IconButton-YhUBk163.js";import"./ButtonBase-DEUBlcAw.js";import"./useTimeout-uQTgiUpa.js";import"./useIsFocusVisible-DwoqQW0f.js";import"./useEventCallback-oeZLWsf5.js";import"./Paper-BYnSKEKu.js";import"./Stack-D-PASjtE.js";import"./getThemeProps-Bq6i_dzk.js";import"./useTheme-CLgGp1-V.js";import"./Box-DT2Sh8Hk.js";import"./AlertTitle-BNslf1IY.js";import"./Typography-c8mIpSFm.js";import"./useTheme-CDQpdfq0.js";import"./Grow-B9oahLxp.js";import"./index-QL2Y3aCJ.js";import"./utils-4etkwNtb.js";import"./ClickAwayListener-CigyFLxQ.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BHqwo6lq.js";import"./index-Cb4vUnA6.js";import"./useControlled-CLVGBDQk.js";import"./useId-OZGz37hj.js";import"./Popper-N_aUFGyv.js";import"./Button-DQWEjOY_.js";import"./useQuery-DzQ5xZKl.js";import"./utils-Lg92kfS4.js";import"./Link-4I5wKCkj.js";import"./Collapse-CWZgeIDo.js";import"./tinycolor-Begke6kS.js";import"./Fade-D5KpZEr-.js";import"./Skeleton-B4iZ4BQm.js";import"./inputBaseClasses-DGI8OHrn.js";import"./calculateFriendlyFileSize-Ddpg9m3m.js";import"./CheckCircleTwoTone-B8wv6GAX.js";import"./InfoTwoTone-DpwJN-va.js";import"./mutation-UeCho2I4.js";import"./dayjs.min-CrNzlzo_.js";import"./chunk-AYJ5UCUI-fioPvBwi.js";import"./index-Ca1CNIs_.js";import"./react-D1sJcC6U.js";import"./util-CIZzasdR.js";import"./WideButton-CpO_UNQc.js";import"./DeleteTwoTone-CzHCGIxT.js";import"./createSvgIcon-cEIeSqFY.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-H3OdG0h_.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-Bw6zDJSA.js";import"./DialogBase-CdwjpeSm.js";import"./Close-Dfr7FAOA.js";import"./HelpPopover-iHIepzA6.js";import"./MarkdownPopover-CPjvAQfI.js";import"./LightTooltip-BOYJeP2w.js";import"./MarkdownSynapse-DJasPMEC.js";import"./SkeletonButton-omDz6R2S.js";import"./SkeletonInlineBlock-Cggj5LnG.js";import"./SkeletonTable-D2Vi96eB.js";import"./SkeletonParagraph-CCzFx5ql.js";import"./HelpOutlineTwoTone-2EZqhBb3.js";import"./DialogTitle-BbdCfdmu.js";import"./DialogContent-DlhzlxgY.js";import"./Dialog-PRuGA21A.js";import"./Modal-CAFIpFTZ.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-yZKKcadj.js";import"./WarningDialog--Jo5Arta.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
