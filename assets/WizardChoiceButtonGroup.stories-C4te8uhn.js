import{j as i}from"./jsx-runtime-B8F9yCu2.js";import{W as m,a as t}from"./WizardChoiceButton-gvW_g6x0.js";import{I as l}from"./LayersTwoTone-0W_KzUbJ.js";import{F as d}from"./IconSvg-SF_vmMde.js";import"./index-DQ1pwsUN.js";import"./iframe-Ber0uhpE.js";import"./Box-CHcO_qIh.js";import"./createTheme-CvWzDpdo.js";import"./useTheme-DC6cp_DY.js";import"./Typography-Cr5v_ihi.js";import"./DefaultPropsProvider-DTNalRio.js";import"./createSvgIcon-DXdrzfQq.js";import"./spreadSx-CwcO6WA9.js";import"./useTheme-BMkoP2Dd.js";import"./Tooltip-CRXO9dAn.js";import"./index-Cj0i8O2P.js";import"./Grow-DIdr3kKL.js";import"./resolveComponentProps-XsoZTRWC.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-BaidT4sD.js";import"./index-CzXE8kXs.js";import"./utils-crfQibeg.js";import"./TransitionGroupContext-BrtiFLkN.js";import"./useEventCallback-cNUA3zHB.js";import"./useTimeout-LLr9iMPv.js";import"./useControlled-CuR_U5EM.js";import"./useId-DXwVjo-q.js";import"./useIsFocusVisible-kYimsF7D.js";import"./Popper-8HZykaUC.js";import"./ownerDocument-DW-IO8s5.js";import"./ContentCopyTwoTone-BzBllXKd.js";import"./HelpOutlineTwoTone-DNygck5C.js";import"./ErrorOutlined-DyEgHZpR.js";import"./GetAppTwoTone-rIQVHmTD.js";import"./InfoOutlined-2N0yHFHl.js";import"./DeleteTwoTone-BDX_3yv1.js";import"./CheckCircleTwoTone-D3yXCAfy.js";const V={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},e={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),i.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:i.jsx(l,{fontSize:"large"})}),i.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:i.jsx(d,{fontSize:"large"})})]})}};var r,s,n;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const Y=["Basic","WithIcons"];export{e as Basic,o as WithIcons,Y as __namedExportsOrder,V as default};
