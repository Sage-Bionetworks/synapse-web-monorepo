import{m as e}from"./mockAccessRequirements-DrT9bAn7.js";import{g as u,a as I}from"./wikiHandlers-1uTaVYFe.js";import{r as _,g as S}from"./tableQueryHandlers-C9C0Cdmz.js";import{g as R}from"./userProfileHandlers-BGDhyTQ7.js";import{m as O}from"./mockRejectionReasonsTableQueryResultBundle-DI70dpzk.js";import{M as o,O as s,d as C,e as g}from"./useFiles-Bo-B-1VH.js";import{R as l}from"./SynapseConstants-WPaa3dXz.js";import{l as m}from"./index-CkSx4CXs.js";import{S as A}from"./SubmissionPage-WvdxtRDj.js";import"./VerificationSubmission-CWAFIXEx.js";import"./SelfSignAccessRequirement-CEwndEoz.js";import"./StringUtils-DBSsSsIU.js";import"./mockProject-DzsUqOeK.js";import"./mockTeam-DQnyL_-b.js";import"./mock_user_profile-CyZOyNQ0.js";import"./uniqueId-CNPmaLAy.js";import"./toString-C-tSuG3i.js";import"./isObjectLike-Cu7zvyZq.js";import"./index-GEGPABih.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-VqtJwUUo.js";import"./times-DslHYRns.js";import"./_baseTimes-M2nZWodf.js";import"./_isIterateeCall-FuixZKJ7.js";import"./toInteger-2vkq8YOc.js";import"./mock_file_handle-0g9HRqeX.js";import"./mockWiki-B78ox-lj.js";import"./mockWikiPageKey-BLD3HRlO.js";import"./mockFileEntity-B9iUWJ_g.js";import"./BasicMockedCrudService-W_ksL8q6.js";import"./cloneDeep-CT__oUM4.js";import"./_initCloneObject-BAcHLPB8.js";import"./asyncJobHandlers-Dq5j3IN0.js";import"./pick-BSFRNhG-.js";import"./hasIn-BOlyOHTL.js";import"./useQuery-BiN9FESP.js";import"./utils-Bx1BRerw.js";import"./index-Dl6G-zuu.js";import"./jsx-runtime-Du8NFWEI.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-6t4vjKrJ.js";import"./mockEntity-Bg4arPbP.js";import"./createSvgIcon-IuIKk-AJ.js";import"./createTheme-DCAEEeQ9.js";import"./styled-GqwmQbHR.js";import"./tinycolor-Begke6kS.js";import"./InfoTwoTone-Cctz1ZmX.js";import"./CheckCircleTwoTone-CDfc8b31.js";import"./calculateFriendlyFileSize-BBeMI-i_.js";import"./Skeleton-h9JRD3HJ.js";import"./inputBaseClasses-CTPjn8Z_.js";import"./Fade-Cxdmh2eZ.js";import"./useTheme-C2nLQS7p.js";import"./utils-nOa-7XVu.js";import"./TransitionGroupContext-DetLSwnr.js";import"./useEnhancedEffect-DZnfS5Iy.js";import"./index-BIzb42Jq.js";import"./useForkRef-BDoLG09A.js";import"./index-pKvUPVqT.js";import"./FullWidthAlert-BW-IV7Y-.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-By3H5ehm.js";import"./mergeSlotProps-D-cfru4O.js";import"./isHostComponent-DVu5iVWx.js";import"./Paper-Dap2c6xL.js";import"./IconButton-xnDYVMXw.js";import"./ButtonBase-BN-dALdo.js";import"./useTimeout-DgmtfV4_.js";import"./useIsFocusVisible-Bf3pHwKN.js";import"./Stack-CMgji9n-.js";import"./Box-sTghsUmj.js";import"./AlertTitle-C14X1--E.js";import"./Typography-u5-eOh5K.js";import"./Grow-BjId_ape.js";import"./ClickAwayListener-DMjw0JVT.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DghXNkD2.js";import"./useControlled-1Y2rT-1r.js";import"./useId-BkqTTtmk.js";import"./Button-mTo7xxsU.js";import"./Link-CWXcK22Y.js";import"./Collapse-CmkIepef.js";import"./OrientationBanner-C-7EA0fi.js";import"./index-CZCSLsz_.js";import"./dayjs.min-d18Up55D.js";import"./chunk-K6AXKMTT-B5GX6HSq.js";import"./util-BbuHFHEZ.js";import"./useAccessRequirements-Cb7lV35F.js";import"./useMediaQuery-CoSgm1Tb.js";import"./sortBy-DvdWGg2_.js";import"./_baseIteratee-feaeHIOU.js";import"./_baseEach-C4ntP5E4.js";import"./useQueries-CnCwgKI-.js";import"./useMutation-DjwfMZ6R.js";import"./useInfiniteQuery-80GXSAYy.js";import"./QueryFilterUtils-B5j6G-2B.js";import"./isNumber-BR1aE1rr.js";import"./ConfirmationDialog-ChR56iaU.js";import"./Close-D9aLZ2qq.js";import"./createSvgIcon-CeSEvq-U.js";import"./createChainedFunction-BO_9K8Jh.js";import"./ownerWindow-BN2rbQ_G.js";import"./isMuiElement-DAcuSkv2.js";import"./SkeletonButton-PiXzS80w.js";import"./SkeletonInlineBlock-D4fNjiAE.js";import"./SkeletonTable-B9cByFTb.js";import"./SkeletonParagraph-jKLsJPMJ.js";import"./ActionRequiredCard-CowzW-eG.js";import"./IconSvg-DDKWfwZf.js";import"./LayersTwoTone-fKfzxiPS.js";import"./ErrorOutlined-BKx_L9lY.js";import"./GetAppTwoTone-CD3TgP2w.js";import"./InfoOutlined-DpeT4h8X.js";import"./DeleteTwoTone-XAGzVgvj.js";import"./useEntity-CB2i4UMH.js";import"./omitBy-BrqSWPCK.js";import"./_baseIndexOf-DlmoT9Yo.js";import"./pickBy-V4nuzpsd.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./LoadingScreen-BJ8_eQQV.js";import"./Backdrop-80n8Lf7R.js";import"./LinearProgress-KBp2Y_fD.js";import"./useTeamMembers-CUlYqWVm.js";import"./index-C_6iVBSW.js";import"./DateFormatter-C2nX7b6T.js";import"./utc-Dh6hgZAu.js";import"./UserBadge-D7e0Y96k.js";import"./Popover-dS6E1zFr.js";import"./Modal-BtUDilAu.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./ToastMessage-BXb1aV_x.js";import"./CSSTransition-D3zyGi8F.js";import"./Menu-B1TgkTrV.js";import"./MenuList-BC6o5nhv.js";import"./List-DXimupJH.js";import"./Divider-BaVRBdbx.js";import"./dividerClasses-C4eIAzo0.js";import"./MenuItem-CWmy7e8c.js";import"./Card-CnbpaPrh.js";import"./Avatar-C5D2-eAC.js";import"./EntityLink-BBpLswsF.js";import"./EntityIcon-DOqgivTO.js";import"./ErrorChip-Db13Op8z.js";import"./Chip-jRKnVM1b.js";import"./pluralize-CVwSCrA2.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./MuiForm-DonF0QSo.js";import"./unset-B5zxMs8F.js";import"./_baseDifference-Dah6V4bZ.js";import"./uniq-jWUMtuG3.js";import"./noop-DX6rZLP_.js";import"./Grid-BA58v7GB.js";import"./TextField-BJQecJUe.js";import"./InputLabel-CewkyxXc.js";import"./useFormControl-CQLCXd-P.js";import"./Input-DLiaXUdI.js";import"./ListItem-CtDr7Rpr.js";import"./ListItemText-DXpFAPpz.js";import"./ContentCopy-Brkz2Tow.js";import"./FormControlLabel-UUENBpmY.js";import"./Checkbox-Dz9GUn9M.js";import"./FormGroup-BcAwoMRS.js";import"./RadioGroup-CrqOFMpj.js";import"./Radio-JK7w0Ids.js";import"./Slider-DH6rgp5n.js";import"./ThemesPlot-CXrlQH5R.js";import"./SqlFunctions-q4HiBnvv.js";import"./Plot-DSBVXOLN.js";import"./index-BfyspvgH.js";import"./chunk-CcTTw58R.js";import"./without-BoU-tkGY.js";import"./DownloadConfirmationUI-Bc0KSjRO.js";import"./SynapseTableConstants-Bfds70xL.js";import"./IconList-IC1Qw2Ge.js";import"./IconSvgButton-DxnqrGNv.js";import"./use-deep-compare-effect.esm-COSQ_O61.js";import"./ColumnHeader-DzQ7LOa4.js";import"./EnumFacetFilterUI-Cemacq4o.js";import"./StandaloneLoginForm-WJZ_hFM7.js";import"./useTwoFactorEnrollment-BVrpm1I3.js";import"./LoginMethodButton-CMBVIXJ1.js";import"./LastLoginInfo-3jM28IE0.js";import"./TextField-C8k2Nz86.js";import"./UserOrTeamBadge-C4aA9gAi.js";import"./TeamBadge-CzYBhIOM.js";import"./RequirementItem-C_K82llp.js";import"./ConditionalWrapper-Be926PbJ.js";import"./TwoFactorEnrollmentForm-Boehbxsg.js";import"./LeftRightPanel-DSyjiN9M.js";import"./DialogContent-EGs635ov.js";import"./UserSearchBoxV2-DQ4t26ZO.js";import"./Select-49a62830.esm-CJ3d5Qmi.js";import"./UploadDocumentField-DBNPMM0m.js";import"./FileUpload-IDONnhVj.js";import"./TextFieldWithWordLimit-C_43WKWG.js";import"./AuthenticatedRequirement-Diz9kvMG.js";import"./CertificationRequirement-DZVMx-Jv.js";import"./TwoFactorAuthEnabledRequirement-CAqiYCkl.js";import"./ValidationRequirement-CmfApG1X.js";import"./EnumFacetFilterSkeleton-BBSFmoP_.js";import"./ShowMore-CuqZdAPw.js";import"./AclEditor-DmCxLlIg.js";import"./useUpdateAcl-BY1HryUj.js";import"./OpenData-8UOPXA6m.js";import"./SelectionCriteriaPill-cFEfx-1b.js";import"./Close-COozyF2X.js";import"./UserCardList-BkftFvAQ.js";import"./Box-s9z-tlfj.js";import"./NoSearchResults-D_0Z6t-L.js";import"./NoData-C4f0rA4e.js";import"./QueryCount-BFOVMF-f.js";import"./WizardChoiceButtonGroup-Cwa6-vT6.js";import"./Tabs-DrJJu5jE.js";import"./UpsetPlot-Cl_dVCxw.js";import"./LargeButton-DyC3Jxfs.js";import"./react-sizeme-C2W2PgBQ.js";import"./colorPalette-BSrfa2_g.js";import"./AdapterDayjs-DjDJ7oTt.js";import"./InputAdornment-CY3Vm8e8.js";import"./RangeSlider-zYgWnzei.js";import"./SynapseVideo-Dp6NF9Rg.js";import"./WarningDialog-oIaUnKmX.js";import"./RejectDataAccessRequestModal-DdS_miNw.js";import"./CannedRejectionDialog-2tnfLA7t.js";import"./immutable.es-DHy1u56X.js";const Bi={title:"Governance/SubmissionPage",component:A,parameters:{stack:"mock"}},p={name:"SubmissionPage",loaders:[()=>_({sql:`SELECT * FROM ${l}`},O)],parameters:{msw:{handlers:[...R(o),...u(o),m.rest.get(`${o}${s(":id")}`,async(i,t,r)=>{const d=I.find(E=>i.params.id===E.id);return t(r.status(200),r.json(d))}),m.rest.get(`${o}${C(":id")}`,async(i,t,r)=>t(r.status(200),r.json(e))),m.rest.get(`${o}${g(":id")}`,async(i,t,r)=>t(r.status(200),r.json({wikiPageId:123,ownerObjectId:e.id,ownerObjectType:"ACCESS_REQUIREMENT"}))),m.rest.get(`${o}/repo/v1/accessRequirement/:id/acl`,async(i,t,r)=>t(r.status(200),r.json({id:i.id,creationDate:"2022-05-20T14:32:31.665Z",etag:"f4fbd4f2-751d-40dd-9421-1d2693231217",resourceAccess:[{principalId:3350396,accessType:["REVIEW_SUBMISSIONS"]}]}))),...S(o),m.rest.put(`${o}${s(":id")}`,async(i,t,r)=>t(r.status(201),r.json(await i.json())))]}},args:{submissionId:1}};var n,a,c;p.parameters={...p.parameters,docs:{...(n=p.parameters)==null?void 0:n.docs,source:{originalSource:`{
  name: 'SubmissionPage',
  loaders: [() => registerTableQueryResult({
    sql: \`SELECT * FROM \${REJECT_SUBMISSION_CANNED_RESPONSES_TABLE}\`
  }, mockRejectionReasonsTableQueryResultBundle)],
  parameters: {
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), ...getWikiHandlers(MOCK_REPO_ORIGIN),
      // Return submission based on ID
      rest.get(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        const submission = mockSubmissions.find(submission => req.params.id === submission.id);
        return res(ctx.status(200), ctx.json(submission));
      }),
      // Return a mocked access requirement
      rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json(mockManagedACTAccessRequirement));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_WIKI_PAGE_KEY(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          wikiPageId: 123,
          ownerObjectId: mockManagedACTAccessRequirement.id,
          ownerObjectType: 'ACCESS_REQUIREMENT'
        }));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}/repo/v1/accessRequirement/:id/acl\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          id: req.id,
          creationDate: '2022-05-20T14:32:31.665Z',
          etag: 'f4fbd4f2-751d-40dd-9421-1d2693231217',
          resourceAccess: [{
            principalId: 3350396,
            accessType: ['REVIEW_SUBMISSIONS']
          }]
        }));
      }), ...getHandlersForTableQuery(MOCK_REPO_ORIGIN), rest.put(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(201), ctx.json(await req.json()));
      })]
    }
  },
  args: {
    submissionId: 1
  }
}`,...(c=(a=p.parameters)==null?void 0:a.docs)==null?void 0:c.source}}};const Di=["Demo"];export{p as Demo,Di as __namedExportsOrder,Bi as default};
