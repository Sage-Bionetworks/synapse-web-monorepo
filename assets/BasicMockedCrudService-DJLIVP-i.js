var s=Object.defineProperty;var u=(d,e,t)=>e in d?s(d,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):d[e]=t;var r=(d,e,t)=>u(d,typeof e!="symbol"?e+"":e,t);import{c as h}from"./cloneDeep-DCoGJ7oU.js";import{i as a}from"./isEqual-fx5nODOB.js";import{u as c}from"./uniqueId-CSw6ftlJ.js";class I{constructor(e){r(this,"data");r(this,"idField");r(this,"autoGenerateId");this.data=h(e==null?void 0:e.initialData)||[],this.idField=e==null?void 0:e.idField,this.autoGenerateId=e==null?void 0:e.autoGenerateId}getAll(){return[...this.data]}getOneById(e){const t=this.idField;if(!t)throw new Error("idField is not defined");return this.data.find(i=>a(i[t],e))}getOneByPredicate(e){return this.data.find(e)}getOneByField(e,t){return this.data.find(i=>a(i[e],t))}getMany(e){return this.data.filter(e)}create(e){const t=h(e),i=this.idField;if(i&&this.autoGenerateId)t[i]=c();else if(i&&!t[i])throw new Error(`autoGenerateId is not true, but attempted to create new object with idField: ${String(i)} and id: ${t[i]}`);return this.data.push(t),t}update(e,t,i="replace"){const l=this.idField;if(!l)throw new Error("idField is not defined");return this.data=this.data.map(n=>{if(a(n[l],e)){if(i==="merge")return{...n,...t};if(i==="replace")return t}return n}),this.getOneById(e)}delete(e){const t=this.idField;if(!t)throw new Error("idField is not defined");this.data=this.data.filter(i=>!a(i[t],e))}}export{I as B};
