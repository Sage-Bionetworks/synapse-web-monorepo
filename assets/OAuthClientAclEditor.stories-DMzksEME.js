import{a3 as E,w as g,c7 as c,n as C,jw as O,H as _,g as h,r as p,j as o,B as f,P as T,b as l}from"./iframe-DkJtXMGY.js";import{O as m}from"./OAuthClientAclEditor-DXUglEsJ.js";import"./index-r8ZA1smB.js";import"./useInfiniteQuery-iYy68X6j.js";import"./AclEditor-BwJwsBCU.js";import"./UserSearchBoxV2-q9HR-Gu6.js";import"./useDebouncedEffect-CbC68BJS.js";import"./use-deep-compare-effect.esm-aTxZvlU9.js";import"./uniq-BY50vU0D.js";import"./without-BNFOWFRc.js";import"./UserBadge-D10KGNES.js";import"./SkeletonTable-Boy2sN_O.js";import"./MenuItem-__VZzdvD.js";import"./Card-BrdkgB5x.js";import"./Chip-C5Eg6zQf.js";import"./Select-aab027f3.esm-BlNTofID.js";import"./defineProperty-CegpTSss.js";import"./UserOrTeamBadge-yADcIefg.js";import"./TeamBadge-Cz3XVBkB.js";import"./SkeletonButton-Wvy1B_g_.js";import"./SkeletonInlineBlock-BZs9NYqd.js";import"./SkeletonParagraph-D2M_qyIo.js";import"./IconSvgButton-DDBMYQHe.js";import"./FormControlLabel-BtRUWfK0.js";import"./Checkbox-1S1SsZEO.js";import"./SwitchBase-LVCk0Af2.js";import"./useUpdateAcl-ChYObCJ-.js";import"./AccessControlListUtils-BEMWZG-R.js";const x={client_id:"1234"},I={id:x.client_id.toString(),resourceAccess:new Set([{principalId:E,accessType:new Set(c("CAN_ADMINISTER_OAUTH_CLIENT"))},{principalId:g,accessType:new Set(c("CAN_ADMINISTER_OAUTH_CLIENT"))}])},S=[I];function M(t){return C.get(`${t}${O(":id")}`,({params:e})=>{let r=404,n={concreteType:"org.sagebionetworks.repo.model.ErrorResponse",reason:`Mock Service worker could not find an ACL for OAuth client with ID ${e.id}`};const s=S.find(i=>i.id===e.id);return s&&(n=s,r=200),_.json(n,{status:r})})}function R(t){return C.put(`${t}${O(":id")}`,async({request:e})=>{const r=await e.json();return _.json(r,{status:200})})}function H(t){return[M(t),R(t)]}const nt={title:"Synapse/OAuthManagement/OAuthClientAclEditor",component:m,render:function(e){const[r,n]=p.useState(!1),s=p.useRef(null);return o.jsxs(o.Fragment,{children:[o.jsx(f,{onClick:()=>{var i;n(!0),(i=s.current)==null||i.save()},variant:"contained",disabled:r,children:"Save ACL"}),o.jsx(T,{sx:{mx:"auto",p:"44px",maxWidth:"750px"},children:o.jsx(m,{...e,ref:s,onSaveComplete:()=>n(!1)})})]})}},a={args:{clientId:I.id},parameters:{stack:"mock",msw:{handlers:[...h(l),H(l)]}}};var d,u,A;a.parameters={...a.parameters,docs:{...(d=a.parameters)==null?void 0:d.docs,source:{originalSource:`{
  args: {
    clientId: MOCK_OAUTH_CLIENT_ACL.id
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), getAllOAuthClientAclHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(A=(u=a.parameters)==null?void 0:u.docs)==null?void 0:A.source}}};const st=["MockDemoExistingAcl"];export{a as MockDemoExistingAcl,st as __namedExportsOrder,nt as default};
