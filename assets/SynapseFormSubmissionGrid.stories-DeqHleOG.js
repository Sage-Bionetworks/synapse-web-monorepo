import{j as l}from"./jsx-runtime-3KUIpe_B.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-B47Kj39O.js";import{aH as S,M as a}from"./useFiles-BUTSDjpp.js";import"./OrientationBanner-hPZ43e6I.js";import"./index-DKQmXyTg.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-V2O7xGsW.js";import{S as E}from"./SynapseFormSubmissionGrid-DBzHUaKn.js";import"./mockSchema-Dw-Ooqz5.js";import"./mockFileEntity-DeA_sN5h.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-B6LxgSWM.js";import"./mockTeam-CkJ9wGsi.js";import"./SynapseConstants-BKYSFUA4.js";import"./uniqueId-U7_dp_es.js";import"./toString-CTt2u-FA.js";import"./isObjectLike-CpRgRSSG.js";import"./iframe-yVMHiQlN.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-DtDHKaGD.js";import"./times-DW3mmMLQ.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DodBKe_l.js";import"./asyncJobHandlers-C2vvbbxF.js";import"./BasicMockedCrudService-v1-z95UQ.js";import"./cloneDeep-rpODRfQ8.js";import"./_Uint8Array-Hpg7Ovco.js";import"./_initCloneObject-BIxNbgCW.js";import"./_getTag-gn94A73Q.js";import"./isEqual-CblXoSZj.js";import"./_baseIsEqual-Be5X7RjA.js";import"./mockAnnotationColumns-BFmy9o49.js";import"./tableQueryHandlers-DzopkWTJ.js";import"./omit-DuqXtrO4.js";import"./_baseGet-BelO6GHW.js";import"./isNil-BwVJPUb-.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-CfMdqnSR.js";import"./_baseFlatten-2A21soHC.js";import"./pick-Ja3d5aEl.js";import"./_baseSet-BMdiwKru.js";import"./hasIn-CBLYzHKs.js";import"./accessRequirementAclHandlers-DgfLRt3M.js";import"./mockAccessRequirementAcls-iuYKbARg.js";import"./mockAccessRequirements-Iyq4jWtF.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-CwvBcKms.js";import"./wikiHandlers-BJD6dDbH.js";import"./mockWikiPageKey-Bds1_wC4.js";import"./teamHandlers-CRstXojk.js";import"./dataAccessRequestHandlers-CoTliCnK.js";import"./MockResearchProject-BRhSUKcd.js";import"./mock_discussion-DW7i4Fdn.js";import"./fakerUtils-k7gWt5w_.js";import"./index-DLeiXjj2.js";import"./mockTableEntity-DrbMx0pH.js";import"./mockFileEntityACLVariants-Bg7-anU3.js";import"./entityHandlers-uFLjhjm8.js";import"./mockEntity-B-oV8WLf.js";import"./mockEvaluationQueue-DjSbN5Nz.js";import"./featureFlagHandlers-l_ZwZXo8.js";import"./fileHandlers-DvMO1duS.js";import"./personalAccessTokenHandlers-Q_GCmJqP.js";import"./researchProjectHandlers-CwYJVe_R.js";import"./resetTwoFactorAuthHandlers-COa4EGmZ.js";import"./userProfileHandlers-DHuMUHA9.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-B_1k5y15.js";import"./FullWidthAlert-C4lmFUoi.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-Aziq9jrC.js";import"./createTheme-D71xLB5y.js";import"./resolveComponentProps-BGzDORmu.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-WbU4IK3w.js";import"./createSvgIcon-50Cdg5i5.js";import"./DefaultPropsProvider-BLKPmz24.js";import"./Close-CSP2Jd51.js";import"./IconButton-pbjeZzOL.js";import"./ButtonBase-CkYDoZ72.js";import"./useTimeout-D1oI4iH6.js";import"./useIsFocusVisible-YFynukRh.js";import"./useEventCallback-DPuUUDpa.js";import"./Paper-CpI3p7vt.js";import"./Stack-CpeVWMZC.js";import"./getThemeProps-CQbQMCh0.js";import"./useTheme-BdTZ9glP.js";import"./Box-DHQrsK7r.js";import"./AlertTitle-BpB3V9XK.js";import"./Typography-SSCOYWVs.js";import"./useTheme-HpprIIPg.js";import"./Grow-DBVaKRUq.js";import"./index--OvIPCqu.js";import"./utils-DJQOJB4m.js";import"./ClickAwayListener-Dt1qC4MI.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BBYtGIG7.js";import"./index-Cle-c0aH.js";import"./useControlled-CtW-cS0b.js";import"./useId-CF9Yu02v.js";import"./Popper-CGUN53ew.js";import"./Button-fGoJWvNB.js";import"./useQuery-B7kP4S9m.js";import"./utils-D5WnLCld.js";import"./Link-Bpjhw2CS.js";import"./Collapse-DgDuu3nh.js";import"./tinycolor-Begke6kS.js";import"./Fade-CMDFt0Nj.js";import"./Skeleton-C670lw8b.js";import"./inputBaseClasses-DaTlLvG_.js";import"./calculateFriendlyFileSize-Dn_xi8Ur.js";import"./CheckCircleTwoTone-BsG1c10B.js";import"./InfoTwoTone-Brz641sQ.js";import"./mutation-CJXf9Cy9.js";import"./dayjs.min-D019G3yF.js";import"./chunk-AYJ5UCUI-DkAV2hPV.js";import"./index-C-TJzvvw.js";import"./react-Dtsa6pJa.js";import"./util-Byfh3F0t.js";import"./WideButton-BSiwWQde.js";import"./DeleteTwoTone-CtOLQTqE.js";import"./createSvgIcon-DFl-S8pc.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-DVGnrH5h.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-2JyaOJzC.js";import"./DialogBase-LyXbFT6T.js";import"./Close-D15kSnni.js";import"./HelpPopover-BMtlHCIC.js";import"./MarkdownPopover-0M4ZiTNB.js";import"./LightTooltip-DeSzLM2f.js";import"./MarkdownSynapse-KTkAyBLZ.js";import"./SkeletonButton-B2sMgepy.js";import"./SkeletonInlineBlock-BZh5d28p.js";import"./SkeletonTable-Bebb2aGz.js";import"./SkeletonParagraph-B3rjYtee.js";import"./HelpOutlineTwoTone-ZzQ9gHk5.js";import"./DialogTitle-Bx3cI14m.js";import"./DialogContent-Dh2Z2Pi5.js";import"./Dialog-b4hIvY7W.js";import"./Modal-sEuPLtvs.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-Co9O8Qob.js";import"./WarningDialog-DyaD_oJI.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
