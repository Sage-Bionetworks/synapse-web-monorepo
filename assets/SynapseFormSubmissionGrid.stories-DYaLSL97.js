import{j as l}from"./jsx-runtime-DyzG1hwI.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-BI5WaB2N.js";import{g as T}from"./handlers-C6bCCOVx.js";import{aD as S,M as a}from"./useFiles-Bka2L5ox.js";import"./OrientationBanner-DXkttNGr.js";import"./index-CrSrYSTF.js";import"./StringUtils-DN6u4g4A.js";import{l as _}from"./index-Cf9XCdl0.js";import{S as E}from"./SynapseFormSubmissionGrid-L1vvIplM.js";import"./mockSchema-B6GDQ8Nb.js";import"./mockFileEntity-CYgtoAWT.js";import"./mock_file_handle-CFTRkxcS.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-CWyBqviQ.js";import"./mockTeam-DRy7EJgZ.js";import"./SynapseConstants-Bwu0qB46.js";import"./uniqueId-BGbHZD-g.js";import"./toString-BvSjqnIG.js";import"./isObjectLike-iezpm4wN.js";import"./iframe-CMGcwyU8.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BPQrIT02.js";import"./times-QSmVszMZ.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-c-0CKB6e.js";import"./asyncJobHandlers-B5r9G786.js";import"./BasicMockedCrudService-NX4SY1pt.js";import"./cloneDeep-Bp1YEk0j.js";import"./_Uint8Array-CdKCkqyI.js";import"./_initCloneObject-CzqCuNIq.js";import"./_getTag-2sIXRL8V.js";import"./isEqual-B8DTjVuz.js";import"./_baseIsEqual-fkYr_Tyw.js";import"./mockAnnotationColumns-B5_MA2NG.js";import"./tableQueryHandlers-BOfG2dyH.js";import"./omit-DC3ktHH7.js";import"./_baseGet-AYxIBvAE.js";import"./isNil-BrU7Yzj-.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-C1qPWmGd.js";import"./_baseFlatten-6DUxt4Vv.js";import"./pick-BdPhq6j4.js";import"./_baseSet-OZ0i022H.js";import"./hasIn-CUt00b0b.js";import"./accessRequirementAclHandlers-CGpUgyMZ.js";import"./mockAccessRequirementAcls-CFEsApSF.js";import"./mockAccessRequirements-Dl-PhyL9.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CgjxDh2Q.js";import"./accessRequirementHandlers-Dpodx7KS.js";import"./wikiHandlers-48bTdx6O.js";import"./mockWikiPageKey-DyPPpRVG.js";import"./teamHandlers-oc0HyCo3.js";import"./dataAccessRequestHandlers-DFR_Sgtn.js";import"./MockResearchProject-WpAn7IWj.js";import"./mock_discussion-ULUdlJi9.js";import"./fakerUtils-BGvL880c.js";import"./index-DNrg_xZz.js";import"./mockTableEntity-BCMXncdx.js";import"./mockFileEntityACLVariants-CHFzQL5H.js";import"./entityHandlers-BlYJxuD8.js";import"./mockEntity-DIZO1Gf0.js";import"./mockEvaluationQueue-DOcvlzKK.js";import"./featureFlagHandlers-BqFr2Q7j.js";import"./fileHandlers-BEIpJ_5I.js";import"./personalAccessTokenHandlers-CPUmkRXQ.js";import"./researchProjectHandlers-DuJBp2LT.js";import"./resetTwoFactorAuthHandlers-eroUNq5U.js";import"./userProfileHandlers-Bazwwr9e.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-DxZXjnHx.js";import"./FullWidthAlert-rjMyFGK6.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-Cm8kQflu.js";import"./createTheme-Is747m2y.js";import"./resolveComponentProps-DyjLIVKx.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-C8M4wLUf.js";import"./createSvgIcon-CUNVkehu.js";import"./DefaultPropsProvider-DWF5CBcq.js";import"./Close-B9m6eLPP.js";import"./IconButton-DHpv-rlf.js";import"./ButtonBase-Btia2eQe.js";import"./useTimeout-CaiJjEK4.js";import"./useIsFocusVisible-BTCzTTr7.js";import"./useEventCallback-DHPME8kn.js";import"./Paper-BwPqQmBI.js";import"./Stack-DknzwWm6.js";import"./getThemeProps-B56GMEUH.js";import"./useTheme-C0i1PFNN.js";import"./Box-1gY1bGlg.js";import"./AlertTitle-1VF7a4z7.js";import"./Typography-DzUle5GT.js";import"./useTheme-DhD4Q8NU.js";import"./Grow-BUmN-gNH.js";import"./index-CAg7QE2R.js";import"./utils-D7M9m_8l.js";import"./ClickAwayListener-DxQfJRP3.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BwMDWNOg.js";import"./index-HDNDhk7k.js";import"./useControlled-DgCtf78D.js";import"./useId-DuezacBB.js";import"./Popper-BnveApbh.js";import"./Button-DtaNQqCu.js";import"./useQuery-DJ0M6IWq.js";import"./utils-BPMC0IQI.js";import"./Link-B-mm3T7u.js";import"./Collapse-BFoXWlCs.js";import"./tinycolor-Begke6kS.js";import"./Fade-DRISSy7_.js";import"./Skeleton-BhyIo3kT.js";import"./inputBaseClasses-DGjAuvih.js";import"./calculateFriendlyFileSize-yzj5Sy8t.js";import"./CheckCircleTwoTone-DJHnZOGu.js";import"./InfoTwoTone-BB__BbP8.js";import"./mutation-BUMzrZ3W.js";import"./dayjs.min-BrH-GAW7.js";import"./chunk-AYJ5UCUI-CjNLu336.js";import"./index-qI3IIQ-p.js";import"./react-O48Z7vaA.js";import"./util-u-LhfiCP.js";import"./WideButton-Bqtw-XRC.js";import"./DeleteTwoTone-CZlXJ469.js";import"./createSvgIcon-D0HGouU8.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-B_xIa8YT.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-DEOmcdRr.js";import"./DialogBase-CjRA2kD7.js";import"./Close-DbTxrhNo.js";import"./HelpPopover-D3hJxMJ_.js";import"./MarkdownPopover-Ce571gRc.js";import"./LightTooltip-Bb7eivSU.js";import"./MarkdownSynapse-uan3urzu.js";import"./useMutation-9Vn__7fC.js";import"./SkeletonButton-BFJRsTcI.js";import"./SkeletonInlineBlock-BmYtQ43f.js";import"./SkeletonTable-DpNGjRYw.js";import"./SkeletonParagraph-CAK_YI3L.js";import"./HelpOutlineTwoTone-Dg9OFX28.js";import"./DialogTitle-D61mbqMR.js";import"./DialogContent-Ds9uyIM3.js";import"./Dialog-DBInrqMG.js";import"./Modal-Bs3BFiCj.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-Ch_p3ORd.js";import"./WarningDialog-B4Myozaq.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},To={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const _o=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,_o as __namedExportsOrder,To as default};
