import{g as f}from"./userProfileHandlers-BQ2unPx2.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-Bdk-rDlY.js";import{A}from"./AccountLevelBadges-B2Gh6fSg.js";import"./VerificationSubmission-CTjJb3hu.js";import"./index-6kThrmlh.js";import"./iframe-Bha8qMdA.js";import"./mockEntity-Bc27OGPT.js";import"./mockFileEntity-HNOLho_i.js";import"./StringUtils-B8-nnzJN.js";import"./mock_file_handle-CfZD9Mvn.js";import"./mockProject-Bz6vA01T.js";import"./mockTeam-eme9I7MK.js";import"./SynapseConstants-CPxMpVHW.js";import"./OrientationBanner-C06D94Hm.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-B3ZoRi4-.js";import"./index-BFe7OOCO.js";import"./spreadSx-CwcO6WA9.js";import"./react-D4DcjIMi.js";import"./FullWidthAlert-DrhjjluB.js";import"./Alert-CS4qrGXV.js";import"./createTheme-r53sen1H.js";import"./DefaultPropsProvider-DhKH4jS5.js";import"./useSlot-BjGwbouw.js";import"./useForkRef-C3S72d_h.js";import"./createSimplePaletteValueFilter-BKD40Yni.js";import"./createSvgIcon-BlYLmz2K.js";import"./Close-BIGKj7ED.js";import"./IconButton-RLYr2FEe.js";import"./useTimeout-BjZ1pB1q.js";import"./ButtonBase-BTDiO5jL.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-tBTi4oIf.js";import"./Paper-cGemMgWu.js";import"./useTheme-dw00mKTl.js";import"./useTheme-BVgbn6l0.js";import"./Stack-CZIpFnrG.js";import"./extendSxProp-BYVH58vt.js";import"./getThemeProps-ugVUIFn4.js";import"./Box-CteZFSuz.js";import"./AlertTitle-tYv3ugNo.js";import"./Typography-BvT1XRjO.js";import"./index-DYSwa5Xm.js";import"./ClickAwayListener-DFw4-2za.js";import"./getReactElementRef-CrfOFAx4.js";import"./index-Bl_SermX.js";import"./index-CR-e9Su5.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DuTgCd74.js";import"./Tooltip-Dx6Egvgv.js";import"./index-CMkzAbFp.js";import"./useControlled-D0iW-7vO.js";import"./Popper-BO3NETWT.js";import"./Button-C0QtNNNQ.js";import"./uniqueId-D4-l-flb.js";import"./toString--A387rSg.js";import"./isArray-Bq1Bv-Mm.js";import"./isSymbol-DgpUL_L6.js";import"./times-CFf8C9TJ.js";import"./_Uint8Array-BmRAF-l6.js";import"./identity-DKeuBCMA.js";import"./toInteger-Ddxgkesh.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-CHHYNMj4.js";import"./QueryClientProvider-DRK6s_Dv.js";import"./Link-DY_VTRxM.js";import"./Collapse-DKZz63NR.js";import"./_baseUniq-DXFjNF0a.js";import"./_getTag-Dw30EhU3.js";import"./isEqual-BRRciehP.js";import"./merge-c-k0AbhX.js";import"./_initCloneObject-NVlBGhuH.js";import"./tinycolor-Begke6kS.js";import"./Fade-Xf5NEG7w.js";import"./inputBaseClasses-BxOJtLF2.js";import"./calculateFriendlyFileSize-DI3CDhm2.js";import"./CheckCircleTwoTone-CZ1rOWLg.js";import"./InfoTwoTone-DAGfyDTy.js";import"./useMutation-Bbj9coTz.js";import"./dayjs.min-I_SVux8b.js";import"./chunk-AYJ5UCUI-D1KYLbuL.js";import"./cloneDeep-CBO0jsPD.js";import"./Skeleton-E--vr7y2.js";import"./AccountLevelBadge-Fsw_HIRm.js";import"./Card-BsvBvfSp.js";import"./ConfirmationDialog-DXTrv1GJ.js";import"./DialogBase-BkpeHSev.js";import"./Close-BAIllsKD.js";import"./HelpPopover-Cz5EeQSJ.js";import"./MarkdownPopover-RpoDoQj6.js";import"./LightTooltip-Cbz5qUHh.js";import"./MarkdownSynapse-Df30U1Hn.js";import"./SkeletonButton-cMRNZ__f.js";import"./SkeletonInlineBlock-CJG5hxVo.js";import"./SkeletonTable-vky-mQpv.js";import"./SkeletonParagraph-CpGGXxR9.js";import"./HelpOutlineTwoTone-BB4Pkymk.js";import"./DialogTitle-DHIzTPWi.js";import"./DialogContent-BnID3af2.js";import"./Dialog-UF7EI0dn.js";import"./Modal-D8Jwwkhl.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-Bi1domck.js";import"./LoadingScreen-Cra6AsMz.js";import"./LinearProgress-Bx8wxTYh.js";import"./ToastMessage-BV3snPHA.js";import"./CSSTransition-DL5bu29-.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
