import{j as l}from"./jsx-runtime-Bv99z4dA.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-T1Y-L7m8.js";import{aF as S,M as a}from"./useFiles-DfbAmMh0.js";import"./OrientationBanner-Stv6OLE_.js";import"./index-CF0uzcjZ.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-BcoA1BdE.js";import{S as E}from"./SynapseFormSubmissionGrid-BTkyvrlb.js";import"./mockSchema-DjYReM-B.js";import"./mockFileEntity-Bhy8Pz69.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-CHizevoX.js";import"./mockTeam-DHjAdERj.js";import"./SynapseConstants-BcNR6UVe.js";import"./uniqueId-B_W1ZYYh.js";import"./toString-CY2V_kra.js";import"./isObjectLike-Eui5bRYR.js";import"./iframe-BGHbsuBY.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BRqq2NTe.js";import"./times-BSt-OOmR.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-CrB09Qip.js";import"./asyncJobHandlers-DO8Ik-AM.js";import"./BasicMockedCrudService--xZm8Zlr.js";import"./cloneDeep-CxCk-B3s.js";import"./_Uint8Array-C9b-PzRe.js";import"./_initCloneObject-yXBc5QAf.js";import"./_getTag-C45n9TB1.js";import"./isEqual-JGHzCGNG.js";import"./_baseIsEqual-D0dXxHzC.js";import"./mockAnnotationColumns-BB3pQbRu.js";import"./tableQueryHandlers-BnfVsxSu.js";import"./omit-D6tl14nm.js";import"./_baseGet-B2nvyT48.js";import"./isNil-BLECkZ0t.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BL56xzl6.js";import"./_baseFlatten-C808lwGf.js";import"./pick-B4zKhLzf.js";import"./_baseSet-ctLDtRqW.js";import"./hasIn-BxpAN5vc.js";import"./accessRequirementAclHandlers-CV441L1c.js";import"./mockAccessRequirementAcls-C3EjkbCK.js";import"./mockAccessRequirements-xk_6CeqP.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-DEHrvvXp.js";import"./wikiHandlers-Cse6PEk_.js";import"./mockWikiPageKey-DKEXfvsT.js";import"./teamHandlers-DhkPs14s.js";import"./dataAccessRequestHandlers-CDuwNiUz.js";import"./MockResearchProject-BL2fDN2x.js";import"./mock_discussion-8cjs53MO.js";import"./fakerUtils-Cq7ZDwo_.js";import"./index--AV8rF-F.js";import"./mockTableEntity-DbF7Dckm.js";import"./mockFileEntityACLVariants-fzosrEXG.js";import"./entityHandlers-BW70Oqsc.js";import"./mockEntity-4F3eU1he.js";import"./mockEvaluationQueue-DJgbTrHe.js";import"./featureFlagHandlers-Ch4I6rIp.js";import"./fileHandlers--WJMNbFT.js";import"./personalAccessTokenHandlers-Cbr7Yd-7.js";import"./researchProjectHandlers-CUcpjbAm.js";import"./resetTwoFactorAuthHandlers-DbUc3pdb.js";import"./userProfileHandlers-DusKxxYT.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-CcdTK9uz.js";import"./FullWidthAlert-CTTU8S7m.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-BxPsGBYe.js";import"./createTheme-Bw_q8xoX.js";import"./resolveComponentProps-CKpD1PaC.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CR5Lr8iG.js";import"./createSvgIcon-DYUB9sIM.js";import"./DefaultPropsProvider-Du8GyagO.js";import"./Close-Cn1wJK3o.js";import"./IconButton-ByhlliFY.js";import"./ButtonBase-D9Xa11JY.js";import"./useTimeout-D0voTyHk.js";import"./useIsFocusVisible-BREXiXd7.js";import"./useEventCallback-B52rbrpi.js";import"./Paper-3DUu0WIH.js";import"./Stack-DOpWO4At.js";import"./getThemeProps-B6Zyu7l2.js";import"./useTheme-DMGyK5v9.js";import"./Box-CBOI_66A.js";import"./AlertTitle-CUlu-O_E.js";import"./Typography-DzYp-gx0.js";import"./useTheme-B2hHvz9R.js";import"./Grow-DQ9AjbB6.js";import"./index-Tn3qadKg.js";import"./utils-BbVrO47L.js";import"./ClickAwayListener-CEWBU0B0.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-Dyps0rkr.js";import"./index-D80nYRsb.js";import"./useControlled-YvkHZGdj.js";import"./useId-CETeX-Gn.js";import"./Popper-BDcRHdTY.js";import"./Button-rQ4_7pWR.js";import"./useQuery-Brk-0fy0.js";import"./utils-fj-tQrRX.js";import"./Link-nOr9EzS9.js";import"./Collapse-CfSLrk2G.js";import"./tinycolor-Begke6kS.js";import"./Fade-DpYMkibC.js";import"./Skeleton-CSx2cjkl.js";import"./inputBaseClasses-BuIFm7nN.js";import"./calculateFriendlyFileSize-CttCZT0w.js";import"./CheckCircleTwoTone-CeSmIQGa.js";import"./InfoTwoTone-CgTBjUs_.js";import"./useMutation-BD58zpYn.js";import"./dayjs.min-B6HdU3vP.js";import"./chunk-AYJ5UCUI-CzysO3QB.js";import"./index-BjW319T1.js";import"./react-C0_LrvjC.js";import"./util-BjaDKoNr.js";import"./WideButton-C2ouTj2A.js";import"./DeleteTwoTone-ClCSnmG8.js";import"./createSvgIcon-Dgsyj_YO.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-83kKQco4.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-CjPKhqv5.js";import"./DialogBase-manHU4qk.js";import"./Close-Bljez2sW.js";import"./HelpPopover-CLjIn7eh.js";import"./MarkdownPopover-C3QTqfhq.js";import"./LightTooltip-BdYjHfeV.js";import"./MarkdownSynapse-CwZv9bbD.js";import"./SkeletonButton-9PT_1GBq.js";import"./SkeletonInlineBlock-BKKpD_Fh.js";import"./SkeletonTable-BnASqwCK.js";import"./SkeletonParagraph-DS1b0li8.js";import"./HelpOutlineTwoTone-LfWKG8m6.js";import"./DialogTitle-Cg6LTOL4.js";import"./DialogContent-YKALvHCN.js";import"./Dialog-vuhWOLoQ.js";import"./Modal-s1dH0u52.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-DbiWWtWK.js";import"./WarningDialog-CdKrPDZ4.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
