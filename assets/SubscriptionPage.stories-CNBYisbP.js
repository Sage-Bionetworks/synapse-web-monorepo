import{g as E}from"./handlers-CJiemvs1.js";import{g as j,B as I,M as N}from"./useFiles-DKiwZnFy.js";import{j as t}from"./jsx-runtime-B_BASs2o.js";import{a as h,b as R}from"./useSubscription-CPXtL7ms.js";import{p as s,m as D}from"./VerificationSubmission-DKyendrM.js";import{r as b}from"./index-DwZZLiLd.js";import{D as F}from"./DropdownSelect-BkhJsvMe.js";import"./StringUtils-BcSmk1fX.js";import"./OrientationBanner-CrZbUJlx.js";import{u as v}from"./useEntity-ONqazBMl.js";import{c as M}from"./useForum-Dcm7OPmX.js";import{T as P}from"./Topic-wY4rGYSO.js";import{c as C}from"./useThread-BsqSM7JW.js";import{B as k}from"./Box-CTyNgpBu.js";import{T as A,a as T}from"./Tabs-DAlBmHxz.js";import{S as B}from"./Stack-C2ETm3ew.js";import{B as $}from"./Button-7E9-g8VM.js";import"./mockSchema-Cha4HM5R.js";import"./mockFileEntity-D56cwDXj.js";import"./mock_file_handle-qAzg5fnb.js";import"./mock_user_profile-CCzWeUML.js";import"./mockProject-l1hIzpAL.js";import"./mockTeam-tF6zxG7X.js";import"./SynapseConstants-Di2qHJ4V.js";import"./uniqueId-Cx00Oh8d.js";import"./toString-FLuGGsNM.js";import"./isObjectLike-CWBmoQcX.js";import"./iframe-Zkz26kob.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-aoBtzT_M.js";import"./times-BqeNZOTS.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DFlbIs9q.js";import"./asyncJobHandlers-b32PR_SQ.js";import"./index-BHVfpgk2.js";import"./util-DECqRArx.js";import"./BasicMockedCrudService-DEYifgfB.js";import"./cloneDeep-C-AeX0sj.js";import"./_Uint8Array-5R2Phy2D.js";import"./_initCloneObject-DnIwAtZU.js";import"./_getTag-D6u2Q-tT.js";import"./isEqual-DJzDoLjX.js";import"./mockAnnotationColumns-CpUtt2mZ.js";import"./tableQueryHandlers-CXqyC69T.js";import"./omit-R6VnnW0D.js";import"./_baseGet-DovxX5Ex.js";import"./isNil-Brgex79b.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-K4R-57V-.js";import"./_baseFlatten-Ccf7Q3N7.js";import"./pick-C5dF85BR.js";import"./_baseSet-DJmpjhGl.js";import"./hasIn-CNOF4i1Y.js";import"./accessRequirementAclHandlers-BrMuBxsu.js";import"./mockAccessRequirementAcls-YlDEvZ-2.js";import"./mockAccessRequirements-DXXg2HTA.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CfZ4orwO.js";import"./accessRequirementHandlers-COWCeFA8.js";import"./wikiHandlers-BTJfK3hI.js";import"./mockWikiPageKey-LpE_8ckH.js";import"./teamHandlers-DSJpTY4m.js";import"./dataAccessRequestHandlers-jHh-vOzw.js";import"./MockResearchProject-DzT0ediw.js";import"./mock_discussion-aconUO8w.js";import"./fakerUtils-OqI6iVqD.js";import"./index-CTuOMKc7.js";import"./mockTableEntity-Bo4Lslzw.js";import"./mockFileEntityACLVariants-Cg1qG-rj.js";import"./entityHandlers-DoWO8mBn.js";import"./mockEntity-qDwgVlHb.js";import"./mockEvaluationQueue-DCmSDGtY.js";import"./featureFlagHandlers-BtNzw4Ye.js";import"./fileHandlers-D53IMFOZ.js";import"./personalAccessTokenHandlers-CnzE3M8Z.js";import"./researchProjectHandlers-DROqXieO.js";import"./resetTwoFactorAuthHandlers-EUupWGcG.js";import"./userProfileHandlers-Bw3iSxI_.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useTimeout-gAYlsF9h.js";import"./FullWidthAlert-CBvSjRDH.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-BR0FfL-7.js";import"./createTheme-CyGr1kaY.js";import"./DefaultPropsProvider-DTt0l4rk.js";import"./useSlot-CIMJh2x7.js";import"./useForkRef-CmEb2Hjb.js";import"./createSimplePaletteValueFilter-CwcnoVpf.js";import"./createSvgIcon-oz7RTgz8.js";import"./Close-CkuqRxFY.js";import"./IconButton-ZxELSsuB.js";import"./ButtonBase-B4fAWw7x.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DrTM6r8w.js";import"./Paper-B4UH_OKi.js";import"./useTheme-DyVMMMH4.js";import"./useTheme-XTxZFMsc.js";import"./AlertTitle-1DlITsoz.js";import"./Typography-DxLTsn7U.js";import"./index-msKwl0RH.js";import"./extendSxProp-cYd3bjsj.js";import"./ClickAwayListener-DeMMBI1U.js";import"./getReactElementRef-BgJZi7s_.js";import"./index-B5aouh9C.js";import"./index-C-naQSBy.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-whg3Wx9g.js";import"./Tooltip-B9gDCvk0.js";import"./index-BwAixF8z.js";import"./useControlled-CbdmQ0MQ.js";import"./Popper-Ddcr4dsU.js";import"./useQuery-CnZ9w03v.js";import"./utils-z9MgxIce.js";import"./Link-DGtC6YCJ.js";import"./Collapse-CDal-Uzp.js";import"./tinycolor-Begke6kS.js";import"./Fade-DOQSzISd.js";import"./inputBaseClasses-Bzj-FifI.js";import"./calculateFriendlyFileSize-D9ScsfwE.js";import"./CheckCircleTwoTone-Tw6QUA9Q.js";import"./InfoTwoTone-DJ4aKC-h.js";import"./useMutation-kvK-hPqm.js";import"./dayjs.min-DMEtZJm2.js";import"./chunk-AYJ5UCUI-CYY7MATY.js";import"./Skeleton-BZYpf_eO.js";import"./useInfiniteQuery-DKltOqXO.js";import"./IconSvg-DY93Dde8.js";import"./LayersTwoTone-DdLSL9hA.js";import"./ContentCopyTwoTone-D-3DySwS.js";import"./HelpOutlineTwoTone-Dm6u9ea6.js";import"./ErrorOutlined-BxEBhA4M.js";import"./GetAppTwoTone-CY_bSWSJ.js";import"./InfoOutlined-BP22JG1l.js";import"./PhoneTwoTone-AOqLsl6I.js";import"./DeleteTwoTone-CSBCfUmn.js";import"./getValidReactChildren-BffbAcpu.js";import"./MenuList-CjSvLjyt.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./List-DlP48km1.js";import"./MenuItem-M_OvVeJ3.js";import"./dividerClasses-CtPsuRPR.js";import"./index-CtUJEc90.js";import"./react-Cl87gb8P.js";import"./pickBy-DFAqjguo.js";import"./_baseIndexOf-rBnIfvEs.js";import"./isString-CIDcEY6-.js";import"./_baseIteratee-BiuPdlf7.js";import"./useQueries-BR8CInkQ.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntityBundle-oX1sK8m5.js";import"./ConditionalWrapper-DQFCdyF_.js";import"./debounce-Be36O1Ab.js";import"./KeyboardArrowRight-kTwfmLWe.js";import"./getThemeProps-DRCVkZxN.js";function g(i){const{subscription:p}=i,{data:o}=M(p.objectId),{data:m}=v(o==null?void 0:o.projectId,void 0,{enabled:!!o}),{isSubscribed:a,isLoading:n,toggleSubscribed:e}=h(p.objectId,s.FORUM);let c;return o&&(c=`${j(I.PORTAL_ENDPOINT)}Synapse:${o.projectId}/discussion`),t.jsx(P,{isLoading:n,isSubscribed:a,icon:"dashboard",name:m==null?void 0:m.name,nameHref:c,onToggleSubscribe:e})}try{g.displayName="ForumTopic",g.__docgenInfo={description:"",displayName:"ForumTopic",props:{subscription:{defaultValue:null,description:"",name:"subscription",required:!0,type:{name:"Subscription"}}}}}catch{}function H(i){const{subscription:p}=i,{threadData:o}=C(p.objectId),{isSubscribed:m,isLoading:a,toggleSubscribed:n}=h(p.objectId,s.THREAD);let e;return o&&(e=`${j(I.PORTAL_ENDPOINT)}Synapse:${o.projectId}/discussion/threadId=${p.objectId}`),t.jsx(P,{isLoading:a,isSubscribed:m,icon:"discussion",name:o==null?void 0:o.title,nameHref:e,onToggleSubscribe:n})}try{ThreadTopic.displayName="ThreadTopic",ThreadTopic.__docgenInfo={description:"",displayName:"ThreadTopic",props:{subscription:{defaultValue:null,description:"",name:"subscription",required:!0,type:{name:"Subscription"}}}}}catch{}function S(i){const{subscription:p}=i;switch(p.objectType){case s.FORUM:return t.jsx(g,{subscription:p});case s.THREAD:return t.jsx(H,{subscription:p});default:return console.warn(`Subscription type ${i.subscription.objectType} not supported in UI`),t.jsx(t.Fragment,{})}}try{S.displayName="SubscriptionItem",S.__docgenInfo={description:`Simple discriminator component that maps a {@link Subscription} rendered on the {@link SubscriptionPage } to
a {@link Topic } component`,displayName:"SubscriptionItem",props:{subscription:{defaultValue:null,description:"",name:"subscription",required:!0,type:{name:"Subscription"}}}}}catch{}const d=[{value:"ASC",label:"Date Posted"},{value:"DESC",label:"Most Recent"}];function w(){const[i,p]=b.useState(s.FORUM),[o,m]=b.useState(d[0]),a=b.useId(),n={objectType:i,sortBy:D.CREATED_ON,sortDirection:o.value},{data:e,hasNextPage:c,isFetchingNextPage:f,fetchNextPage:O}=R(n,{staleTime:1/0,select:r=>({pages:r.pages.flatMap(l=>l.results),pageParams:r.pageParams})},[`subscriptionPageFetch_${a}`,n]);return t.jsxs(t.Fragment,{children:[t.jsx(k,{sx:{float:"right"},children:t.jsx(F,{variant:"outlined",options:d.map(r=>r.label),selectedIndex:d.findIndex(r=>r.value===o.value),setSelectedIndex:r=>m(d[r])})}),t.jsxs(A,{sx:{mb:3},value:i,onChange:(r,l)=>{r.stopPropagation(),p(l)},textColor:"secondary",indicatorColor:"secondary",children:[t.jsx(T,{value:s.FORUM,label:"Project Forums"}),t.jsx(T,{value:s.THREAD,label:"Threads"})]}),t.jsx(B,{sx:{gap:.5},children:e==null?void 0:e.pages.map(r=>t.jsx(S,{subscription:r},r.subscriptionId))}),c&&t.jsx($,{variant:"contained",onClick:()=>{O()},disabled:f,sx:{mt:6},children:f?"Loading...":"Load More"})]})}const Hr={title:"Synapse/Following/SubscriptionPage",component:w,parameters:{stack:"mock"}},u={name:"SubscriptionPage",args:{},parameters:{msw:{handlers:{...E(N)}}}};var _,y,x;u.parameters={...u.parameters,docs:{...(_=u.parameters)==null?void 0:_.docs,source:{originalSource:`{
  name: 'SubscriptionPage',
  args: {},
  parameters: {
    msw: {
      handlers: {
        ...getHandlers(MOCK_REPO_ORIGIN)
      }
    }
  }
}`,...(x=(y=u.parameters)==null?void 0:y.docs)==null?void 0:x.source}}};const wr=["Demo"];export{u as Demo,wr as __namedExportsOrder,Hr as default};
