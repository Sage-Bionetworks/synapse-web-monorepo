import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-Cl7iPkP2.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-BfHKecRx.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-57ySimp1.js";import"./SynapseConstants-k8J4G2g0.js";import"./OrientationBanner-Cay0I_Rt.js";import"./index-8ZlaN0KU.js";import"./index-CQ6hJmgW.js";import"./iframe-DBLSlUlM.js";import"./spreadSx-CwcO6WA9.js";import"./react-CekjFg9U.js";import"./FullWidthAlert-CbdaCswA.js";import"./Alert-hAudTaki.js";import"./createTheme-DcluBHDz.js";import"./DefaultPropsProvider-ZI2sxVbZ.js";import"./useSlot-66fkwDAg.js";import"./useForkRef-DooywLql.js";import"./createSimplePaletteValueFilter-oYjRqgE7.js";import"./createSvgIcon-CJYbEqxG.js";import"./Close-CHeVeGkX.js";import"./IconButton-Bh69he5-.js";import"./useTimeout-_fh52LB_.js";import"./ButtonBase-Bov65eTU.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-ASAwFG9e.js";import"./Paper-D-DccQnO.js";import"./useTheme-BGuepDlr.js";import"./useTheme-27YPboVz.js";import"./Stack-BtIxaE9P.js";import"./extendSxProp-YRmzrdHl.js";import"./getThemeProps-DSATpSeZ.js";import"./Box-Cntk2MIO.js";import"./AlertTitle-D24R2e_4.js";import"./Typography-Dm61OQER.js";import"./index-Ci7ktC4R.js";import"./ClickAwayListener-VYYUrldH.js";import"./getReactElementRef-BoHY-GqX.js";import"./index-DGNyRJeG.js";import"./index-CIWwvEWD.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DpHErTTs.js";import"./Tooltip-kPWKAtR8.js";import"./index-DLIdZaB1.js";import"./useControlled-CYPIr_yw.js";import"./Popper-Cpq6kGnG.js";import"./Button-D65AIMBA.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-BLF80Y5p.js";import"./QueryClientProvider-LHOBn88c.js";import"./Link-DPVf6eQF.js";import"./Collapse-B5PXfbL3.js";import"./_baseUniq-C1GjGhSb.js";import"./_Uint8Array-VToj_l7w.js";import"./isArray-CCh7EMNH.js";import"./_getTag-DadTTLKK.js";import"./isEqual-DDdqe_xI.js";import"./merge-BIg5srE9.js";import"./_initCloneObject-DleR7C7U.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-BJT3-mqI.js";import"./inputBaseClasses-DXATOCIJ.js";import"./calculateFriendlyFileSize-BM-0xruH.js";import"./CheckCircleTwoTone-CKcbuZl5.js";import"./InfoTwoTone-yPYIEBIY.js";import"./useMutation-EAVGskWB.js";import"./dayjs.min-SyJWqs4d.js";import"./chunk-AYJ5UCUI-zqOAelV1.js";import"./cloneDeep-BdpZvwEq.js";import"./Skeleton-jZRJXesW.js";import"./SkeletonButton-nz9AKRVi.js";import"./SkeletonInlineBlock-MByo-9se.js";import"./SkeletonTable-BiGLsZlp.js";import"./times-lWFgWeTw.js";import"./toInteger-8aCWWukh.js";import"./isSymbol-KNtqQZzG.js";import"./SkeletonParagraph-rlYLFQuL.js";import"./MarkdownSynapse-2lX_1nnF.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
