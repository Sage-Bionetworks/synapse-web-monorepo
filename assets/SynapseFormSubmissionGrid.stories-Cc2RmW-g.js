import{j as l}from"./jsx-runtime-c_k80k9I.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-BDcBYKRO.js";import{aF as S,M as a}from"./useFiles-Dj-FXM-L.js";import"./OrientationBanner-PjngcMqb.js";import"./index-CFoExgxD.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-Ck9jFART.js";import{S as E}from"./SynapseFormSubmissionGrid-DCz7RmVP.js";import"./mockSchema-BeR4jQYF.js";import"./mockFileEntity-BPi2lEND.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-h8y71P1u.js";import"./mockTeam-DYt6--3y.js";import"./SynapseConstants-CvFa0W_K.js";import"./uniqueId-BV9aGS_k.js";import"./toString-BRFHHJzT.js";import"./isObjectLike-B6QmiGa6.js";import"./iframe-BHwFBJYA.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-DuNHYRKv.js";import"./times-BLbh2K1u.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-CI2Abv_N.js";import"./asyncJobHandlers-P3Kn4QPS.js";import"./BasicMockedCrudService-BlmO80xP.js";import"./cloneDeep-DY4AX9-V.js";import"./_Uint8Array-BQSRlu78.js";import"./_initCloneObject-C_4jir8C.js";import"./_getTag-I-MJ8Vq2.js";import"./isEqual-CUz-YSyh.js";import"./_baseIsEqual-C5r3oqoi.js";import"./mockAnnotationColumns-DaYRneLZ.js";import"./tableQueryHandlers-C4-7Vuob.js";import"./omit-B9V5C2HJ.js";import"./_baseGet-DMy4QP4B.js";import"./isNil-N0U-NUG2.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-Bh7rsJ71.js";import"./_baseFlatten-_QrFmBQR.js";import"./pick--VBiQ2_r.js";import"./_baseSet-CD-B0x0J.js";import"./hasIn-tveCAdNc.js";import"./accessRequirementAclHandlers-rn4c0qMn.js";import"./mockAccessRequirementAcls-BVBAouaq.js";import"./mockAccessRequirements-CfpUgl32.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-BGSRi2W-.js";import"./wikiHandlers-1TexipOw.js";import"./mockWikiPageKey-mav1UYky.js";import"./teamHandlers-elhJArOx.js";import"./dataAccessRequestHandlers-Bnb7hKg4.js";import"./MockResearchProject-DI285z6I.js";import"./mock_discussion-gEj0fPYp.js";import"./fakerUtils-C-rKghqm.js";import"./index-CbNftZ-M.js";import"./mockTableEntity-DZsnfR1w.js";import"./mockFileEntityACLVariants-BW7YQytN.js";import"./entityHandlers-DFt88O-2.js";import"./mockEntity-B_F5VdxF.js";import"./mockEvaluationQueue-BaeNVo16.js";import"./featureFlagHandlers-DMfsnBG2.js";import"./fileHandlers-DEvQhI5m.js";import"./personalAccessTokenHandlers-Hq9mpIQG.js";import"./researchProjectHandlers-CjWoLjsi.js";import"./resetTwoFactorAuthHandlers-D_gjuKuM.js";import"./userProfileHandlers-C4gZ--k-.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-D6TjaZAu.js";import"./FullWidthAlert-BaQWXiCb.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-DKeoXx0b.js";import"./createTheme-BDZE4uMs.js";import"./resolveComponentProps-4D1_Z3Bm.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CfZ3E6CK.js";import"./createSvgIcon-BymX_799.js";import"./DefaultPropsProvider--W6_3ozQ.js";import"./Close-Okesp8jA.js";import"./IconButton-D79m7hl9.js";import"./ButtonBase-BTR6eTk9.js";import"./useTimeout-CbEcjOlk.js";import"./useIsFocusVisible-tWDH5EMD.js";import"./useEventCallback-DUP60CIi.js";import"./Paper-erlyDIEj.js";import"./Stack-B8rIbmjf.js";import"./getThemeProps-sPCIqLtj.js";import"./useTheme-49FIxpUi.js";import"./Box-DdBwyzts.js";import"./AlertTitle-PiK4DqVr.js";import"./Typography-CGh2EmVu.js";import"./useTheme-2ElaYNDV.js";import"./Grow-DLNgfkhR.js";import"./index-DG19zpYB.js";import"./utils-Dn4vLk5n.js";import"./ClickAwayListener-Ci-zadZU.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-q_ZIkbT1.js";import"./index-DW85jSJq.js";import"./useControlled-CU7aBVd1.js";import"./useId-BAuQjYNJ.js";import"./Popper-Wax_LkTx.js";import"./Button-L64LPDJE.js";import"./useQuery-I3Pn_uCs.js";import"./utils-9_iaA6Vu.js";import"./Link-UyBJbg6D.js";import"./Collapse-Dctv52y4.js";import"./tinycolor-Begke6kS.js";import"./Fade-CkJI4qnB.js";import"./Skeleton-BYIof9JZ.js";import"./inputBaseClasses-fwvdd0Ku.js";import"./calculateFriendlyFileSize-C_c7W2g4.js";import"./CheckCircleTwoTone-BC_pon7U.js";import"./InfoTwoTone-CadoO34Q.js";import"./useMutation-CeoIpbsA.js";import"./dayjs.min-tBqVgBg5.js";import"./chunk-AYJ5UCUI-BEV2WUsM.js";import"./index-CnkVhKRA.js";import"./react-B8UeaaI_.js";import"./util-B_BGdMOp.js";import"./WideButton-B9bWr8CV.js";import"./DeleteTwoTone-tluZzFXG.js";import"./createSvgIcon-D1o5kp4j.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-C0zY6jFS.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog--4-5gHgU.js";import"./DialogBase-Beo-FuSa.js";import"./Close-PCyEdKAh.js";import"./HelpPopover-BimzNNpC.js";import"./MarkdownPopover-B8H-elni.js";import"./LightTooltip-Bk-F-zTh.js";import"./MarkdownSynapse-rEAAKujO.js";import"./SkeletonButton-E_XXtAMz.js";import"./SkeletonInlineBlock-CpFq3ioh.js";import"./SkeletonTable-CHN6pOCc.js";import"./SkeletonParagraph-D5-Vxi0g.js";import"./HelpOutlineTwoTone-DZSxc1Fj.js";import"./DialogTitle-C_6aRMkb.js";import"./DialogContent-BNq5CNXy.js";import"./Dialog-DbAFDnFz.js";import"./Modal-B9KJXBSo.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-6uJtDz0N.js";import"./WarningDialog-BKfcCXRG.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
