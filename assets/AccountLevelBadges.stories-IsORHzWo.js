import{g as f}from"./userProfileHandlers-DhOwUVQv.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-K8DYYfbL.js";import{A}from"./AccountLevelBadges-SLSGm4ds.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-CRsUIbQM.js";import"./iframe-DLoU1ahu.js";import"./mockEntity-D0cRroNC.js";import"./mockFileEntity-DT5g8Uky.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-CG36i_3t.js";import"./mockTeam-CteocHrt.js";import"./SynapseConstants-BNqJ1dmQ.js";import"./OrientationBanner-DO3atoak.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-DMGiq-oD.js";import"./index-BWypuEAC.js";import"./spreadSx-CwcO6WA9.js";import"./react-DjBUmadF.js";import"./FullWidthAlert-CRt1fznC.js";import"./Alert-BV3pGEf4.js";import"./createTheme-CTYanVb6.js";import"./DefaultPropsProvider-BDt2e6U1.js";import"./useSlot-Bjs5jEzg.js";import"./useForkRef-BYimg5tu.js";import"./createSimplePaletteValueFilter-DyxFD1HT.js";import"./createSvgIcon-BtjRo1s8.js";import"./Close-TuaEvS9Q.js";import"./IconButton-CG40tOLN.js";import"./useTimeout-CV-UDPnG.js";import"./ButtonBase-B1Aawh7J.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-Cv2RV5mv.js";import"./Paper-CnCPZiGK.js";import"./useTheme-C5bnTO0C.js";import"./useTheme-vH2-3CZY.js";import"./Stack-B3sHXsJB.js";import"./extendSxProp-An3U-zM_.js";import"./getThemeProps-Ds-P6itY.js";import"./Box-BNUP0C4N.js";import"./AlertTitle-Co0RehR7.js";import"./Typography-BuQPwiWH.js";import"./index-B_N18MqX.js";import"./ClickAwayListener-DXEacgiq.js";import"./getReactElementRef-C59rUygw.js";import"./index-Dsh6_7g_.js";import"./index-OIClFg-6.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow--ZE6kIjo.js";import"./Tooltip-LGtZ2wNx.js";import"./index-BTTxMwcY.js";import"./useControlled-zZFQr41i.js";import"./Popper-CqfbaZIs.js";import"./Button-Dcf2Uy6O.js";import"./uniqueId-DalZAxOt.js";import"./toString-sXWj2bS0.js";import"./isArray-OPNH0lK8.js";import"./isSymbol-DlvAnO-7.js";import"./times-IMrrZIta.js";import"./_Uint8Array-BMT3sbmx.js";import"./identity-DKeuBCMA.js";import"./toInteger-4L7jdfco.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-DE-P6w3m.js";import"./QueryClientProvider-C0WTo0Yv.js";import"./Link-CTVAbhge.js";import"./Collapse-Csaq8Kqm.js";import"./_baseUniq-Di1qZggb.js";import"./_getTag-DHdisHvI.js";import"./isEqual-UFGSw-KB.js";import"./merge-CwLris3H.js";import"./_initCloneObject-lij9pG62.js";import"./tinycolor-Begke6kS.js";import"./Fade-D4hRl5lB.js";import"./inputBaseClasses-6-j6zI35.js";import"./calculateFriendlyFileSize-Z2sNf6lN.js";import"./CheckCircleTwoTone-BGkZTGGE.js";import"./InfoTwoTone-DB8Ypec5.js";import"./useMutation-7J5H8WCt.js";import"./dayjs.min-CjfNKo90.js";import"./chunk-AYJ5UCUI-BocGNCD5.js";import"./cloneDeep-BDdpJTPu.js";import"./Skeleton-ZFgYUmdS.js";import"./AccountLevelBadge-D9f9LoHH.js";import"./Card-s_q6wtyB.js";import"./ConfirmationDialog-DRZuyJOo.js";import"./DialogBase-N4MMU6cj.js";import"./Close-Cik96ABW.js";import"./HelpPopover-DbD20uqG.js";import"./MarkdownPopover-C9gpsv_H.js";import"./LightTooltip-l9NCQNlN.js";import"./MarkdownSynapse-DfUFcqb7.js";import"./SkeletonButton-BeNv1vHX.js";import"./SkeletonInlineBlock-BSqi2LGR.js";import"./SkeletonTable-2ZnI4IEP.js";import"./SkeletonParagraph-CAoWenhb.js";import"./HelpOutlineTwoTone-DPGK7R7U.js";import"./DialogTitle-C8gqrWGl.js";import"./DialogContent-B7smN7hP.js";import"./Dialog-Dtf6f6p5.js";import"./Modal-8OUMX6N2.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-BAGHeVaI.js";import"./LoadingScreen-Cr5w4fIw.js";import"./LinearProgress-BoAtZwY0.js";import"./ToastMessage-CQTmbO1I.js";import"./CSSTransition-BmNKFesH.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
