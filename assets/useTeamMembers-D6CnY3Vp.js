import{as as a,aE as m,a9 as y,aD as i,ar as o,hk as d}from"./iframe-DkJtXMGY.js";function M(e,s,n){const{accessToken:u,keyFactory:r}=a();return o({...n,queryKey:r.getIsUserMemberOfTeamQueryKey(e,s),queryFn:()=>y.getIsUserMemberOfTeam(e,s,u)})}function K(e,s,n){const{accessToken:u,keyFactory:r}=a();return o({...n,queryKey:r.getMembershipStatusQueryKey(e,s),queryFn:()=>y.getMembershipStatus(e,s,u)})}function Q(e,s){const{accessToken:n,keyFactory:u}=a();return o({...s,queryKey:u.getAllOpenMembershipInvitationsForUserQueryKey(e),queryFn:()=>y.getAllOpenMembershipInvitationsForUser(e,n)})}function q(e){const{accessToken:s}=a();return m({...e,mutationFn:n=>y.createMembershipInvitation(n,s)})}function I(e){const s=i(),{accessToken:n,keyFactory:u}=a();return m({...e,mutationFn:({teamId:r,userId:t})=>y.addTeamMemberAsAuthenticatedUserOrAdmin(r,t,n),onSuccess:async(r,t,c)=>{e!=null&&e.onSuccess&&e.onSuccess(r,t,c),await Promise.all([s.invalidateQueries({queryKey:u.getMembershipStatusQueryKey(t.teamId,t.userId)}),s.invalidateQueries({queryKey:u.getIsUserMemberOfTeamQueryKey(t.teamId,t.userId)}),s.invalidateQueries({queryKey:u.getTeamMembersQueryKey(t.teamId)}),s.invalidateQueries({queryKey:u.getAllSubmissionTeamsQueryKeys()})])}})}function S(e){const s=i(),{accessToken:n,keyFactory:u}=a();return m({...e,mutationFn:r=>y.createMembershipRequest(r,n),onSuccess:async(r,t,c)=>{if(await s.invalidateQueries({queryKey:u.getMembershipStatusQueryKey(t.teamId,t.userId)}),e.onSuccess)return e.onSuccess(r,t,c)}})}function f(e){const s=i(),{accessToken:n,keyFactory:u}=a();return m({...e,mutationFn:r=>d(r.teamId,r.userId,n),onSuccess:async(r,t,c)=>{await Promise.all([s.invalidateQueries({queryKey:u.getIsUserMemberOfTeamQueryKey(t.teamId,t.userId)}),s.invalidateQueries({queryKey:u.getMembershipStatusQueryKey(t.teamId,t.userId)})]),e!=null&&e.onSuccess&&await e.onSuccess(r,t,c)}})}export{I as a,f as b,M as c,S as d,Q as e,q as f,K as u};
