import{g as f}from"./userProfileHandlers-Bzz_S5lZ.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-00zV7j3M.js";import{A}from"./AccountLevelBadges-Ciuh7vIk.js";import"./VerificationSubmission-DHPhgAH7.js";import"./index-C8K9sEu5.js";import"./OrientationBanner-CW_OwSoZ.js";import"./jsx-runtime-DqkftVdl.js";import"./index-DePaHtiF.js";import"./iframe-BROhmg6M.js";import"./index-s5f8zLZY.js";import"./spreadSx-CwcO6WA9.js";import"./react-ao0sqeqP.js";import"./FullWidthAlert-BxE7qCkE.js";import"./Alert-q_ZdLQQt.js";import"./createTheme-5Fe3luW2.js";import"./resolveComponentProps-B_dOnkEG.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-DxGWz-nP.js";import"./createSvgIcon-BC6UvAwx.js";import"./DefaultPropsProvider-DjeLsGG1.js";import"./Close-ChuplZX6.js";import"./IconButton-BcbjXjc9.js";import"./ButtonBase-Do0JJz1c.js";import"./useTimeout-D5dvr_Gi.js";import"./TransitionGroupContext-DQEZvtFj.js";import"./useIsFocusVisible-DI2M56aP.js";import"./useEventCallback-BZ6D7d5A.js";import"./Paper-CB6CO99j.js";import"./Stack-HiEVvsaJ.js";import"./getThemeProps-f2sadzhq.js";import"./useTheme-U-7hfo9l.js";import"./Box-D9NrrPyX.js";import"./AlertTitle-ChAbcANF.js";import"./Typography-OD-ts1pz.js";import"./useTheme-CTLaU0Ir.js";import"./Grow-BU8iQ-gL.js";import"./index-CBZYBfor.js";import"./utils-CJvWoSDr.js";import"./ClickAwayListener-CUMsr3-e.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-CuUlmnbr.js";import"./index-DXHrkCm3.js";import"./useControlled-BOD8q2oj.js";import"./useId-wERg8hog.js";import"./Popper-Cuj0UtxU.js";import"./Button-CvbUAx7X.js";import"./util-DaH-A7pK.js";import"./mockEntity-Ctzww8h5.js";import"./mockFileEntity-BDUWm-eN.js";import"./StringUtils-Bj0SG9ce.js";import"./mock_file_handle-C2NjfX48.js";import"./mockProject-DbjFEgjZ.js";import"./mockTeam-iJfpgbxr.js";import"./SynapseConstants-DXxtZCNr.js";import"./uniqueId-BG8ok7WD.js";import"./toString-BRV68jLP.js";import"./isObjectLike-BZYvinLn.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BnK3Mv-h.js";import"./times-0aa5VcsZ.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DnVIvjjA.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./useQuery-Cm5Odpzo.js";import"./utils-BjkGJnUz.js";import"./Link-EHhEhz1_.js";import"./Collapse-B-I-lrDJ.js";import"./isNil-Dezvb9P5.js";import"./_Uint8Array-D-I36iIO.js";import"./_baseIsEqual-ByXVEM-G.js";import"./_getTag-BTItrKZg.js";import"./tinycolor-Begke6kS.js";import"./Fade-f--pyCs_.js";import"./Skeleton-B9nMYFge.js";import"./inputBaseClasses-CpJ0CZmE.js";import"./calculateFriendlyFileSize-BkKsHBWw.js";import"./CheckCircleTwoTone-_t8YNrIT.js";import"./InfoTwoTone-CcQ4P4q-.js";import"./useMutation-Du37KsLM.js";import"./isEqual-DMzBEPBa.js";import"./dayjs.min-DwUMv8zl.js";import"./chunk-AYJ5UCUI-CnSKK497.js";import"./cloneDeep-Be3a7qNY.js";import"./_initCloneObject-BDPs-veD.js";import"./merge-CMvw9-qj.js";import"./AccountLevelBadge-BZevt3gq.js";import"./Card-DsnDoijP.js";import"./ConfirmationDialog-Avt7gGCo.js";import"./DialogBase-DZ6ByIGn.js";import"./Close-Bdua2EhZ.js";import"./createSvgIcon-DuxARaEW.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-CaLeSPpe.js";import"./ownerWindow-HkKU3E4x.js";import"./HelpPopover-BpNKGW7F.js";import"./MarkdownPopover-KjmWZSgE.js";import"./LightTooltip-C1nX7MIz.js";import"./MarkdownSynapse-Cs6g-S9w.js";import"./SkeletonButton-DYAGo3CI.js";import"./SkeletonInlineBlock-DrYX2Sn3.js";import"./SkeletonTable-DhrJmZ8y.js";import"./SkeletonParagraph-By1usgnb.js";import"./HelpOutlineTwoTone-BQw6pVym.js";import"./DialogTitle-CrCe8__N.js";import"./DialogContent-CTrVI8tw.js";import"./Dialog-WxLgZsTv.js";import"./Modal-Dgk2qUme.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-DpEFLiLP.js";import"./LoadingScreen-BTcccO1n.js";import"./LinearProgress-Dm4mNZTq.js";import"./ToastMessage-iT0Z2ca7.js";import"./CSSTransition-CRCki49x.js";const Pt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Vt=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Vt as __namedExportsOrder,Pt as default};
