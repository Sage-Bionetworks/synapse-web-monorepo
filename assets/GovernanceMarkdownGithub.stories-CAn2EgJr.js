import{u as o}from"./VerificationSubmission-BDh1zA9f.js";import{g as u,bd as d,be as l,B as f,bf as S,M as O}from"./useFiles-BxcP6yly.js";import"./StringUtils-C95LMFI-.js";import{h as i,H as n}from"./index-Bc1Iij4t.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-BoZaPcF6.js";import"./SynapseConstants-CxL0y1Ph.js";import"./OrientationBanner-B2D9V7kc.js";import"./index-CN27a-T8.js";import"./index-C5xsNgZG.js";import"./iframe-DjJstJjx.js";import"./spreadSx-CwcO6WA9.js";import"./react-C02iEKn1.js";import"./FullWidthAlert-B1NkCeua.js";import"./Alert-CNdyFczj.js";import"./createTheme-x4ryc2Ug.js";import"./DefaultPropsProvider-CwkbiRMZ.js";import"./useSlot-B8IHFzfX.js";import"./useForkRef-DWIqmgSu.js";import"./createSimplePaletteValueFilter-CL52-X8Y.js";import"./createSvgIcon-BrnNN5qG.js";import"./Close-DqDyvys5.js";import"./IconButton-B4vCrkNM.js";import"./useTimeout-D-uIEIeC.js";import"./ButtonBase-DSSoqZCh.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BvSla5A0.js";import"./Paper-CRrJPGQt.js";import"./useTheme-lhY-n5X2.js";import"./useTheme-D3c8EOn8.js";import"./Stack-C2WogMgh.js";import"./useThemeProps-DBr2DVzl.js";import"./getThemeProps-BzelbPlK.js";import"./extendSxProp-Cxj75GXg.js";import"./Box-DfWINr92.js";import"./AlertTitle-BdC4ZB4j.js";import"./Typography-Bj14LD1K.js";import"./index-Dcy6S4kN.js";import"./ClickAwayListener-DAgIiq7F.js";import"./getReactElementRef-C7DXzbxC.js";import"./index-7vxEK90g.js";import"./index-CwtGRN4N.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BJc1AeJd.js";import"./Tooltip-y1vasDyH.js";import"./index-k1TfjJ7z.js";import"./useControlled-DAzrAxdX.js";import"./Popper-DMgncvK7.js";import"./Button-D0nWNt-2.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-Do_i6ApH.js";import"./QueryClientProvider-DUPNZ32L.js";import"./Link-w9o19gyK.js";import"./Collapse-De5mdlYK.js";import"./_baseUniq-Bd92tBU-.js";import"./_Uint8Array-C_rOqdQT.js";import"./isArray-DZzh4s_m.js";import"./_getTag-BB_bRlg1.js";import"./isEqual-AuJseeVw.js";import"./noop-DX6rZLP_.js";import"./merge-BqztFXmQ.js";import"./_initCloneObject-CklytaJV.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-8jyKvWbc.js";import"./inputBaseClasses-BIs4bNY7.js";import"./calculateFriendlyFileSize-BYGBdEDj.js";import"./CheckCircleTwoTone-DGTSwBS2.js";import"./InfoTwoTone-DT8fPbHv.js";import"./useMutation-YpbZurJl.js";import"./dayjs.min-637-zvhS.js";import"./chunk-AYJ5UCUI-ZRV38xHs.js";import"./cloneDeep-nnktIvKW.js";import"./Skeleton-viu--MBo.js";import"./SkeletonButton-D0A1Sui2.js";import"./SkeletonInlineBlock-KDsfqRAz.js";import"./SkeletonTable-C1Iv3g9O.js";import"./times-CmKNeOwy.js";import"./toInteger-DHDQRcmg.js";import"./isSymbol-uuR4lmiZ.js";import"./SkeletonParagraph-B5XR2TR6.js";import"./MarkdownSynapse-2fzaZ2E8.js";import"./Container-HGlm_yGD.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Qr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Xr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Xr as __namedExportsOrder,Qr as default};
