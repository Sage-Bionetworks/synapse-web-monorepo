import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{C as re}from"./ConfirmCloseWithoutSavingDialog-BJFEp9a0.js";import{m as oe,w as ae,bq as ce,am as k,g as le,B as de,bj as q}from"./useFiles-dk1thily.js";import{E as ue}from"./VerificationSubmission-16RBrwfH.js";import{e as L,c as pe}from"./StringUtils-B_EIkN_W.js";import"./OrientationBanner-D437S5nk.js";import{r as l}from"./index-DUdYTmGT.js";import{b as fe,A as me,u as he}from"./useEntityBundle-bHrL337-.js";import{C as ge}from"./ConfirmationDialog-BJMlr0hU.js";import{d as W}from"./ToastMessage-DAqYurw_.js";import{a0 as ye,a as Ie,P as N,o as Ae}from"./SynapseConstants-KeGsajGR.js";import{f as Se,g as Ce,h as Ee,i as be}from"./useEntity-D8sI6XEh.js";import{r as _e}from"./AccessControlListUtils-C23Gx7wU.js";import{a as Le,A as Ne}from"./AclEditor-BJGSiMMI.js";import{u as ve}from"./useUpdateAcl-Cbk3GgDG.js";import{F as Te}from"./FullWidthAlert-B3oyLgJH.js";import{I as je}from"./IconSvg-510h_Bdr.js";import{T as S}from"./Typography-C2z_Zh6j.js";import{B as H}from"./Button-BR3jAR33.js";import{u as we}from"./useGetEntityHeaders-DnEA1WM8.js";import{E as M}from"./EntityLink-C8Y2wJ40.js";import{L as B}from"./Link-DFKa6a8_.js";import{O as xe}from"./OpenData-CLorA3z-.js";import{u as Pe}from"./useMessage-ChPSq9Fa.js";import{c as De}from"./UserBadge-BiOZpEEj.js";import{S as Ue}from"./Stack-Bo4LyGjf.js";import{A as Re}from"./Alert-moQJ5G_4.js";import{n as Oe}from"./useQuery-SO-6-VdB.js";function Ge(t,s){return t?s?` (${t})`:t:""}function Ve(t,s,o){let n="",i=!1;return t&&(n+=t.trim(),i=!0),s&&(n+=" "+s.trim(),i=!0),n+=Ge(o,i),n}function ke(t){return Ve(t.firstName,t.lastName,t.userName)}const qe="Create local sharing settings",He="Delete local sharing settings";function T(t){const{isInherited:s,setIsInherited:o}=t;return s?e.jsxs("div",{children:[e.jsx(S,{variant:"body1",sx:{mt:2,mb:1},children:"Sharing settings are initially inherited from the parent folder or project by default. To customize settings for a specific file, folder, or table, you must create and adjust local sharing settings."}),e.jsx(H,{variant:"contained",size:"small",color:"success",startIcon:e.jsx(je,{icon:"add",wrap:!1}),onClick:()=>o(!1),children:qe})]}):e.jsxs("div",{children:[e.jsx(S,{variant:"body1",sx:{mt:2,mb:1},children:"The sharing settings will be inherited from the parent folder or project if local sharing settings are deleted."}),e.jsx(H,{variant:"outlined",size:"small",color:"error",onClick:()=>o(!0),children:He})]})}try{T.displayName="CreateOrDeleteLocalSharingSettingsButton",T.__docgenInfo={description:"",displayName:"CreateOrDeleteLocalSharingSettingsButton",props:{isInherited:{defaultValue:null,description:"",name:"isInherited",required:!0,type:{name:"boolean"}},setIsInherited:{defaultValue:null,description:"",name:"setIsInherited",required:!0,type:{name:"(isInherited: boolean) => void"}}}}}catch{}function j(t){const{isProject:s,isInherited:o,isAfterUpload:n=!1,benefactorId:i}=t,{data:u}=we(i,void 0,{enabled:!!i});return n?e.jsxs(e.Fragment,{children:[e.jsxs(S,{variant:"body1",children:["Currently, the sharing settings are inherited from the"," ",u?L(pe(u.type)).toLowerCase():"container"," ","named",i?e.jsxs(e.Fragment,{children:[" ",e.jsx(M,{entity:i})," "]}):"",". If you wish to customize settings for a particular file, folder, or table, you must establish ",e.jsx("strong",{children:"Local Sharing Settings"})," to make modifications."]}),e.jsxs(S,{variant:"body1",children:["After uploading, choose the file you want to customize sharing settings for, then navigate to File Tools >"," ",e.jsx(B,{href:"https://help.synapse.org/docs/Sharing-Settings,-Permissions,-and-Conditions-for-Use.2024276030.html",children:"File Sharing Settings"}),"."]})]}):s?e.jsx(S,{variant:"body1",children:"The sharing settings shown below apply to this project and are inherited by all project contents unless local sharing settings have been set."}):o?e.jsxs(S,{variant:"body1",children:["The sharing settings shown below are currently being inherited"," ",i?e.jsxs(e.Fragment,{children:["from ",e.jsx(M,{entity:i})," "]}):"","and cannot be modified here."]}):e.jsxs(S,{variant:"body1",children:["The local sharing settings shown below are ",e.jsx("strong",{children:"not"})," being inherited from a parent resource."]})}try{j.displayName="InheritanceMessage",j.__docgenInfo={description:"",displayName:"InheritanceMessage",props:{isProject:{defaultValue:null,description:"",name:"isProject",required:!0,type:{name:"boolean"}},isInherited:{defaultValue:null,description:"",name:"isInherited",required:!0,type:{name:"boolean"}},isAfterUpload:{defaultValue:null,description:"",name:"isAfterUpload",required:!1,type:{name:"boolean"}},benefactorId:{defaultValue:null,description:"",name:"benefactorId",required:!1,type:{name:"string"}}}}}catch{}function Me(t,s,o,n){const i=s.some(r=>t===r.principalId),u=o.isIndividual,h=String(t)===n,f=ye.includes(t);return!i&&u&&!h&&!f}function Fe(t){const{subject:s,body:o,initialResourceAccessList:n,newResourceAccessList:i}=t,{data:u,isLoading:h}=oe(),{data:f,isLoading:r}=De(i.map(m=>String(m.principalId))),y=h||r,{mutate:p,isPending:a}=Pe({onError:m=>{W(`New users couldn't be notified: ${m.reason}`)}});return{sendNotification:l.useCallback(()=>{if(y){console.error("Attempted to send notification before user profile or user group headers were loaded. This should never happen.");return}const m=i.filter(g=>{const d=f.find(c=>c.ownerId===String(g.principalId));return Me(g.principalId,n,d,u.ownerId)}).map(g=>String(g.principalId));m.length>0&&p({subject:s,body:o,recipients:m})},[o,u,n,y,i,p,s,f]),isPending:a,isLoading:y}}const We=["CAN_VIEW","CAN_DOWNLOAD","CAN_EDIT","CAN_EDIT_DELETE","CAN_ADMINISTER"];function Be(t){return`${t} (shared on Synapse)`}function $e(t,s){return`${ke(t)} has shared an item with you on Synapse:
${le(de.PORTAL_ENDPOINT)}Synapse:${s}`}function ze(t,s,o){return!t||s?!1:n=>{const i=o.ownerId===String(n.principalId),u=n.principalId===N;return!(i||u)}}function Ye(t,s,o){return!t||s?!1:n=>o.ownerId===String(n.principalId)?!1:t}function Ke(t){return s=>{if(s.principalId===N)return t?q.CAN_DOWNLOAD:q.CAN_VIEW}}const w=l.forwardRef(function(s,o){const{entityId:n,onCanSaveChange:i,onUpdateSuccess:u,isAfterUpload:h=!1}=s,{data:f}=ce(),{data:r}=fe(n,void 0,me,{staleTime:1/0}),y=ue.PROJECT==r.entityType,{data:p}=Se(r.entity.parentId,{staleTime:1/0}),a=r.benefactorAcl.resourceAccess,E=l.useMemo(()=>(p==null?void 0:p.resourceAccess)??[],[p]),m=r.permissions.canChangePermissions,g=r.permissions.isEntityOpenData,d=r.benefactorAcl.id!=n,[c,x]=l.useState(d),[P,$]=l.useState(!1),[D,z]=l.useState(),{resourceAccessList:I,setResourceAccessList:b,addResourceAccessItem:U,updateResourceAccessItem:Y,removeResourceAccessItem:K,resetDirtyState:C}=ve({initialResourceAccessList:a});l.useEffect(()=>{a&&(C(),b([...a]))},[a,C,b]),l.useEffect(()=>{C(),x(d)},[d,C]),l.useEffect(()=>{d==c?b(a):c&&b(E),C()},[d,a,E,C,b,c]);const J=I.some(A=>[Ie,N,Ae].includes(A.principalId)),{sendNotification:Q,isLoading:X,isPending:Z}=Fe({subject:Be(r.entity.name||""),body:$e(f,n),initialResourceAccessList:a,newResourceAccessList:I}),v={onSuccess:()=>{P&&Q(),u()},onError:A=>{z(A)}},{mutate:R,isPending:ee}=Ce(v),{mutate:O,isPending:te}=Ee(v),{mutate:G,isPending:se}=be(v),ne=ee||te||se||Z,V=l.useMemo(()=>d!=c||!_e(a,I),[a,d,c,I]),_=V||X||ne,ie=V&&h;return l.useEffect(()=>{i(_)},[i,_]),l.useImperativeHandle(o,()=>({save(){_?d!=c?c?G(n):R({id:n,resourceAccess:I}):O({...r.accessControlList,resourceAccess:I}):console.error("EntityAclEditor: save() called but canSave is false")}}),[_,R,G,r,n,d,O,c,I]),e.jsxs(Ue,{sx:{gap:2},children:[e.jsx(xe,{isOpenData:g,isPublic:J,currentUserCanUpdateSharingSettings:m}),e.jsx(j,{isProject:y,isInherited:c,benefactorId:c?p==null?void 0:p.id:n,isAfterUpload:h}),ie&&e.jsx(Te,{isGlobal:!1,variant:"warning",title:`Edits will affect settings of entire ${L(r==null?void 0:r.entityType).toLowerCase()}.`,description:e.jsxs(e.Fragment,{children:[e.jsxs("p",{children:["Editing the settings here will impact the sharing settings for all files and folders within this"," ",L(r==null?void 0:r.entityType).toLowerCase(),", not just the ones you've recently uploaded."]}),e.jsxs("p",{children:["View the instructions above for setting your"," ",e.jsx(B,{href:"https://help.synapse.org/docs/Sharing-Settings,-Permissions,-and-Conditions-for-Use.2024276030.html",target:"_blank",children:"Local Sharing Settings"}),"."]})]})}),e.jsx(Ne,{isInherited:c,canEdit:ze(m,c,f),canRemoveEntry:Ye(m,c,f),resourceAccessList:I,availablePermissionLevels:We,emptyText:"",displayedPermissionLevelOverride:Ke(g),onAddPrincipalToAcl:A=>{A===N?U(A,k("CAN_VIEW")):U(A,k("CAN_DOWNLOAD"))},updateResourceAccessItem:Y,removeResourceAccessItem:K,showNotifyCheckbox:!0,notifyCheckboxValue:P,onNotifyCheckboxChange:$,showAddRemovePublicButton:!0}),!h&&!y&&r.permissions.canEnableInheritance&&e.jsx(T,{isInherited:c,setIsInherited:x}),D&&e.jsx(Re,{severity:"error",children:D.message})]})}),Je=l.forwardRef(function(s,o){return e.jsx(ae,{children:e.jsx(l.Suspense,{fallback:e.jsx(Le,{}),children:e.jsx(w,{...s,ref:o})})})});try{w.displayName="EntityAclEditor",w.__docgenInfo={description:"",displayName:"EntityAclEditor",props:{entityId:{defaultValue:null,description:"The ID of the entity on which to view/edit the ACL. Note that the ACL may actually belong to an entity ancestor (benefactor).",name:"entityId",required:!0,type:{name:"string"}},onCanSaveChange:{defaultValue:null,description:"Invoked when the user can/cannot save the pending changes.",name:"onCanSaveChange",required:!0,type:{name:"(canSaveChanges: boolean) => void"}},onUpdateSuccess:{defaultValue:null,description:"Invoked when changes are successfully made.",name:"onUpdateSuccess",required:!0,type:{name:"() => void"}},isAfterUpload:{defaultValue:null,description:`Special case to show specific copy and allow changes to an inherited ACL immediately after a file is uploaded.
Note that if this is true, the entityId should be the ID of the folder or project that is the benefactor of the newly uploaded file(s)
@defaultValue false`,name:"isAfterUpload",required:!1,type:{name:"boolean"}}}}}catch{}const Qe=`Sharing settings determine who can access your content, and what kind of access they have. Choose people/teams and define their level of access below.

_Only Administrators can add, delete, or change access levels for other people._`,Xe="https://help.synapse.org/docs/Sharing-Settings,-Permissions,-and-Conditions-for-Use.2024276030.html";function F(t){var d;const{entityId:s,open:o,onUpdateSuccess:n=Oe,onClose:i,isAfterUpload:u=!1}=t,[h,f]=l.useState(!1),[r,y]=l.useState(!1),p=l.useRef(null),{data:a}=he(s),E=a!=null&&a.entityType?L(a==null?void 0:a.entityType):"",m=(d=a==null?void 0:a.permissions)==null?void 0:d.canChangePermissions;function g(){r?f(!0):i()}return e.jsxs(e.Fragment,{children:[e.jsx(re,{open:h,onCancel:()=>{f(!1)},onConfirm:()=>{f(!1),i()}}),e.jsx(ge,{title:`${E} Sharing Settings`.trim(),onCancel:g,open:o,maxWidth:"md",titleHelpPopoverProps:{markdownText:Qe,helpUrl:Xe},content:e.jsx(Je,{ref:p,entityId:s,onCanSaveChange:c=>y(c),onUpdateSuccess:()=>{W("Permissions were successfully saved to Synapse","info"),n(),i()},isAfterUpload:u}),onConfirm:c=>{c.preventDefault(),p.current.save()},confirmButtonProps:{children:m?"Save":"OK",disabled:!r}})]})}try{F.displayName="EntityAclEditorModal",F.__docgenInfo={description:"",displayName:"EntityAclEditorModal",props:{entityId:{defaultValue:null,description:"",name:"entityId",required:!0,type:{name:"string"}},open:{defaultValue:null,description:"",name:"open",required:!0,type:{name:"boolean"}},onUpdateSuccess:{defaultValue:null,description:"",name:"onUpdateSuccess",required:!1,type:{name:"() => void"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}},isAfterUpload:{defaultValue:null,description:"",name:"isAfterUpload",required:!1,type:{name:"boolean"}}}}}catch{}export{F as E};
