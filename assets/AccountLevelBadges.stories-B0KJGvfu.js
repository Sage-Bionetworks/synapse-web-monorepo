import{g as f}from"./userProfileHandlers-BbfFYTA2.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-Ah-QMMVe.js";import{A}from"./AccountLevelBadges-Cc8QQQ0g.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-CrP_BStR.js";import"./iframe-CXAxgruz.js";import"./mockEntity-BeF8xkXy.js";import"./mockFileEntity-D3grX0rV.js";import"./StringUtils-C95LMFI-.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-Caq71aC-.js";import"./mockTeam-CopIhJ8Q.js";import"./SynapseConstants-XsXCMBgO.js";import"./OrientationBanner-DfVgOy4M.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-BWJnohk0.js";import"./index-Rd2swjmm.js";import"./spreadSx-CwcO6WA9.js";import"./react-BApqYDyB.js";import"./FullWidthAlert-BmqfxTfb.js";import"./Alert-CCZCxDnF.js";import"./createTheme-TuqmvCHd.js";import"./DefaultPropsProvider-BXgXJOYE.js";import"./useSlot-Dkzr42VA.js";import"./useForkRef-C6Hxgw1c.js";import"./createSimplePaletteValueFilter-I39MDwlM.js";import"./createSvgIcon-C9iQk-bv.js";import"./Close-DCDeVnbe.js";import"./IconButton-CyqRcr44.js";import"./useTimeout-B1Gaupyv.js";import"./ButtonBase-SlYjLBEH.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DePpf9Xr.js";import"./Paper-BfdEPQLJ.js";import"./useTheme-COUAZuoX.js";import"./useTheme-D5J_Lubc.js";import"./Stack-BgMCCB8s.js";import"./useThemeProps-CsD4iJ62.js";import"./getThemeProps-C7aU0N0h.js";import"./extendSxProp-BEqNfaz4.js";import"./Box-C1rpSzmp.js";import"./AlertTitle-DigLp6pg.js";import"./Typography-BMdAKFRJ.js";import"./index-CNp3TF0s.js";import"./ClickAwayListener-BukZ-mWk.js";import"./getReactElementRef-C70_vEbO.js";import"./index-BnG4WIQw.js";import"./index-BdU_PVcS.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-frQ6Hdr3.js";import"./Tooltip-Bodc1hDc.js";import"./index-eFiUvJZl.js";import"./useControlled-DV9JfbO_.js";import"./Popper-B_NbVk8A.js";import"./Button-BbbnNSgV.js";import"./uniqueId-CQkmX5En.js";import"./toString-BBUCQoOW.js";import"./isArray-BKjPFGFw.js";import"./isSymbol-Bqq76GQu.js";import"./times-Dv-CFPqs.js";import"./_Uint8Array-DiPMYHJc.js";import"./identity-DKeuBCMA.js";import"./toInteger-S3CGaVI5.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-xEUhumnM.js";import"./QueryClientProvider-CKp6Cdu0.js";import"./Link-DJSxCMVl.js";import"./Collapse-Djxal_Co.js";import"./_baseUniq-DPC7unBD.js";import"./_getTag-B97qJZKn.js";import"./isEqual-CTDb6a_A.js";import"./noop-DX6rZLP_.js";import"./merge-Bi0YVhuS.js";import"./_initCloneObject-Du3oUuAw.js";import"./tinycolor-Begke6kS.js";import"./Fade-Dr4GrnsL.js";import"./inputBaseClasses-BUA8z3Qv.js";import"./calculateFriendlyFileSize-DFvfx4N-.js";import"./CheckCircleTwoTone-C7oNrQEJ.js";import"./InfoTwoTone-BlOTsixa.js";import"./useMutation-CCZv9b7z.js";import"./dayjs.min-HpAO55uO.js";import"./chunk-AYJ5UCUI-CQrmzzWS.js";import"./cloneDeep--SZltrec.js";import"./Skeleton-BgzeM125.js";import"./AccountLevelBadge-CrhrNY16.js";import"./Card-B_5qPwDR.js";import"./ConfirmationDialog-CodoCTR_.js";import"./DialogBase-toTe1Iyh.js";import"./Close-7wIl6HMF.js";import"./HelpPopover-CnwkVhEk.js";import"./MarkdownPopover-Dde9fKco.js";import"./LightTooltip-DYcJYOC8.js";import"./MarkdownSynapse-C-stTAs1.js";import"./SkeletonButton-BHdzXUDX.js";import"./SkeletonInlineBlock-DmDy72wJ.js";import"./SkeletonTable-BcSafx_S.js";import"./SkeletonParagraph-QM-ftTqD.js";import"./HelpOutlineTwoTone-DN5z1yyd.js";import"./Dialog-JAdOIt58.js";import"./DialogActions-D5mlWbHO.js";import"./Modal-BYs5wk8R.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-CXVt1Wd7.js";import"./DialogContent-RxoHsOqJ.js";import"./DialogTitle-CGu6fB9h.js";import"./LoadingScreen-9P7SsoST.js";import"./LinearProgress-DQJkWatN.js";import"./ToastMessage-BE-2DKTt.js";import"./CSSTransition-BeafbKVl.js";const kt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Ut=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Ut as __namedExportsOrder,kt as default};
