import{g as f}from"./userProfileHandlers-DnB58Rub.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-CBpHv58P.js";import{A}from"./AccountLevelBadges-sqvItuRJ.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-ChfRFONg.js";import"./iframe-Cv08yFa4.js";import"./mockEntity-DUWgi0j1.js";import"./mockFileEntity-kTMsnbXa.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-BOU7IRg0.js";import"./mockTeam-B7jMHZE2.js";import"./SynapseConstants-BB8wbkbM.js";import"./OrientationBanner-Du3f-tR9.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-Fm8jQeAM.js";import"./index-BtWix9sQ.js";import"./spreadSx-CwcO6WA9.js";import"./react-BlbjaeUH.js";import"./FullWidthAlert-BnEnBl4x.js";import"./Alert-DVtdStBt.js";import"./createTheme-ktoUkPej.js";import"./DefaultPropsProvider-BXNHIkBI.js";import"./useSlot-DKWeBjnc.js";import"./useForkRef-BuSSinlC.js";import"./createSimplePaletteValueFilter-CnmFT5tX.js";import"./createSvgIcon-HzOZLsjw.js";import"./Close-BVcsR9b3.js";import"./IconButton-CZsUpVAN.js";import"./useTimeout--jObxLEa.js";import"./ButtonBase-CgmUOH-l.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-E03wEDwK.js";import"./Paper-Cw0PaRlC.js";import"./useTheme-D-5USdIe.js";import"./useTheme-CuAibK35.js";import"./Stack-BeDeiKwc.js";import"./extendSxProp-UwSZzXSO.js";import"./getThemeProps-BWNd5nOj.js";import"./Box-DuA_Yce2.js";import"./AlertTitle-Dv_TOEDI.js";import"./Typography-B226LmTj.js";import"./index-DEPF9eb4.js";import"./ClickAwayListener-BNCBCfT8.js";import"./getReactElementRef-Da_aLcHY.js";import"./index-B2f0J6Vc.js";import"./index-CzUAW5xC.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-CYCPiNwF.js";import"./Tooltip-DmIpRQZQ.js";import"./index-cY0kajKP.js";import"./useControlled-Ce6JMIHi.js";import"./Popper-0EWmF52X.js";import"./Button-CQOwTSmt.js";import"./uniqueId-DJ0Hwc_g.js";import"./toString-BoO405QA.js";import"./isArray-B3BvSCZr.js";import"./isSymbol-tqL8RBQO.js";import"./times-cSS90Xer.js";import"./_Uint8Array-DlN12aa0.js";import"./identity-DKeuBCMA.js";import"./toInteger-D-O9-r00.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-D-yII9Pz.js";import"./QueryClientProvider-DDjkFc3A.js";import"./Link-CzF4559g.js";import"./Collapse-Bz60PVFd.js";import"./_baseUniq-j_CNo3xg.js";import"./_getTag-BkVkr5Zs.js";import"./isEqual-B2VBGXuO.js";import"./merge-Cvx1cDVZ.js";import"./_initCloneObject-M-LN7Wl9.js";import"./tinycolor-Begke6kS.js";import"./Fade-gDQRZwXb.js";import"./inputBaseClasses-CJII4L4B.js";import"./calculateFriendlyFileSize-Auh6VuaX.js";import"./CheckCircleTwoTone-juGziiOy.js";import"./InfoTwoTone-CHYqAfpV.js";import"./useMutation-onc65qmw.js";import"./dayjs.min-DmHnQHi3.js";import"./chunk-AYJ5UCUI-d_EWPP8k.js";import"./cloneDeep-mpSPLoHa.js";import"./Skeleton-BB8Tg6m6.js";import"./AccountLevelBadge-drU8S39v.js";import"./Card-96vhP0BH.js";import"./ConfirmationDialog-CEIJCix4.js";import"./DialogBase-CYll0u5G.js";import"./Close-kPTDx0pN.js";import"./HelpPopover-DSnck3xG.js";import"./MarkdownPopover-DKXGokVo.js";import"./LightTooltip-DgipfUyR.js";import"./MarkdownSynapse-Bs_NhmPW.js";import"./SkeletonButton-DHHySF3U.js";import"./SkeletonInlineBlock-BQZvMyJy.js";import"./SkeletonTable-BDeiFL3I.js";import"./SkeletonParagraph-CnajRI0l.js";import"./HelpOutlineTwoTone-CnxbLyIJ.js";import"./DialogTitle-DQxl5apB.js";import"./DialogContent-xkKEA4cT.js";import"./DialogActions-DZlhc2tb.js";import"./Dialog-Dc4h0Skx.js";import"./Modal-DuaGWbHi.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-CLmihgfm.js";import"./LoadingScreen-BFbYGMOF.js";import"./LinearProgress-A_d9EDE1.js";import"./ToastMessage-BX5LsO3m.js";import"./CSSTransition-jWS9ErIX.js";const St={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Et=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Et as __namedExportsOrder,St as default};
