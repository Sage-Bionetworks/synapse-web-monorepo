import{j as l}from"./jsx-runtime-BZeBjSIS.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-CcS1e_D0.js";import{aF as S,M as a}from"./useFiles-Dzh-xGba.js";import"./OrientationBanner-DELzGaI_.js";import"./index-CjoTohT0.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-D_s-PUqw.js";import{S as E}from"./SynapseFormSubmissionGrid-A82tYyNf.js";import"./mockSchema-B4mBXiw5.js";import"./mockFileEntity-Cjmoa73E.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-ClB6iJQu.js";import"./mockTeam-BvGPFK8x.js";import"./SynapseConstants-DV83Gi-b.js";import"./uniqueId-CXvGH3bE.js";import"./toString-z4n4XpTO.js";import"./isObjectLike-CrwNC6oF.js";import"./iframe-CvhAkLtT.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BRnPZc8c.js";import"./times-De0aD8Xw.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-D929D5Ls.js";import"./asyncJobHandlers-CjEq2ZZE.js";import"./BasicMockedCrudService-KvhIBzMZ.js";import"./cloneDeep-DCOcf-ad.js";import"./_Uint8Array--_t6qXLg.js";import"./_initCloneObject-Cq-aANJ9.js";import"./_getTag-CKpP1EoQ.js";import"./isEqual-qdpfjJTj.js";import"./_baseIsEqual-DtJNdB66.js";import"./mockAnnotationColumns-CK5qvJnW.js";import"./tableQueryHandlers-CIMt0T5s.js";import"./omit-BOQpQvDH.js";import"./_baseGet-BW17bdLT.js";import"./isNil-D3yHmM32.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-D2stCHL9.js";import"./_baseFlatten-DUC-xbdY.js";import"./pick-DFwHxUW7.js";import"./_baseSet-DJ6hS79f.js";import"./hasIn-DIo0iklX.js";import"./accessRequirementAclHandlers-DBYcPvzK.js";import"./mockAccessRequirementAcls-BuC37kgD.js";import"./mockAccessRequirements-OIzRHhiE.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-CPXHPgP-.js";import"./wikiHandlers-D5laes7a.js";import"./mockWikiPageKey-DUEn9CDW.js";import"./teamHandlers-CvdheG3n.js";import"./dataAccessRequestHandlers-CVgQ7WcV.js";import"./MockResearchProject-BYYNi226.js";import"./mock_discussion-DuhAVHr1.js";import"./fakerUtils-BmyOexQY.js";import"./index-DzAlerjc.js";import"./mockTableEntity-B80uhv-r.js";import"./mockFileEntityACLVariants-CyXTuHY4.js";import"./entityHandlers-D5LW7Ixk.js";import"./mockEntity-BxvCziLe.js";import"./mockEvaluationQueue-BFWX26AA.js";import"./featureFlagHandlers-BBXYmMN-.js";import"./fileHandlers-wdQbAhoA.js";import"./personalAccessTokenHandlers-B8mq4Hiu.js";import"./researchProjectHandlers-BqbtOaI8.js";import"./resetTwoFactorAuthHandlers-BZ6lIGxg.js";import"./userProfileHandlers-BlgYCzDQ.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-UobnCySz.js";import"./FullWidthAlert-BXqxc3wv.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-7_PfCLqB.js";import"./createTheme-bwx9K6ts.js";import"./resolveComponentProps-a0-4iTOu.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-D4KURWw8.js";import"./createSvgIcon-DbCE1SVw.js";import"./DefaultPropsProvider-DUfDTxF6.js";import"./Close-CimlcXQB.js";import"./IconButton-C6l0SFmN.js";import"./ButtonBase-BbwScQV5.js";import"./useTimeout-CVOpskps.js";import"./useIsFocusVisible-BO1LLD9d.js";import"./useEventCallback-Cf7PpRR2.js";import"./Paper-BYyNkBER.js";import"./Stack-B020NLmB.js";import"./getThemeProps-BKFu32XS.js";import"./useTheme-SJCcizRe.js";import"./Box-DHzWNABX.js";import"./AlertTitle-Dgp4KesF.js";import"./Typography-DUG2FEmz.js";import"./useTheme-uJlIsAiP.js";import"./Grow-x5lwJPlc.js";import"./index-DTVgpHag.js";import"./utils-CAcyHLoV.js";import"./ClickAwayListener-Dt9keXb4.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-CLFxhQMN.js";import"./index-BH5wt59E.js";import"./useControlled-Cbsj5wQj.js";import"./useId-ByMtCpEj.js";import"./Popper-DsfBWyJe.js";import"./Button-DMakyqZH.js";import"./useQuery-DnQsqcrx.js";import"./utils-DH5Oqlgj.js";import"./Link-Y75nS1QX.js";import"./Collapse-ffc1sN3U.js";import"./tinycolor-Begke6kS.js";import"./Fade-BuGhOS_y.js";import"./Skeleton-BcT1rE-U.js";import"./inputBaseClasses-DPMPLyNE.js";import"./calculateFriendlyFileSize-9wUeoNJq.js";import"./CheckCircleTwoTone-UctgIY4f.js";import"./InfoTwoTone-DIz8M3OP.js";import"./useMutation-C2yIdTsq.js";import"./dayjs.min-D6B11bIY.js";import"./chunk-AYJ5UCUI-BI5gnHbm.js";import"./index-CZ6nZZM5.js";import"./react-B_ep3ieK.js";import"./util-DJyy0RN6.js";import"./WideButton-DLwmyHxr.js";import"./DeleteTwoTone-DPU8M01P.js";import"./createSvgIcon-Dj-wH0x2.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-D2R7xU9B.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-BA7yNn1-.js";import"./DialogBase-CkABauaz.js";import"./Close-JzvEvioB.js";import"./HelpPopover-CYRcYlol.js";import"./MarkdownPopover-BHaBsnFx.js";import"./LightTooltip-BhYVFK-1.js";import"./MarkdownSynapse-CvB7Heat.js";import"./SkeletonButton-BEnTmZDa.js";import"./SkeletonInlineBlock-eDPtkaaD.js";import"./SkeletonTable-C_uULwMl.js";import"./SkeletonParagraph-DkXoiRal.js";import"./HelpOutlineTwoTone-CLncRXxx.js";import"./DialogTitle-ZYngU81f.js";import"./DialogContent-VSp4edc4.js";import"./Dialog-fb7Cl-bg.js";import"./Modal-DNKhx0Xq.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-uvLePzPc.js";import"./WarningDialog-BArOBFnT.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
