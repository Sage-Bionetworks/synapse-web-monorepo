import{l as u}from"./index-DN6gFMZq.js";import{g as A}from"./entityHandlers-Bqua5hrd.js";import{g as $,a as w}from"./userProfileHandlers-Cc0DSMy6.js";import{g as H,B as R}from"./getEndpoint-CjoHA800.js";import{c as P}from"./accessRequirementHandlers-Bm8HgoHb.js";import{b as M}from"./MockSubmission-DK1LFmDp.js";import{g as C}from"./dataAccessRequestHandlers-CrfZQgch.js";import{g as N}from"./researchProjectHandlers-BMRkk9gk.js";import{g as U}from"./fileHandlers-BuCrS2TV.js";import{bq as j,br as y,bs as B,bt as F,bu as _,bv as L}from"./SynapseClient-L06ywchd.js";import{a2 as d,a0 as h}from"./index-CdAyn5Hz.js";import{m as T,a as E}from"./mock_discussion-B5MfePxt.js";import{M as m}from"./mock_user_profile-DyzXylki.js";import{m as O}from"./mockProject-DJkTbJc6.js";import{B as D}from"./BasicMockedCrudService-DJLIVP-i.js";import{f as S}from"./fakerUtils-JZNSDtdI.js";import{c as G,b as V,a as q}from"./tableQueryHandlers-DPm9w7I5.js";import{a as g}from"./mockEvaluationQueue-BiYUFHwS.js";import{M as K}from"./mockAnnotationColumns-B09qmAom.js";import{g as W}from"./personalAccessTokenHandlers-B3mXc4pW.js";import{g as X,a as Y}from"./teamHandlers--knuxQV9.js";import{g as z}from"./accessRequirementAclHandlers-CaOYSe_V.js";import{g as J}from"./resetTwoFactorAuthHandlers-3E7SOpH3.js";const Q=new D({initialData:T,idField:"id",autoGenerateId:!0}),I=new D({initialData:E,idField:"id",autoGenerateId:!0});function Z(t,s){return I.getMany(r=>r.forumId===t).filter(r=>{switch(s){case d.NO_FILTER:return!0;case d.DELETED_ONLY:return r.isDeleted;case d.EXCLUDE_DELETED:return!r.isDeleted}})}function x(t){return[u.rest.get(`${t}${j}/:id`,async(s,r,e)=>{let o=404,a={reason:`MSW could not find a mock forum object with ID ${s.params.id}`};const n=Q.getOneById(s.params.id);return n&&(o=200,a=n),r(e.status(o),e.json(a))}),u.rest.get(`${t}${y}/:id`,async(s,r,e)=>{let o=404,a={reason:`MSW could not find a mock discussion thread bundle object with ID ${s.params.id}`};s.params.id==="messageUrl"&&(a={reason:"GET /thread/messageUrl is not yet implemented"});const n=I.getOneById(s.params.id);return n&&(o=200,a=n),r(e.status(o),e.json(a))}),u.rest.post(`${t}${y}`,async(s,r,e)=>{const o=await s.json(),a=I.create({forumId:o.forumId,projectId:O.id,title:o.title,createdOn:new Date().toISOString(),createdBy:String(m),modifiedOn:new Date().toISOString(),etag:"etag",messageKey:"todo key",numberOfViews:0,numberOfReplies:0,lastActivity:new Date().toISOString(),activeAuthors:[String(m)],isEdited:!1,isDeleted:!1,isPinned:!1});return r(e.status(201),e.json(a))}),u.rest.get(`${t}${B(":forumId")}`,async(s,r,e)=>{const o=s.url.searchParams.get("offset"),a=o?parseInt(o):0,n=s.url.searchParams.get("limit"),i=n?parseInt(n):10,l=s.params.filter??d.EXCLUDE_DELETED,c=Z(s.params.forumId,l),f={results:c.slice(a,a+i),totalNumberOfResults:c.length};return r(e.status(200),e.json(f))}),u.rest.get(`${t}${j}/:id/moderators`,async(s,r,e)=>{const o={results:[String(m)],totalNumberOfResults:1};return r(e.status(200),e.json(o))})]}function v(t){return{subscriptionId:String(S.number.int({min:1e3,max:9999})),subscriberId:String(m),createdOn:S.date.anytime().toISOString(),...t}}const k=T.map(t=>v({objectId:t.id,objectType:h.FORUM})),tt=E.map(t=>v({objectType:h.THREAD,objectId:t.id})),p=new D({initialData:[...k,...tt],idField:"subscriptionId",autoGenerateId:!0});function b(t,s="ASC",r=0,e=10,o){const a=p.getAll().filter(i=>t?i.objectType===t:!0).filter(i=>o?o.includes(i.objectId):!0).sort((i,l)=>{const c=new Date(l.createdOn).getTime()-new Date(i.createdOn).getTime();return s==="ASC"?c:-1*c}),n=a.length;return{results:a.slice(r,r+e),totalNumberOfResults:n}}function et(t){return[u.rest.get(`${t}/repo/v1/subscription/all`,async(s,r,e)=>{const o=s.url.searchParams.get("objectType")??void 0,a=s.url.searchParams.get("sortDirection")??void 0,n=s.url.searchParams.get("offset"),i=n?parseInt(n):void 0,l=s.url.searchParams.get("limit"),c=l?parseInt(l):void 0,f=b(o??void 0,a,i,c);return r(e.status(200),e.json(f))}),u.rest.post(`${t}/repo/v1/subscription/list`,async(s,r,e)=>{const o=await s.json(),a=b(o.objectType,o.sortDirection,void 0,void 0,o.idList);return r(e.status(200),e.json(a))}),u.rest.post(`${t}/repo/v1/subscription`,async(s,r,e)=>{const o=await s.json(),a=p.create({subscriberId:String(m),objectId:o.objectId,objectType:o.objectType,createdOn:new Date().toISOString()});return r(e.status(201),e.json(a))}),u.rest.delete(`${t}/repo/v1/subscription/:id`,async(s,r,e)=>{const o=s.params.id;return p.delete(o),r(e.status(200),e.body(""))}),u.rest.post(`${t}/repo/v1/subscription/subscribers`,async(s,r,e)=>{const o=await s.json(),n={subscribers:p.getMany(i=>i.objectType===o.objectType&&i.objectId===o.objectId).map(i=>i.subscriberId)};return r(e.status(200),e.json(n))})]}function st(t){return[u.rest.get(`${t}${F(":evaluationId")}`,async(s,r,e)=>{let o=404,a={reason:`Mock Service worker could not find a mock evaluation queue with ID ${s.params.evaluationId}`};const n=g.find(i=>i.id===s.params.entityId);return n&&(a=n,o=200),r(e.status(o),e.json(a))}),u.rest.get(`${t}${_}`,async(s,r,e)=>{let o=200,a={results:g,totalNumberOfResults:g.length};return r(e.status(o),e.json(a))})]}function rt(t){return[u.rest.post(`${t}${L}/message`,async(s,r,e)=>{const o=await s.json();return r(e.status(201),e.json(o))})]}const ot=t=>[u.rest.options("*",async(s,r,e)=>r(e.status(200))),u.rest.get(`${t}/auth/v1/authenticatedOn`,async(s,r,e)=>r(e.status(200),e.json({authenticatedOn:new Date().toISOString()}))),...A(t),...$(t),w(t,!0,!0),...M(t),...P(t),...z(t),...C(t),...N(t),...U(t),...x(t),...et(t),...st(t),G(t),...V(K,t),...q(t),...W(t),...X(t),...Y(t),...J(t),...rt(t)];ot(H(R.REPO_ENDPOINT));export{ot as g};
