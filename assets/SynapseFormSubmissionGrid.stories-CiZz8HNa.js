import{j as l}from"./jsx-runtime-DmKnoNQ-.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-B0kBNeMy.js";import{g as T}from"./handlers-DdRRuhzs.js";import{aH as S,M as a}from"./useFiles-Bmp6q2a5.js";import"./OrientationBanner-DLwSvgHC.js";import"./index-BFCc_wv0.js";import"./StringUtils-CzgJJW-6.js";import{l as _}from"./index-D3ZXqs7N.js";import{S as E}from"./SynapseFormSubmissionGrid-C40OIMn-.js";import"./mockSchema-Bs7yFQYA.js";import"./mockFileEntity-DGpO9v-L.js";import"./mock_file_handle-Ct1MSfYs.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-BoKQQj6H.js";import"./mockTeam-BoeceiZX.js";import"./SynapseConstants-DJnXKVNq.js";import"./uniqueId-BgIHj4wm.js";import"./toString-CCI0wryq.js";import"./isObjectLike-CzyhUoMh.js";import"./iframe-DVK1wk6d.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-DHimvwb5.js";import"./times-DESQX_ub.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DgKbkhK0.js";import"./asyncJobHandlers-BrcMUpEv.js";import"./BasicMockedCrudService-B9-MBExs.js";import"./cloneDeep-BBUYS9nA.js";import"./_Uint8Array-BGMUFk-X.js";import"./_initCloneObject-CB_EWvAd.js";import"./_getTag-B7_rEu3Z.js";import"./isEqual-36wh2HjX.js";import"./_baseIsEqual-HSUY0yvO.js";import"./mockAnnotationColumns-Vh0OrhFk.js";import"./tableQueryHandlers-_PaPXCoS.js";import"./omit-3ca3Q2CL.js";import"./_baseGet-eeYOjUut.js";import"./isNil-DF8LcSjB.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-CAkvabO_.js";import"./_baseFlatten-D3GIz1X7.js";import"./pick-DQZKoRYg.js";import"./_baseSet-C44cOCcT.js";import"./hasIn-CcCBDh5L.js";import"./accessRequirementAclHandlers-DP5xnnE7.js";import"./mockAccessRequirementAcls-Dzdod2-Q.js";import"./mockAccessRequirements-NLoPRLZ-.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CZdZHQnO.js";import"./accessRequirementHandlers-BJmCPjHB.js";import"./wikiHandlers-dwL8MtPW.js";import"./mockWikiPageKey-CVal2EGa.js";import"./teamHandlers-BINNuECz.js";import"./dataAccessRequestHandlers-BOdAiUkF.js";import"./MockResearchProject-DNUfi7xU.js";import"./mock_discussion-DEPygSau.js";import"./fakerUtils-DWBxbZf6.js";import"./index-BGOyNvTE.js";import"./mockTableEntity-DCVQcU31.js";import"./mockFileEntityACLVariants-CyyHz26M.js";import"./entityHandlers-D4bnkzix.js";import"./mockEntity-B2tkdnHN.js";import"./mockEvaluationQueue-LOV0o-eo.js";import"./featureFlagHandlers-BAGOmJYB.js";import"./fileHandlers-BnMcUIvU.js";import"./personalAccessTokenHandlers-BnkQiUEi.js";import"./researchProjectHandlers-v9UzQqZ-.js";import"./resetTwoFactorAuthHandlers-BM7Y8LMm.js";import"./userProfileHandlers-BmeGBnSQ.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-U6akLiTY.js";import"./FullWidthAlert-C2j0NeYe.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-CKvIY_ZC.js";import"./createTheme-BXEwkt-l.js";import"./resolveComponentProps-DEEyNDFA.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-BjgbR4nl.js";import"./createSvgIcon-CexmQeMX.js";import"./DefaultPropsProvider-DUkpy3gp.js";import"./Close-BLLYpaxl.js";import"./IconButton-CtoYFknA.js";import"./ButtonBase-BvXHS7E8.js";import"./useTimeout-B89Jbts_.js";import"./useIsFocusVisible-BNNkxGZE.js";import"./useEventCallback-BViUXQES.js";import"./Paper-Dn3hpbBt.js";import"./Stack-CilMpvcP.js";import"./getThemeProps-DEqWItKx.js";import"./useTheme-txGj-KA5.js";import"./Box-CnkquDgp.js";import"./AlertTitle-De-Y6WlG.js";import"./Typography-CoReq-7T.js";import"./useTheme-DbaDTwfd.js";import"./Grow-DRdE8lYO.js";import"./index-HtDB6D_8.js";import"./utils-CH6UHCvk.js";import"./ClickAwayListener-C935n3RT.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BESuS2go.js";import"./index-zScYxpIZ.js";import"./useControlled-BCnvLdxA.js";import"./useId-B4FULkf-.js";import"./Popper-DjVyUDrD.js";import"./Button-DYb5I_h6.js";import"./useQuery-BBtTkatK.js";import"./utils-DGVs3mxC.js";import"./Link-iK3V06Y5.js";import"./Collapse-BHBLFnaj.js";import"./tinycolor-Begke6kS.js";import"./Fade-9Bau5x4J.js";import"./Skeleton-DlWq6871.js";import"./inputBaseClasses-DWCx47eo.js";import"./calculateFriendlyFileSize-BHEbv2lr.js";import"./CheckCircleTwoTone-D4_hhNK2.js";import"./InfoTwoTone-E9_F69oy.js";import"./mutation-DUrdKa48.js";import"./dayjs.min-TSt401mi.js";import"./chunk-AYJ5UCUI-BAlWt6x4.js";import"./index-7sMRgjqI.js";import"./react-B7JEe_9q.js";import"./util-CQYnOP2c.js";import"./WideButton-CLAZmxLy.js";import"./DeleteTwoTone-BwoGl_GN.js";import"./createSvgIcon-2WhrXkh-.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-MCFDewsk.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-CLATjAM_.js";import"./DialogBase-sRqZYpTT.js";import"./Close-DXQU2-u1.js";import"./HelpPopover-MZkTJiIu.js";import"./MarkdownPopover-BFObi_MN.js";import"./LightTooltip-DPh926hy.js";import"./MarkdownSynapse-CsjHmxuh.js";import"./SkeletonButton-DSz-c8Kr.js";import"./SkeletonInlineBlock-DUpeltxx.js";import"./SkeletonTable-DZ993BOC.js";import"./SkeletonParagraph-DL2I9A0y.js";import"./HelpOutlineTwoTone-BIp41xUe.js";import"./DialogTitle-5bWgWkGT.js";import"./DialogContent-BQqIJt-k.js";import"./Dialog-DiYgz-Oa.js";import"./Modal-BKiyFF1x.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-8qA_F1hP.js";import"./WarningDialog-BtCXFwrq.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
