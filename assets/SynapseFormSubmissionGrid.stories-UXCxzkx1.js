import{j as l}from"./jsx-runtime-LNM4Hejx.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-BTS90eIe.js";import{aH as S,M as a}from"./useFiles-BPoIposu.js";import"./OrientationBanner-DRQjh_MY.js";import"./index-DI_-ITWc.js";import"./StringUtils-Df7AZImX.js";import{l as _}from"./index-B4PPGz__.js";import{S as E}from"./SynapseFormSubmissionGrid-BxyLIE3o.js";import"./mockSchema--9p5M9AI.js";import"./mockFileEntity-BUMfXN_c.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-B_B9RkMH.js";import"./mockTeam-CZf_dOeS.js";import"./SynapseConstants-Co29NLrI.js";import"./uniqueId-FvNdEXAY.js";import"./toString-BhYAZCcC.js";import"./isObjectLike-CP11Nt3b.js";import"./iframe-ErXbxx3w.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-cxeMPdPI.js";import"./times-CGYgpp14.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-B090yKnE.js";import"./asyncJobHandlers-scIgkLft.js";import"./BasicMockedCrudService-dOyBqaNn.js";import"./cloneDeep-DrP4XaFY.js";import"./_Uint8Array-HMlgB7ZY.js";import"./_initCloneObject-DNtUqdhE.js";import"./_getTag-ptAFXIl0.js";import"./isEqual-VzErT_1H.js";import"./_baseIsEqual-DJtys-Lc.js";import"./mockAnnotationColumns-Cx07ME84.js";import"./tableQueryHandlers-B87XmS4Y.js";import"./omit-mIFntUFq.js";import"./_baseGet-C38pWgRf.js";import"./isNil-BEf8rUeE.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BbKHlK4b.js";import"./_baseFlatten-CYAzj95T.js";import"./pick-CxEO0Fwz.js";import"./_baseSet-Dpe6GME-.js";import"./hasIn-BnbQExga.js";import"./accessRequirementAclHandlers-JPvlfWrc.js";import"./mockAccessRequirementAcls-B5M4IiII.js";import"./mockAccessRequirements-Dr6PVU8i.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-Cq6O9nfT.js";import"./wikiHandlers-DzN0hUST.js";import"./mockWikiPageKey-CGw0yNQ1.js";import"./teamHandlers-BwqZaUiY.js";import"./dataAccessRequestHandlers-Doz4708P.js";import"./MockResearchProject-CXjvzFPD.js";import"./mock_discussion-DuiEKo3g.js";import"./fakerUtils-CB7x6vWB.js";import"./index-BJbEl-Lc.js";import"./mockTableEntity-SDEJXCQV.js";import"./mockFileEntityACLVariants-DpGxmubD.js";import"./entityHandlers-szpW7CcS.js";import"./mockEntity-BQCAUAP-.js";import"./mockEvaluationQueue--T1JaK3G.js";import"./featureFlagHandlers-PjR2o4mw.js";import"./fileHandlers-DqauKzQt.js";import"./personalAccessTokenHandlers-p-Jacfjw.js";import"./researchProjectHandlers-BZinn2CM.js";import"./resetTwoFactorAuthHandlers-BZO0_6w2.js";import"./userProfileHandlers-XNaE_NB6.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-BGgxAqlU.js";import"./FullWidthAlert-BlqPbpC2.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-o68bsglQ.js";import"./createTheme-sB52mbFJ.js";import"./resolveComponentProps-DlsEIkau.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-D0dHJyLT.js";import"./createSvgIcon-BabHNiX3.js";import"./DefaultPropsProvider-ChxiI4tD.js";import"./Close-D04djKOd.js";import"./IconButton-DkBpEf1n.js";import"./ButtonBase-D9zLenAD.js";import"./useTimeout-6YIBQPj9.js";import"./useIsFocusVisible-CWvvQ-6-.js";import"./useEventCallback-NTkNzc19.js";import"./Paper-CzKkmbxx.js";import"./Stack-D9O3g525.js";import"./getThemeProps-DY7O4lpQ.js";import"./useTheme-3YwHPNMg.js";import"./Box-Cg8lPZ83.js";import"./AlertTitle-e5BQ4RFh.js";import"./Typography-DUwsUFQN.js";import"./useTheme-BozbJXxT.js";import"./Grow-D0VNHdtZ.js";import"./index-DsE0iHI0.js";import"./utils-BVDP6cr7.js";import"./ClickAwayListener-CUt7s9Wn.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BZf81u0W.js";import"./index-JLvMmP38.js";import"./useControlled-McMF_b3B.js";import"./useId-DiOQhoCr.js";import"./Popper-D3ZELG7b.js";import"./Button-uqPkG0PN.js";import"./useQuery-DdP-4ZWu.js";import"./utils-7cibFwkE.js";import"./Link-CxuEV2Yw.js";import"./Collapse-N8WMS6vY.js";import"./tinycolor-Begke6kS.js";import"./Fade-DlIjUiqW.js";import"./Skeleton-BOEt5rPK.js";import"./inputBaseClasses-VMJC09Vq.js";import"./calculateFriendlyFileSize-OXtYuuA2.js";import"./CheckCircleTwoTone-CQvsTgIk.js";import"./InfoTwoTone-d5FlF0um.js";import"./mutation-C-nVhw6S.js";import"./dayjs.min-C7AVYoqE.js";import"./chunk-AYJ5UCUI-B0w41TpG.js";import"./index-CD5x-CbF.js";import"./react-BLqU1nHD.js";import"./util-r1NPpGU4.js";import"./WideButton-BEr-UBAW.js";import"./DeleteTwoTone-DOXpE_pT.js";import"./createSvgIcon-D9ZWL5Zl.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-CW1nYGjv.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-D-sH7bqq.js";import"./DialogBase-yFow3MKZ.js";import"./Close-DEyr38lS.js";import"./HelpPopover-BOSrcnXb.js";import"./MarkdownPopover-Y70GtfQA.js";import"./LightTooltip-DyKWEasL.js";import"./MarkdownSynapse-DqKnf0-j.js";import"./SkeletonButton-BN5OP7nr.js";import"./SkeletonInlineBlock-CwjAAzLY.js";import"./SkeletonTable-D2rGOraL.js";import"./SkeletonParagraph-BJ2IbWRb.js";import"./HelpOutlineTwoTone-iAJGy8n_.js";import"./DialogTitle-CyvqPFLD.js";import"./DialogContent-B4h43KjX.js";import"./Dialog-5HCIOCSV.js";import"./Modal-Dknd2_DA.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-DzNlQXNj.js";import"./WarningDialog-DM3By_rZ.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
