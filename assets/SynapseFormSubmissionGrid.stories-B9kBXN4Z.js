import{j as l}from"./jsx-runtime-BK5U4Ogm.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DsgC4t7y.js";import{g as T}from"./handlers-BQ2YQK1y.js";import{aD as S,M as a}from"./useFiles-CEIeiagI.js";import"./OrientationBanner-Dd3gjuUa.js";import"./index-Di6pL9sS.js";import"./StringUtils-tNCAfVhp.js";import{l as _}from"./index-C9AWhNST.js";import{S as E}from"./SynapseFormSubmissionGrid-CT6UbWzd.js";import"./mockSchema-DPA_m7Mw.js";import"./mockFileEntity-BR23M2U7.js";import"./mock_file_handle-DS_yjaGE.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-CS3cwNi-.js";import"./mockTeam-CMmoXApk.js";import"./SynapseConstants-zKFIzren.js";import"./uniqueId-DxyV27yy.js";import"./toString-DfeI3u70.js";import"./isObjectLike-uDeW5XEe.js";import"./iframe-BcMO-NRu.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-yfk4cHuf.js";import"./times-CNi-HedE.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-Cl49Tuw_.js";import"./asyncJobHandlers-MTF9f0nt.js";import"./BasicMockedCrudService-CjYW0GVX.js";import"./cloneDeep-DvV4HJnE.js";import"./_Uint8Array-DGhKdq-D.js";import"./_initCloneObject-DVxuy2j7.js";import"./_getTag-BrZ1c84X.js";import"./isEqual-D21U_Xmz.js";import"./_baseIsEqual-4Tr9waQ7.js";import"./mockAnnotationColumns-NHVw8VuE.js";import"./tableQueryHandlers-cETfGuIs.js";import"./omit-1FmfzLuC.js";import"./_baseGet-DBaGtrue.js";import"./isNil-BZDfliEp.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-4Yp0APiD.js";import"./_baseFlatten-DC-rD2pN.js";import"./pick-CuSFgRUb.js";import"./_baseSet-DrwC09v6.js";import"./hasIn-CXTkTBtD.js";import"./accessRequirementAclHandlers-BzEGngyu.js";import"./mockAccessRequirementAcls-C0nI70tM.js";import"./mockAccessRequirements-B-z7Uub5.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DHj13qiO.js";import"./accessRequirementHandlers-D5Y_5OFH.js";import"./wikiHandlers-Df0_-cPm.js";import"./mockWikiPageKey-BJEKMD50.js";import"./teamHandlers-DlRRbDtK.js";import"./dataAccessRequestHandlers-CAJFRTMa.js";import"./MockResearchProject-DQ30EflQ.js";import"./mock_discussion-Derq5cWH.js";import"./fakerUtils-BY6AqufB.js";import"./index-CmU09LJz.js";import"./mockTableEntity-ISVr1kZm.js";import"./mockFileEntityACLVariants-BbNdQ1p-.js";import"./entityHandlers-DHOxt3gI.js";import"./mockEntity-B5hnl9MH.js";import"./mockEvaluationQueue-CYxj2egw.js";import"./featureFlagHandlers-Ca1UIiTo.js";import"./fileHandlers-e7FjVn4S.js";import"./personalAccessTokenHandlers-BxbB26JJ.js";import"./researchProjectHandlers-DiAMWOP7.js";import"./resetTwoFactorAuthHandlers-C8IQTaEq.js";import"./userProfileHandlers-B75faFqt.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-D2Egnh2Q.js";import"./FullWidthAlert-CErQ6Muc.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-HUDZRYOW.js";import"./createTheme-Cp4i8P3j.js";import"./resolveComponentProps-BcPJL9MH.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CDRx8QSv.js";import"./createSvgIcon-6f5z08nh.js";import"./DefaultPropsProvider-jCgqZX_L.js";import"./Close-D3QPaLjh.js";import"./IconButton-C0uO2agS.js";import"./ButtonBase-CBxmSsKP.js";import"./useTimeout-Bk2aBz7o.js";import"./useIsFocusVisible-Dwuhnw_i.js";import"./useEventCallback-pwXQXOzV.js";import"./Paper-CE1mL2qJ.js";import"./Stack-BWSA6lgs.js";import"./getThemeProps-Dfs0VSTM.js";import"./useTheme-6ADmrWxD.js";import"./Box-CgFRiWSE.js";import"./AlertTitle-COi1QU0e.js";import"./Typography-DdVpYyJT.js";import"./useTheme-BJOxI8Pz.js";import"./Grow-BJi-xmc6.js";import"./index-BlWCVmXL.js";import"./utils-Bm34yggg.js";import"./ClickAwayListener-Bzi36C9_.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BGdElWBC.js";import"./index-UlGlXuF6.js";import"./useControlled-ctFy0C0l.js";import"./useId-Kr4560Rl.js";import"./Popper-C7mrmf4N.js";import"./Button-CS3Qxzkw.js";import"./useQuery-Bp4ICN7A.js";import"./utils-T3gzeC7B.js";import"./Link-DCsN9Cs6.js";import"./Collapse-S9FTNTmT.js";import"./tinycolor-Begke6kS.js";import"./Fade-CHZVGOkF.js";import"./Skeleton-GFVDgsi6.js";import"./inputBaseClasses-Dy6ALZto.js";import"./calculateFriendlyFileSize-rchZGA0L.js";import"./CheckCircleTwoTone-CoVF2IX7.js";import"./InfoTwoTone-Cv6-lHeT.js";import"./mutation-CGeFCzcu.js";import"./dayjs.min-C22uDXZr.js";import"./chunk-AYJ5UCUI-tVdleHmn.js";import"./index-B46zhNA6.js";import"./react-BJTyKqpK.js";import"./util-smBHTrN2.js";import"./WideButton-r8nTBfFf.js";import"./DeleteTwoTone-wea2x-hC.js";import"./createSvgIcon-CcubKUHS.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-KEiBZD-4.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-DkMZMCVJ.js";import"./DialogBase-d4B0W14d.js";import"./Close-C18068Jl.js";import"./HelpPopover-CkgQLrWw.js";import"./MarkdownPopover-D8rSWWut.js";import"./LightTooltip-CP18Pbi2.js";import"./MarkdownSynapse-CP01qzTk.js";import"./useMutation--wrYgfEN.js";import"./SkeletonButton-ETrZReht.js";import"./SkeletonInlineBlock-DzHFfK7H.js";import"./SkeletonTable-D2QpQITf.js";import"./SkeletonParagraph-DH0l2XC1.js";import"./HelpOutlineTwoTone-DMIYYtV5.js";import"./DialogTitle-CWZBoeZ3.js";import"./DialogContent-DKY-7kZi.js";import"./Dialog-B52kDP-L.js";import"./Modal-BeHfXYhz.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-BtTzk7qz.js";import"./WarningDialog-Bohi-Fba.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},To={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const _o=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,_o as __namedExportsOrder,To as default};
