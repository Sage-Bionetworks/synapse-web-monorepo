import{j as l}from"./jsx-runtime-DNP5ZHPF.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-B0kBNeMy.js";import{g as T}from"./handlers-9pzDc-GP.js";import{aH as S,M as a}from"./useFiles-DxEFRl-N.js";import"./OrientationBanner-lGnlzz1n.js";import"./index-C9LqO53Z.js";import"./StringUtils-CzgJJW-6.js";import{l as _}from"./index-Bjvko-XC.js";import{S as E}from"./SynapseFormSubmissionGrid-ChhsK5p_.js";import"./mockSchema-BKN4s8C7.js";import"./mockFileEntity-DuzIyfbJ.js";import"./mock_file_handle-Ct1MSfYs.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-CtkMX8E8.js";import"./mockTeam-BZngCltQ.js";import"./SynapseConstants-x7wBmLwm.js";import"./uniqueId-CTU4ZW8o.js";import"./toString-Drlpq-aN.js";import"./isObjectLike-BAT6WrGj.js";import"./iframe-DzZkUbt0.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-CR6CJbsv.js";import"./times-ChNYGLHd.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-NHA3mITb.js";import"./asyncJobHandlers-DKIwM4P_.js";import"./BasicMockedCrudService-DXeqISkl.js";import"./cloneDeep-DGtsa-PL.js";import"./_Uint8Array-CYf3IgYh.js";import"./_initCloneObject-BZtj6YT_.js";import"./_getTag-DKMcyan0.js";import"./isEqual-CyOrkakg.js";import"./_baseIsEqual-DUOouxQQ.js";import"./mockAnnotationColumns-C-ZYzu-s.js";import"./tableQueryHandlers-CP-eZ2G2.js";import"./omit-CWFUit5V.js";import"./_baseGet-Gev72UCi.js";import"./isNil-C_6EL5i8.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-CAVgou7m.js";import"./_baseFlatten-Zu_cgFPk.js";import"./pick-Dj6JmVag.js";import"./_baseSet-Cn-LZY_U.js";import"./hasIn-D0DPTVmN.js";import"./accessRequirementAclHandlers-3wtEF8Vp.js";import"./mockAccessRequirementAcls-OvCiginb.js";import"./mockAccessRequirements-B1c9zUzd.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CZdZHQnO.js";import"./accessRequirementHandlers-D41ZSDgn.js";import"./wikiHandlers-BHcdZpXw.js";import"./mockWikiPageKey-BKJIfayI.js";import"./teamHandlers-DctoEoZW.js";import"./dataAccessRequestHandlers-CPCG-udL.js";import"./MockResearchProject-CboSQhY-.js";import"./mock_discussion-BOK1GZy6.js";import"./fakerUtils-CSpFUtg1.js";import"./index-BcXxcpF6.js";import"./mockTableEntity-DOIjzTTt.js";import"./mockFileEntityACLVariants-D2qcGLCO.js";import"./entityHandlers-BwmKXdCk.js";import"./mockEntity-nC9b67GB.js";import"./mockEvaluationQueue-H8rY5zFH.js";import"./featureFlagHandlers-ZVmhPM6q.js";import"./fileHandlers-SH-8ln9x.js";import"./personalAccessTokenHandlers-B4L5ZhXT.js";import"./researchProjectHandlers-DMh5bMIu.js";import"./resetTwoFactorAuthHandlers-DFgbG1z1.js";import"./userProfileHandlers-OECk5OjL.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-CdwE7o-d.js";import"./FullWidthAlert-XMCCRjsq.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-DBftbUxX.js";import"./createTheme-BG9REND8.js";import"./resolveComponentProps-DJsKa-oF.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-D7H_VIUT.js";import"./createSvgIcon-BtT08fNl.js";import"./DefaultPropsProvider-CBoC3p-_.js";import"./Close-BrzxmRIz.js";import"./IconButton-HsPug_ob.js";import"./ButtonBase-C0iYjrZq.js";import"./useTimeout-9s3akjMN.js";import"./useIsFocusVisible-C4iYqwwm.js";import"./useEventCallback-CFsLaU7U.js";import"./Paper-BZJIjrog.js";import"./Stack-C3Yli3Do.js";import"./getThemeProps-CmxBhP06.js";import"./useTheme-Dqg7276U.js";import"./Box-DhP9mjg7.js";import"./AlertTitle-CFko3bX9.js";import"./Typography-BdVBJyiw.js";import"./useTheme-DaIKVKIj.js";import"./Grow-BEsXXeLg.js";import"./index-B7SGfn2n.js";import"./utils-Bn3sr0WI.js";import"./ClickAwayListener-CiZf8GXf.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip--gcNUJrW.js";import"./index-DfJVQJTe.js";import"./useControlled-C6FPOIeJ.js";import"./useId-Bp9otoFB.js";import"./Popper-wFK3a8ms.js";import"./Button-C1D6jijN.js";import"./useQuery-Drm9MnN6.js";import"./utils-Dge9E0v5.js";import"./Link-BP8bljuP.js";import"./Collapse-DAEF_CSM.js";import"./tinycolor-Begke6kS.js";import"./Fade-BS8huG_s.js";import"./Skeleton-X6vAixA1.js";import"./inputBaseClasses-Cvq7yWxw.js";import"./calculateFriendlyFileSize-FpJgzzI_.js";import"./CheckCircleTwoTone-DooSA5RY.js";import"./InfoTwoTone-BUvN6rod.js";import"./mutation-DZbFfGts.js";import"./dayjs.min-DYHBVdyC.js";import"./chunk-AYJ5UCUI-BAVTTsGw.js";import"./index-DNCRZXKi.js";import"./react-LeG2f8XJ.js";import"./util-D0jHV5TN.js";import"./WideButton-9VcUbFDT.js";import"./DeleteTwoTone-Cv45V2pG.js";import"./createSvgIcon-Bayh6HlG.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-BMn3X3Gz.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-BvQyTyJF.js";import"./DialogBase-CiljmXUt.js";import"./Close-CxYKehz7.js";import"./HelpPopover-CuENmKTA.js";import"./MarkdownPopover-BYIzAOpc.js";import"./LightTooltip-CmYRAIyM.js";import"./MarkdownSynapse-BeO0RyoA.js";import"./SkeletonButton-BK7YgQCa.js";import"./SkeletonInlineBlock-D4jApRcZ.js";import"./SkeletonTable-Bik19zmH.js";import"./SkeletonParagraph-DK8LxRG0.js";import"./HelpOutlineTwoTone-Bz7TfZfC.js";import"./DialogTitle-CC3UEf9Q.js";import"./DialogContent-CXXeVq0f.js";import"./Dialog-Cab871qq.js";import"./Modal-bbWkmLnK.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-UeKywpjz.js";import"./WarningDialog-CgKwwGYs.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
