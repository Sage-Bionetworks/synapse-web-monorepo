import{j as i}from"./jsx-runtime-B8p3sbYp.js";import{W as m,a as t}from"./WizardChoiceButton-GWfKBUGW.js";import{I as l}from"./LayersTwoTone-D8Bnp9GT.js";import{F as d}from"./IconSvg-BCp6fKjb.js";import"./index-w9WeLW3c.js";import"./iframe-Asvj3i57.js";import"./Box-CnxWcHOe.js";import"./createTheme-DfE_l7fh.js";import"./useTheme-9PQSeyW-.js";import"./Typography-BvS3uuok.js";import"./DefaultPropsProvider-B8LU8o9q.js";import"./createSvgIcon-CFiQ1ApI.js";import"./spreadSx-CwcO6WA9.js";import"./useTheme-CQr96cnb.js";import"./Tooltip-BnJQ2gnX.js";import"./index-GtvJuuzD.js";import"./Grow-s44nII5P.js";import"./resolveComponentProps-DK3a2xv6.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-BikEN9Oe.js";import"./index-DgLB2t6n.js";import"./utils-DNh8IEA0.js";import"./TransitionGroupContext-E5HcsAwp.js";import"./useEventCallback-H7A-SEZM.js";import"./useTimeout-DtkCtw32.js";import"./useControlled-D1WSYfsz.js";import"./useId-BQ-eUGSB.js";import"./useIsFocusVisible-yzb205lP.js";import"./Popper-8eBb15T8.js";import"./ownerDocument-DW-IO8s5.js";import"./ContentCopyTwoTone-DQwQa0SK.js";import"./HelpOutlineTwoTone-DF5xHyn9.js";import"./ErrorOutlined-DRD78EVD.js";import"./GetAppTwoTone-C8-hxazL.js";import"./InfoOutlined-C9mbMFGQ.js";import"./DeleteTwoTone-B3SLnnG7.js";import"./CheckCircleTwoTone-oHlSZvuV.js";const V={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},e={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),i.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:i.jsx(l,{fontSize:"large"})}),i.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:i.jsx(d,{fontSize:"large"})})]})}};var r,s,n;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const Y=["Basic","WithIcons"];export{e as Basic,o as WithIcons,Y as __namedExportsOrder,V as default};
