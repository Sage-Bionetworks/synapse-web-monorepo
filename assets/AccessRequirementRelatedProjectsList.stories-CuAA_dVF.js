import{M as E,f as _}from"./useFiles-xiUh4o3E.js";import{l as h}from"./index-ClzgjiY_.js";import{j as r}from"./jsx-runtime-DUbQcIgO.js";import"./VerificationSubmission-CMrrYimb.js";import"./StringUtils-Bdqa-HwM.js";import"./OrientationBanner-7TN_R8dT.js";import"./index-B1sUgM2J.js";import{n as x}from"./useAccessRequirements-CCH1nFtD.js";import{p as T}from"./pluralize-J9QRZ3YD.js";import{E as O}from"./EntityLink-B85ilMsl.js";import{T as M}from"./Typography-B87fyUCj.js";import{L as S}from"./List-4cfzBVSY.js";import{L as k}from"./ListItem-1j1idl-h.js";import{A as C}from"./Alert-EcA43haq.js";import"./SynapseConstants-zKEftURI.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useTimeout-D1uU2Bb0.js";import"./FullWidthAlert-DiZQ4jCk.js";import"./spreadSx-CwcO6WA9.js";import"./Stack-ClyyUoGo.js";import"./DefaultPropsProvider-BrAb0sW2.js";import"./createTheme-CbdxX3QN.js";import"./extendSxProp-BkqfAiBc.js";import"./getThemeProps-DbHHmb1Z.js";import"./useTheme-CYmQzm27.js";import"./Box-BNlGut7z.js";import"./AlertTitle-B-GX0pjb.js";import"./useForkRef-CnLDrOyk.js";import"./useSlot-Dv0O6bnn.js";import"./useTheme-D4vJ6lFU.js";import"./ClickAwayListener-CGuHEFs2.js";import"./getReactElementRef-DP2o8Wpm.js";import"./index-DwIqEwoa.js";import"./iframe-dGFA8UIy.js";import"./index-y7JM538r.js";import"./ownerDocument-DW-IO8s5.js";import"./Paper-BJEASiZs.js";import"./Grow-C678UZKi.js";import"./Tooltip-BIsLwZxW.js";import"./index-C0EE35bT.js";import"./useControlled-DHjsMso_.js";import"./Popper-yUKCVzzk.js";import"./isFocusVisible-B8k4qzLc.js";import"./Button-DioZ-o3T.js";import"./createSimplePaletteValueFilter-8fXUNCBa.js";import"./ButtonBase-BKIhN0Vh.js";import"./CircularProgress-JrvCA3jz.js";import"./useQuery-yyyaqI58.js";import"./utils-CJWO1gyf.js";import"./Link-yD6_0rZx.js";import"./Collapse-CUGmH55i.js";import"./_baseUniq-DkWECIsI.js";import"./_Uint8Array-BJmeHegI.js";import"./_baseTimes-36S_kd0L.js";import"./isObjectLike-C3Psf34C.js";import"./isArray-Dxzbedgu.js";import"./_getTag-Bs4mI711.js";import"./isEqual-D2CUmD58.js";import"./merge-BbKV8VaS.js";import"./_initCloneObject-B5vP6wGH.js";import"./identity-DKeuBCMA.js";import"./createSvgIcon-Qj3ohLcW.js";import"./tinycolor-Begke6kS.js";import"./Fade-CoH4fGzH.js";import"./inputBaseClasses-DEZCj5F2.js";import"./calculateFriendlyFileSize-NGJJU6sW.js";import"./CheckCircleTwoTone-fiSB1R-m.js";import"./InfoTwoTone-DXuW0Jea.js";import"./index-Beh3Q5fM.js";import"./useMutation-CRNj1Qza.js";import"./dayjs.min-Cy_ds5x9.js";import"./chunk-AYJ5UCUI-CuAphczh.js";import"./cloneDeep-CC5vE4bk.js";import"./Skeleton-DGlErbKj.js";import"./util-Bja93UdH.js";import"./index-PftVGDny.js";import"./react-KSrgTsq2.js";import"./index-BENOX6Tp.js";import"./_baseOrderBy-NV0lr26v.js";import"./toString-D0-toD8X.js";import"./isSymbol-DcSsdXXT.js";import"./_baseGet-Cx_QoqpP.js";import"./_baseIteratee-jwHRv25b.js";import"./hasIn-IZFZgZTB.js";import"./_baseMap-BmVSvtnL.js";import"./_baseEach-DUqyFC3k.js";import"./useQueries-CWO11tKp.js";import"./useInfiniteQuery-8Xr8-gDd.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./useEntity-Dg7MHbOx.js";import"./pickBy-DqD5aH6I.js";import"./isString-DIqpTrCB.js";import"./toInteger-DlFVnXu7.js";import"./pick-BOKxq44E.js";import"./_baseSet-CRqU7BGq.js";import"./omit-CZjpksnh.js";import"./_baseSlice-F8doVSIJ.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntityBundle-Kig5CZco.js";import"./useGetEntityHeaders-WV11q71B.js";import"./EntityIcon-B_MbdXA_.js";import"./IconSvg-CMun_lMD.js";import"./LayersTwoTone-CO_ChMhe.js";import"./ContentCopyTwoTone-BtCHc0wl.js";import"./HelpOutlineTwoTone-CNo7aiFp.js";import"./ErrorOutlined-CG3W08e-.js";import"./GetAppTwoTone-FordvmI0.js";import"./InfoOutlined-B6QbTqZV.js";import"./PhoneTwoTone-BG1n40um.js";import"./DeleteTwoTone-DORDwKQj.js";import"./ErrorChip-_SuzGWBU.js";import"./Chip-wdxc1Tpx.js";import"./Avatar-D7p29ad0.js";import"./isHostComponent-DVu5iVWx.js";import"./isMuiElement-WueuatKg.js";import"./listItemButtonClasses-CfN7ZKy4.js";import"./Close-BpwDqNlL.js";import"./IconButton-831dzvVo.js";const c=p=>{const n={ids:[p.accessRequirementId]},{data:e,isError:a,error:f}=x(n),t=(e==null?void 0:e.pages.flatMap(o=>o.results)[0])??void 0,d=(t==null?void 0:t.relatedProjectIds.length)||0,A=`${T("project",d,!0)}${d>0?":":""}`;return r.jsxs(r.Fragment,{children:[t&&r.jsxs(r.Fragment,{children:[r.jsx(M,{variant:"body1",children:A}),r.jsx(S,{sx:{listStyleType:"disc",pl:4},children:t.relatedProjectIds.map(o=>r.jsx(k,{sx:{display:"list-item",py:"4px",".no-margin-y":{my:0}},children:r.jsx(O,{entity:o,link:!1,showIcon:!1,className:"no-margin-y"})},o))})]}),a&&r.jsx(C,{severity:"error",children:f.message})]})};try{c.displayName="AccessRequirementRelatedProjectsList",c.__docgenInfo={description:"",displayName:"AccessRequirementRelatedProjectsList",props:{accessRequirementId:{defaultValue:null,description:"",name:"accessRequirementId",required:!0,type:{name:"number"}}}}}catch{}const He={title:"Governance/AccessRequirementRelatedProjectsList",component:c},i={args:{accessRequirementId:9603055}},s={args:{accessRequirementId:9605913}},m={args:{accessRequirementId:1234567},parameters:{stack:"mock",msw:{handlers:[h.rest.post(`${E}${_}`,async(p,n,e)=>{const a={results:[{id:"1234567",type:"org.sagebionetworks.repo.model.ManagedACTAccessRequirement",createdOn:"2017-08-23T18:48:20.892Z",modifiedOn:"2023-12-14T00:43:41.315Z",name:"Team AR without Related Projects",version:"1",relatedProjectIds:[],reviewerIds:[]}]};return n(e.status(200),e.json(a))})]}}};var l,u,R;i.parameters={...i.parameters,docs:{...(l=i.parameters)==null?void 0:l.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 9603055
  }
}`,...(R=(u=i.parameters)==null?void 0:u.docs)==null?void 0:R.source}}};var j,g,y;s.parameters={...s.parameters,docs:{...(j=s.parameters)==null?void 0:j.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 9605913
  }
}`,...(y=(g=s.parameters)==null?void 0:g.docs)==null?void 0:y.source}}};var I,P,q;m.parameters={...m.parameters,docs:{...(I=m.parameters)==null?void 0:I.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 1234567
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [
      // searchAccessRequirements
      rest.post(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_SEARCH}\`, async (req, res, ctx) => {
        const zeroRelatedProjects = {
          results: [{
            id: '1234567',
            type: 'org.sagebionetworks.repo.model.ManagedACTAccessRequirement',
            createdOn: '2017-08-23T18:48:20.892Z',
            modifiedOn: '2023-12-14T00:43:41.315Z',
            name: 'Team AR without Related Projects',
            version: '1',
            relatedProjectIds: [],
            reviewerIds: []
          }]
        };
        return res(ctx.status(200), ctx.json(zeroRelatedProjects));
      })]
    }
  }
}`,...(q=(P=m.parameters)==null?void 0:P.docs)==null?void 0:q.source}}};const Ke=["ManyProjects","OneProject","ZeroProjectsMock"];export{i as ManyProjects,s as OneProject,m as ZeroProjectsMock,Ke as __namedExportsOrder,He as default};
