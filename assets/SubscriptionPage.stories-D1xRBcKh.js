import{j as r}from"./jsx-runtime-Du8NFWEI.js";import{r as e}from"./index-Dl6G-zuu.js";import{b as h}from"./useSubscription-Ca9Es-yC.js";import{t as s,j as O}from"./index-BuHFc1uk.js";import{S as y}from"./SubscriptionItem-B6YkcSxj.js";import{D}from"./DropdownSelect-mg16_m5x.js";import{B as I}from"./Box--1V6nYGL.js";import{T,a as d}from"./Tabs-D3tII1_8.js";import{S as v}from"./Stack-CqpovyXN.js";import{B as R}from"./Button-DBz2LXAC.js";import{M as C}from"./getEndpoint-CjoHA800.js";import{g as E}from"./handlers-DQdahJ2j.js";import"./SynapseClient-CfIGNtSL.js";import"./OrientationBanner-BBh8JRgP.js";import"./FullWidthAlert-Q8yalkva.js";import"./Alert-C43IQeyU.js";import"./createTheme-CcAD2pPO.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-DXXbLLGH.js";import"./index-GEGPABih.js";import"./styled-Sx1jgj-B.js";import"./mergeSlotProps-BW52tAYO.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CEBgoE3Z.js";import"./createSvgIcon-DSqIFKhr.js";import"./Paper-BCUpbPXs.js";import"./IconButton-DYXdVn2C.js";import"./ButtonBase-DE7aKxis.js";import"./TransitionGroupContext-DGN18uA0.js";import"./assertThisInitialized-B9jnkVVz.js";import"./inheritsLoose-DR8r8Ogv.js";import"./useIsFocusVisible-DHYsnH_Q.js";import"./AlertTitle-CYZGUJl4.js";import"./Typography-CxCAiHvb.js";import"./utils-DkbdKabZ.js";import"./index-D1_ZHIBm.js";import"./Grow-DK1F46qr.js";import"./ClickAwayListener-BnMSRy2k.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-Drs5efNb.js";import"./index-DgT9Y5QJ.js";import"./SynapseConstants-D_Oa3fs5.js";import"./tinycolor-Begke6kS.js";import"./InfoTwoTone-B6zWmPbt.js";import"./CheckCircleTwoTone-DPjbEwSO.js";import"./colorManipulator-BNChw7e0.js";import"./inputBaseClasses-DiZSv6oN.js";import"./Fade-BgJxt2ZN.js";import"./dayjs.min-d18Up55D.js";import"./index-BfyspvgH.js";import"./tiny-invariant-CopsF_GD.js";import"./Link-kkaQjRHX.js";import"./_getTag-BQOryPI7.js";import"./_Map-CWVOAJuy.js";import"./isArray-ggc3KxVp.js";import"./StringUtils-D4kDWP8q.js";import"./useMutation-DycxOuWN.js";import"./useInfiniteQuery-OZCPlHjF.js";import"./Topic-UVwgoEWe.js";import"./IconSvg-BPgDKXL0.js";import"./ErrorOutlined-CN3JQb1a.js";import"./GetAppTwoTone-Bnyq84dD.js";import"./InfoOutlined-CcVy1s6k.js";import"./ConditionalWrapper-Be926PbJ.js";import"./Skeleton-DgVklRTa.js";import"./useForum-sak_3o0W.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntity-DmrYB1eg.js";import"./useQueries-Dxyjt1OH.js";import"./isEqualWith-CSxlrtT3.js";import"./isEqual-DI17sirE.js";import"./_Uint8Array-kXJ5rGjS.js";import"./_baseTimes-DoMoQz2v.js";import"./_cacheHas-CXp-3pXr.js";import"./_setToArray-CSiN_fit.js";import"./_getAllKeys-CDiJKbeD.js";import"./pick-DPHomEHx.js";import"./_baseIndexOf-DlmoT9Yo.js";import"./toInteger-CoOs-5Xi.js";import"./isSymbol-BzKS7Qf1.js";import"./toString-CYyvKWOl.js";import"./_baseClone-DNmyUSJq.js";import"./_initCloneObject-CtX8iLDk.js";import"./_defineProperty-Df4ZcNZr.js";import"./_baseIteratee-DmGuQepJ.js";import"./_getMatchData-BH9OQlHN.js";import"./identity-DKeuBCMA.js";import"./_baseSlice-F8doVSIJ.js";import"./isPlainObject-r6ak-40U.js";import"./_overRest-DUrPJxXC.js";import"./QueryFilterUtils-B7ytAbJX.js";import"./isNumber-BM-UBS4N.js";import"./useThread-4TKzSR03.js";import"./MenuList-B5VOBuiJ.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./List-COipR56a.js";import"./MenuItem-BEeFhL08.js";import"./dividerClasses-DQb7lYlS.js";import"./ownerWindow-BN2rbQ_G.js";import"./index-DzDa9m9N.js";import"./events-CXH2uRM3.js";import"./util-CIG8wfYF.js";import"./index-Cek1a_Jj.js";import"./entityHandlers-D7OoeUEp.js";import"./index-B0_yTF5m.js";import"./mock_user_profile-DyzXylki.js";import"./mockProject-D5M1ms9a.js";import"./fakerUtils-JZNSDtdI.js";import"./times-CNSOYeu0.js";import"./mockFileEntity-PsmjKNEz.js";import"./mock_file_handle-UqdUc3tX.js";import"./mockTableEntity-DsbQcyGJ.js";import"./mockEntity-Z6icFmJG.js";import"./mockSchema-DaG-bHTD.js";import"./uniqueId-CSw6ftlJ.js";import"./userProfileHandlers-DNfa7uXT.js";import"./mockTeam-CKlCHBp4.js";import"./accessRequirementHandlers-BZueioLE.js";import"./mockAccessRequirements-SfzWITOI.js";import"./mockWiki-DEMwf31r.js";import"./MockSubmission-Cf38ay3v.js";import"./mockWikiPageKey-Drt63WJ4.js";import"./BasicMockedCrudService-Meq6LLUE.js";import"./cloneDeep-B4bBaQow.js";import"./fileHandlers-CuhSEk4G.js";import"./MockResearchProject-i_vi31nJ.js";import"./researchProjectHandlers-CRPXbMqd.js";import"./mock_discussion-DuIrMAEt.js";import"./tableQueryHandlers-ztqH7FG3.js";import"./mockEvaluationQueue-BiYUFHwS.js";import"./mockAnnotationColumns-BgQq1KZy.js";import"./personalAccessTokenHandlers-CKxpFkm8.js";import"./teamHandlers-BCkrJi9r.js";import"./accessRequirementAclHandlers-CIMG58FQ.js";import"./mockAccessRequirementAcls-BeXPYLqP.js";import"./resetTwoFactorAuthHandlers-CTK7DxfS.js";const o=[{value:"ASC",label:"Date Posted"},{value:"DESC",label:"Most Recent"}];function F(){const[a,b]=e.useState(s.FORUM),[n,S]=e.useState(o[0]),f=e.useId(),c={objectType:a,sortBy:O.CREATED_ON,sortDirection:n.value},{data:m,hasNextPage:j,isFetchingNextPage:l,fetchNextPage:P}=h(c,{staleTime:1/0,select:t=>({pages:t.pages.flatMap(p=>p.results),pageParams:t.pageParams})},[`subscriptionPageFetch_${f}`,c]);return r.jsxs(r.Fragment,{children:[r.jsx(I,{sx:{float:"right"},children:r.jsx(D,{variant:"outlined",options:o.map(t=>t.label),selectedIndex:o.findIndex(t=>t.value===n.value),setSelectedIndex:t=>S(o[t])})}),r.jsxs(T,{sx:{mb:3},value:a,onChange:(t,p)=>{t.stopPropagation(),b(p)},textColor:"secondary",indicatorColor:"secondary",children:[r.jsx(d,{value:s.FORUM,label:"Project Forums"}),r.jsx(d,{value:s.THREAD,label:"Threads"})]}),r.jsx(v,{gap:.5,children:m==null?void 0:m.pages.map(t=>r.jsx(y,{subscription:t},t.subscriptionId))}),j&&r.jsx(R,{variant:"contained",onClick:()=>{P()},disabled:l,sx:{mt:6},children:l?"Loading...":"Load More"})]})}const po={title:"Synapse/Following/SubscriptionPage",component:F,parameters:{stack:"mock"}},i={name:"SubscriptionPage",args:{},parameters:{msw:{handlers:{...E(C)}}}};var u,g,x;i.parameters={...i.parameters,docs:{...(u=i.parameters)==null?void 0:u.docs,source:{originalSource:`{
  name: 'SubscriptionPage',
  args: {},
  parameters: {
    msw: {
      handlers: {
        ...getHandlers(MOCK_REPO_ORIGIN)
      }
    }
  }
}`,...(x=(g=i.parameters)==null?void 0:g.docs)==null?void 0:x.source}}};const eo=["Demo"];export{i as Demo,eo as __namedExportsOrder,po as default};
