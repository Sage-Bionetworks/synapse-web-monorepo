import{j as e}from"./jsx-runtime-Du8NFWEI.js";import{W as m,a as t}from"./WizardChoiceButtonGroup-Dx3BVMNs.js";import{I as l}from"./LayersTwoTone-hfVo2OcY.js";import{F as d}from"./IconSvg-DFjxuLWD.js";import"./index-Dl6G-zuu.js";import"./Typography-Cqa7rFgc.js";import"./createTheme-BAeQEIuu.js";import"./index-GEGPABih.js";import"./styled-CVek1lbE.js";import"./Box-DN73Q90z.js";import"./createSvgIcon-DGYn73cf.js";import"./spreadSx-CwcO6WA9.js";import"./Tooltip-B_hdhCmy.js";import"./index-OQIcOgx6.js";import"./useTheme-DGffmoS1.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DPWvTaVu.js";import"./mergeSlotProps-D1doMhlu.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CEBgoE3Z.js";import"./index-BIzb42Jq.js";import"./utils-Cn9x6_1Z.js";import"./TransitionGroupContext-TdpM2qIg.js";import"./useControlled-1Y2rT-1r.js";import"./useId-BkqTTtmk.js";import"./useIsFocusVisible-ByxglBfx.js";import"./ErrorOutlined-Cv1ApGtt.js";import"./GetAppTwoTone-2-W2Mxbb.js";import"./InfoOutlined-BOPmYxHD.js";import"./DeleteTwoTone-BaSxwZ9v.js";import"./CheckCircleTwoTone-ChmDaZaB.js";const k={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},i={args:{children:e.jsxs(e.Fragment,{children:[e.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),e.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:e.jsxs(e.Fragment,{children:[e.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:e.jsx(l,{fontSize:"large"})}),e.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:e.jsx(d,{fontSize:"large"})})]})}};var r,s,n;i.parameters={...i.parameters,docs:{...(r=i.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=i.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const J=["Basic","WithIcons"];export{i as Basic,o as WithIcons,J as __namedExportsOrder,k as default};
