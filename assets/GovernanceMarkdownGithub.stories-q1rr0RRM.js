import{u as o}from"./VerificationSubmission-BDh1zA9f.js";import{g as u,bd as d,be as l,B as f,bf as S,M as O}from"./useFiles-DSPyswUJ.js";import"./StringUtils-C95LMFI-.js";import{h as i,H as n}from"./index-B0qEENE5.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-CAyFvS6X.js";import"./SynapseConstants-DUNFlq0e.js";import"./OrientationBanner-BouT6_-v.js";import"./index-ovDtYbUI.js";import"./index-DqCNeVui.js";import"./iframe-DLJ04gD7.js";import"./spreadSx-CwcO6WA9.js";import"./react-DBCxFg72.js";import"./FullWidthAlert-D4uvuPk0.js";import"./Alert-CyNwItA7.js";import"./createTheme-XQ1XG1uT.js";import"./DefaultPropsProvider-B_iKn7F1.js";import"./useSlot-G1t5X145.js";import"./useForkRef-Wbx4V2YI.js";import"./createSimplePaletteValueFilter-0xywFCdl.js";import"./createSvgIcon-AhXV-Lxi.js";import"./Close-M_K7APZJ.js";import"./IconButton-CNFKcrJM.js";import"./useTimeout-Ci1YOS2N.js";import"./ButtonBase-CnbaYMND.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-Bc47s1w8.js";import"./Paper-CYyby8z3.js";import"./useTheme-DbAeu6yd.js";import"./useTheme-CktZyT1n.js";import"./Stack-D9rYCQQF.js";import"./useThemeProps-Uu3RamaM.js";import"./getThemeProps-BLiK3YSp.js";import"./extendSxProp-DQG93Und.js";import"./Box-nPc4YptG.js";import"./AlertTitle-o2mAfrn3.js";import"./Typography-D-0ZBQX2.js";import"./index-Dn5oTu5D.js";import"./ClickAwayListener-vSy9CTVX.js";import"./getReactElementRef-Dojj8YKz.js";import"./index-lhBCL31b.js";import"./index-CQk5-tNr.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BbYs77F_.js";import"./Tooltip-C4CjRY6Y.js";import"./index-B0wLNRQ3.js";import"./useControlled-BbEwI8f2.js";import"./Popper-BTa4sm66.js";import"./Button-BKKfuiiA.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-Dz2CGP3m.js";import"./QueryClientProvider-C0WiXwv4.js";import"./Link-CH4iZoNX.js";import"./Collapse-BH6wb8pT.js";import"./_baseUniq-CqT83kDA.js";import"./_Uint8Array-BN5v77BQ.js";import"./isArray-cRRhqXew.js";import"./_getTag-wQVUyFtv.js";import"./isEqual-dM2_k6w0.js";import"./noop-DX6rZLP_.js";import"./merge-BzIMSKk1.js";import"./_initCloneObject-mADqvNT2.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-BEi6VzVG.js";import"./inputBaseClasses-BfMVnRnK.js";import"./calculateFriendlyFileSize-BUdwJH4A.js";import"./CheckCircleTwoTone-B6jn311F.js";import"./InfoTwoTone-Cwq51stI.js";import"./useMutation-DslBe_ZR.js";import"./dayjs.min-CITIma5U.js";import"./chunk-AYJ5UCUI-DxDCzQTA.js";import"./cloneDeep-BGk3XvFY.js";import"./Skeleton-0b9O17k9.js";import"./SkeletonButton-Cuy_5w7R.js";import"./SkeletonInlineBlock-4BOVwqlp.js";import"./SkeletonTable-DmQ9ZUF3.js";import"./times-C3wDPJ1v.js";import"./toInteger-ChHHjLU6.js";import"./isSymbol-jHnzF1wO.js";import"./SkeletonParagraph-BL0oCV-s.js";import"./MarkdownSynapse-Di6zZNtx.js";import"./Container-pVnsUnTa.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Qr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Xr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Xr as __namedExportsOrder,Qr as default};
