import{g as E}from"./handlers-Cm7MiHcy.js";import{g as j,B as I,M as N}from"./useFiles-DzQRyXfk.js";import{j as t}from"./jsx-runtime-12fxGrjy.js";import{a as h,b as R}from"./useSubscription-D1ClK6mK.js";import{p as s,m as D}from"./VerificationSubmission-DKyendrM.js";import{r as b}from"./index-eWb6yZq4.js";import{D as F}from"./DropdownSelect-BlJOdrnS.js";import"./StringUtils-BcSmk1fX.js";import"./OrientationBanner-CswyJYID.js";import{u as v}from"./useEntity-CVEbv3V6.js";import{c as M}from"./useForum-BqXS2gxw.js";import{T as P}from"./Topic-CiHDTV45.js";import{c as C}from"./useThread-CfKKXGKi.js";import{B as k}from"./Box-0inLKyKa.js";import{T as A,a as T}from"./Tabs-DgRJBGNb.js";import{S as B}from"./Stack-BS_Kn9Ff.js";import{B as $}from"./Button-CDoCRKn7.js";import"./mockSchema-Dt0ItyhW.js";import"./mockFileEntity-9zMeXLfq.js";import"./mock_file_handle-qAzg5fnb.js";import"./mock_user_profile-CCzWeUML.js";import"./mockProject-DRFLn26f.js";import"./mockTeam-Z0453aY1.js";import"./SynapseConstants-C01AROpC.js";import"./uniqueId-qr-Ywx-H.js";import"./toString-DYVPJQOI.js";import"./isObjectLike-DitNMTVV.js";import"./iframe-DODfCr77.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-B7kXK_Sf.js";import"./times-GoUGRPna.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DaMMoq_0.js";import"./asyncJobHandlers-J4YIm5ro.js";import"./index-DAkccYHG.js";import"./util-D1oraNnE.js";import"./BasicMockedCrudService-BBqgERxy.js";import"./cloneDeep-C54KQJJc.js";import"./_Uint8Array-MTHtMqKk.js";import"./_initCloneObject-C69klfYQ.js";import"./_getTag-C-k0-mgg.js";import"./isEqual-bHqmOGPc.js";import"./mockAnnotationColumns-DELOQFjr.js";import"./tableQueryHandlers-BC5rgBJT.js";import"./omit-D5TwlpBk.js";import"./_baseGet-B-JdDjq0.js";import"./isNil-DLNdS6CO.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-C4MUQ4-m.js";import"./_baseFlatten-VRHz-ONI.js";import"./pick-9fI_zxgA.js";import"./_baseSet-Bcqqm8ZH.js";import"./hasIn-CyK6Yb87.js";import"./accessRequirementAclHandlers-C874AheL.js";import"./mockAccessRequirementAcls-BxVrtThQ.js";import"./mockAccessRequirements-DO_z0dEf.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CfZ4orwO.js";import"./accessRequirementHandlers-BOPNOukI.js";import"./wikiHandlers-R24fS8t3.js";import"./mockWikiPageKey-CCo33Xix.js";import"./teamHandlers-DdsU4WNB.js";import"./dataAccessRequestHandlers-B8_Uy61r.js";import"./MockResearchProject-DkEbOgj1.js";import"./mock_discussion-DPQR0l_O.js";import"./fakerUtils-CVTR6T0z.js";import"./index-CpQ5tZuO.js";import"./mockTableEntity-2YPRIagH.js";import"./mockFileEntityACLVariants-CWHC6prd.js";import"./entityHandlers-Cbbopc-d.js";import"./mockEntity-DbD35v3E.js";import"./mockEvaluationQueue-CKZfZvEv.js";import"./featureFlagHandlers-Bpm3liKo.js";import"./fileHandlers-CIYoQjwI.js";import"./personalAccessTokenHandlers-BHy7kPUL.js";import"./researchProjectHandlers-wGUALaO-.js";import"./resetTwoFactorAuthHandlers-COR27kbb.js";import"./userProfileHandlers-BkbfJ7OO.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useTimeout-CUTjfTtv.js";import"./FullWidthAlert-Blq3bBEi.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-DWxtKETL.js";import"./createTheme-DRhRClLk.js";import"./DefaultPropsProvider-Ci8sbTV8.js";import"./useSlot-BOoc1-Wr.js";import"./useForkRef-B4NxTtZx.js";import"./createSimplePaletteValueFilter-CMraNz6N.js";import"./createSvgIcon-D4n9PHew.js";import"./Close-DkJIaBp5.js";import"./IconButton-CJduSAtX.js";import"./ButtonBase-CLm9sSu-.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-CdPHbqUK.js";import"./Paper-Ci3Yueie.js";import"./useTheme-Do_MDklG.js";import"./useTheme-z8lzzdCb.js";import"./AlertTitle-Ck-1gEhW.js";import"./Typography-CJHr4OCJ.js";import"./index-BwS5CNFE.js";import"./extendSxProp-DI5yyw6H.js";import"./ClickAwayListener-DO69o72C.js";import"./getReactElementRef-DFFPg7hK.js";import"./index-CxQ-mLV2.js";import"./index-DlwQbzBX.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BKGYiqhi.js";import"./Tooltip-CxkZFGgd.js";import"./index-COCW-O7-.js";import"./useControlled-C7HItnBl.js";import"./Popper-CmdmamXe.js";import"./useQuery-DrZ8vTnH.js";import"./utils-j4SBhjSC.js";import"./Link-DTOk0JUk.js";import"./Collapse-CErYxnBs.js";import"./tinycolor-Begke6kS.js";import"./Fade-B3HIOSOQ.js";import"./inputBaseClasses-iQvrcFLc.js";import"./calculateFriendlyFileSize-DKkGrI5V.js";import"./CheckCircleTwoTone-CIQNt3ux.js";import"./InfoTwoTone-BKwLIjWH.js";import"./useMutation-BJDaPx8l.js";import"./dayjs.min-CmKjBYsK.js";import"./chunk-AYJ5UCUI-C563RCUQ.js";import"./Skeleton-DP5N4NIj.js";import"./useInfiniteQuery-U-GyhFKU.js";import"./IconSvg-BfVpXF4R.js";import"./LayersTwoTone-BAa9CFuf.js";import"./ContentCopyTwoTone-Fe1iwCTQ.js";import"./HelpOutlineTwoTone-DZ_erCSM.js";import"./ErrorOutlined-DcXd7Kcs.js";import"./GetAppTwoTone-yFbu9vqt.js";import"./InfoOutlined-DGci8fUT.js";import"./PhoneTwoTone-BkiOlfqr.js";import"./DeleteTwoTone-DN6ezQup.js";import"./getValidReactChildren-BEdtjeNv.js";import"./MenuList-BiUoWJD1.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./List-CkGBFIVY.js";import"./MenuItem-o6l98Vc3.js";import"./dividerClasses-D1BGb3OC.js";import"./index-CMNPibww.js";import"./react-Bk-AWK8u.js";import"./pickBy-CPOBR_mK.js";import"./_baseIndexOf-rBnIfvEs.js";import"./isString-BzhJFpRr.js";import"./_baseIteratee-Cy7bhYwJ.js";import"./useQueries-BJbVrKK9.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntityBundle-C5BuaHfd.js";import"./ConditionalWrapper-C88dLs_Z.js";import"./debounce-Be36O1Ab.js";import"./KeyboardArrowRight-BAI30vJ0.js";import"./getThemeProps-SQagHrVW.js";function g(i){const{subscription:p}=i,{data:o}=M(p.objectId),{data:m}=v(o==null?void 0:o.projectId,void 0,{enabled:!!o}),{isSubscribed:a,isLoading:n,toggleSubscribed:e}=h(p.objectId,s.FORUM);let c;return o&&(c=`${j(I.PORTAL_ENDPOINT)}Synapse:${o.projectId}/discussion`),t.jsx(P,{isLoading:n,isSubscribed:a,icon:"dashboard",name:m==null?void 0:m.name,nameHref:c,onToggleSubscribe:e})}try{g.displayName="ForumTopic",g.__docgenInfo={description:"",displayName:"ForumTopic",props:{subscription:{defaultValue:null,description:"",name:"subscription",required:!0,type:{name:"Subscription"}}}}}catch{}function H(i){const{subscription:p}=i,{threadData:o}=C(p.objectId),{isSubscribed:m,isLoading:a,toggleSubscribed:n}=h(p.objectId,s.THREAD);let e;return o&&(e=`${j(I.PORTAL_ENDPOINT)}Synapse:${o.projectId}/discussion/threadId=${p.objectId}`),t.jsx(P,{isLoading:a,isSubscribed:m,icon:"discussion",name:o==null?void 0:o.title,nameHref:e,onToggleSubscribe:n})}try{ThreadTopic.displayName="ThreadTopic",ThreadTopic.__docgenInfo={description:"",displayName:"ThreadTopic",props:{subscription:{defaultValue:null,description:"",name:"subscription",required:!0,type:{name:"Subscription"}}}}}catch{}function S(i){const{subscription:p}=i;switch(p.objectType){case s.FORUM:return t.jsx(g,{subscription:p});case s.THREAD:return t.jsx(H,{subscription:p});default:return console.warn(`Subscription type ${i.subscription.objectType} not supported in UI`),t.jsx(t.Fragment,{})}}try{S.displayName="SubscriptionItem",S.__docgenInfo={description:`Simple discriminator component that maps a {@link Subscription} rendered on the {@link SubscriptionPage } to
a {@link Topic } component`,displayName:"SubscriptionItem",props:{subscription:{defaultValue:null,description:"",name:"subscription",required:!0,type:{name:"Subscription"}}}}}catch{}const d=[{value:"ASC",label:"Date Posted"},{value:"DESC",label:"Most Recent"}];function w(){const[i,p]=b.useState(s.FORUM),[o,m]=b.useState(d[0]),a=b.useId(),n={objectType:i,sortBy:D.CREATED_ON,sortDirection:o.value},{data:e,hasNextPage:c,isFetchingNextPage:f,fetchNextPage:O}=R(n,{staleTime:1/0,select:r=>({pages:r.pages.flatMap(l=>l.results),pageParams:r.pageParams})},[`subscriptionPageFetch_${a}`,n]);return t.jsxs(t.Fragment,{children:[t.jsx(k,{sx:{float:"right"},children:t.jsx(F,{variant:"outlined",options:d.map(r=>r.label),selectedIndex:d.findIndex(r=>r.value===o.value),setSelectedIndex:r=>m(d[r])})}),t.jsxs(A,{sx:{mb:3},value:i,onChange:(r,l)=>{r.stopPropagation(),p(l)},textColor:"secondary",indicatorColor:"secondary",children:[t.jsx(T,{value:s.FORUM,label:"Project Forums"}),t.jsx(T,{value:s.THREAD,label:"Threads"})]}),t.jsx(B,{sx:{gap:.5},children:e==null?void 0:e.pages.map(r=>t.jsx(S,{subscription:r},r.subscriptionId))}),c&&t.jsx($,{variant:"contained",onClick:()=>{O()},disabled:f,sx:{mt:6},children:f?"Loading...":"Load More"})]})}const Hr={title:"Synapse/Following/SubscriptionPage",component:w,parameters:{stack:"mock"}},u={name:"SubscriptionPage",args:{},parameters:{msw:{handlers:{...E(N)}}}};var _,y,x;u.parameters={...u.parameters,docs:{...(_=u.parameters)==null?void 0:_.docs,source:{originalSource:`{
  name: 'SubscriptionPage',
  args: {},
  parameters: {
    msw: {
      handlers: {
        ...getHandlers(MOCK_REPO_ORIGIN)
      }
    }
  }
}`,...(x=(y=u.parameters)==null?void 0:y.docs)==null?void 0:x.source}}};const wr=["Demo"];export{u as Demo,wr as __namedExportsOrder,Hr as default};
