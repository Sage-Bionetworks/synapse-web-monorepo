import{g as f}from"./userProfileHandlers-toeFwk2d.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-DuViLq23.js";import{A}from"./AccountLevelBadges-CRRtXwda.js";import"./VerificationSubmission-16RBrwfH.js";import"./index-BuCj7N-e.js";import"./iframe-CI5-WtwK.js";import"./mockEntity-C1_i4Rj1.js";import"./mockFileEntity-Dr7UnBAS.js";import"./StringUtils-B_EIkN_W.js";import"./mock_file_handle-t2fDWYxy.js";import"./mockProject-CCRzB_5Z.js";import"./mockTeam-BFyJybbi.js";import"./SynapseConstants-DY1vPOSt.js";import"./OrientationBanner-DEjvhhkO.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-k8EbPwIf.js";import"./index-Ch_aZLn_.js";import"./spreadSx-CwcO6WA9.js";import"./react-Dle4gBSE.js";import"./FullWidthAlert-DklTb4C2.js";import"./Alert-BXqk_EFs.js";import"./createTheme-DWKcqxZO.js";import"./DefaultPropsProvider-BOR8cixV.js";import"./useSlot-v3S8d4Me.js";import"./useForkRef-DD0BRKwM.js";import"./createSimplePaletteValueFilter-BRtROzR7.js";import"./createSvgIcon-cgSLMIRF.js";import"./Close-sWM4NlLX.js";import"./IconButton-D_JizBUn.js";import"./useTimeout-C3ViWOZE.js";import"./ButtonBase-y5cp9N5N.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-iGeWZHKy.js";import"./Paper-DMgTMQqE.js";import"./useTheme-BgBU0W92.js";import"./useTheme-DraLcqT-.js";import"./Stack-DRHl7oE0.js";import"./extendSxProp-BZsQLNzI.js";import"./getThemeProps-Cbe8FKqW.js";import"./Box-r19TyWLG.js";import"./AlertTitle-YoFO0mon.js";import"./Typography-v4sz5jpM.js";import"./index-CFx7Mj6k.js";import"./ClickAwayListener-DIcSIyaF.js";import"./getReactElementRef-8cD_D0A_.js";import"./index-CQOFabK9.js";import"./index-BwE16z8y.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-nN5WW0Nv.js";import"./Tooltip-BfL26sZT.js";import"./index-BIWc0o4N.js";import"./useControlled-CtiBNzN3.js";import"./Popper-D39nZAe3.js";import"./Button-LwXCcibx.js";import"./uniqueId-_sv1IR-x.js";import"./toString-BwNyYB84.js";import"./isArray-DIc-j-dU.js";import"./isSymbol-BFWFicjn.js";import"./times-CvH4XWRv.js";import"./_Uint8Array-Bt1VOqAT.js";import"./identity-DKeuBCMA.js";import"./toInteger-BxsiMvzs.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-BlY2-kTk.js";import"./QueryClientProvider-CSJxH1Zj.js";import"./Link-B7Ndy3lm.js";import"./Collapse-a_QEZvvt.js";import"./_baseUniq-BOtOiC6R.js";import"./_getTag-DW3AeXlF.js";import"./isEqual-D-HOqnX0.js";import"./merge-I161Dzxp.js";import"./_initCloneObject-PeUHaPAg.js";import"./tinycolor-Begke6kS.js";import"./Fade-COAO7VK-.js";import"./inputBaseClasses-DXlh6jL0.js";import"./calculateFriendlyFileSize-DtUFCIlM.js";import"./CheckCircleTwoTone-CVULLzOo.js";import"./InfoTwoTone-DJUUXs8t.js";import"./useMutation-DlzCxcO4.js";import"./dayjs.min-DePkvkHB.js";import"./chunk-AYJ5UCUI-VJcsE_sA.js";import"./cloneDeep-DMhImPhU.js";import"./Skeleton-CZxlvoNC.js";import"./AccountLevelBadge-f5PK1ru-.js";import"./Card-TL8pwDU9.js";import"./ConfirmationDialog-Bmuvvv7Y.js";import"./DialogBase-DYOSDpGU.js";import"./Close-eU55y3-k.js";import"./HelpPopover-CWe06rWw.js";import"./MarkdownPopover-CVOKukuD.js";import"./LightTooltip-GfIcYbmP.js";import"./MarkdownSynapse-C-g5REht.js";import"./SkeletonButton-D1ylmPHp.js";import"./SkeletonInlineBlock-BymLLxu8.js";import"./SkeletonTable-DowEfYfG.js";import"./SkeletonParagraph-Dit5e4mp.js";import"./HelpOutlineTwoTone-spSdS1xD.js";import"./DialogTitle-ZGqTsrR2.js";import"./DialogContent-CgDUCBIp.js";import"./Dialog-CiyGv2tu.js";import"./Modal-UGzrjFRv.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-C1Wygpy6.js";import"./LoadingScreen-D9dCohHt.js";import"./LinearProgress-BPerAxoX.js";import"./ToastMessage-E5oi8bxP.js";import"./CSSTransition-BejYgi7P.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
