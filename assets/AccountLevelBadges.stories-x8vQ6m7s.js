import{g as f}from"./userProfileHandlers-UrhWKi1a.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-DMCaKYx_.js";import{A}from"./AccountLevelBadges-D0Km4sBo.js";import"./VerificationSubmission-CDh9xETu.js";import"./index-BvawdWuw.js";import"./iframe-C1GxMnSF.js";import"./mockEntity-CQhcF_EF.js";import"./mockFileEntity-DmC5RuRH.js";import"./StringUtils-_BY2npJD.js";import"./mock_file_handle-7frMWCuU.js";import"./mockProject-C_tJouB_.js";import"./mockTeam-C0lgefdn.js";import"./SynapseConstants-Bwr8pSXM.js";import"./OrientationBanner-Du-Bw8Mf.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-Ctrt0GTW.js";import"./index-dRMNsM6r.js";import"./spreadSx-CwcO6WA9.js";import"./react-BVjGH0qj.js";import"./FullWidthAlert-D44pg8w2.js";import"./Alert-COQ3nnEa.js";import"./createTheme-II-gce0K.js";import"./DefaultPropsProvider-DpDTlY9g.js";import"./useSlot-DNSvN4UU.js";import"./useForkRef-A6I0jKwp.js";import"./createSimplePaletteValueFilter-D_QP2TIw.js";import"./createSvgIcon-CYX0Tew8.js";import"./Close-DWgxR1B3.js";import"./IconButton-DIOOSn47.js";import"./useTimeout-vUNmq_Ja.js";import"./ButtonBase-4leAHaA8.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-Ch5OpiUe.js";import"./Paper-DuTz12zY.js";import"./useTheme-CvXzZeki.js";import"./useTheme-r15zWzow.js";import"./Stack-C8Za8DAU.js";import"./extendSxProp-Djd_jGwW.js";import"./getThemeProps-BPzt8l9W.js";import"./Box-D5Fxj2nM.js";import"./AlertTitle-DvEksnrC.js";import"./Typography-CqEvxqsG.js";import"./index-DcmlVU4e.js";import"./ClickAwayListener-BDjF2LUg.js";import"./getReactElementRef-DKRUGJMP.js";import"./index-BhOHl5zu.js";import"./index-D1wMG73m.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DbqcAO5i.js";import"./Tooltip-BjtJtB3s.js";import"./index-CecS_nQt.js";import"./useControlled-DAPaJ43j.js";import"./Popper-CiMmGBvk.js";import"./Button-Cfsde_36.js";import"./uniqueId-AcO0xpCS.js";import"./toString-CkrrfWKO.js";import"./isArray-Ba9Vt-uY.js";import"./isSymbol-CP8YDRGU.js";import"./times-IbYjmemR.js";import"./_Uint8Array-CwKcyaa6.js";import"./identity-DKeuBCMA.js";import"./toInteger-BuOiAxM7.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-BEloXky3.js";import"./QueryClientProvider-Ze6iADVs.js";import"./Link-D_PCEKs0.js";import"./Collapse-DgpS2Hov.js";import"./_baseUniq-D2tVVG5U.js";import"./_getTag-1Ee3ZuLF.js";import"./isEqual-DffE9IoK.js";import"./merge-CVA6Ete2.js";import"./_initCloneObject-B5PifE7N.js";import"./tinycolor-Begke6kS.js";import"./Fade-BI1VlvIU.js";import"./inputBaseClasses-332p_dKL.js";import"./calculateFriendlyFileSize-COMcZm57.js";import"./CheckCircleTwoTone-B-hwok2b.js";import"./InfoTwoTone-CKY1kk3g.js";import"./useMutation-DxXMTOE2.js";import"./dayjs.min-B7hk726v.js";import"./chunk-AYJ5UCUI-D2JU_FS7.js";import"./cloneDeep-Dkw8GaT_.js";import"./Skeleton-CwMQHgSR.js";import"./AccountLevelBadge-jvNNZpIv.js";import"./Card-CuHro31O.js";import"./ConfirmationDialog-Da45iyks.js";import"./DialogBase-B4C9N8b9.js";import"./Close-BT-tRawu.js";import"./HelpPopover-DgQM8r45.js";import"./MarkdownPopover-BO2K6x0T.js";import"./LightTooltip-D-TahpZZ.js";import"./MarkdownSynapse-CbGJu2ky.js";import"./SkeletonButton-CSisM0XE.js";import"./SkeletonInlineBlock-BQGAjQNt.js";import"./SkeletonTable-DItx5p4Q.js";import"./SkeletonParagraph-Cm_iuFcp.js";import"./HelpOutlineTwoTone-CwZJSbt-.js";import"./DialogTitle-BgNgok6c.js";import"./DialogContent-_Wjr1JOX.js";import"./Dialog-pw2nvVzV.js";import"./Modal-XGALgcTS.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-o_xYbFGg.js";import"./LoadingScreen-CQS6nMOh.js";import"./LinearProgress-CUwV5ME8.js";import"./ToastMessage-DQXl1f2F.js";import"./CSSTransition-CK9Tdev9.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
