import{g as f}from"./userProfileHandlers-BlgYCzDQ.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-Dzh-xGba.js";import{A}from"./AccountLevelBadges-BL1RAL6C.js";import"./VerificationSubmission-DHPhgAH7.js";import"./index-D_s-PUqw.js";import"./OrientationBanner-DELzGaI_.js";import"./jsx-runtime-BZeBjSIS.js";import"./index-CjoTohT0.js";import"./iframe-CvhAkLtT.js";import"./index-CZ6nZZM5.js";import"./spreadSx-CwcO6WA9.js";import"./react-B_ep3ieK.js";import"./FullWidthAlert-BXqxc3wv.js";import"./Alert-7_PfCLqB.js";import"./createTheme-bwx9K6ts.js";import"./resolveComponentProps-a0-4iTOu.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-D4KURWw8.js";import"./createSvgIcon-DbCE1SVw.js";import"./DefaultPropsProvider-DUfDTxF6.js";import"./Close-CimlcXQB.js";import"./IconButton-C6l0SFmN.js";import"./ButtonBase-BbwScQV5.js";import"./useTimeout-CVOpskps.js";import"./TransitionGroupContext-UobnCySz.js";import"./useIsFocusVisible-BO1LLD9d.js";import"./useEventCallback-Cf7PpRR2.js";import"./Paper-BYyNkBER.js";import"./Stack-B020NLmB.js";import"./getThemeProps-BKFu32XS.js";import"./useTheme-SJCcizRe.js";import"./Box-DHzWNABX.js";import"./AlertTitle-Dgp4KesF.js";import"./Typography-DUG2FEmz.js";import"./useTheme-uJlIsAiP.js";import"./Grow-x5lwJPlc.js";import"./index-DTVgpHag.js";import"./utils-CAcyHLoV.js";import"./ClickAwayListener-Dt9keXb4.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-CLFxhQMN.js";import"./index-BH5wt59E.js";import"./useControlled-Cbsj5wQj.js";import"./useId-ByMtCpEj.js";import"./Popper-DsfBWyJe.js";import"./Button-DMakyqZH.js";import"./util-DJyy0RN6.js";import"./mockEntity-BxvCziLe.js";import"./mockFileEntity-Cjmoa73E.js";import"./StringUtils-Bj0SG9ce.js";import"./mock_file_handle-C2NjfX48.js";import"./mockProject-ClB6iJQu.js";import"./mockTeam-BvGPFK8x.js";import"./SynapseConstants-DV83Gi-b.js";import"./uniqueId-CXvGH3bE.js";import"./toString-z4n4XpTO.js";import"./isObjectLike-CrwNC6oF.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BRnPZc8c.js";import"./times-De0aD8Xw.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-D929D5Ls.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./useQuery-DnQsqcrx.js";import"./utils-DH5Oqlgj.js";import"./Link-Y75nS1QX.js";import"./Collapse-ffc1sN3U.js";import"./isNil-D3yHmM32.js";import"./_Uint8Array--_t6qXLg.js";import"./_baseIsEqual-DtJNdB66.js";import"./_getTag-CKpP1EoQ.js";import"./tinycolor-Begke6kS.js";import"./Fade-BuGhOS_y.js";import"./Skeleton-BcT1rE-U.js";import"./inputBaseClasses-DPMPLyNE.js";import"./calculateFriendlyFileSize-9wUeoNJq.js";import"./CheckCircleTwoTone-UctgIY4f.js";import"./InfoTwoTone-DIz8M3OP.js";import"./useMutation-C2yIdTsq.js";import"./isEqual-qdpfjJTj.js";import"./dayjs.min-D6B11bIY.js";import"./chunk-AYJ5UCUI-BI5gnHbm.js";import"./cloneDeep-DCOcf-ad.js";import"./_initCloneObject-Cq-aANJ9.js";import"./merge-D2stCHL9.js";import"./AccountLevelBadge-7nQ2tdEG.js";import"./Card-BvFzpoKW.js";import"./ConfirmationDialog-BA7yNn1-.js";import"./DialogBase-CkABauaz.js";import"./Close-JzvEvioB.js";import"./createSvgIcon-Dj-wH0x2.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-D2R7xU9B.js";import"./ownerWindow-HkKU3E4x.js";import"./HelpPopover-CYRcYlol.js";import"./MarkdownPopover-BHaBsnFx.js";import"./LightTooltip-BhYVFK-1.js";import"./MarkdownSynapse-CvB7Heat.js";import"./SkeletonButton-BEnTmZDa.js";import"./SkeletonInlineBlock-eDPtkaaD.js";import"./SkeletonTable-C_uULwMl.js";import"./SkeletonParagraph-DkXoiRal.js";import"./HelpOutlineTwoTone-CLncRXxx.js";import"./DialogTitle-ZYngU81f.js";import"./DialogContent-VSp4edc4.js";import"./Dialog-fb7Cl-bg.js";import"./Modal-DNKhx0Xq.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-uvLePzPc.js";import"./LoadingScreen-DAPqxzxw.js";import"./LinearProgress-B2U6L2oF.js";import"./ToastMessage-DEAa4r0P.js";import"./CSSTransition-DQTmhlEj.js";const Pt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Vt=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Vt as __namedExportsOrder,Pt as default};
