import{j as l}from"./jsx-runtime-Cpzuo2ay.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DsgC4t7y.js";import{g as T}from"./handlers-DwlyqsPd.js";import{aD as S,M as a}from"./useFiles-BHzIddvO.js";import"./OrientationBanner-Di6wDKmu.js";import"./index-qzbKbFlq.js";import"./StringUtils-tNCAfVhp.js";import{l as _}from"./index-CCIBj4ML.js";import{S as E}from"./SynapseFormSubmissionGrid-B_nCeNSn.js";import"./mockSchema-1gvdGV33.js";import"./mockFileEntity-mLFEC5ui.js";import"./mock_file_handle-DS_yjaGE.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-Ck2N2lV2.js";import"./mockTeam-1hVKoywY.js";import"./SynapseConstants-DQnuBn7R.js";import"./uniqueId-DVEz_6te.js";import"./toString-Bk6nik-V.js";import"./isObjectLike-sZnKwddx.js";import"./iframe-B7UWlENb.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BjZPbA0U.js";import"./times-D-Y5GPLw.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DPyE9_s_.js";import"./asyncJobHandlers-JG1Rxw-b.js";import"./BasicMockedCrudService-CM1D82n8.js";import"./cloneDeep-Bk965Mg-.js";import"./_Uint8Array-BeS2nPDv.js";import"./_initCloneObject-o-TgjwA3.js";import"./_getTag-BvHcUwIL.js";import"./isEqual-DJSPEdYQ.js";import"./_baseIsEqual-i7PtvCG3.js";import"./mockAnnotationColumns-FcVe7xY8.js";import"./tableQueryHandlers-CT_WxC-H.js";import"./omit-ttaSjV3B.js";import"./_baseGet-BPjeJ4Uz.js";import"./isNil-BFbe1Fm3.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-DYg2YPZj.js";import"./_baseFlatten-D64VVjIc.js";import"./pick-DcHk6yER.js";import"./_baseSet-Dp2YrFYR.js";import"./hasIn-DjxvxZRE.js";import"./accessRequirementAclHandlers-B-ep6a2W.js";import"./mockAccessRequirementAcls-CcV6B4Tu.js";import"./mockAccessRequirements-C7QAWxpN.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DHj13qiO.js";import"./accessRequirementHandlers-BqG34iCL.js";import"./wikiHandlers-vbOAichP.js";import"./mockWikiPageKey-BTxz0h9g.js";import"./teamHandlers-Bg7nLs9I.js";import"./dataAccessRequestHandlers-sJFKHJru.js";import"./MockResearchProject-CRJmJtgE.js";import"./mock_discussion-DUEtkx8c.js";import"./fakerUtils-Bl1w0b_W.js";import"./index-C5Xc_yBN.js";import"./mockTableEntity-CYBlHaR4.js";import"./mockFileEntityACLVariants-Chi9uWig.js";import"./entityHandlers-DTuIZ4UN.js";import"./mockEntity-Bhw5VHY4.js";import"./mockEvaluationQueue-j5djHGmz.js";import"./featureFlagHandlers-01EJZqP5.js";import"./fileHandlers-DZGy3r88.js";import"./personalAccessTokenHandlers-CLrFvySN.js";import"./researchProjectHandlers-CPIKJuWF.js";import"./resetTwoFactorAuthHandlers-CTXwkOPU.js";import"./userProfileHandlers-DrXd2tBG.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-C6XQh8Dh.js";import"./FullWidthAlert-CYLONltS.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-BoJtOfcQ.js";import"./createTheme-BSeZw0jO.js";import"./resolveComponentProps-CxH78Z7f.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-Dl0HqeWq.js";import"./createSvgIcon-ClunDJ6D.js";import"./DefaultPropsProvider-Bptl8wGp.js";import"./Close-C7ppEedf.js";import"./IconButton-DdxKVWSD.js";import"./ButtonBase-Cd6E67ue.js";import"./useTimeout-QDIkgYlw.js";import"./useIsFocusVisible-yY6MxYkr.js";import"./useEventCallback-DFF1Wb54.js";import"./Paper-C_MNeKnS.js";import"./Stack-NeCVAsSl.js";import"./getThemeProps-v3E6r25K.js";import"./useTheme-CanYvo4O.js";import"./Box-DWG1pAIJ.js";import"./AlertTitle-CXuF7YB4.js";import"./Typography-UpxeVSC9.js";import"./useTheme-BXUKSYiP.js";import"./Grow---qI4Xyl.js";import"./index-V6m7UmXo.js";import"./utils-UQqgZKk5.js";import"./ClickAwayListener-BsZYeWwC.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-x8bHq8cu.js";import"./index-DhW7zJ1I.js";import"./useControlled-0Y9QxmiD.js";import"./useId-BZdi58KL.js";import"./Popper-DJNlKWGH.js";import"./Button-CJoc-lWM.js";import"./useQuery-B_mXUuWt.js";import"./utils-BsHt5Ez6.js";import"./Link-bG66493O.js";import"./Collapse-JpDvYyye.js";import"./tinycolor-Begke6kS.js";import"./Fade-BXyi4DiG.js";import"./Skeleton-Lg9a-sk4.js";import"./inputBaseClasses-BcoPWVf4.js";import"./calculateFriendlyFileSize-LFzydKri.js";import"./CheckCircleTwoTone-JlmlKZJ4.js";import"./InfoTwoTone-CWclAxfb.js";import"./mutation-Hk4gcjTH.js";import"./dayjs.min-C7AzIqXS.js";import"./chunk-AYJ5UCUI-C6fnNANP.js";import"./index-D_POy7Ue.js";import"./react-DhQQnVH8.js";import"./util-B3rfSkUt.js";import"./WideButton-CoO4JA1j.js";import"./DeleteTwoTone-COGTZsxr.js";import"./createSvgIcon-BpGbIKWi.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-CjPkDUSD.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-BWw15vQZ.js";import"./DialogBase-BMMrkLGe.js";import"./Close-B6YoFjeM.js";import"./HelpPopover-DQujau3e.js";import"./MarkdownPopover-ToVD7Er2.js";import"./LightTooltip-h8Q8NX_O.js";import"./MarkdownSynapse-Bi9a_AZc.js";import"./useMutation-DIiovDAa.js";import"./SkeletonButton-C5_lomWq.js";import"./SkeletonInlineBlock-yqDUUNs0.js";import"./SkeletonTable-5zaLHpm6.js";import"./SkeletonParagraph-BspSCshB.js";import"./HelpOutlineTwoTone-CLq2ztTl.js";import"./DialogTitle-B7tXlWzb.js";import"./DialogContent-CGT-k4N3.js";import"./Dialog-DHYRw23I.js";import"./Modal-Cv0ntpav.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-CGBHLPj9.js";import"./WarningDialog-BEUgzjap.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},To={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const _o=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,_o as __namedExportsOrder,To as default};
