import{j as l}from"./jsx-runtime-soP0eJw3.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-Dp0Ow3DB.js";import{aH as S,M as a}from"./useFiles-B7wbSLKA.js";import"./OrientationBanner-CALynnLL.js";import"./index-hpfWuA9c.js";import"./StringUtils-Df7AZImX.js";import{l as _}from"./index-wIIOyg3-.js";import{S as E}from"./SynapseFormSubmissionGrid-FZnBWJmU.js";import"./mockSchema-DJatfRFc.js";import"./mockFileEntity-BYobeBnx.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-DyRpwx8S.js";import"./mockTeam-B6epm6Gi.js";import"./SynapseConstants-6diw_2V4.js";import"./uniqueId-BjzMKLwO.js";import"./toString-B_o-A1No.js";import"./isObjectLike-Bbw-pWo9.js";import"./iframe-BHoKq1w1.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-10cJLTdp.js";import"./times-C5D6YhQw.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-NnnZ41vA.js";import"./asyncJobHandlers-BcH5IDLB.js";import"./BasicMockedCrudService-_4x_2gWK.js";import"./cloneDeep-CVJPWTAF.js";import"./_Uint8Array-DTt4064I.js";import"./_initCloneObject-BJtqxeAa.js";import"./_getTag-D37krsF-.js";import"./isEqual-Ci70EvoW.js";import"./_baseIsEqual-CZFbHhrG.js";import"./mockAnnotationColumns-5CN6RyOd.js";import"./tableQueryHandlers-B1fDqk4p.js";import"./omit-DDzKybNc.js";import"./_baseGet-CiFJy36y.js";import"./isNil-CvysbORv.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-D-nboOHF.js";import"./_baseFlatten-BxvMRVrP.js";import"./pick-BUgj7FFx.js";import"./_baseSet-BweJ4Hzh.js";import"./hasIn-WnVodpwV.js";import"./accessRequirementAclHandlers-CKjh6q9U.js";import"./mockAccessRequirementAcls-pWFGyg28.js";import"./mockAccessRequirements-CS3nirMj.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-Cclj41JT.js";import"./wikiHandlers-CXaL2wVf.js";import"./mockWikiPageKey-B-IlUY-_.js";import"./teamHandlers-Cg47M4SQ.js";import"./dataAccessRequestHandlers-BKHOc-_n.js";import"./MockResearchProject-0RplqFAX.js";import"./mock_discussion-DcXJslAo.js";import"./fakerUtils-DQ6Lhpxi.js";import"./index-BAcHXPSe.js";import"./mockTableEntity-C1d51wsD.js";import"./mockFileEntityACLVariants-BKWM88X2.js";import"./entityHandlers-DtqSoCdB.js";import"./mockEntity-CihM9n8Z.js";import"./mockEvaluationQueue-CpQ0v9tK.js";import"./featureFlagHandlers-NZbZbRQz.js";import"./fileHandlers-skZwQpyl.js";import"./personalAccessTokenHandlers-DINdjzaf.js";import"./researchProjectHandlers-pYFevsDD.js";import"./resetTwoFactorAuthHandlers-BQdT7Fij.js";import"./userProfileHandlers-Dkve9PXX.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-D0hM1Q67.js";import"./FullWidthAlert-Boq7L3Qf.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-Dvpc-zfR.js";import"./createTheme-Dpipd2B4.js";import"./resolveComponentProps-C2Zw4Y40.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-D4rX5W63.js";import"./createSvgIcon-DBYVCs44.js";import"./DefaultPropsProvider-PXZSU-pD.js";import"./Close-D3yIz2Os.js";import"./IconButton-BWQMO1ah.js";import"./ButtonBase-Df7HWHxL.js";import"./useTimeout-CZFMIsWC.js";import"./useIsFocusVisible-DiKKqeBi.js";import"./useEventCallback-B8sxSnWX.js";import"./Paper-C_pRCP3n.js";import"./Stack-DlM6dtWc.js";import"./getThemeProps-BDNwUju8.js";import"./useTheme-BvuKB97Z.js";import"./Box-B-UIBw2g.js";import"./AlertTitle-BqaE6HNK.js";import"./Typography-Bmj31eeD.js";import"./useTheme-Dxbanuns.js";import"./Grow-CQfJefys.js";import"./index-Cu-xJgCv.js";import"./utils-BJRE2IYR.js";import"./ClickAwayListener-DeeVJesb.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BIvonp8D.js";import"./index-DdAibAWs.js";import"./useControlled-YZ_o9Ute.js";import"./useId-CpvJc5ah.js";import"./Popper-C8BiWNkC.js";import"./Button-G66wYlJC.js";import"./useQuery-BrR264Iv.js";import"./utils-DQrTSbe2.js";import"./Link-BDjhksuj.js";import"./Collapse-CwH3Wopy.js";import"./tinycolor-Begke6kS.js";import"./Fade-CXUBWJhZ.js";import"./Skeleton-DvLjtclJ.js";import"./inputBaseClasses-CAkrk-fM.js";import"./calculateFriendlyFileSize-DnMRx2GO.js";import"./CheckCircleTwoTone-6jKvRjuJ.js";import"./InfoTwoTone-l-H02dCE.js";import"./mutation-DZlyKlKR.js";import"./dayjs.min-BIqhQsmA.js";import"./chunk-AYJ5UCUI-0avzdJN8.js";import"./index-COJsKla7.js";import"./react-l0lHratm.js";import"./util-BTti4Cqd.js";import"./WideButton-OAnSMDcG.js";import"./DeleteTwoTone-BgfTBYjv.js";import"./createSvgIcon-DEjyzaPa.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-BKBl8pzV.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-CxgK1GsP.js";import"./DialogBase-HapxaB8A.js";import"./Close-J5mnF1TW.js";import"./HelpPopover-BZRNsyG5.js";import"./MarkdownPopover-Bkuto_5o.js";import"./LightTooltip-mowxWPn-.js";import"./MarkdownSynapse-HoWzFI9W.js";import"./SkeletonButton-B5KMuDKN.js";import"./SkeletonInlineBlock-B-MiQC1W.js";import"./SkeletonTable-BiGHpBn5.js";import"./SkeletonParagraph-Dmn15oRr.js";import"./HelpOutlineTwoTone-CFaYYLX0.js";import"./DialogTitle-IdHk9uoj.js";import"./DialogContent-DQS6m2bb.js";import"./Dialog-2GN-McDa.js";import"./Modal-B91bVFjS.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-cdFctmzP.js";import"./WarningDialog-DnVwI7bM.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
