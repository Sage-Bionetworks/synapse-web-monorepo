import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-CQdMNpwn.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-CTZRg8Wa.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-Qr7QgPmf.js";import"./SynapseConstants-BKOIVSJ4.js";import"./OrientationBanner-VS5H_DpA.js";import"./index-KnRDUL2Q.js";import"./index-CzvTTXra.js";import"./iframe-BnhebwFh.js";import"./spreadSx-CwcO6WA9.js";import"./react-CwiTBx-n.js";import"./FullWidthAlert-Cm6t_VNT.js";import"./Alert-C_RtWjz7.js";import"./createTheme-BBcmnOvd.js";import"./DefaultPropsProvider-MsJBWg3I.js";import"./useSlot-BCyVFvGq.js";import"./useForkRef-BfkTblL9.js";import"./createSimplePaletteValueFilter-f4T_jVmW.js";import"./createSvgIcon-9MzpKAHB.js";import"./Close-DC7k06u9.js";import"./IconButton-BO4ctIYi.js";import"./useTimeout-D5G-CtgI.js";import"./ButtonBase-C7l6OA8V.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DvGoH6e5.js";import"./Paper-BMidXjbc.js";import"./useTheme-CS-MMbqX.js";import"./useTheme-C3jckGwZ.js";import"./Stack-cWDEnh-V.js";import"./extendSxProp-DpqtawsB.js";import"./getThemeProps-DmSfrJqa.js";import"./Box-ti_b82sh.js";import"./AlertTitle-DvPEm5Gy.js";import"./Typography-OgSpv5jV.js";import"./index-D_WOl2uf.js";import"./ClickAwayListener-XtBEsLYa.js";import"./getReactElementRef-DdyaVXMl.js";import"./index-C--iv-i_.js";import"./index-Bx9u3dOQ.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BD3gZhMj.js";import"./Tooltip-C_HHz7XN.js";import"./index-PPFeiqod.js";import"./useControlled-W5KRR2ES.js";import"./Popper-BxPEE_mv.js";import"./Button-DHUU4YS0.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-Zz63RtHv.js";import"./QueryClientProvider-CzdxtEsU.js";import"./Link-ClQQShoZ.js";import"./Collapse-DWeFT-od.js";import"./_baseUniq-BdWipXwy.js";import"./_Uint8Array-gbGN_m7B.js";import"./isArray-_QOVi47p.js";import"./_getTag-D0ycOmhH.js";import"./isEqual-Xeyt-HlP.js";import"./merge-rXRdWApR.js";import"./_initCloneObject-CksKMSIv.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade--cBwDFJB.js";import"./inputBaseClasses-BNkcRSXg.js";import"./calculateFriendlyFileSize-BNVEkr6h.js";import"./CheckCircleTwoTone-Ck5Qv6hm.js";import"./InfoTwoTone-DetrBiiu.js";import"./useMutation-DBPLKtEQ.js";import"./dayjs.min-Dy65Hx2l.js";import"./chunk-AYJ5UCUI-DqG-g6K6.js";import"./cloneDeep-BkBBgP7B.js";import"./Skeleton-B1HZakfV.js";import"./SkeletonButton-D6hwgcuL.js";import"./SkeletonInlineBlock-LFEcEewI.js";import"./SkeletonTable-DbHPcb_r.js";import"./times-CjfmPuD-.js";import"./toInteger-CqvK7gPK.js";import"./isSymbol-yfM1zQ85.js";import"./SkeletonParagraph-DdvvAFzI.js";import"./MarkdownSynapse-C3vchXvS.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
