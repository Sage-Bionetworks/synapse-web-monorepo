import{g as f}from"./userProfileHandlers-6m7Tv5K6.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-DpBz1drY.js";import{A}from"./AccountLevelBadges-D6V3DnKQ.js";import"./VerificationSubmission-CDh9xETu.js";import"./index-DIhlUArv.js";import"./iframe-CMsX0Oka.js";import"./mockEntity-C4DtgtMy.js";import"./mockFileEntity-8rcfrk7-.js";import"./StringUtils-_BY2npJD.js";import"./mock_file_handle-7frMWCuU.js";import"./mockProject-C9O2xWL4.js";import"./mockTeam-XKmpKyrs.js";import"./SynapseConstants-vnB_HOZG.js";import"./OrientationBanner-sCFG9l64.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-CCWJyL-a.js";import"./index-BO2jx3fA.js";import"./spreadSx-CwcO6WA9.js";import"./react-u2dYu96Q.js";import"./FullWidthAlert-B611txsw.js";import"./Alert-CvfxxPZQ.js";import"./createTheme-ZS9J3-x4.js";import"./DefaultPropsProvider-C0MHQuNJ.js";import"./useSlot-CE8vY1FE.js";import"./useForkRef-C9RBuidL.js";import"./createSimplePaletteValueFilter-CHeJzd4k.js";import"./createSvgIcon-VZpkVwoM.js";import"./Close-Bf_4vcco.js";import"./IconButton-DEarKBZE.js";import"./useTimeout--pwFdnEc.js";import"./ButtonBase-C5kwased.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-N9LIirTi.js";import"./Paper-BMRqfWZY.js";import"./useTheme-DntSS-nU.js";import"./useTheme-CiXWVsbt.js";import"./Stack-BYRbdvAb.js";import"./extendSxProp-DuJfRwpZ.js";import"./getThemeProps-DTRjvb2Z.js";import"./Box-BezVuSzo.js";import"./AlertTitle-BfTTJ_di.js";import"./Typography-Y67zn1Pq.js";import"./index-D4Z-obyz.js";import"./ClickAwayListener-CRR3Owmd.js";import"./getReactElementRef-6FS4DLqJ.js";import"./index-hadyzqeZ.js";import"./index-B3VrTmIJ.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-CB6hmzG5.js";import"./Tooltip-B5x4vZvl.js";import"./index-BjbFLSec.js";import"./useControlled-BYef6mrc.js";import"./Popper-DCGmpkTH.js";import"./Button-DAcq9_ut.js";import"./uniqueId-CTW364Je.js";import"./toString-UaoHtER3.js";import"./isArray-Dy8AbNFY.js";import"./isSymbol-DJL41Hm8.js";import"./times-DDGS7ZaW.js";import"./_Uint8Array-CtWZVNIN.js";import"./identity-DKeuBCMA.js";import"./toInteger-BNoAMWsW.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-CWngti3E.js";import"./QueryClientProvider-I7KmusgC.js";import"./Link-BXGMA5HG.js";import"./Collapse-CuIUJv_4.js";import"./_baseUniq-CP0o8ne-.js";import"./_getTag-DuJ7DDp8.js";import"./isEqual-CAyciZWq.js";import"./merge-BM5nIJiA.js";import"./_initCloneObject-DiIfsv6A.js";import"./tinycolor-Begke6kS.js";import"./Fade-NrLV8S1Z.js";import"./inputBaseClasses-CJlZY6KW.js";import"./calculateFriendlyFileSize-jiJD9GoL.js";import"./CheckCircleTwoTone-DQFwaHUN.js";import"./InfoTwoTone-zfNNXw23.js";import"./useMutation-ncIAEF0o.js";import"./dayjs.min-CuWcNf58.js";import"./chunk-AYJ5UCUI-0Rlz8zG8.js";import"./cloneDeep-CxL4ZTRa.js";import"./Skeleton-CH7Sx92t.js";import"./AccountLevelBadge-DQQE_X6T.js";import"./Card-C-H-lJRu.js";import"./ConfirmationDialog-CZUZB_TI.js";import"./DialogBase-CrHArYVn.js";import"./Close-CHm0r0d8.js";import"./HelpPopover-D1HiPCwu.js";import"./MarkdownPopover-CYnvow1y.js";import"./LightTooltip-CJklWOjj.js";import"./MarkdownSynapse-BjlVU4HM.js";import"./SkeletonButton-Cev5E2ib.js";import"./SkeletonInlineBlock-BgBFGkaA.js";import"./SkeletonTable-CnOcADy6.js";import"./SkeletonParagraph-DYW1Ev-j.js";import"./HelpOutlineTwoTone-BBNXUYwB.js";import"./DialogTitle-D4mlMLWx.js";import"./DialogContent-BVQr6csQ.js";import"./Dialog-C9cvKkW0.js";import"./Modal-DRZOzsp2.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-aLhuga2f.js";import"./LoadingScreen-Bi-NDKxC.js";import"./LinearProgress-D0Aoskmq.js";import"./ToastMessage-DeS0uHlc.js";import"./CSSTransition-B_6pIIOu.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
