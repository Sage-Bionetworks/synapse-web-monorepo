import{g as f}from"./userProfileHandlers-B7dA1cu-.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-KQZnDEqY.js";import{A}from"./AccountLevelBadges-BDSj50YI.js";import"./VerificationSubmission-D0sL2gwz.js";import"./index-u-D9u67q.js";import"./iframe-uFVp_yWY.js";import"./mockEntity-BI81eVwS.js";import"./mockFileEntity-BOzAtkhz.js";import"./StringUtils-Bt2r5KGg.js";import"./mock_file_handle-BgkszYEk.js";import"./mockProject-COyeySUq.js";import"./mockTeam-B3OxZWh_.js";import"./SynapseConstants-E9b7EaUq.js";import"./OrientationBanner-CmbPS0a4.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-RZq23un7.js";import"./index-CzGzXEn8.js";import"./spreadSx-CwcO6WA9.js";import"./react-CbvsEyPG.js";import"./FullWidthAlert-D1yw4iHk.js";import"./Alert-CNLtvy8P.js";import"./createTheme-k23OqXGa.js";import"./DefaultPropsProvider-DIhp9cRI.js";import"./useSlot-C-gtFsMB.js";import"./useForkRef-BSQlPluY.js";import"./createSimplePaletteValueFilter-ByhsrVNu.js";import"./createSvgIcon-BMaNoRgk.js";import"./Close-D_tYQfNe.js";import"./IconButton-C9kv8evX.js";import"./useTimeout-Bco06NxJ.js";import"./ButtonBase--LE7YHRM.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-C1rPjsSq.js";import"./Paper-BVxUU9_K.js";import"./useTheme-m-jJYqTk.js";import"./useTheme-BdRzPGfO.js";import"./Stack-BdenFWgB.js";import"./extendSxProp-BQjDsJY_.js";import"./getThemeProps-BlF0lh8z.js";import"./Box-B-VzN5Jx.js";import"./AlertTitle-B9QtK9uS.js";import"./Typography-C2XHzVQE.js";import"./index-CAod7njC.js";import"./ClickAwayListener-Du3ELzpP.js";import"./getReactElementRef-Dgr12Jgk.js";import"./index-B21--ivY.js";import"./index-D6SZASGo.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-gVpppe5W.js";import"./Tooltip-BQoBuipX.js";import"./index-sNVsSmo5.js";import"./useControlled-3AOcwQZd.js";import"./Popper-DFhQZQac.js";import"./Button-Bzn_cVpu.js";import"./uniqueId-WBWHFwi-.js";import"./toString-eb50UqWN.js";import"./isArray-ChG02qwo.js";import"./isSymbol-nj6BaCVk.js";import"./times-LZPTVfy5.js";import"./_Uint8Array-LlKGp4K5.js";import"./identity-DKeuBCMA.js";import"./toInteger-BiVtqSir.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-DF84rRyD.js";import"./QueryClientProvider-csjxr0Oq.js";import"./Link-VKSHRpIP.js";import"./Collapse-B3cTWS02.js";import"./_baseUniq-Fd2G2IPR.js";import"./_getTag-cnLzI9NN.js";import"./isEqual-yp226Bbx.js";import"./merge-Y_2GYteb.js";import"./_initCloneObject-BpCV3dag.js";import"./tinycolor-Begke6kS.js";import"./Fade-DaG8l8BS.js";import"./inputBaseClasses-DKgm0JXr.js";import"./calculateFriendlyFileSize-HPCnRThz.js";import"./CheckCircleTwoTone-RDTFbucz.js";import"./InfoTwoTone-BPpuRQC9.js";import"./useMutation-BXU6_2Hh.js";import"./dayjs.min-Cml6m9_C.js";import"./chunk-AYJ5UCUI-CA4qBvwQ.js";import"./cloneDeep-mhbB0HAm.js";import"./Skeleton-CJd0uABn.js";import"./AccountLevelBadge-DG70sfZ7.js";import"./Card-BRO5qTVh.js";import"./ConfirmationDialog-CaQKu6JL.js";import"./DialogBase-BrkgKVbg.js";import"./Close-Ck2-0O2R.js";import"./HelpPopover-CMOKKsDC.js";import"./MarkdownPopover-C_CnQkiI.js";import"./LightTooltip-D3BcFML7.js";import"./MarkdownSynapse-C6bdbFe8.js";import"./SkeletonButton-YTPN-fbM.js";import"./SkeletonInlineBlock-CCDx8nPO.js";import"./SkeletonTable-BjLnI14k.js";import"./SkeletonParagraph-D-KYwRg8.js";import"./HelpOutlineTwoTone-BVLBKiNi.js";import"./DialogTitle-Bob4Dgq8.js";import"./DialogContent-CDsIudLv.js";import"./Dialog-BxGXsNXR.js";import"./Modal-9NhcUG0u.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-BD4yA7GX.js";import"./LoadingScreen-ox3pgfQ8.js";import"./LinearProgress-BwBxaIV1.js";import"./ToastMessage-D82Tjfjg.js";import"./CSSTransition--gu3_FGo.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
