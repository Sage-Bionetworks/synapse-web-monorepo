import{j as l}from"./jsx-runtime-CTFcVP1P.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-BI5WaB2N.js";import{g as T}from"./handlers-BpP8LNQ2.js";import{aD as S,M as a}from"./useFiles-qUB1aosH.js";import"./OrientationBanner-AqWNQ2cQ.js";import"./index-DUHgmkzF.js";import"./StringUtils-DN6u4g4A.js";import{l as _}from"./index-BgqGZAA_.js";import{S as E}from"./SynapseFormSubmissionGrid-kdbGO4rw.js";import"./mockSchema-DYVGtsTz.js";import"./mockFileEntity-CeozCgs2.js";import"./mock_file_handle-CFTRkxcS.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-BeElD8dP.js";import"./mockTeam-D0j8atbL.js";import"./SynapseConstants-0_JCnPTx.js";import"./uniqueId-DVB0i654.js";import"./toString-GPGkMqLS.js";import"./isObjectLike-DqkFcfeQ.js";import"./iframe-D88NDgS-.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-CP_pROhj.js";import"./times-Ysd5qLFi.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-gp162DtB.js";import"./asyncJobHandlers-BjoZ8aBm.js";import"./BasicMockedCrudService-BMRsZW3D.js";import"./cloneDeep-Bydrfo_1.js";import"./_Uint8Array--rSyjlV8.js";import"./_initCloneObject-B0ccDjP9.js";import"./_getTag-BQeWtWW7.js";import"./isEqual-B8v4tGSU.js";import"./_baseIsEqual-D916oHJq.js";import"./mockAnnotationColumns-CgkzIuS_.js";import"./tableQueryHandlers-BFXDjFDE.js";import"./omit-DBMZytcI.js";import"./_baseGet-cKvAZo1x.js";import"./isNil-BhKOR87a.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BRZVeKvn.js";import"./_baseFlatten-DJqckjpn.js";import"./pick-DzLvSk-q.js";import"./_baseSet-Bcq5xHUG.js";import"./hasIn-d5nYevv3.js";import"./accessRequirementAclHandlers-DKzgCnNo.js";import"./mockAccessRequirementAcls-Ds7L10lK.js";import"./mockAccessRequirements-CtVjOt_C.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CgjxDh2Q.js";import"./accessRequirementHandlers-DSoHFYeD.js";import"./wikiHandlers-Csjwg2MS.js";import"./mockWikiPageKey-DZs2DgMo.js";import"./teamHandlers-BpanhD5M.js";import"./dataAccessRequestHandlers-U6WhDmQD.js";import"./MockResearchProject-D09q76J0.js";import"./mock_discussion-BtHAbMEB.js";import"./fakerUtils-DZU6we2B.js";import"./index-DgPvFeGd.js";import"./mockTableEntity-DczSyXAT.js";import"./mockFileEntityACLVariants-DRcVnms2.js";import"./entityHandlers-DOGtsplw.js";import"./mockEntity-MPgIO47q.js";import"./mockEvaluationQueue-D-r0rfyd.js";import"./featureFlagHandlers-1ckZoltJ.js";import"./fileHandlers-BpbLdQ5d.js";import"./personalAccessTokenHandlers-CJV8tO1M.js";import"./researchProjectHandlers-BvMeiKJJ.js";import"./resetTwoFactorAuthHandlers-BjusqFll.js";import"./userProfileHandlers-B00yVNGu.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-DHifbCKs.js";import"./FullWidthAlert-CJMDbx2q.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-CrkNhfWZ.js";import"./createTheme-Bdh3JIYj.js";import"./resolveComponentProps-o_QiupMa.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-DMC24a-E.js";import"./createSvgIcon-Dus-DnDq.js";import"./DefaultPropsProvider-idcb1ntx.js";import"./Close-DWmoeP58.js";import"./IconButton-CTUXzWkr.js";import"./ButtonBase-BNY22oX6.js";import"./useTimeout-B69MFxFS.js";import"./useIsFocusVisible-DucQbIj6.js";import"./useEventCallback--EQ_6um4.js";import"./Paper-DvU1IbZk.js";import"./Stack-B6me4bCA.js";import"./getThemeProps-mddUnrqc.js";import"./useTheme-BhAWdgJj.js";import"./Box-DNw-4nBu.js";import"./AlertTitle-h8DRy4XN.js";import"./Typography-Q68JxFqv.js";import"./useTheme-DHihFqnY.js";import"./Grow-BhT6xGE8.js";import"./index-iHxUZM4O.js";import"./utils-BzYwzlkb.js";import"./ClickAwayListener-CwluvrFu.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-mDgrFK3A.js";import"./index-BOXVFOUz.js";import"./useControlled-B9n_Eohm.js";import"./useId-BMOO1Dfn.js";import"./Popper-CldeZf4a.js";import"./Button-CGHrnfkZ.js";import"./useQuery-cylXlfny.js";import"./utils-q5k7caco.js";import"./Link-BDWzO4Vf.js";import"./Collapse-DeDDevjs.js";import"./tinycolor-Begke6kS.js";import"./Fade-CptzKgX_.js";import"./Skeleton-WYPrVBD7.js";import"./inputBaseClasses-DiG8IQq1.js";import"./calculateFriendlyFileSize-C7gYpacp.js";import"./CheckCircleTwoTone-D_2jRsql.js";import"./InfoTwoTone-C0zLsr-G.js";import"./mutation-DRMJLiUA.js";import"./dayjs.min-BHrDvJsX.js";import"./chunk-AYJ5UCUI-BWP3PEQF.js";import"./index-BTiUUTPa.js";import"./react-TPPcq5Zx.js";import"./util-BbFZRtfK.js";import"./WideButton-DUR3OMXE.js";import"./DeleteTwoTone-k7vU_K4m.js";import"./createSvgIcon-CdglN6-e.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-KEhnt8rt.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-Dm85n924.js";import"./DialogBase-CoLPaqYU.js";import"./Close-DtM5pjHf.js";import"./HelpPopover-DgUX4EQl.js";import"./MarkdownPopover-C5SahIOb.js";import"./LightTooltip-B0aR6iX-.js";import"./MarkdownSynapse-B6cs1pqe.js";import"./useMutation-CZ3xWt1S.js";import"./SkeletonButton-BFtrwqG4.js";import"./SkeletonInlineBlock-Ci22Kb7G.js";import"./SkeletonTable-C5ymghLm.js";import"./SkeletonParagraph-BPhpQzZy.js";import"./HelpOutlineTwoTone-DgMd8qlM.js";import"./DialogTitle-CxVCpbTh.js";import"./DialogContent-CnCvck2o.js";import"./Dialog-CPz2ldNH.js";import"./Modal-BGZ5ayQf.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-xvSmIk71.js";import"./WarningDialog-BwNeJtzg.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},To={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const _o=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,_o as __namedExportsOrder,To as default};
