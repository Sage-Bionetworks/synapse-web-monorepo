import{j as i}from"./jsx-runtime-Bz85XGaa.js";import{W as m,a as t}from"./WizardChoiceButton-SKCqqeug.js";import{I as l}from"./LayersTwoTone-DF8M1a1r.js";import{F as d}from"./IconSvg-BS4j5Zhq.js";import"./index-BVV_9QeJ.js";import"./iframe-BDVC29SQ.js";import"./Box-CeB-moYn.js";import"./createTheme-DtOhOvpP.js";import"./useTheme-8dQg3nEl.js";import"./Typography-Bx51Sgda.js";import"./DefaultPropsProvider-CCX4Uzgz.js";import"./createSvgIcon-_A5ycCXI.js";import"./spreadSx-CwcO6WA9.js";import"./useTheme-r0RJ9GrL.js";import"./Tooltip-B1gm0b5o.js";import"./index-BcBgZbxD.js";import"./Grow-D4qHwQig.js";import"./resolveComponentProps-CoZ49OvA.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-DA5a99gH.js";import"./index-D5bn-Jqh.js";import"./utils-DJ4l4jbW.js";import"./TransitionGroupContext-xDeP4cu6.js";import"./useEventCallback-DXpDzqzG.js";import"./useTimeout-ufiQ3DfI.js";import"./useControlled-CrvnJ5-v.js";import"./useId-udz03xSJ.js";import"./useIsFocusVisible-BJFAdkmc.js";import"./Popper-DWX0dxaL.js";import"./ownerDocument-DW-IO8s5.js";import"./ContentCopyTwoTone-CoXdHCFu.js";import"./HelpOutlineTwoTone-BWkp9Fpg.js";import"./ErrorOutlined-D80amMh0.js";import"./GetAppTwoTone-B1gVB1UW.js";import"./InfoOutlined--zOEZvdK.js";import"./DeleteTwoTone-DNZRX6w4.js";import"./CheckCircleTwoTone-GIsapumQ.js";const V={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},e={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),i.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:i.jsx(l,{fontSize:"large"})}),i.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:i.jsx(d,{fontSize:"large"})})]})}};var r,s,n;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const Y=["Basic","WithIcons"];export{e as Basic,o as WithIcons,Y as __namedExportsOrder,V as default};
