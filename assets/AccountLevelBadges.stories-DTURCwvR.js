import{g as f}from"./userProfileHandlers-CuNmcVkc.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-CJN3kP-B.js";import{A}from"./AccountLevelBadges-C7R7GXac.js";import"./VerificationSubmission-CDh9xETu.js";import"./index-BA4GQQw2.js";import"./iframe-CzLjpwC-.js";import"./mockEntity-VI78iZ5t.js";import"./mockFileEntity-DFtAWaKL.js";import"./StringUtils-_BY2npJD.js";import"./mock_file_handle-7frMWCuU.js";import"./mockProject-BKZ-pC_C.js";import"./mockTeam-DPFs1ZF0.js";import"./SynapseConstants-CiX6Gvr2.js";import"./OrientationBanner-D-aNPlud.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-MNm9JVKb.js";import"./index-8E8AJVLG.js";import"./spreadSx-CwcO6WA9.js";import"./react-CwZBqyfL.js";import"./FullWidthAlert-D_VdwJ38.js";import"./Alert-CMhD3tNE.js";import"./createTheme-Bx9zg2Aq.js";import"./DefaultPropsProvider-COWWULUE.js";import"./useSlot-C-J-wYvm.js";import"./useForkRef-C_PXFLFs.js";import"./createSimplePaletteValueFilter-DDzZQsPH.js";import"./createSvgIcon-pAqF6Sga.js";import"./Close-CAAkSTlU.js";import"./IconButton-CDLYYfzu.js";import"./useTimeout-BP57oaAx.js";import"./ButtonBase-Cyxw6Mpk.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-Dwx7-res.js";import"./Paper-MzL6UsMi.js";import"./useTheme-BiqLUHW5.js";import"./useTheme-BGF5cY2j.js";import"./Stack-l6MPWt0d.js";import"./extendSxProp-BzCNwJ73.js";import"./getThemeProps-C3zF82al.js";import"./Box-DzK9TEyW.js";import"./AlertTitle-BcbX6m1C.js";import"./Typography-CuUtzz6d.js";import"./index-Ul9lyVXm.js";import"./ClickAwayListener-ct0gOahX.js";import"./getReactElementRef-CjntyuAB.js";import"./index-CSs9NJT0.js";import"./index-Tff9hZ9I.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-Cf8vHn8q.js";import"./Tooltip-soL0zlaW.js";import"./index-CtD269za.js";import"./useControlled-otgNWUVW.js";import"./Popper-CrvShqtU.js";import"./Button-ywBIoKZb.js";import"./uniqueId-U9rQ3u8t.js";import"./toString-DhZXjtWL.js";import"./isArray-BLHhTiIE.js";import"./isSymbol-sAfAr4sp.js";import"./times-ek0rDpb0.js";import"./_Uint8Array-CGGeiCCw.js";import"./identity-DKeuBCMA.js";import"./toInteger-CJbHmwS_.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-BnbbyIhE.js";import"./QueryClientProvider-COgRCJUL.js";import"./Link-CGU2rv-S.js";import"./Collapse-CDYVdUa-.js";import"./_baseUniq-AXqUKFNv.js";import"./_getTag-Du58puFw.js";import"./isEqual-D2oP3hG9.js";import"./merge-42V_qSrK.js";import"./_initCloneObject-CrEU1V4a.js";import"./tinycolor-Begke6kS.js";import"./Fade-BPXFur0f.js";import"./inputBaseClasses-AhrTDcKT.js";import"./calculateFriendlyFileSize-CMMha0yD.js";import"./CheckCircleTwoTone-CejlYcpI.js";import"./InfoTwoTone-Ba1eQKjs.js";import"./useMutation-CZgqQHx5.js";import"./dayjs.min-BQGfd5_o.js";import"./chunk-AYJ5UCUI-D2oE-vF0.js";import"./cloneDeep-DPn60SEG.js";import"./Skeleton-BAJjCxjE.js";import"./AccountLevelBadge-Bxbs-CAj.js";import"./Card-B_0rpHuK.js";import"./ConfirmationDialog-hF7HTfA5.js";import"./DialogBase-bFmuGD3T.js";import"./Close-c6yz4HLx.js";import"./HelpPopover-Pn_0JDyQ.js";import"./MarkdownPopover-vRCl9ovb.js";import"./LightTooltip-DX6CTUA_.js";import"./MarkdownSynapse-C43ceo34.js";import"./SkeletonButton-BZsoDJNs.js";import"./SkeletonInlineBlock-Dxj5oJ09.js";import"./SkeletonTable-B8VgCseh.js";import"./SkeletonParagraph-Bu7i7PAX.js";import"./HelpOutlineTwoTone-Bj6G1kbq.js";import"./DialogTitle-DEKYPTNL.js";import"./DialogContent-CqK00cHL.js";import"./Dialog-BDLYmX1v.js";import"./Modal-B9YoPRK_.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-BxtedZaR.js";import"./LoadingScreen-BnGtkN2p.js";import"./LinearProgress-CdAIOmwU.js";import"./ToastMessage-UogtnOLy.js";import"./CSSTransition-BWw9J4lv.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
