import{r as S}from"./index-Dl6G-zuu.js";import{u as h}from"./useQueries-Dxyjt1OH.js";import{be as M,k as i,o as f,p as y,q as g,bf as K}from"./SynapseClient-CfIGNtSL.js";import{u as E}from"./useMutation-DycxOuWN.js";import{u as P}from"./useInfiniteQuery-OZCPlHjF.js";import"./OrientationBanner-BBh8JRgP.js";import"./getEndpoint-CjoHA800.js";import{i as Q}from"./isEqualWith-CSxlrtT3.js";import{a as k}from"./isArray-ggc3KxVp.js";import{i as q}from"./_Map-CWVOAJuy.js";import{i as T,o as C,p as I,a as A}from"./pick-DPHomEHx.js";import"./jsx-runtime-Du8NFWEI.js";import{i as F}from"./QueryFilterUtils-B7ytAbJX.js";import{g as p}from"./InfiniteQueryUtils-CKlRW-xB.js";const w=(e,t)=>{if(!(k(e)||k(t))&&!(!q(e)||!q(t))&&!(!T(e,void 0)&&!T(t,void 0)))return Q(C(e,a=>a===void 0),C(t,a=>a===void 0),w)};function v(e,t){return Q(e,t,w)}function G(e,t){const a=new Set;for(const s of e)a.add(s.id);for(const s of t)if(s.id!=null&&!a.has(s.id))throw new Error(`Proposed schema contains a new column model with ID ${s.id} that is not in the old schema.`)}async function J(e,t,a,s){G(a,s);const n=new Map;for(const l of a)n.set(l.id,l);let o=[];for(const l of s){const u={...l};if(u.id!=null){const m=n.get(u.id);m!=null&&!v(m,u)&&delete u.id}o.push(u)}const c=(await M(e,o)).list,r=[],d=new Set;for(let l=0;l<s.length;l++){const u=s[l].id??null,m=c[l].id;u!=null&&d.add(u),d.add(m),u!=null&&u!==m?r.push({oldColumnId:u,newColumnId:m}):u==null&&r.push({oldColumnId:null,newColumnId:m})}for(const l of a){const u=l.id;d.has(u)||r.push({oldColumnId:u,newColumnId:null})}return{concreteType:"org.sagebionetworks.repo.model.table.TableUpdateTransactionRequest",entityId:t,changes:[{concreteType:"org.sagebionetworks.repo.model.table.TableSchemaChangeRequest",entityId:t,changes:r,orderedColumnIds:c.map(l=>l.id)}]}}function j(e,t,a){const{accessToken:s,keyFactory:n}=i();return f({...a,queryKey:n.getEntityVersionQueryKey(e,t),queryFn:()=>y.getEntity(s,e,t==null?void 0:t.toString())})}function H(e,t){const{accessToken:a,keyFactory:s}=i(),n=S.useMemo(()=>({queries:e.map(o=>({queryKey:s.getEntityVersionQueryKey(o.id,o.versionNumber),queryFn:()=>y.getEntity(a,o.id,o.versionNumber),options:t}))}),[a,e,s,t]);return h(n)}function N(e){const t=g(),{accessToken:a,keyFactory:s}=i();return E({mutationFn:n=>y.createEntity(n,a),onSuccess:async(n,o,c)=>{const r=s.getEntityQueryKey(n.id);t.setQueryData(r,n),await F(t,s,n.id,r),e!=null&&e.onSuccess&&await e.onSuccess(n,o,c)}})}function ee(e){const t=g(),{accessToken:a,keyFactory:s}=i();return E({...e,mutationFn:n=>y.updateEntity(n,a),onSuccess:async(n,o,c)=>{const r=s.getEntityQueryKey(n.id);t.setQueryData(r,n),await F(t,s,n.id,r),e!=null&&e.onSuccess&&await e.onSuccess(n,o,c)}})}function te(e){const t=g(),{accessToken:a,keyFactory:s}=i();return E({...e,mutationFn:n=>y.deleteEntity(a,n),onSuccess:async(n,o,c)=>{await F(t,s,o),e!=null&&e.onSuccess&&await e.onSuccess(n,o,c)}})}function ne(e,t){const{accessToken:s,keyFactory:n}=i();return P({...t,queryKey:n.getEntityVersionsQueryKey(e),queryFn:async o=>await y.getEntityVersions(e,s,o.pageParam,200),initialPageParam:void 0,getNextPageParam:p})}function D(e){return I(e,K[e.concreteType])}function U(e){return A(e,K[e.concreteType])}function se(e,t,a,s){const{accessToken:n,keyFactory:o}=i();return f({...s,queryKey:o.getEntityJsonQueryKey(e,t,a),queryFn:()=>y.getEntityJson(e,t,a,n),select:c=>{const r=D(c),d=U(c);return{entity:c,entityMetadata:r,annotations:d}}})}function ae(e){const t=g(),{accessToken:a,keyFactory:s}=i();return E({...e,mutationFn:n=>{const o=n.id;return y.updateEntityJson(o,n,a)},onSuccess:async(n,o,c)=>{const r=n.id,d=s.getEntityJsonQueryKey(r,void 0,!1);t.setQueryData(d,n),await F(t,s,r,d),e!=null&&e.onSuccess&&await e.onSuccess(n,o,c)}})}function oe(e,t){const{accessToken:a,keyFactory:s}=i();return f({...t,queryKey:s.getEntityPathQueryKey(e),queryFn:()=>y.getEntityPath(e,a)})}function re(e,t){const{accessToken:a,keyFactory:s}=i();return f({...t,queryKey:s.getEntityPathQueryKey(e),queryFn:()=>y.getEntityACL(e,a)})}function ce(e,t){const{accessToken:a,keyFactory:s}=i();return f({...t,queryKey:s.getEntityAliasQueryKey(e),queryFn:()=>y.getEntityAlias(e,a)})}function ue(e,t,a){const{accessToken:s,keyFactory:n}=i();return f({...a,queryKey:n.getEntityEvaluationsQueryKey(e),queryFn:()=>y.getAllEntityEvaluations(e,t,s)})}function ie(e,t){const{accessToken:a,keyFactory:s}=i();return f({...t,queryKey:s.getEntityPermissionsQueryKey(e),queryFn:()=>y.getEntityPermissions(e,a)})}function ye(e){const t=g(),{accessToken:a,keyFactory:s}=i();return E({...e,mutationFn:n=>y.updateEntityACL(n,a),onSuccess:async(n,o,c)=>{const r=s.getEntityACLQueryKey(n.id);t.setQueryData(r,n),await F(t,s,n.id,r)}})}function le(e){const t=g(),{accessToken:a,keyFactory:s}=i();return E({...e,mutationFn:async n=>{const o=await J(a,n.entityId,n.originalColumnModels,n.newColumnModels);return y.updateTable(o,a)},onSuccess:async(n,o,c)=>{await F(t,s,o.entityId),e!=null&&e.onSuccess&&await e.onSuccess(n,o,c)}})}export{ee as a,le as b,oe as c,se as d,H as e,ue as f,ye as g,ce as h,re as i,ie as j,N as k,ae as l,te as m,ne as n,j as u};
