import{g as f}from"./userProfileHandlers-WKgASeDb.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-DfmUZ-4E.js";import{A}from"./AccountLevelBadges-ihkT-6FL.js";import"./VerificationSubmission-16RBrwfH.js";import"./index-BsPAX0UU.js";import"./iframe-DeZrw8cL.js";import"./mockEntity-nDCSZE-X.js";import"./mockFileEntity-D6Z2syrL.js";import"./StringUtils-B_EIkN_W.js";import"./mock_file_handle-t2fDWYxy.js";import"./mockProject-yu1F8_uw.js";import"./mockTeam-_dJ7ED1W.js";import"./SynapseConstants-DBjjddIw.js";import"./OrientationBanner-VFV71Tjc.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-BHmtFBB_.js";import"./index-C9-TIdL_.js";import"./spreadSx-CwcO6WA9.js";import"./react-Ck9EPeEi.js";import"./FullWidthAlert-Bmh1NRie.js";import"./Alert-EAD1eTrF.js";import"./createTheme-CE6qXHe9.js";import"./DefaultPropsProvider-mrWzkTQJ.js";import"./useSlot-DtPBphoa.js";import"./useForkRef-Cx9b2vUF.js";import"./createSimplePaletteValueFilter-Cua6TkTN.js";import"./createSvgIcon-B8DyheYB.js";import"./Close-BrwXfVJ8.js";import"./IconButton-DNzR0rYH.js";import"./useTimeout-B4nm8K8G.js";import"./ButtonBase-CL_IFWn3.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DX21bKx9.js";import"./Paper-8UdBM9kL.js";import"./useTheme-pTqndlnn.js";import"./useTheme-CcEl__P7.js";import"./Stack-qqZTI9Mk.js";import"./extendSxProp-DYJ4qHcb.js";import"./getThemeProps-U5h5w87F.js";import"./Box-c1acJzBY.js";import"./AlertTitle-DrvONvNQ.js";import"./Typography-DFKsi_Yp.js";import"./index-DoRmc9IV.js";import"./ClickAwayListener-Csbn-psG.js";import"./getReactElementRef-CHn9vIIS.js";import"./index-BNzjogy-.js";import"./index-BlCl8FJn.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-CKjqUnz6.js";import"./Tooltip-aIej-TC0.js";import"./index-C4bFR0fr.js";import"./useControlled-CJ0jTomz.js";import"./Popper-CgflTmuC.js";import"./Button-DnYIz2mR.js";import"./uniqueId-CDHhO_Pm.js";import"./toString-DUqJ2cqP.js";import"./isArray-P9V5rfrS.js";import"./isSymbol-mR1shqCu.js";import"./times-C6ns9myY.js";import"./_Uint8Array-DJNgTM6y.js";import"./identity-DKeuBCMA.js";import"./toInteger-PCs3xOoR.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-B0zK9_y9.js";import"./QueryClientProvider-CrJTSCTY.js";import"./Link-dppmAxhW.js";import"./Collapse-Cj6ee3Yt.js";import"./_baseUniq-Bwu5nO20.js";import"./_getTag-B_GSssIH.js";import"./isEqual-CyfHpJRg.js";import"./merge-D2V9CcG9.js";import"./_initCloneObject-BuBhIP8E.js";import"./tinycolor-Begke6kS.js";import"./Fade-qoxQnxF9.js";import"./inputBaseClasses-ktaLCHeI.js";import"./calculateFriendlyFileSize-DsdtZKta.js";import"./CheckCircleTwoTone-DCRdFQaj.js";import"./InfoTwoTone-COSNQhZA.js";import"./useMutation-igh3-1pD.js";import"./dayjs.min-bQ2v5w_u.js";import"./chunk-AYJ5UCUI-CcGUCHcD.js";import"./cloneDeep-DlSGhKsq.js";import"./Skeleton-zcL_PViR.js";import"./AccountLevelBadge-BLCxzlh_.js";import"./Card-zJVA2Jfx.js";import"./ConfirmationDialog-Xge909UR.js";import"./DialogBase-CARmuK2M.js";import"./Close-MnQvq5nD.js";import"./HelpPopover-CcKwYYDP.js";import"./MarkdownPopover-CRjZLiuc.js";import"./LightTooltip-B4s5WeMZ.js";import"./MarkdownSynapse-DAUv1k7U.js";import"./SkeletonButton-CTL7IIUW.js";import"./SkeletonInlineBlock-Ee0kCjj4.js";import"./SkeletonTable-Dn_f8sfL.js";import"./SkeletonParagraph-UUVWZKz3.js";import"./HelpOutlineTwoTone-CqmE3Zh1.js";import"./DialogTitle-B2veaCgQ.js";import"./DialogContent-BEafi4-g.js";import"./Dialog-DS0WIpvg.js";import"./Modal-DsPjLqKp.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-IJOpZ84Q.js";import"./LoadingScreen-Df8Q3o2o.js";import"./LinearProgress-Dvb2KGCe.js";import"./ToastMessage-Dh75HZo-.js";import"./CSSTransition-gl8tPzPr.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
