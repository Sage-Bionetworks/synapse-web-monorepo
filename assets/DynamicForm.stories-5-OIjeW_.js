import{D as i}from"./DynamicForm-Blo0V6rC.js";import{f as p}from"./index-CVAUwOAi.js";import"./jsx-runtime-DoxjgJx5.js";import"./index-Cu9bd8lq.js";import"./useQuery-BEUP4ZKU.js";import"./utils-BECe8vEQ.js";import"./useMutation-BUHlmdy0.js";import"./MuiForm-B61yagj2.js";import"./isPlainObject-BDeK4qKc.js";import"./_getPrototype-DSx75BAr.js";import"./index.modern-BSaf6tm9.js";import"./index-C2FPCbup.js";import"./styled-DuixqW8V.js";import"./createTheme-BDTvfUpa.js";import"./index-GEGPABih.js";import"./extends-CF3RwP-h.js";import"./toNumber-DDV9Xfgs.js";import"./createSvgIcon-DhYpJxwt.js";import"./createSvgIcon-L3-Z4vl2.js";import"./useForkRef-Bm_QQ74L.js";import"./createChainedFunction-BO_9K8Jh.js";import"./ownerWindow-BN2rbQ_G.js";import"./ownerDocument-DW-IO8s5.js";import"./isMuiElement-yx-QWTmT.js";import"./useId-g68bhPgm.js";import"./useControlled-JEQ1v-P8.js";import"./TransitionGroupContext-C4KIfRep.js";import"./useIsFocusVisible-Lp1_y5xp.js";import"./IconButton-G5owOEKj.js";import"./ButtonBase-CIP26XmV.js";import"./Grid--wjS3ccW.js";import"./utils-BfTmAAcW.js";import"./index-zcEXKDIA.js";import"./Box-Bma8Ps0t.js";import"./Paper-GgpZwKOl.js";import"./TextField-SFvlXZ4D.js";import"./FormControl-DZxu7tvM.js";import"./useFormControl-vG3XTiAH.js";import"./inputBaseClasses-3kXRnYVz.js";import"./isHostComponent-DVu5iVWx.js";import"./InputLabel-CCAWzx62.js";import"./Select-VbVLY5g7.js";import"./Menu-CHgh70-j.js";import"./index-Ch2PWkM5.js";import"./Popover-auhum2yg.js";import"./Modal-_yuEvo3v.js";import"./Backdrop-Dc0v9wgL.js";import"./Fade-YgxkoC1K.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./mergeSlotProps-BRYxW-OX.js";import"./Grow-BlYLCNLi.js";import"./MenuList-CDmEbLeV.js";import"./List-DhLb64uK.js";import"./Input-Djp5KyBT.js";import"./FormHelperText-CUpTM_br.js";import"./Typography-Jzf0ov00.js";import"./ListItem-PE1RRKtu.js";import"./listItemButtonClasses-B5RJkldp.js";import"./ListItemIcon-DoTDB2vh.js";import"./MenuItem-BRfH2BU8.js";import"./dividerClasses-Cp1VhfDw.js";import"./ListItemText-BgDbsDQC.js";import"./ContentCopy-DUlAzcqJ.js";import"./Button-DCzP6lNj.js";import"./Divider-BQBKOlqu.js";import"./FormControlLabel-DgRTZiDC.js";import"./Stack-BRvuPf6D.js";import"./Checkbox-3lY1RI3r.js";import"./FormGroup-Dmpm2a0P.js";import"./RadioGroup-DoqBFkVV.js";import"./Radio-Bd46EQAO.js";import"./Slider-D1gU3SK6.js";import"./ToastMessage-ByODe66a.js";import"./FullWidthAlert-L3bJILOo.js";import"./Alert-DOXScrWE.js";import"./AlertTitle--w70ZYZx.js";import"./ClickAwayListener-Ba-YFlDA.js";import"./Tooltip-Cao-5103.js";import"./CSSTransition-CDKVCdEV.js";import"./hasClass-D5ZjVvBY.js";import"./uniqueId-CSw6ftlJ.js";import"./toString-CYyvKWOl.js";import"./isArray-ggc3KxVp.js";import"./isSymbol-BzKS7Qf1.js";import"./SkeletonButton-GdpOdMak.js";import"./Skeleton-DaHZPytj.js";import"./SkeletonInlineBlock-BMm0ty_S.js";import"./SkeletonTable-DlB4aIzG.js";import"./times-Bw9geEsI.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-czOlq-ma.js";import"./SkeletonParagraph-D5YUuj6n.js";import"./index-D0JCpg9J.js";const Qo={title:"UI/DynamicForm",component:i},o={args:{schemaUrl:"https://raw.githubusercontent.com/nf-osi/nf-research-tools-schema/main/NF-Tools-Schemas/SubmitObservationSchema.json",uiSchemaUrl:"https://raw.githubusercontent.com/nf-osi/nf-research-tools-schema/main/NF-Tools-Schemas/SubmitObservationUiSchema.json",postUrl:"https://submit-form.com/KwZ46H4T",onCancel:p()}};var t,r,m;o.parameters={...o.parameters,docs:{...(t=o.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    schemaUrl: 'https://raw.githubusercontent.com/nf-osi/nf-research-tools-schema/main/NF-Tools-Schemas/SubmitObservationSchema.json',
    uiSchemaUrl: 'https://raw.githubusercontent.com/nf-osi/nf-research-tools-schema/main/NF-Tools-Schemas/SubmitObservationUiSchema.json',
    postUrl: 'https://submit-form.com/KwZ46H4T',
    // Set mutateFormDataBeforePost if service expects the form data wrapped in some other data.  For example:
    // mutateFormDataBeforePost: formData => {
    //   return {
    //     event_type: 'submission',
    //     client_payload: {
    //       formData: formData,
    //     },
    //   }
    // },
    onCancel: fn()
  }
}`,...(m=(r=o.parameters)==null?void 0:r.docs)==null?void 0:m.source}}};const Ro=["NFDataSubmissionForm"];export{o as NFDataSubmissionForm,Ro as __namedExportsOrder,Qo as default};
