import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-FYuonao8.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-BGil3j51.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-CmrlFmBI.js";import"./SynapseConstants-Co8dGAeQ.js";import"./OrientationBanner-BKyyQUa8.js";import"./index-DGf3smqW.js";import"./index-Dj1d4BqT.js";import"./iframe-TlcNnpHp.js";import"./spreadSx-CwcO6WA9.js";import"./react-DdDibM_d.js";import"./FullWidthAlert-C-IC2KrU.js";import"./Alert-DR4rcZNl.js";import"./createTheme-pvhOUZyw.js";import"./DefaultPropsProvider-B4wQ821E.js";import"./useSlot-IA_vObsD.js";import"./useForkRef-BHqKRelU.js";import"./createSimplePaletteValueFilter-D9dK7LRT.js";import"./createSvgIcon-Dj2HycGS.js";import"./Close-Dfx5VX34.js";import"./IconButton-5dp10n6T.js";import"./useTimeout-Cn8rA_AT.js";import"./ButtonBase-D6StLzVo.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-D5IZ-XOY.js";import"./Paper-CRp1MfuN.js";import"./useTheme-DzaEsJZx.js";import"./useTheme-ChFb1gM-.js";import"./Stack-CU3hXGpo.js";import"./extendSxProp-XPQdjpPF.js";import"./getThemeProps-C8ZyFRso.js";import"./Box-BoJfoAK2.js";import"./AlertTitle-C9125y5h.js";import"./Typography-CeYlYS3n.js";import"./index-Gxu560yY.js";import"./ClickAwayListener-DwWoVyJe.js";import"./getReactElementRef-CbVIyvnd.js";import"./index-B81YNvG1.js";import"./index-DtXhXAQj.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DgiJlUnu.js";import"./Tooltip-BnCZGVg6.js";import"./index-CnaJhkGM.js";import"./useControlled-qa7mk4OM.js";import"./Popper-CqhVe4Td.js";import"./Button-LmC9B_pW.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-Bvww99u4.js";import"./QueryClientProvider-BDoqR9Ee.js";import"./Link-BW1h0oRf.js";import"./Collapse-BRcEHh_Y.js";import"./_baseUniq-XaDoym7p.js";import"./_Uint8Array-DqLRerek.js";import"./isArray-BCPw1xdT.js";import"./_getTag-TRalT4-G.js";import"./isEqual-pR9-SkGa.js";import"./merge-Cr6niOtn.js";import"./_initCloneObject-C35SbE2c.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-BTvapujN.js";import"./inputBaseClasses-B5I_2cVd.js";import"./calculateFriendlyFileSize-CX4zkHbj.js";import"./CheckCircleTwoTone-BiSJyRNH.js";import"./InfoTwoTone-xmh64BVe.js";import"./useMutation-Mah1Ry7w.js";import"./dayjs.min-D6rrA4r6.js";import"./chunk-AYJ5UCUI-ByReiuUj.js";import"./cloneDeep-Bph8_Rcw.js";import"./Skeleton-3reWCr-Q.js";import"./SkeletonButton-CmaSDjuL.js";import"./SkeletonInlineBlock-DqDa8fF3.js";import"./SkeletonTable-Bxvq2RD4.js";import"./times-Bc0nszxD.js";import"./toInteger-DjLUZAD0.js";import"./isSymbol-B92DLHMJ.js";import"./SkeletonParagraph-w2M19C0V.js";import"./MarkdownSynapse-CqcnpQhE.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
