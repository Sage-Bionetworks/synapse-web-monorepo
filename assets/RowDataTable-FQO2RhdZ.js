import{j as n}from"./jsx-runtime-DBMcmXCa.js";import{S as w}from"./StyledTableContainer-BZCZgtDt.js";import{S as b}from"./SynapseCardLabel-By_d7pMc.js";import"./GenericCard-BTxbm0Ol.js";import"./HeaderCardV2-D4NNm3Ag.js";import"./CardUtils-DReGlbmt.js";const c=d=>{const{columnAliases:o,columnLinks:r,headers:a,rowData:p,displayedColumns:u}=d,m=u?a.filter(e=>u.includes(e.name)).map(e=>e.name):a.map(e=>e.name),s=[];for(let e=0;e<m.length;e+=1){const i=m[e],t=a.findIndex(x=>x.name===i),l=t!==-1?p[t]:void 0,f=a[t],h=l==="null",y=f.columnType.endsWith("_LIST");typeof l=="string"&&!(h||y&&(l==="[]"||l==="[null]"))&&s.push([i,l])}return n.jsx(w,{sx:{width:"100%"},children:n.jsx("table",{style:{width:"100%"},children:n.jsx("tbody",{children:s==null?void 0:s.map(([e,i])=>n.jsxs("tr",{children:[n.jsx("td",{style:{width:"256px"},children:n.jsx("span",{style:{fontSize:"14px",lineHeight:"20px",color:"#333"},children:(o==null?void 0:o[e])??e})}),n.jsx("td",{children:n.jsx(b,{value:i,columnName:e,labelLink:r==null?void 0:r.find(t=>t.matchColumnName===e),selectColumns:a,columnModels:void 0,isHeader:!1,rowData:p})})]},e))})})})};try{c.displayName="RowDataTable",c.__docgenInfo={description:"Displays a table of column names and Synapse Table row data represented as key/value pairs",displayName:"RowDataTable",props:{rowData:{defaultValue:null,description:"Array of string values corresponding to the data for a row",name:"rowData",required:!0,type:{name:"string[]"}},headers:{defaultValue:null,description:"The headers for the columns in the table",name:"headers",required:!0,type:{name:"SelectColumn[]"}},displayedColumns:{defaultValue:null,description:"Optional list of column names whose data should be displayed in the table. If not provided, all columns with data will be shown.",name:"displayedColumns",required:!1,type:{name:"string[]"}},columnLinks:{defaultValue:null,description:"Optional configuration for linking columns",name:"columnLinks",required:!1,type:{name:"LabelLinkConfig"}},columnAliases:{defaultValue:null,description:"Optional display value overrides for column names",name:"columnAliases",required:!1,type:{name:"Record<string, string>"}}}}}catch{}export{c as R};
