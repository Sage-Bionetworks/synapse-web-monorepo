import{j as d}from"./jsx-runtime-DkbpurNs.js";import{l as v,b8 as _,b9 as T}from"./useFiles-DsFYUvgk.js";import"./OrientationBanner-Db5b4wt6.js";import{r as M}from"./index-BWTz5das.js";import"./VerificationSubmission-BI5WaB2N.js";import"./StringUtils-DN6u4g4A.js";import{u as W}from"./useQuery-DcrUW3Ia.js";import"./SkeletonButton-DIk8ysAH.js";import"./SkeletonInlineBlock-D41IW_XW.js";import"./SkeletonTable-BO641YUo.js";import{S as $}from"./SkeletonParagraph-uvExlbzX.js";import{M as N}from"./MarkdownSynapse-Cors3dqY.js";import{c as j,s as S,u as L}from"./DefaultPropsProvider-ByOVQs-n.js";import{a as m,_ as P,c as R,h as f,f as q,b as O}from"./createTheme-A3wdy6CE.js";import{s as V,u as I}from"./Stack-bl7kY2rD.js";import{B as U}from"./Box-oS9X8DmL.js";const E=["className","component","disableGutters","fixed","maxWidth","classes"],B=q(),D=V("div",{name:"MuiContainer",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.root,e[`maxWidth${f(String(r.maxWidth))}`],r.fixed&&e.fixed,r.disableGutters&&e.disableGutters]}}),F=t=>I({props:t,name:"MuiContainer",defaultTheme:B}),H=(t,e)=>{const r=u=>O(e,u),{classes:o,fixed:n,disableGutters:i,maxWidth:a}=t,s={root:["root",a&&`maxWidth${f(String(a))}`,n&&"fixed",i&&"disableGutters"]};return j(s,r,o)};function z(t={}){const{createStyledComponent:e=D,useThemeProps:r=F,componentName:o="MuiContainer"}=t,n=e(({theme:a,ownerState:s})=>m({width:"100%",marginLeft:"auto",boxSizing:"border-box",marginRight:"auto",display:"block"},!s.disableGutters&&{paddingLeft:a.spacing(2),paddingRight:a.spacing(2),[a.breakpoints.up("sm")]:{paddingLeft:a.spacing(3),paddingRight:a.spacing(3)}}),({theme:a,ownerState:s})=>s.fixed&&Object.keys(a.breakpoints.values).reduce((u,p)=>{const l=p,c=a.breakpoints.values[l];return c!==0&&(u[a.breakpoints.up(l)]={maxWidth:`${c}${a.breakpoints.unit}`}),u},{}),({theme:a,ownerState:s})=>m({},s.maxWidth==="xs"&&{[a.breakpoints.up("xs")]:{maxWidth:Math.max(a.breakpoints.values.xs,444)}},s.maxWidth&&s.maxWidth!=="xs"&&{[a.breakpoints.up(s.maxWidth)]:{maxWidth:`${a.breakpoints.values[s.maxWidth]}${a.breakpoints.unit}`}}));return M.forwardRef(function(s,u){const p=r(s),{className:l,component:c="div",disableGutters:y=!1,fixed:k=!1,maxWidth:w="lg"}=p,G=P(p,E),h=m({},p,{component:c,disableGutters:y,fixed:k,maxWidth:w}),C=H(h,o);return d.jsx(n,m({as:c,ownerState:h,className:R(C.root,l),ref:u},G))})}const K=z({createStyledComponent:S("div",{name:"MuiContainer",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:r}=t;return[e.root,e[`maxWidth${f(String(r.maxWidth))}`],r.fixed&&e.fixed,r.disableGutters&&e.disableGutters]}}),useThemeProps:t=>L({props:t,name:"MuiContainer"})}),A="https://api.github.com/repos";function Q(t,e,r){const{keyFactory:o}=v(),n=async()=>{const i=await fetch(`${A}/${t}/${e}/tags`);if(!i.ok)throw new Error(`Error fetching tags: ${i.statusText}`);const a=await i.json();if(a.length===0)throw new Error("No tags found.");return a[0].name};return W({...r,queryKey:o.getGithubLatestTagKey(t,e),queryFn:n})}function g(t){const{data:e}=_(),r=e==null?void 0:e.latestTermsOfServiceVersion;return d.jsx(b,{...t,tagName:r})}function x(t){const{repoOwner:e,repoName:r}=t,{data:o}=Q(e,r);return d.jsx(b,{...t,tagName:o})}function b({repoOwner:t,repoName:e,filePath:r,tagName:o}){const{data:n}=T(`https://cdn.jsdelivr.net/gh/${t}/${e}@${o}/${r}`,{enabled:!!o}),i=d.jsx(U,{sx:{width:"100%"},children:d.jsx($,{rowHeight:"30px",numRows:70})});return d.jsx(K,{sx:{"> .markdown":{px:"10px"}},children:n?d.jsx(N,{markdown:n}):i})}try{g.displayName="GovernanceMarkdownGithub",g.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}}}}}catch{}try{x.displayName="MarkdownGithubLatestTag",x.__docgenInfo={description:"Loads the latest tagged version of the (presumably MD) file from GitHub",displayName:"MarkdownGithubLatestTag",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}}}}}catch{}export{g as G,x as M};
