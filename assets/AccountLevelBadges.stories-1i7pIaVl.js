import{g as f}from"./userProfileHandlers-mhQaho8i.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-w6-CIEB7.js";import{A}from"./AccountLevelBadges-PR4bDFKp.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-Dr4Q1ArP.js";import"./iframe-CnNyPxR5.js";import"./mockEntity-CAydS-j5.js";import"./mockFileEntity-CuPCoKaN.js";import"./StringUtils-C95LMFI-.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-DFgjpbzt.js";import"./mockTeam-CG8UbINk.js";import"./SynapseConstants-BvlkkbYT.js";import"./OrientationBanner-DQJGhgFu.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-CWABsZZt.js";import"./index-50V2EGz2.js";import"./spreadSx-CwcO6WA9.js";import"./react-otK05ZBX.js";import"./FullWidthAlert-BQO2ZM0K.js";import"./Alert-B_-c_7mx.js";import"./createTheme-DSq-Mol7.js";import"./DefaultPropsProvider-C9wjepK5.js";import"./useSlot-DsxpMVrm.js";import"./useForkRef-BAPdpbNW.js";import"./createSimplePaletteValueFilter-CldMCLtR.js";import"./createSvgIcon-DGQsVitk.js";import"./Close-CVOLFbw1.js";import"./IconButton-BVSRfYlJ.js";import"./useTimeout-BhJq4kG5.js";import"./ButtonBase-BX83Z0VB.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BGTymdZp.js";import"./Paper-BCS61ZLh.js";import"./useTheme-CjTtqgxL.js";import"./useTheme-CZTnF3AF.js";import"./Stack-BQvEapyr.js";import"./useThemeProps-CmnHZ3En.js";import"./getThemeProps-DlbFbBX7.js";import"./extendSxProp-Et1BOirn.js";import"./Box-BDTYEpGC.js";import"./AlertTitle-D8cxvMZv.js";import"./Typography-fBjhrNMo.js";import"./index-CLkWSig2.js";import"./ClickAwayListener-DDweZR_J.js";import"./getReactElementRef-DBAVQkW_.js";import"./index-D3DJx0X2.js";import"./index-CC6HTFNl.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BtgJxlwW.js";import"./Tooltip-C_M9hetJ.js";import"./index-Etco1RFO.js";import"./useControlled-DtifG75u.js";import"./Popper-C9tLJj2J.js";import"./Button-Cf0eu55O.js";import"./uniqueId-DV-L56RM.js";import"./toString-DgvCpfGu.js";import"./isArray-KvXH-Jx4.js";import"./isSymbol-prInbR1u.js";import"./times-5PU58L5-.js";import"./_Uint8Array-CzRmNIxi.js";import"./identity-DKeuBCMA.js";import"./toInteger-B2v-gFfh.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-CH0n5MNt.js";import"./QueryClientProvider-Py7SAasE.js";import"./Link-DFtCODF5.js";import"./Collapse-BeiaCXPV.js";import"./_baseUniq-Cu_OF4Xp.js";import"./_getTag-B8WXN5Nr.js";import"./isEqual-CzDcfwhI.js";import"./noop-DX6rZLP_.js";import"./merge-jd3NSUkd.js";import"./_initCloneObject-XmSwrlPI.js";import"./tinycolor-Begke6kS.js";import"./Fade-ByV7WbF5.js";import"./inputBaseClasses-CtqzjeT7.js";import"./calculateFriendlyFileSize-uiD7W4tT.js";import"./CheckCircleTwoTone-DAKkXTN_.js";import"./InfoTwoTone-C_fE8DJq.js";import"./useMutation-0FRbsOeu.js";import"./dayjs.min-C2eBLBEm.js";import"./chunk-AYJ5UCUI-DBs_SlKK.js";import"./cloneDeep-7VEFdNK3.js";import"./Skeleton-Cb30zSej.js";import"./AccountLevelBadge-BojLOWhj.js";import"./Card-BAPjKOJ9.js";import"./ConfirmationDialog-DyKWNzKS.js";import"./DialogBase-SvfGhLvJ.js";import"./Close-BX1l_3X2.js";import"./HelpPopover-CIxIsRgw.js";import"./MarkdownPopover-5H746bwN.js";import"./LightTooltip-CWUv6PR9.js";import"./MarkdownSynapse-B5gAKz_O.js";import"./SkeletonButton-DYD3Ov2g.js";import"./SkeletonInlineBlock-m2Hdis6_.js";import"./SkeletonTable-Btk5G1lW.js";import"./SkeletonParagraph-DRD-GFd_.js";import"./HelpOutlineTwoTone-DiwaNnD4.js";import"./Dialog-vXiKjclW.js";import"./DialogActions-DbizneYi.js";import"./Modal-QI8mClBj.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-iwUY4j7_.js";import"./DialogContent-oRABJAy_.js";import"./DialogTitle-CCfMl4ZB.js";import"./LoadingScreen-CovsMJ6T.js";import"./LinearProgress-rA35xzrE.js";import"./ToastMessage-864EGvFe.js";import"./CSSTransition-DJKhE4qN.js";const kt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Ut=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Ut as __namedExportsOrder,kt as default};
