import{g as f}from"./userProfileHandlers-B2Qv3B9K.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-S2V5XiQ5.js";import{A}from"./AccountLevelBadges-C7gvhO1t.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-DPg2Qv-0.js";import"./iframe-B7VjNHo_.js";import"./mockEntity-BphVP-8V.js";import"./mockFileEntity-Bq6FvrO-.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-Bg7bDmAu.js";import"./mockTeam-Cx9yM2LM.js";import"./SynapseConstants-v0apzKoO.js";import"./OrientationBanner-DFmDuf7j.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-C7cfG45a.js";import"./index-sbO4x94I.js";import"./spreadSx-CwcO6WA9.js";import"./react-4SSRkyYe.js";import"./FullWidthAlert-CNH_Dqfb.js";import"./Alert-DZ8CbtWA.js";import"./createTheme-iVg2ALkG.js";import"./DefaultPropsProvider-CRtidxfI.js";import"./useSlot-C9f_lDyM.js";import"./useForkRef-CYTdLXIx.js";import"./createSimplePaletteValueFilter-C8f66SCi.js";import"./createSvgIcon-D3jU8-M9.js";import"./Close-B3lKWl3N.js";import"./IconButton-tGIn719_.js";import"./useTimeout-CGLlUFdL.js";import"./ButtonBase-COsjseQ1.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-D013myXI.js";import"./Paper-Cpv8FcM0.js";import"./useTheme-DhBETySk.js";import"./useTheme-CYmu3bRJ.js";import"./Stack-BEg7pLQM.js";import"./extendSxProp-DFEfVq7i.js";import"./getThemeProps-DM9gIAd0.js";import"./Box-DravUX6M.js";import"./AlertTitle-BQ770Cwf.js";import"./Typography-DRTW8NuR.js";import"./index-DZ4LX7su.js";import"./ClickAwayListener-BSIiFOtQ.js";import"./getReactElementRef-BtsaYvD6.js";import"./index-DzYd1Bc_.js";import"./index-BKNU1Rjh.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-ChyhBvRk.js";import"./Tooltip-CJHx95Zp.js";import"./index-R2QlNZel.js";import"./useControlled-CfdyZ7Xn.js";import"./Popper-BuFN7FXQ.js";import"./Button-BK6paxd1.js";import"./uniqueId-BYQQpX8l.js";import"./toString-BL0OxC_V.js";import"./isArray-BgCSpe1l.js";import"./isSymbol-DsPf4Jsh.js";import"./times-DRBzd2y5.js";import"./_Uint8Array-C4QD7eya.js";import"./identity-DKeuBCMA.js";import"./toInteger-DhBeNU-T.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-CBEaN3hw.js";import"./QueryClientProvider-CQeOfp_m.js";import"./Link-BJq7PyxB.js";import"./Collapse--UWddqzL.js";import"./_baseUniq-SRsv_8xH.js";import"./_getTag-CFPOCuEk.js";import"./isEqual-C3QkQYs2.js";import"./merge-DYvHUG4s.js";import"./_initCloneObject-DwZJqav8.js";import"./tinycolor-Begke6kS.js";import"./Fade-dEjfEC7w.js";import"./inputBaseClasses-Buwfxq9X.js";import"./calculateFriendlyFileSize-8dDJSstk.js";import"./CheckCircleTwoTone-3LbkrL10.js";import"./InfoTwoTone-BBLBptou.js";import"./useMutation-DxiTHEyI.js";import"./dayjs.min-d7VTqjeN.js";import"./chunk-AYJ5UCUI-D7s1T1vu.js";import"./cloneDeep-BOvso_ns.js";import"./Skeleton-lznIIFIC.js";import"./AccountLevelBadge-CZrm8BVJ.js";import"./Card-BUh5CScp.js";import"./ConfirmationDialog-BMj2EFGY.js";import"./DialogBase-OIGGBKyK.js";import"./Close-DOFDn3Fb.js";import"./HelpPopover-DSVYXFpa.js";import"./MarkdownPopover-Dzh4G3KF.js";import"./LightTooltip-C8QEL9OI.js";import"./MarkdownSynapse-Dx5uMMSh.js";import"./SkeletonButton-BfnxXOab.js";import"./SkeletonInlineBlock-Xy-wwnM5.js";import"./SkeletonTable-CRk7h5Zb.js";import"./SkeletonParagraph-D_p2L1Wx.js";import"./HelpOutlineTwoTone-DRdgsGsY.js";import"./DialogTitle-ic_dbiAz.js";import"./DialogContent-DCawu9UU.js";import"./DialogActions-BHR3A-MZ.js";import"./Dialog-CYwe15aC.js";import"./Modal-BY73-Ubt.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-CrtgK3YQ.js";import"./LoadingScreen-jdm43BBf.js";import"./LinearProgress-GKSNbX-f.js";import"./ToastMessage-CrFNx3l4.js";import"./CSSTransition-DW4i2oPj.js";const St={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Et=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Et as __namedExportsOrder,St as default};
