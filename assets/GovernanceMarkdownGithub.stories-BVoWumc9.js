import{u as o}from"./VerificationSubmission-BDh1zA9f.js";import{g as u,bd as d,be as l,B as f,bf as S,M as O}from"./useFiles-Doa42xrB.js";import"./StringUtils-C95LMFI-.js";import{h as i,H as n}from"./index-CcEdLBWn.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-B57pcHxK.js";import"./SynapseConstants-BFOqWDQA.js";import"./OrientationBanner-TCfC_H3L.js";import"./index-BVee_ffb.js";import"./index-BbU4aETC.js";import"./iframe-BX7CAi87.js";import"./spreadSx-CwcO6WA9.js";import"./react-QiGgL7yD.js";import"./FullWidthAlert-u71Fe4AT.js";import"./Alert-CWDPuPjT.js";import"./createTheme-BZKeiz7F.js";import"./DefaultPropsProvider-DPTWajoX.js";import"./useSlot-Coso6cuj.js";import"./useForkRef-DR_w4f00.js";import"./createSimplePaletteValueFilter-CIoWQpVR.js";import"./createSvgIcon-DOjZs8H3.js";import"./Close-DfaBktiu.js";import"./IconButton-2ClfUHAI.js";import"./useTimeout-BQmg3tV4.js";import"./ButtonBase-oFCZPY0b.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-mTIStDYE.js";import"./Paper-BtMJMCrb.js";import"./useTheme-Cey4q2bx.js";import"./useTheme-CcXBUw_1.js";import"./Stack-Dkk8Xa7g.js";import"./useThemeProps-D9O9WAY6.js";import"./getThemeProps-CHgFTbzR.js";import"./extendSxProp-DTdvSIHJ.js";import"./Box-Bycse9BW.js";import"./AlertTitle-uJCriyqk.js";import"./Typography-Ck3rri_r.js";import"./index-DIpubuKK.js";import"./ClickAwayListener-DJnMgcYy.js";import"./getReactElementRef-r96q0QeR.js";import"./index-P5ijQna_.js";import"./index-A1z-KzpE.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BVNeYH1n.js";import"./Tooltip-i3RfmkJe.js";import"./index-CFklzSJo.js";import"./useControlled-BeW8yXpV.js";import"./Popper-WEnZTTxD.js";import"./Button-BQsAdChS.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-C3jQoxqK.js";import"./QueryClientProvider-Bx1UJlnP.js";import"./Link-CnaFqnEf.js";import"./Collapse-39g-gMCj.js";import"./_baseUniq-CZ8adtBQ.js";import"./_Uint8Array-CEg26PaB.js";import"./isArray-D3G7sFso.js";import"./_getTag-DwYiCtlW.js";import"./isEqual-DJ5furX1.js";import"./noop-DX6rZLP_.js";import"./merge-DEChS73I.js";import"./_initCloneObject-DYz2LT-o.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-SGKJTB9b.js";import"./inputBaseClasses-Df0a-hTu.js";import"./calculateFriendlyFileSize-2wXvVYCR.js";import"./CheckCircleTwoTone-DtjYqZqD.js";import"./InfoTwoTone-jdxUB-jN.js";import"./useMutation-RDVDSqRG.js";import"./dayjs.min-BJ7tfLc7.js";import"./chunk-AYJ5UCUI-DyVUVBHY.js";import"./cloneDeep-HprkIbek.js";import"./Skeleton-DfMrunuk.js";import"./SkeletonButton-DavH1BHy.js";import"./SkeletonInlineBlock-CfLhQAN5.js";import"./SkeletonTable-DMkQYsl-.js";import"./times-CzCyu-RU.js";import"./toInteger-CboIHU7e.js";import"./isSymbol-Du-9wEEV.js";import"./SkeletonParagraph-B9RzV3Fm.js";import"./MarkdownSynapse-CawGuG-E.js";import"./Container-B7j8aX4Y.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Qr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Xr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Xr as __namedExportsOrder,Qr as default};
