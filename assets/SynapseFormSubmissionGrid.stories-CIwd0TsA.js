import{j as l}from"./jsx-runtime-BShfRpSZ.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-BI5WaB2N.js";import{g as T}from"./handlers-CmroicaL.js";import{aD as S,M as a}from"./useFiles-PZ8-Ka-K.js";import"./OrientationBanner-Cvk0vZwz.js";import"./index-BbtDhika.js";import"./StringUtils-DN6u4g4A.js";import{l as _}from"./index-CeOvG48o.js";import{S as E}from"./SynapseFormSubmissionGrid-DNBPWxtQ.js";import"./mockSchema-zRckJnXf.js";import"./mockFileEntity-D82DpNaa.js";import"./mock_file_handle-CFTRkxcS.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-BD1H_GVq.js";import"./mockTeam-CXAkQPXT.js";import"./SynapseConstants-D-g__08a.js";import"./uniqueId-DbpN6IHj.js";import"./toString-YsSM19GU.js";import"./isObjectLike-CHy9fFvj.js";import"./iframe-CKrYTaKd.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-CUREHNyO.js";import"./times-BvOY06CC.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DYzZKw_P.js";import"./asyncJobHandlers-CADvy1jd.js";import"./BasicMockedCrudService-ClFlYQQo.js";import"./cloneDeep-DpCux0qf.js";import"./_Uint8Array-DIVOU-2-.js";import"./_initCloneObject-wn-R8NIZ.js";import"./_getTag-l16BreDv.js";import"./isEqual-CVkRzbJy.js";import"./_baseIsEqual-ClNnW1Hu.js";import"./mockAnnotationColumns-DoBM46mH.js";import"./tableQueryHandlers-D2JhLrEf.js";import"./omit-DlmbxSDg.js";import"./_baseGet-DgyH0sEk.js";import"./isNil-9z8ZomJ0.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BWGd7Swl.js";import"./_baseFlatten-hE0j4b-0.js";import"./pick-BBn54mF0.js";import"./_baseSet-CDtQiuSQ.js";import"./hasIn-yXcJRe70.js";import"./accessRequirementAclHandlers-Di1OSmGu.js";import"./mockAccessRequirementAcls-C1AcYXhc.js";import"./mockAccessRequirements-D7JMPxmA.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CgjxDh2Q.js";import"./accessRequirementHandlers-Chtmb3Fc.js";import"./wikiHandlers-DLf7iDS6.js";import"./mockWikiPageKey-DZDMC2VU.js";import"./teamHandlers-22m7pG-Z.js";import"./dataAccessRequestHandlers-f-3Oq6-O.js";import"./MockResearchProject-smsDoM2S.js";import"./mock_discussion-DSIQkchy.js";import"./fakerUtils-G5vTZeXB.js";import"./index-XreUjsnZ.js";import"./mockTableEntity-B_IPyaum.js";import"./mockFileEntityACLVariants-sUsUBRQO.js";import"./entityHandlers-DAIhqmdr.js";import"./mockEntity-CpFd3h3M.js";import"./mockEvaluationQueue-BW_c2GKA.js";import"./featureFlagHandlers-BTZn6QbI.js";import"./fileHandlers-CMp62FKw.js";import"./personalAccessTokenHandlers-DZB5n2Xk.js";import"./researchProjectHandlers-D6ZIHlKF.js";import"./resetTwoFactorAuthHandlers-QYiye4Gk.js";import"./userProfileHandlers-UJpaZWwM.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-Cve-nvmp.js";import"./FullWidthAlert-D-sxDN5-.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-C2YXBWCZ.js";import"./createTheme-DKmxwRcy.js";import"./resolveComponentProps-BVwZEvDc.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-IOZ1OulF.js";import"./createSvgIcon-hcVlY0Ml.js";import"./DefaultPropsProvider-cSSWhC_N.js";import"./Close-DBkHOwqb.js";import"./IconButton-5km8qVSa.js";import"./ButtonBase-ClE2TfhF.js";import"./useTimeout-k-gMJ94D.js";import"./useIsFocusVisible-Dks7CKXr.js";import"./useEventCallback-jwq_ByoI.js";import"./Paper-Bm29IVK3.js";import"./Stack-COuT9-_l.js";import"./getThemeProps-DEq8Zk9I.js";import"./useTheme-DuVt1FxG.js";import"./Box-CWd-bsj8.js";import"./AlertTitle-D7VJteKH.js";import"./Typography-D596ILSX.js";import"./useTheme-BKtsw1fM.js";import"./Grow-DArXpOEh.js";import"./index-C2ZmoJQv.js";import"./utils-JiBfP0T-.js";import"./ClickAwayListener-DJDrwr3D.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BhjMsB6i.js";import"./index-CmWQNtGo.js";import"./useControlled-BNOR6_Pf.js";import"./useId-C10K-7yC.js";import"./Popper-BEhyKRxf.js";import"./Button-C3bos-pW.js";import"./useQuery-BY-c2cTp.js";import"./utils-BIdFCP2Y.js";import"./Link-BR06mnNh.js";import"./Collapse-D4OMLybv.js";import"./tinycolor-Begke6kS.js";import"./Fade-RO7PwX5V.js";import"./Skeleton-CB5rBUhd.js";import"./inputBaseClasses-C06Dmsts.js";import"./calculateFriendlyFileSize-Hpnh_yqR.js";import"./CheckCircleTwoTone-ly2iPN9C.js";import"./InfoTwoTone-CEeh4CzQ.js";import"./mutation-Br5mjHBF.js";import"./dayjs.min-D0qkn3AN.js";import"./chunk-AYJ5UCUI-D7I6sN6G.js";import"./index-N1kOmd9H.js";import"./react-HYFTtNt4.js";import"./util-DttNETco.js";import"./WideButton-BQWe39q4.js";import"./DeleteTwoTone-YyBFxYhO.js";import"./createSvgIcon-CNrHxJfs.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-B--4iL8i.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-PtqrO_-N.js";import"./DialogBase-COCheKUU.js";import"./Close-Dr0jJEVv.js";import"./HelpPopover-QDy0Qm2S.js";import"./MarkdownPopover-DcDL1KNm.js";import"./LightTooltip-CEbYY1ie.js";import"./MarkdownSynapse-Cgf5QBr8.js";import"./useMutation-D-CWI_i2.js";import"./SkeletonButton-DbqdKH1b.js";import"./SkeletonInlineBlock-BKSCAse0.js";import"./SkeletonTable-CY03LyzV.js";import"./SkeletonParagraph-BG-y1rkA.js";import"./HelpOutlineTwoTone-BIPZOyzw.js";import"./DialogTitle-DDR3qUNL.js";import"./DialogContent-D29tXjEG.js";import"./Dialog-yelkM-KC.js";import"./Modal-BEBinARC.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-DRLFuN1U.js";import"./WarningDialog-Cv1y7cCQ.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},To={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const _o=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,_o as __namedExportsOrder,To as default};
