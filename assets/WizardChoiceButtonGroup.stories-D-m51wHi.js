import{j as i}from"./jsx-runtime-BK5U4Ogm.js";import{W as m,a as t}from"./WizardChoiceButton-C_rNC7RZ.js";import{I as l}from"./LayersTwoTone-DHmDrJFO.js";import{F as d}from"./IconSvg-DOU-nBB6.js";import"./index-Di6pL9sS.js";import"./iframe-BcMO-NRu.js";import"./Box-CgFRiWSE.js";import"./createTheme-Cp4i8P3j.js";import"./useTheme-6ADmrWxD.js";import"./Typography-DdVpYyJT.js";import"./DefaultPropsProvider-jCgqZX_L.js";import"./createSvgIcon-6f5z08nh.js";import"./spreadSx-CwcO6WA9.js";import"./useTheme-BJOxI8Pz.js";import"./Tooltip-BGdElWBC.js";import"./index-UlGlXuF6.js";import"./Grow-BJi-xmc6.js";import"./resolveComponentProps-BcPJL9MH.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CDRx8QSv.js";import"./index-BlWCVmXL.js";import"./utils-Bm34yggg.js";import"./TransitionGroupContext-D2Egnh2Q.js";import"./useEventCallback-pwXQXOzV.js";import"./useTimeout-Bk2aBz7o.js";import"./useControlled-ctFy0C0l.js";import"./useId-Kr4560Rl.js";import"./useIsFocusVisible-Dwuhnw_i.js";import"./Popper-C7mrmf4N.js";import"./ownerDocument-DW-IO8s5.js";import"./ContentCopyTwoTone-MUPi-_jz.js";import"./HelpOutlineTwoTone-DMIYYtV5.js";import"./ErrorOutlined-BcnwRaxB.js";import"./GetAppTwoTone-h81I1GPZ.js";import"./InfoOutlined-Cfc6OupK.js";import"./DeleteTwoTone-C2U035bW.js";import"./CheckCircleTwoTone-CoVF2IX7.js";const V={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},e={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),i.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:i.jsx(l,{fontSize:"large"})}),i.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:i.jsx(d,{fontSize:"large"})})]})}};var r,s,n;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const Y=["Basic","WithIcons"];export{e as Basic,o as WithIcons,Y as __namedExportsOrder,V as default};
