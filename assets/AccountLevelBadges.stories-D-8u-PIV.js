import{g as f}from"./userProfileHandlers-Pzkl2TeK.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-SRraC90P.js";import{A}from"./AccountLevelBadges-D1qS9oob.js";import"./VerificationSubmission-CDh9xETu.js";import"./index-DsAu2dxX.js";import"./iframe-Dh7vrRpU.js";import"./mockEntity-BUa-WGTe.js";import"./mockFileEntity-Dn7OR-lK.js";import"./StringUtils-CsrYFBZo.js";import"./mock_file_handle-7frMWCuU.js";import"./mockProject-FK7nspDr.js";import"./mockTeam-rNdSgbHT.js";import"./SynapseConstants-PNfEX-Ee.js";import"./OrientationBanner-C1RDTEFe.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-BfGz0-rx.js";import"./index-COPlMTLH.js";import"./spreadSx-CwcO6WA9.js";import"./react-Br1418uu.js";import"./FullWidthAlert-BdEFBuz2.js";import"./Alert-D_I4Da61.js";import"./createTheme-BUGEXAZ7.js";import"./DefaultPropsProvider-Cl_kOTzU.js";import"./useSlot-BkLAJCAz.js";import"./useForkRef-BBYXNeWj.js";import"./createSimplePaletteValueFilter-D0Hq8-6_.js";import"./createSvgIcon-GUC6M7fo.js";import"./Close-B2th-w95.js";import"./IconButton-Dny5oSWg.js";import"./useTimeout-CASSdLe8.js";import"./ButtonBase-D1oJct8N.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DLO471x8.js";import"./Paper-DRCE2cQE.js";import"./useTheme-KKgiytaP.js";import"./useTheme-Cyhg0lMD.js";import"./Stack-DTGKt6ID.js";import"./extendSxProp-Buq774I8.js";import"./getThemeProps-BH8LJhew.js";import"./Box-D-uimvGt.js";import"./AlertTitle-CHYbqgd8.js";import"./Typography-CmH3M1Ds.js";import"./index-BeT-zJSF.js";import"./ClickAwayListener-Dkyb_H4E.js";import"./getReactElementRef-CDtIlStC.js";import"./index-GNIoEsQh.js";import"./index-C9kE7G9Q.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BX6s5DFQ.js";import"./Tooltip-Dsx7YQ3j.js";import"./index-Jg77emZI.js";import"./useControlled-DMsQxF37.js";import"./Popper-CJ3GQeEU.js";import"./Button-seLAaY-z.js";import"./uniqueId-BG5WBqAZ.js";import"./toString-CrL6CxhE.js";import"./isArray-C_29kE4-.js";import"./isSymbol-vpsHx3GN.js";import"./times-BLcu-U0w.js";import"./_Uint8Array-IVjl8hkw.js";import"./identity-DKeuBCMA.js";import"./toInteger-xNfQ4hRe.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-C0_YrBpr.js";import"./QueryClientProvider--HygutHk.js";import"./Link-1iYcYmRG.js";import"./Collapse-BCkD2TRw.js";import"./_baseUniq-B0CxpJpC.js";import"./_getTag-D-CvqH-C.js";import"./isEqual-CcVe2o0k.js";import"./merge-Bjs4ZByV.js";import"./_initCloneObject-BfmCOVO5.js";import"./tinycolor-Begke6kS.js";import"./Fade-6BTbwAew.js";import"./inputBaseClasses-DNxBSNA3.js";import"./calculateFriendlyFileSize-Dio-ngoW.js";import"./CheckCircleTwoTone-lIj_wBp0.js";import"./InfoTwoTone-Bz5QJbm9.js";import"./useMutation-BvwePRm3.js";import"./dayjs.min-DhbqjnF4.js";import"./chunk-AYJ5UCUI-BD7rHHbc.js";import"./cloneDeep-C5RiGzwl.js";import"./Skeleton-Cv60quvj.js";import"./AccountLevelBadge-B1FVqHQU.js";import"./Card-C4X-M2Qc.js";import"./ConfirmationDialog-CI--D9OB.js";import"./DialogBase-ul3LSueX.js";import"./Close-C3T6S5E7.js";import"./HelpPopover-CrVFGbrc.js";import"./MarkdownPopover-CAkhq1wC.js";import"./LightTooltip-CQ1Qmtqf.js";import"./MarkdownSynapse-bi-LcI5M.js";import"./SkeletonButton-CjE_0vIp.js";import"./SkeletonInlineBlock-Cz-9MPE3.js";import"./SkeletonTable-CszXZ9Xi.js";import"./SkeletonParagraph-CwjADhHN.js";import"./HelpOutlineTwoTone-BTT-kXcr.js";import"./DialogTitle-BS3wzwuK.js";import"./DialogContent-0fE7hWDK.js";import"./Dialog-D_HDArKX.js";import"./Modal-QvltWDdm.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-Bk-jIFck.js";import"./LoadingScreen-BAqlv06H.js";import"./LinearProgress-BFC4PNS4.js";import"./ToastMessage-BajH5OoY.js";import"./CSSTransition-DqBV4lTD.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
