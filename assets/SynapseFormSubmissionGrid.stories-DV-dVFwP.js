import{j as l}from"./jsx-runtime-Aq5fbqHl.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-DZ6qIEfa.js";import{aH as S,M as a}from"./useFiles-DB5RUn42.js";import"./OrientationBanner-BxqvkYhO.js";import"./index-JgWvyRd0.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-7FMrWnre.js";import{S as E}from"./SynapseFormSubmissionGrid-DyBTgZ1f.js";import"./mockSchema-Dh3kpe7I.js";import"./mockFileEntity-Dn_RDYVz.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-BQaBfmN2.js";import"./mockTeam-D27Y7qlv.js";import"./SynapseConstants-CfJFMU44.js";import"./uniqueId-C3LnxDfg.js";import"./toString-C5rFS-5w.js";import"./isObjectLike-DOsXpd_Z.js";import"./iframe-CGz9Tkep.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-Ek_DRy9H.js";import"./times-YBF_Fis8.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-BCMs930d.js";import"./asyncJobHandlers-ibvmKW8N.js";import"./BasicMockedCrudService-CHgDasYC.js";import"./cloneDeep-D4yJ6Uqf.js";import"./_Uint8Array-DsX8C4yt.js";import"./_initCloneObject-CBlxkXZJ.js";import"./_getTag-DqJt2ioY.js";import"./isEqual-Dlw3pN9M.js";import"./_baseIsEqual-B73VkKNe.js";import"./mockAnnotationColumns-CTSMZAK4.js";import"./tableQueryHandlers-at80FXCE.js";import"./omit-CFpA7KaZ.js";import"./_baseGet-D12nzZjt.js";import"./isNil-YEBrO959.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-CtnYmU5N.js";import"./_baseFlatten-BIL-DYGo.js";import"./pick-i_gl0MW5.js";import"./_baseSet-F7M8d2Tr.js";import"./hasIn-NEyUsSrI.js";import"./accessRequirementAclHandlers-D3VWS_gG.js";import"./mockAccessRequirementAcls-aqpJhU79.js";import"./mockAccessRequirements-BdXFelmM.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-DzW5SRQa.js";import"./wikiHandlers-Di2hTg6O.js";import"./mockWikiPageKey-B309RPbH.js";import"./teamHandlers-B6l4e4lI.js";import"./dataAccessRequestHandlers-BJGRV_4k.js";import"./MockResearchProject-StGfTlEr.js";import"./mock_discussion-MGjr2GW-.js";import"./fakerUtils-N4rA7CzO.js";import"./index-BZpYP5kl.js";import"./mockTableEntity-hPyHEEtD.js";import"./mockFileEntityACLVariants-K48Cepcw.js";import"./entityHandlers-BRYPDVsE.js";import"./mockEntity-CRrjzUZZ.js";import"./mockEvaluationQueue-D3uby_hD.js";import"./featureFlagHandlers-Crjcl5Wv.js";import"./fileHandlers-CIj-2inn.js";import"./personalAccessTokenHandlers-DIREtjh8.js";import"./researchProjectHandlers-i0v5Scrh.js";import"./resetTwoFactorAuthHandlers-kGvwuZ80.js";import"./userProfileHandlers-CRR6YSR6.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-Dv9DyMfN.js";import"./FullWidthAlert-pE7OHiYt.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-DxvcGxLm.js";import"./createTheme-CabrvzGG.js";import"./resolveComponentProps-CbN17S1S.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CH1o28Sn.js";import"./createSvgIcon-D5iVBR5M.js";import"./DefaultPropsProvider-rm74DNR0.js";import"./Close-CtA38glB.js";import"./IconButton-DJ7CnQcI.js";import"./ButtonBase-DuHovILV.js";import"./useTimeout-CLPgbyPk.js";import"./useIsFocusVisible-BGnBciWP.js";import"./useEventCallback-BAJp23lY.js";import"./Paper-DK1SI2Ul.js";import"./Stack-BfP3PSXZ.js";import"./getThemeProps-CiYEGSc1.js";import"./useTheme-C4qyPjnK.js";import"./Box-B2ycGbQs.js";import"./AlertTitle-CLAc8_kb.js";import"./Typography-C_Rd-vc3.js";import"./useTheme-CWq0CMFs.js";import"./Grow-96cTP3k-.js";import"./index-BAYNcIPW.js";import"./utils-BpsVJ7_L.js";import"./ClickAwayListener-CpgqDlAE.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DV1lHLML.js";import"./index-BXuttiqi.js";import"./useControlled-DKF3jkF4.js";import"./useId-te-eXufQ.js";import"./Popper-BpxIK3o5.js";import"./Button-Cj3fw4dL.js";import"./useQuery-CWCK9oHA.js";import"./utils-BTjLWw9V.js";import"./Link-B-GSk5ZJ.js";import"./Collapse-DRZCXyGt.js";import"./tinycolor-Begke6kS.js";import"./Fade-D7vpEMyo.js";import"./Skeleton-sPP7_TZq.js";import"./inputBaseClasses-BAfHv4Bb.js";import"./calculateFriendlyFileSize-Vzb5BBgT.js";import"./CheckCircleTwoTone-DH4fkY38.js";import"./InfoTwoTone-BCIxruOU.js";import"./mutation-B9vk3ZUd.js";import"./dayjs.min-DMTb_QEv.js";import"./chunk-AYJ5UCUI-D9dVPbwt.js";import"./index-DbjpxmLy.js";import"./react-DTfpc0Nm.js";import"./util-CADoEE8R.js";import"./WideButton-C6awYQXv.js";import"./DeleteTwoTone-Dl--gnZH.js";import"./createSvgIcon-C_-hWUXG.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-DdMLwcpB.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-CDdY2LFn.js";import"./DialogBase-ByoiA3R8.js";import"./Close-CXmFZ05e.js";import"./HelpPopover-DAWQhvMR.js";import"./MarkdownPopover-D0EzTcVa.js";import"./LightTooltip-DuUsgmiX.js";import"./MarkdownSynapse-CYo-0ZOf.js";import"./SkeletonButton-Bv3PLMpo.js";import"./SkeletonInlineBlock-C2D2gUdf.js";import"./SkeletonTable-uiFn16a6.js";import"./SkeletonParagraph-C21fkqN2.js";import"./HelpOutlineTwoTone-D_O_70Jn.js";import"./DialogTitle-CPeAKN50.js";import"./DialogContent-xZd8TspS.js";import"./Dialog-CTW0S464.js";import"./Modal-cm4p0ipz.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-DOdQsRwS.js";import"./WarningDialog-CINgwg1b.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
