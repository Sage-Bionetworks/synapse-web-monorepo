import{aY as s,j as p,b_ as a,bF as e,b$ as l}from"./iframe-DkJtXMGY.js";const r=s(({className:o,...t})=>p.jsx(a,{...t,classes:{popper:o}}))(({theme:o})=>({[`& .${e.tooltip}`]:{backgroundColor:o.palette.background.paper,color:o.palette.grey[1e3],boxShadow:o.shadows[1],border:`1px solid ${o.palette.grey[500]}`},[`& .${e.arrow}`]:{"&:before":{boxShadow:o.shadows[1],border:`1px solid ${o.palette.grey[500]}`},color:o.palette.background.paper},[`& .${e.tooltip} .${l.root}`]:{color:`${o.palette.primary.main}`}}));try{r.displayName="LightTooltip",r.__docgenInfo={description:"",displayName:"LightTooltip",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"Partial<TooltipSlots>"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.",name:"slotProps",required:!1,type:{name:"{ popper?: SlotProps<ElementType<PopperProps, keyof IntrinsicElements>, TooltipPopperSlotPropsOverrides, TooltipOwnerState>; transition?: SlotProps<...>; tooltip?: SlotProps<...>; arrow?: SlotProps<...>; }"}}}}}catch{}export{r as L};
