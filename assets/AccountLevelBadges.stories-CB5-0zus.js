import{g as f}from"./userProfileHandlers-DaD-aYn7.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-DBEctmab.js";import{A}from"./AccountLevelBadges-BqnoRQ7F.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-CeM3xIAk.js";import"./iframe-D_Fqsfq4.js";import"./mockEntity-C7zNmQzo.js";import"./mockFileEntity-mNFzPKp-.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-B-7_J7n0.js";import"./mockTeam-BkY2Kb5y.js";import"./SynapseConstants-CbAC6j7A.js";import"./OrientationBanner-DpVC70dt.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-Ct3r44PU.js";import"./index-BoC9mbPI.js";import"./spreadSx-CwcO6WA9.js";import"./react-BH467_GQ.js";import"./FullWidthAlert-Bj9eHiJK.js";import"./Alert-Ds3NZtv3.js";import"./createTheme-DKmQ0T8u.js";import"./DefaultPropsProvider-DX1Tm6hX.js";import"./useSlot-DHgN7HRG.js";import"./useForkRef-DuJEVWZk.js";import"./createSimplePaletteValueFilter-C5zma5o1.js";import"./createSvgIcon-D0lTdNMg.js";import"./Close-C6pR0wvq.js";import"./IconButton-jj7u6pzf.js";import"./useTimeout-D2L2hKd5.js";import"./ButtonBase-CVi0DzxW.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-CkE3_q69.js";import"./Paper-bVT9BLiU.js";import"./useTheme-DOeDq_FU.js";import"./useTheme-BCF8IGAN.js";import"./Stack-86eFiKCQ.js";import"./extendSxProp-CsGDdDwy.js";import"./getThemeProps-DawfSU79.js";import"./Box-F0f29abT.js";import"./AlertTitle-CAoDvZac.js";import"./Typography-Ch2gxwNH.js";import"./index-BQwSpiiQ.js";import"./ClickAwayListener-gJuMmyJa.js";import"./getReactElementRef-Bemv---L.js";import"./index-BNyjnn7z.js";import"./index-CIfKdjTQ.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DW5gViin.js";import"./Tooltip-B8qmX082.js";import"./index-LLHf2Rll.js";import"./useControlled-Fn_6fmgT.js";import"./Popper-D90A6WnX.js";import"./Button-Dvv07PAX.js";import"./uniqueId-3_UfNhdF.js";import"./toString-W3Ng2Dl1.js";import"./isArray-DrXY-ag7.js";import"./isSymbol-DiwKEYKx.js";import"./times-BaW9nck_.js";import"./_Uint8Array-I8Q0tngj.js";import"./identity-DKeuBCMA.js";import"./toInteger-DFei6qGl.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-B9gAQeEx.js";import"./QueryClientProvider-D1-MD6zl.js";import"./Link-CeAlzF0F.js";import"./Collapse-BPGnxPXh.js";import"./_baseUniq-CoHdZ8H5.js";import"./_getTag-CnqFMyCR.js";import"./isEqual-OqqYJb0M.js";import"./merge-DV3Kq0zA.js";import"./_initCloneObject-CmSiAr5t.js";import"./tinycolor-Begke6kS.js";import"./Fade-DC6uyZ5B.js";import"./inputBaseClasses-CZ5eTaNL.js";import"./calculateFriendlyFileSize-C67i4Vi9.js";import"./CheckCircleTwoTone-DBrdLgIO.js";import"./InfoTwoTone-CsFI_uty.js";import"./useMutation-C76vb5A5.js";import"./dayjs.min-BAmezIeJ.js";import"./chunk-AYJ5UCUI-zMqkVHKR.js";import"./cloneDeep-DqSuasmx.js";import"./Skeleton-EPd-3t_-.js";import"./AccountLevelBadge-DPuEfB5D.js";import"./Card-BFVINxTy.js";import"./ConfirmationDialog-BzhNPD9h.js";import"./DialogBase-CjomFYjH.js";import"./Close-DnmwyVuU.js";import"./HelpPopover-B0sbpcuy.js";import"./MarkdownPopover-ChT7WL2-.js";import"./LightTooltip-0j6dGkFp.js";import"./MarkdownSynapse-6iO57Q-W.js";import"./SkeletonButton-BUBbV4JZ.js";import"./SkeletonInlineBlock-CJp5nn7M.js";import"./SkeletonTable-CXldc8KD.js";import"./SkeletonParagraph-DcTnO7rN.js";import"./HelpOutlineTwoTone-BE-W-6Xo.js";import"./DialogTitle-DXnkDn7C.js";import"./DialogContent-Dfcy7WOM.js";import"./DialogActions-DHTznXJK.js";import"./Dialog-DqJNTSZC.js";import"./Modal-RrVupGCr.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-QgD6SPmw.js";import"./LoadingScreen-C_5oPNBY.js";import"./LinearProgress-5Eh0UE6x.js";import"./ToastMessage-B8RjKaP2.js";import"./CSSTransition-BsVmqytb.js";const St={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Et=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Et as __namedExportsOrder,St as default};
