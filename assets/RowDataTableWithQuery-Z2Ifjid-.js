import{j as r}from"./jsx-runtime-D_zvdyIk.js";import{s as c}from"./useFiles-KjJsMF-p.js";import{p as y}from"./SqlFunctions-B8wRZva4.js";import"./StringUtils-C95LMFI-.js";import{B as f,d as R}from"./SynapseConstants-DLx2cP4k.js";import"./SkeletonButton-DXoTvKx8.js";import"./SkeletonInlineBlock-DTj_dYaw.js";import{S as q}from"./SkeletonTable-DqoNgDeh.js";import"./SkeletonParagraph-CasqnWrn.js";import{R as _}from"./RowDataTable-DuzJkOYx.js";const s=a=>{const{columnAliases:o,columnLinks:n,query:t,displayedColumns:l}=a,i=y(t.sql),u={partMask:f|R,concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",entityId:i,query:t},{data:e,isLoading:d}=c(u),m=(e==null?void 0:e.queryResult.queryResults.rows[0].values)??[],p=(e==null?void 0:e.queryResult.queryResults.headers)??[];return d?r.jsx(q,{numRows:6,numCols:1}):r.jsx(_,{columnAliases:o,columnLinks:n,rowData:m,headers:p,displayedColumns:l})};try{s.displayName="RowDataTableWithQuery",s.__docgenInfo={description:"For the first row returned by the query, displays a table of column names and Synapse Table row data represented as key/value pairs",displayName:"RowDataTableWithQuery",props:{query:{defaultValue:null,description:"The query used to retrieve data",name:"query",required:!0,type:{name:"Query"}},displayedColumns:{defaultValue:null,description:"Optional list of column names whose data should be displayed in the table. If not provided, all columns with data will be shown.",name:"displayedColumns",required:!1,type:{name:"string[]"}},columnAliases:{defaultValue:null,description:"Optional display value overrides for column names",name:"columnAliases",required:!1,type:{name:"Record<string, string>"}},columnLinks:{defaultValue:null,description:"Optional configuration for linking columns",name:"columnLinks",required:!1,type:{name:"LabelLinkConfig"}}}}}catch{}export{s as R};
