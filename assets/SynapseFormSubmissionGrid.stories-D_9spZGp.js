import{j as l}from"./jsx-runtime-DqkftVdl.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-DikjT1Kh.js";import{aF as S,M as a}from"./useFiles-00zV7j3M.js";import"./OrientationBanner-CW_OwSoZ.js";import"./index-DePaHtiF.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-C8K9sEu5.js";import{S as E}from"./SynapseFormSubmissionGrid-DhcMRNwm.js";import"./mockSchema-CpncPlrR.js";import"./mockFileEntity-BDUWm-eN.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-DbjFEgjZ.js";import"./mockTeam-iJfpgbxr.js";import"./SynapseConstants-DXxtZCNr.js";import"./uniqueId-BG8ok7WD.js";import"./toString-BRV68jLP.js";import"./isObjectLike-BZYvinLn.js";import"./iframe-BROhmg6M.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BnK3Mv-h.js";import"./times-0aa5VcsZ.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DnVIvjjA.js";import"./asyncJobHandlers-Do_OfiVB.js";import"./BasicMockedCrudService-C4P_AVZk.js";import"./cloneDeep-Be3a7qNY.js";import"./_Uint8Array-D-I36iIO.js";import"./_initCloneObject-BDPs-veD.js";import"./_getTag-BTItrKZg.js";import"./isEqual-DMzBEPBa.js";import"./_baseIsEqual-ByXVEM-G.js";import"./mockAnnotationColumns-CfXltSRU.js";import"./tableQueryHandlers-DUoV4LPm.js";import"./omit-B0M5JOZv.js";import"./_baseGet-C4lO4fCU.js";import"./isNil-Dezvb9P5.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-CMvw9-qj.js";import"./_baseFlatten-DaeArYcT.js";import"./pick-BcmdS2M8.js";import"./_baseSet-CAMmW-S_.js";import"./hasIn-DLUX2Cp7.js";import"./accessRequirementAclHandlers-tVtJ5ezS.js";import"./mockAccessRequirementAcls-Dxnqvn1V.js";import"./mockAccessRequirements-DFBE0lIv.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-BcoU-bQk.js";import"./wikiHandlers-BEslUvY5.js";import"./mockWikiPageKey-D0JZ9wTv.js";import"./teamHandlers-CwAyCE-L.js";import"./dataAccessRequestHandlers-BbC2geS2.js";import"./MockResearchProject-BMHkFIKF.js";import"./mock_discussion-CKC6Ldip.js";import"./fakerUtils-CE3uWjIH.js";import"./index-De2pbzLE.js";import"./mockTableEntity-Dl-EQJYB.js";import"./mockFileEntityACLVariants-GUBdbNvs.js";import"./entityHandlers-DUKsELAy.js";import"./mockEntity-Ctzww8h5.js";import"./mockEvaluationQueue-BS5RwcbK.js";import"./featureFlagHandlers-BEpz-0ba.js";import"./fileHandlers-DSkQnXAV.js";import"./personalAccessTokenHandlers-BX9kJGw1.js";import"./researchProjectHandlers-BGvafxaj.js";import"./resetTwoFactorAuthHandlers-Cq4hZzHD.js";import"./userProfileHandlers-Bzz_S5lZ.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-DQEZvtFj.js";import"./FullWidthAlert-BxE7qCkE.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-q_ZdLQQt.js";import"./createTheme-5Fe3luW2.js";import"./resolveComponentProps-B_dOnkEG.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-DxGWz-nP.js";import"./createSvgIcon-BC6UvAwx.js";import"./DefaultPropsProvider-DjeLsGG1.js";import"./Close-ChuplZX6.js";import"./IconButton-BcbjXjc9.js";import"./ButtonBase-Do0JJz1c.js";import"./useTimeout-D5dvr_Gi.js";import"./useIsFocusVisible-DI2M56aP.js";import"./useEventCallback-BZ6D7d5A.js";import"./Paper-CB6CO99j.js";import"./Stack-HiEVvsaJ.js";import"./getThemeProps-f2sadzhq.js";import"./useTheme-U-7hfo9l.js";import"./Box-D9NrrPyX.js";import"./AlertTitle-ChAbcANF.js";import"./Typography-OD-ts1pz.js";import"./useTheme-CTLaU0Ir.js";import"./Grow-BU8iQ-gL.js";import"./index-CBZYBfor.js";import"./utils-CJvWoSDr.js";import"./ClickAwayListener-CUMsr3-e.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-CuUlmnbr.js";import"./index-DXHrkCm3.js";import"./useControlled-BOD8q2oj.js";import"./useId-wERg8hog.js";import"./Popper-Cuj0UtxU.js";import"./Button-CvbUAx7X.js";import"./useQuery-Cm5Odpzo.js";import"./utils-BjkGJnUz.js";import"./Link-EHhEhz1_.js";import"./Collapse-B-I-lrDJ.js";import"./tinycolor-Begke6kS.js";import"./Fade-f--pyCs_.js";import"./Skeleton-B9nMYFge.js";import"./inputBaseClasses-CpJ0CZmE.js";import"./calculateFriendlyFileSize-BkKsHBWw.js";import"./CheckCircleTwoTone-_t8YNrIT.js";import"./InfoTwoTone-CcQ4P4q-.js";import"./useMutation-Du37KsLM.js";import"./dayjs.min-DwUMv8zl.js";import"./chunk-AYJ5UCUI-CnSKK497.js";import"./index-s5f8zLZY.js";import"./react-ao0sqeqP.js";import"./util-DaH-A7pK.js";import"./WideButton-CeGIsgTf.js";import"./DeleteTwoTone-vrbyeu_8.js";import"./createSvgIcon-DuxARaEW.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-CaLeSPpe.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-Avt7gGCo.js";import"./DialogBase-DZ6ByIGn.js";import"./Close-Bdua2EhZ.js";import"./HelpPopover-BpNKGW7F.js";import"./MarkdownPopover-KjmWZSgE.js";import"./LightTooltip-C1nX7MIz.js";import"./MarkdownSynapse-Cs6g-S9w.js";import"./SkeletonButton-DYAGo3CI.js";import"./SkeletonInlineBlock-DrYX2Sn3.js";import"./SkeletonTable-DhrJmZ8y.js";import"./SkeletonParagraph-By1usgnb.js";import"./HelpOutlineTwoTone-BQw6pVym.js";import"./DialogTitle-CrCe8__N.js";import"./DialogContent-CTrVI8tw.js";import"./Dialog-WxLgZsTv.js";import"./Modal-Dgk2qUme.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-DpEFLiLP.js";import"./WarningDialog-Jp-RHplU.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
