import{j as l}from"./jsx-runtime-BPwvgLas.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-2wWQgBBv.js";import{aH as S,M as a}from"./useFiles-CbMpvGhW.js";import"./OrientationBanner-BCOcpvAV.js";import"./index-CBDLWlOB.js";import"./StringUtils-Df7AZImX.js";import{l as _}from"./index-C6DPBJMm.js";import{S as E}from"./SynapseFormSubmissionGrid-DUrTfSye.js";import"./mockSchema-CxAUxMjn.js";import"./mockFileEntity-BfDVYvSm.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-CZLEXUlF.js";import"./mockTeam-kRFo7KR3.js";import"./SynapseConstants-C-MequxA.js";import"./uniqueId-BPJn473d.js";import"./toString-B6Yu26DP.js";import"./isObjectLike-qFFT-3MK.js";import"./iframe-BOhnkrTR.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BwXYObLQ.js";import"./times-CJqkd24n.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DmMobODX.js";import"./asyncJobHandlers-GNh7Nc40.js";import"./BasicMockedCrudService-BScDr0OM.js";import"./cloneDeep-BLP2jVxP.js";import"./_Uint8Array-BDCBH0-0.js";import"./_initCloneObject-eaMKh-yS.js";import"./_getTag-KyP6iQiD.js";import"./isEqual-BvUIKxyq.js";import"./_baseIsEqual-D3_Tdhx8.js";import"./mockAnnotationColumns-RlyoXKDn.js";import"./tableQueryHandlers-BweSFF6l.js";import"./omit-3DoFvbW7.js";import"./_baseGet-DSjz3VLc.js";import"./isNil-Bv7-3_hG.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BbxdCm3T.js";import"./_baseFlatten-BmeqzDkS.js";import"./pick-CPmZ01Wa.js";import"./_baseSet-CyXzsn79.js";import"./hasIn-dFk1jheY.js";import"./accessRequirementAclHandlers-DIfKYJS3.js";import"./mockAccessRequirementAcls-rAqxc-cB.js";import"./mockAccessRequirements-D48yrwrp.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-DB2ElwWU.js";import"./wikiHandlers-DkGueMLC.js";import"./mockWikiPageKey-BtnXDcy3.js";import"./teamHandlers-K5LSux34.js";import"./dataAccessRequestHandlers-DJ1inbYU.js";import"./MockResearchProject-SWKyOvzx.js";import"./mock_discussion-BqzRSPoP.js";import"./fakerUtils-Bipy4cdT.js";import"./index-Dro2OcRH.js";import"./mockTableEntity-ClrE1mKV.js";import"./mockFileEntityACLVariants-Be7Cg6pf.js";import"./entityHandlers-Djezb2P4.js";import"./mockEntity-BAmn3goQ.js";import"./mockEvaluationQueue-pWmCWtpU.js";import"./featureFlagHandlers-BMavphDK.js";import"./fileHandlers-CaPK1FyN.js";import"./personalAccessTokenHandlers-CVDDBg4t.js";import"./researchProjectHandlers-DGAEwbvA.js";import"./resetTwoFactorAuthHandlers--NGs9JkS.js";import"./userProfileHandlers-C-vQ_7sH.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-vIwZ2ZdW.js";import"./FullWidthAlert-C4NXiFAr.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-xrq_SMEg.js";import"./createTheme-CqhKahyM.js";import"./resolveComponentProps-CbacDgM7.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CYG44Oi1.js";import"./createSvgIcon-CngalfwQ.js";import"./DefaultPropsProvider-CK3fJzAT.js";import"./Close-DIxv3BmU.js";import"./IconButton-D355AQnf.js";import"./ButtonBase-DkvFo0rp.js";import"./useTimeout-D29s38n5.js";import"./useIsFocusVisible-CRwyDx7g.js";import"./useEventCallback-BEeQPLsK.js";import"./Paper-keIiwirC.js";import"./Stack-BgNqp8gK.js";import"./getThemeProps-BbDbNfTq.js";import"./useTheme-CHrnUnqX.js";import"./Box-DZ1qA8WV.js";import"./AlertTitle-CEogbmjt.js";import"./Typography-CEe9erp9.js";import"./useTheme-P165y_LK.js";import"./Grow-CJVUX4yR.js";import"./index-BwhZA35d.js";import"./utils-BPpJDtRg.js";import"./ClickAwayListener-P6OmxxdK.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-_plCLI4q.js";import"./index-B9wPZdQL.js";import"./useControlled-BK1AIYs5.js";import"./useId-CLSRERuv.js";import"./Popper-BvhU2AWB.js";import"./Button-Cn6JHKgz.js";import"./useQuery-DZi11ge7.js";import"./utils-BqDa975t.js";import"./Link-Ccuxh7N2.js";import"./Collapse-xlH7IseN.js";import"./tinycolor-Begke6kS.js";import"./Fade-CY98KLjb.js";import"./Skeleton-iR_TlL_5.js";import"./inputBaseClasses-DlYO5ZlR.js";import"./calculateFriendlyFileSize-Chfxh2O6.js";import"./CheckCircleTwoTone-Bw2Wk5oI.js";import"./InfoTwoTone-Afibcha7.js";import"./mutation-BBLhG9HE.js";import"./dayjs.min-DYOI9g68.js";import"./chunk-AYJ5UCUI-D4D6uZ8Q.js";import"./index-AJ8qoPp1.js";import"./react-iQ_QJFeH.js";import"./util-CiZGs5gx.js";import"./WideButton-nCb8Egkl.js";import"./DeleteTwoTone-DN3pOiiw.js";import"./createSvgIcon-DEPGggoL.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-m_R2mW_W.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-DRbVfIRE.js";import"./DialogBase-C7B9JrFg.js";import"./Close-CI4jZYUU.js";import"./HelpPopover-CNYffTRv.js";import"./MarkdownPopover-Cizeoctj.js";import"./LightTooltip-CoggAz3C.js";import"./MarkdownSynapse-MHLPs3tU.js";import"./SkeletonButton-CfDxG5C1.js";import"./SkeletonInlineBlock-_DewcDuh.js";import"./SkeletonTable-CCbMvuDe.js";import"./SkeletonParagraph-BjwZeaHW.js";import"./HelpOutlineTwoTone-63OLYDHD.js";import"./DialogTitle-CQT1Kt4V.js";import"./DialogContent--OxUYu_Y.js";import"./Dialog-BNAQRZ1F.js";import"./Modal-BN5JbFC4.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-Bt50zR9z.js";import"./WarningDialog-CWeAiG7F.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
