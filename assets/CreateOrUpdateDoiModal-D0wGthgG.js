import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{C as Q}from"./ConfirmCloseWithoutSavingDialog-D7M8xpN4.js";import{D as z}from"./DialogBase-CEZ2rDqV.js";import{J as X}from"./JsonSchemaForm-BI2ctHfo.js";import{M as Z}from"./MarkdownPopover-bfhMiPPB.js";import{S as ee}from"./StyledFormControl-BWfZ0WkJ.js";import{d as te}from"./ToastMessage-CNBApHI3.js";import{a as oe,D as re,b as ae}from"./useDOI-BkYfBedI.js";import{u as ie,c as se}from"./useEntity-C-DsRpfP.js";import{l as L,aP as ne,m as le,g as ce,B as ue}from"./useFiles-CUiolQtu.js";import"./OrientationBanner-BFdTeK-_.js";import{r as c}from"./index-BWYAF8lU.js";import{E as I}from"./VerificationSubmission-CNoSrCdk.js";import{A as de,c as P,e as me,m as pe,j as ye}from"./StringUtils-BmiE0y30.js";import{u as R}from"./useQuery-kP5bDzxo.js";import{T as d}from"./Typography-fee9a3WB.js";import{L as fe}from"./Link-BHnRdTee.js";import{T as he}from"./TextField-CXhoESEI.js";import{I as be}from"./InputLabel-CTlhbI6z.js";import{H as ge}from"./HelpTwoTone-LEGWKCJe.js";import{S as Te}from"./Select-BTBbD3Zp.js";import{M as k}from"./MenuItem-DZrlnYy0.js";import{A as D}from"./Alert-23XrgefS.js";import{i as ve}from"./_baseUniq-5PKrMJpi.js";import{B as F}from"./Button-ChvyBgQs.js";const V={Collection:"Collection",Dataset:"Dataset"},De={definitions:{"org.sagebionetworks.repo.model.doi.v2.DoiResourceTypeGeneral":{type:"string",enum:["Audiovisual","Collection","DataPaper","Dataset","Event","Image","InteractiveResource","Model","PhysicalObject","Service","Software","Sound","Text","Workflow","Other"]}},type:"object",properties:{titles:{description:"The title or titles of your work.",type:"array",items:{type:"string"},title:"Title(s)"},creators:{title:"Creator(s)",description:"The main creators or authors of your work, in priority order. These may be the names of actual people and/or institutions.",type:"array",items:{type:"string"}},resourceTypeGeneral:{$ref:"#/definitions/org.sagebionetworks.repo.model.doi.v2.DoiResourceTypeGeneral",title:"General Resource Type",description:"The general type of content that best matches this work."},publicationYear:{type:"integer",title:"Publication Year",description:"The year this work became or will become public. May be at most one year in the future."}},required:["titles","creators","resourceTypeGeneral","publicationYear"]},Ie={"ui:submitButtonOptions":{norender:!0},"ui:order":["creators","titles","resourceTypeGeneral","publicationYear"],creators:{items:{"ui:placeholder":"Last, First"}},titles:{items:{"ui:placeholder":"My Synapse Object"}},publicationYear:{"ui:placeholder":"YYYY"}};function we(o,r){const{synapseClient:a,keyFactory:i}=L();return R({...r,queryKey:i.getPortalKey(o),queryFn:()=>a.portalsServicesClient.getRepoV1PortalPortalId({portalId:o})})}function Ze(o,r){const{synapseClient:a,keyFactory:i}=L();return R({...r,queryKey:i.getPortalPermissionsKey(o),queryFn:()=>a.portalsServicesClient.getRepoV1PortalPortalIdPermissions({portalId:o})})}function Ce(o){return o===I.PROJECT||o===I.FOLDER?V.Collection:V.Dataset}function je(o){var r;return{titles:(o.titles||[]).map(a=>a.title),creators:(o.creators||[]).map(a=>a.creatorName),resourceTypeGeneral:(r=o.resourceType)==null?void 0:r.resourceTypeGeneral,publicationYear:o.publicationYear}}function xe(o){var r;return!!((r=o.creators)!=null&&r.some(a=>!ve(a.nameIdentifiers)))}function Oe(o){var r,a;return{titles:((r=o.titles)==null?void 0:r.map(i=>({title:i})))||[],creators:((a=o.creators)==null?void 0:a.map(i=>({creatorName:i})))||[],resourceType:{resourceTypeGeneral:o.resourceTypeGeneral},publicationYear:o.publicationYear}}function G(o){const{open:r,onClose:a,objectType:i,objectId:m,defaultVersionNumber:Y,portalId:u}=o,[A,f]=c.useState(!1),{isEditing:M,setIsEditing:h}=ne();c.useEffect(()=>(h(r),()=>{h(!1)}),[r,h]);function w(){M?f(!0):a()}const[p,C]=c.useState(Y),{data:b}=we(u,{enabled:!!u}),[j,g]=c.useState({titles:[""],creators:[""]}),{data:l,isLoading:q}=le(),{data:s,isLoading:U}=ie(m,p,{staleTime:1/0,enabled:i==="ENTITY",throwOnError:!0}),{data:n,isLoading:B}=oe({id:m,version:p,type:i,portalId:u},{staleTime:1/0,throwOnError:!0}),x=i===re.ENTITY&&s&&de(s),{data:O}=se(m,void 0,void 0,{enabled:x}),T=c.useRef(null),_=s?P(s.concreteType):I.FILE,y=me(_);let S=`A DOI can be associated with a specific version of this ${y}.
  
  Versioned DOIs will link to the specified version of the ${y}.
  
  A DOI without a version will always link to the newest version of this ${y},
     so the data that someone retrieves using the DOI may change over time.`;if(s&&pe(s)){const t=ye(s)?"version":"snapshot";S+=`

To create a DOI that will always link to the current set of data in the ${y},
     create a new ${t} and mint a DOI for that ${t}.`}const{mutate:$,isPending:W,error:E}=ae({onSuccess:()=>{te("The DOI was successfully updated.","success"),a()}}),v=W||q||U||B,N=!!(n&&xe(n));c.useEffect(()=>{if(n&&g(je(n)),l&&s&&n===null){const t={titles:[s.name],creators:new Array,resourceTypeGeneral:Ce(P(s.concreteType)),publicationYear:new Date().getFullYear()};l.lastName&&l.firstName&&t.creators.push(`${l.lastName}, ${l.firstName}`),g(t)}},[l,n,s]);function H(){if(T.current&&T.current.validateForm()){const t=Oe(j);t.objectType=i,t.objectId=m,t.objectVersion=p,t.etag=n==null?void 0:n.etag,t.portalId=u,$({doi:t,concreteType:"org.sagebionetworks.repo.model.doi.v2.DoiRequest"})}}const J=e.jsxs(e.Fragment,{children:[e.jsx(d,{variant:"body1",gutterBottom:!0,children:"Minting a DOI allows you to credit contributors and makes it easy to cite your work."}),e.jsxs(d,{variant:"body1",gutterBottom:!0,sx:{mb:2},children:["Note that while the DOI and its associated metadata will be publicly visible outside of Synapse, your data will still adhere to its existing access conditions. If your data is private, it will remain restricted, but the DOI will still be listed. Resources with DOIs may be added to the"," ",e.jsx(fe,{href:`${ce(ue.PORTAL_ENDPOINT)}DataCatalog:0`,target:"_blank",children:"Synapse Data Catalog"}),"."]}),u&&e.jsx(he,{label:"Publisher",fullWidth:!0,value:(b==null?void 0:b.name)||"",disabled:!0}),x&&e.jsxs(ee,{className:"limit-type",fullWidth:!0,sx:{my:2},children:[e.jsxs(be,{htmlFor:"doi-version-select",sx:{display:"flex",alignItems:"center",justifyContent:"space-between",width:"100%"},children:[e.jsx("span",{children:"Version"}),e.jsx(Z,{contentProps:{markdown:S},maxWidth:"350px",children:e.jsx(ge,{className:"HelpButton"})})]}),e.jsxs(Te,{id:"doi-version-select",value:p??-1,onChange:t=>{t.target.value===-1?C(void 0):C(t.target.value)},children:[e.jsx(k,{value:-1,children:"No version"}),O&&O.results.map(t=>e.jsxs(k,{value:t.versionNumber,children:["Version ",t.versionNumber,t.versionLabel&&t.versionLabel!==String(t.versionNumber)?` / ${t.versionLabel}`:""]},t.versionNumber))]})]}),e.jsx("div",{className:"JsonSchemaFormContainer",children:e.jsx(X,{formRef:T,disabled:v||N,schema:De,formData:j,onChange:t=>{g(t.formData)},uiSchema:Ie,showErrorList:!1})}),n&&e.jsx(D,{severity:"warning",children:e.jsx(d,{variant:"body1",children:"A DOI has already been created. Updating the DOI information will cause old information to be lost!"})}),N&&e.jsx(D,{severity:"warning",sx:{my:1},children:e.jsx(d,{variant:"body1",children:"The metadata for this DOI was modified using a programmatic client, so data may be hidden from this view. Any changes may result in metadata being lost."})}),E&&e.jsx(D,{severity:"error",sx:{mt:1},children:e.jsx(d,{variant:"body1",children:E.message})})]}),K=e.jsxs(e.Fragment,{children:[e.jsx(F,{variant:"outlined",disabled:v,onClick:w,children:"Cancel"}),e.jsx(F,{variant:"contained",disabled:v,onClick:t=>{t.preventDefault(),H()},children:"Save"})]});return e.jsxs(e.Fragment,{children:[e.jsx(Q,{open:A,onCancel:()=>{f(!1)},onConfirm:()=>{f(!1),a()}}),e.jsx(z,{open:r,onCancel:w,title:"Create or Update a DOI",content:J,actions:K})]})}try{G.displayName="CreateOrUpdateDoiModal",G.__docgenInfo={description:"",displayName:"CreateOrUpdateDoiModal",props:{open:{defaultValue:null,description:"Whether the dialog is open",name:"open",required:!0,type:{name:"boolean"}},onClose:{defaultValue:null,description:"Callback to call when the dialog is closed",name:"onClose",required:!0,type:{name:"() => void"}},objectType:{defaultValue:null,description:"The type of object",name:"objectType",required:!0,type:{name:"enum",value:[{value:'"ENTITY"'},{value:'"PORTAL_RESOURCE"'}]}},objectId:{defaultValue:null,description:"The ID of the object",name:"objectId",required:!0,type:{name:"string"}},defaultVersionNumber:{defaultValue:null,description:"The optional version number of the object used to populate the form.",name:"defaultVersionNumber",required:!1,type:{name:"number"}},portalId:{defaultValue:null,description:"If minting a DOI for a portal, the ID of the portal object in Synapse",name:"portalId",required:!1,type:{name:"string"}}}}}catch{}export{G as C,Ze as u};
