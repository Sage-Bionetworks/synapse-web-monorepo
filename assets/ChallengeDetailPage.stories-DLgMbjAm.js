import{hj as s}from"./iframe-SFoYirDz.js";import{C as c}from"./ChallengeDetailPage-DriGdcgR.js";import"./index-r8ZA1smB.js";import"./useGetEntityChallenge-PMR6TiQA.js";import"./useTeamMembers-GcPvWJRn.js";import"./useGetUserTeams-Mbe8IeFz.js";import"./useInfiniteQuery-BXG3TdfN.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./ChallengeRegisterButton-DuDHB76V.js";import"./ExitToApp-csfWvJkM.js";import"./SpinnerButton-BvUlNBkm.js";import"./LoginAwareButton-CsNBQEh3.js";import"./useAccessRequirements-DvvBY_ie.js";import"./index-CPHx5Zd7.js";import"./_baseOrderBy-DPfTpwXq.js";import"./_baseIteratee-3mtgIhyy.js";import"./_baseMap-CF5SXoQH.js";import"./_baseEach-Dvvfy_q_.js";import"./useQueries-wygqzh_8.js";import"./useEntity-DJx9kr6F.js";import"./pickBy-B6e5906y.js";import"./isString-axfUnF0q.js";import"./queryOptions-C9woPjwX.js";import"./useEntityBundle-Dn65PMqz.js";import"./AccessRequirementList-Cj-C6KXm.js";import"./groupBy-YHSKrCB9.js";import"./_createAggregator-BdR2456o.js";import"./DialogBase-inZlHGFS.js";import"./Close-BJ49k-BP.js";import"./HelpPopover-BLir_Etv.js";import"./MarkdownPopover-DPeUsc6W.js";import"./LightTooltip--axdJ8pX.js";import"./MarkdownSynapse-CC4Dnhut.js";import"./SkeletonButton-Di0Yg_Uv.js";import"./SkeletonInlineBlock-DrZRW3Px.js";import"./SkeletonTable-Drqg7wxh.js";import"./SkeletonParagraph-D_k7-Stv.js";import"./EntityLink-D9YekV6C.js";import"./useGetEntityHeaders-co6y1apF.js";import"./EntityIcon-FndRt8id.js";import"./ErrorChip-D9EHEyWl.js";import"./Chip-05FYIvnY.js";import"./UserOrTeamBadge-QF8a2JC_.js";import"./UserBadge-DEHXVbtz.js";import"./MenuItem-CfJpQ_dM.js";import"./Card-CkGOMELO.js";import"./TeamBadge-cIc67SuS.js";import"./UnmanagedACTAccessRequirementItem-Db78W_xp.js";import"./RequirementItem-GPS4n-8d.js";import"./LockTwoTone-DMxdCNIB.js";import"./UserSearchBoxV2-CgrXnVln.js";import"./useDebouncedEffect-CSXLwZhB.js";import"./use-deep-compare-effect.esm-CucFAbzx.js";import"./uniq-BBRbUiEP.js";import"./without-5Jyro_ef.js";import"./Select-aab027f3.esm-hNKGDf6H.js";import"./defineProperty-CegpTSss.js";import"./ManagedACTAccessRequirementItemView-DNLS3GNL.js";import"./SelfSignAccessRequirementItem-Cez3AmgT.js";import"./DataAccessRequestAccessorsFilesForm-Dipeqa_5.js";import"./enums-a14lInQj.js";import"./_arrayReduce-CrxnWFSq.js";import"./forEach-B8iwwgef.js";import"./useDataAccessSubmission-QqtNGf0r.js";import"./RadioGroup-CFEtrjAe.js";import"./Radio-DepSv39E.js";import"./SwitchBase-B1PJBJjS.js";import"./FormGroup-D_baejGI.js";import"./FormControlLabel-BdI7Ynze.js";import"./UploadDocumentField-e-cU9r_k.js";import"./FileUpload-CA-14wyG.js";import"./ManagedACTAccessRequirementFormWikiWrapper-shBF3Ww8.js";import"./GridLegacy-C5WRGkuT.js";import"./ResearchProjectForm-JFU7d0sz.js";import"./TextFieldWithWordLimit-Dp33alyk.js";import"./AuthenticatedRequirement-Bvc6v0MB.js";import"./CertificationRequirement-DWVLwQhx.js";import"./TwoFactorAuthEnabledRequirement-DRYL4ZCg.js";import"./ValidationRequirement-BHZNfC0T.js";import"./ChallengeTeamWizard-D5jO4FQ6.js";import"./CreateChallengeTeam-BuAI8GOa.js";import"./useTeam-D7DbBh-2.js";import"./papaparse.min-D1KxGBLm.js";import"./Search-BOn_c909.js";import"./Box-DGlbSIkV.js";import"./DataGrid-C9oEaHRg.js";import"./index-C-_p9hnQ.js";import"./index-Chjiymov.js";import"./index-D33_2w2u.js";import"./Switch-BdgDpWRm.js";import"./ListItemIcon-jzKWfauG.js";import"./Badge-Bcum3g-H.js";import"./usePreviousProps-CZDlgYsu.js";import"./Autocomplete-YaQ6a89U.js";import"./KeyboardArrowRight-oYtnNlA9.js";import"./LastPage-CeaLgoGB.js";import"./ListItemText-Bucw6mxy.js";import"./Checkbox-C0ba4mce.js";import"./InputAdornment-DrnIpz85.js";import"./extends-CF3RwP-h.js";import"./ConfirmationDialog-Sxdwb5-l.js";const mo={title:"Synapse/Challenge/ChallengeDetailPage",component:c,parameters:{backgrounds:{default:"Challenge Header",values:[{name:"Challenge Header",value:"#3E68AA"}]}}},r={args:{projectId:s.id},parameters:{stack:"mock"}},o={args:{projectId:"syn51208606"},parameters:{stack:"production"}};var t,m,p;r.parameters={...r.parameters,docs:{...(t=r.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    projectId: mockProject.id
  },
  parameters: {
    stack: 'mock'
  }
}`,...(p=(m=r.parameters)==null?void 0:m.docs)==null?void 0:p.source}}};var i,e,a;o.parameters={...o.parameters,docs:{...(i=o.parameters)==null?void 0:i.docs,source:{originalSource:`{
  args: {
    projectId: 'syn51208606'
  },
  parameters: {
    stack: 'production'
  }
}`,...(a=(e=o.parameters)==null?void 0:e.docs)==null?void 0:a.source}}};const po=["MockDemo","ProductionDemo"];export{r as MockDemo,o as ProductionDemo,po as __namedExportsOrder,mo as default};
