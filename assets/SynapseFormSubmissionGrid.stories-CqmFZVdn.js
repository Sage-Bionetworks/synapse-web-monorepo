import{j as l}from"./jsx-runtime-BKf5RQqp.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-DkfgfOEf.js";import{aH as S,M as a}from"./useFiles-S3rZyFqo.js";import"./OrientationBanner-Cgb7NpTp.js";import"./index-B9M1VMdY.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-DOXqajDR.js";import{S as E}from"./SynapseFormSubmissionGrid-Djz-7EmQ.js";import"./mockSchema-DSKh8nGw.js";import"./mockFileEntity-BMJScpil.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-Ci9MrL7j.js";import"./mockTeam-7zeTiFbM.js";import"./SynapseConstants-DOl4aYU7.js";import"./uniqueId-Di_31gHS.js";import"./toString-DzAm8fGd.js";import"./isObjectLike-loWZaajr.js";import"./iframe-DrxrBbCN.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-C3DlElTY.js";import"./times-Bc8Rg50M.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-jwb4_ePs.js";import"./asyncJobHandlers-wnHNL-vB.js";import"./BasicMockedCrudService-Dfw3DWZY.js";import"./cloneDeep-DLtL0oYk.js";import"./_Uint8Array-C3OS79Gb.js";import"./_initCloneObject-BGcQbDnl.js";import"./_getTag-Bc2H9Xcc.js";import"./isEqual-p7X2E0s9.js";import"./_baseIsEqual-gfmG73DD.js";import"./mockAnnotationColumns-B5xJ9chl.js";import"./tableQueryHandlers-BTMYSfrL.js";import"./omit-1CX47jWE.js";import"./_baseGet-Ce3QHtAa.js";import"./isNil-ByvPwQOL.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BNCYZUK1.js";import"./_baseFlatten-DEoDSwrp.js";import"./pick-CBX6C9Mp.js";import"./_baseSet-D0mHS-JK.js";import"./hasIn-CXnPieNN.js";import"./accessRequirementAclHandlers-DPab-_ct.js";import"./mockAccessRequirementAcls-DcsRpdGI.js";import"./mockAccessRequirements-BJos6-ck.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-CNOgnzqn.js";import"./wikiHandlers-DXK3p4Yz.js";import"./mockWikiPageKey-Dl3c1DmO.js";import"./teamHandlers-iLguIcih.js";import"./dataAccessRequestHandlers-DfJNDIfl.js";import"./MockResearchProject-CG1SPiBj.js";import"./mock_discussion-BmHzcfGl.js";import"./fakerUtils-DnCT_wR_.js";import"./index-CUnIrWwg.js";import"./mockTableEntity-B57Pwohq.js";import"./mockFileEntityACLVariants-Dsm3gWrQ.js";import"./entityHandlers-DNEu0xTE.js";import"./mockEntity-CTJ_XSce.js";import"./mockEvaluationQueue-DoFk0wyh.js";import"./featureFlagHandlers-T-6aNqXJ.js";import"./fileHandlers-ijSXs6Va.js";import"./personalAccessTokenHandlers-BrBoBmfk.js";import"./researchProjectHandlers-o9Vlb1PW.js";import"./resetTwoFactorAuthHandlers-BEi382KA.js";import"./userProfileHandlers-74HF_D41.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-DyKzf55a.js";import"./FullWidthAlert-Dd_na1Es.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-Cgxhkh7G.js";import"./createTheme-DvTVIqjb.js";import"./resolveComponentProps-DPQntKSC.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-DIg_dHQL.js";import"./createSvgIcon-hbT_i5o6.js";import"./DefaultPropsProvider-n162cE-R.js";import"./Close-BfHkgXih.js";import"./IconButton-CUjwcRMT.js";import"./ButtonBase-CBwCYDGT.js";import"./useTimeout-zL07Ezm-.js";import"./useIsFocusVisible-CRgE5DAe.js";import"./useEventCallback-Ct97vZo3.js";import"./Paper-DiRfE40y.js";import"./Stack-D2Q57en8.js";import"./getThemeProps-CnIOYt9Y.js";import"./useTheme-Bekjdflv.js";import"./Box-D7zKVt5d.js";import"./AlertTitle-1sffTsZH.js";import"./Typography-DzBHpQw1.js";import"./useTheme-CEZhMqZD.js";import"./Grow-BaIE4F4U.js";import"./index-5WQ-QQb9.js";import"./utils-Bc1CwYEB.js";import"./ClickAwayListener-CxOU0Mam.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BEF1_Vht.js";import"./index-P0g_OErs.js";import"./useControlled-Cy6R5uHn.js";import"./useId-DqRnOE6C.js";import"./Popper-BbC7HGmV.js";import"./Button-Cb0Y6AbC.js";import"./useQuery-Cxycb3jH.js";import"./utils-DtsR_yTk.js";import"./Link-Cu43YTgh.js";import"./Collapse-DVsMgavj.js";import"./tinycolor-Begke6kS.js";import"./Fade-BJV6ivWB.js";import"./Skeleton-DpQMO-g4.js";import"./inputBaseClasses-D3AwDbQD.js";import"./calculateFriendlyFileSize-C7irlqqb.js";import"./CheckCircleTwoTone-BX_oHHcp.js";import"./InfoTwoTone-DlYvTuQN.js";import"./mutation-CTQh6bQy.js";import"./dayjs.min-CodsgMmV.js";import"./chunk-AYJ5UCUI-BC-6-RBu.js";import"./index-CvaCOTZN.js";import"./react-DH013oxs.js";import"./util-Dkcn2-bQ.js";import"./WideButton-BPs3NBPL.js";import"./DeleteTwoTone-C_wzQ-lY.js";import"./createSvgIcon-C_3tV4Co.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-W-0qD1bt.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-BuK6voA0.js";import"./DialogBase-BaS5iZGD.js";import"./Close-DtlejKFv.js";import"./HelpPopover-J2W2awQD.js";import"./MarkdownPopover-Bc7YwyN5.js";import"./LightTooltip-DCtTi8jL.js";import"./MarkdownSynapse-DuJwHiEQ.js";import"./SkeletonButton-Skkackae.js";import"./SkeletonInlineBlock-CqG192xZ.js";import"./SkeletonTable-C7kWa3wE.js";import"./SkeletonParagraph-NmU2KbK8.js";import"./HelpOutlineTwoTone-BEhnizFV.js";import"./DialogTitle-D6wuCdVx.js";import"./DialogContent-w8tyX_K-.js";import"./Dialog-Big_23ls.js";import"./Modal-CdCLcHIC.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-CXPR0K03.js";import"./WarningDialog-C3nha-Aw.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
