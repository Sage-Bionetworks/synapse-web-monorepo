import{U as d,j as e,as as h,dt as m,b_ as x,cB as _,du as E,dv as f,dw as g}from"./iframe-SFoYirDz.js";import{C as v}from"./Chip-05FYIvnY.js";const y=d(e.jsx("path",{d:"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2M9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9zm9 14H6V10h12zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2"}));function p(i){const{chipText:u,error:r}=i,{accessToken:n}=h(),s=(r.status===403||r.status===401)&&!n,o=r.status===403&&n;m({show:r.status>=500,issueCollector:"SWC",issueSummary:"",issueDescription:r.reason,issuePriority:"3"});const a=s?"warning":"error";let c,l;s||o?c=e.jsx(_,{sx:{bgcolor:`${a}.main`},children:e.jsx(y,{sx:{color:"white",width:"18px"}})}):l=s||o?void 0:e.jsx(E,{});let t;return s?t=e.jsx(f,{}):o?t=g:t=r.reason,e.jsx(x,{title:t,children:e.jsx(v,{avatar:c,color:a,variant:"outlined",icon:l,label:u})})}try{p.displayName="ErrorChip",p.__docgenInfo={description:"A chip component for handling inline errors, where some information can be shown (e.g. an ID) without breaking an entire component.",displayName:"ErrorChip",props:{chipText:{defaultValue:null,description:"",name:"chipText",required:!0,type:{name:"string"}},error:{defaultValue:null,description:"",name:"error",required:!0,type:{name:"SynapseClientError"}}}}}catch{}export{p as E};
