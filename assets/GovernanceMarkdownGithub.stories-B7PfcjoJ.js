import{v as o}from"./VerificationSubmission-CDh9xETu.js";import{g as u,be as d,bf as l,B as f,bg as S,M as O}from"./useFiles-Bt_N3vpj.js";import"./StringUtils-CsrYFBZo.js";import{h as i,H as n}from"./index-E5UbYjX5.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-BHIwjkPU.js";import"./SynapseConstants-BB8OzD3R.js";import"./OrientationBanner-BEO4rv1t.js";import"./index-asLC9ga4.js";import"./index-BdZx4xpj.js";import"./iframe-zjLnwkzv.js";import"./spreadSx-CwcO6WA9.js";import"./react-D1u-GmGm.js";import"./FullWidthAlert-BEXmar5a.js";import"./Alert-Bfqyji6Q.js";import"./createTheme-kzR4akzj.js";import"./DefaultPropsProvider-CWCpxBxd.js";import"./useSlot-aP1uZ7qh.js";import"./useForkRef-Bgvg9tv8.js";import"./createSimplePaletteValueFilter-CE58-ZFx.js";import"./createSvgIcon-BY1mZNtn.js";import"./Close-BUEMVr_E.js";import"./IconButton-CLIwP4E0.js";import"./useTimeout-Bm-Bpjmh.js";import"./ButtonBase-CxM_02eP.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-P_cz5HVW.js";import"./Paper-BygyGcfV.js";import"./useTheme-BUnTaqXN.js";import"./useTheme-CyPid65-.js";import"./Stack-yaTiXx4Y.js";import"./extendSxProp-BsTrlUHe.js";import"./getThemeProps-CktB0LLD.js";import"./Box-wTUucE8E.js";import"./AlertTitle-qgTMfIkj.js";import"./Typography-DHkI5TaX.js";import"./index-DR51x3on.js";import"./ClickAwayListener-BtLb1QoZ.js";import"./getReactElementRef-DOmJtLhe.js";import"./index-CXRqLqob.js";import"./index-WTFPHBSS.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DbWp4vYu.js";import"./Tooltip-CA5EjILG.js";import"./index-DzfT4G98.js";import"./useControlled-BZF0ZbLF.js";import"./Popper-B9ZUwJHJ.js";import"./Button-CQe7jZks.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-C18MkqUz.js";import"./QueryClientProvider-B3akeZRz.js";import"./Link-DM0HYHCv.js";import"./Collapse-leuZBKey.js";import"./_baseUniq-D51t2lVz.js";import"./_Uint8Array-Cs0wEeKK.js";import"./isArray-Da5kSjjI.js";import"./_getTag-C0DerptW.js";import"./isEqual-B5hfnNhw.js";import"./merge-D4hlKJHs.js";import"./_initCloneObject-BQvlM93A.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-CNLiX1aT.js";import"./inputBaseClasses-BLqmrAZ9.js";import"./calculateFriendlyFileSize-DpwcpmGE.js";import"./CheckCircleTwoTone-6lBdI9xc.js";import"./InfoTwoTone-DjZOa90-.js";import"./useMutation-nz71tg0o.js";import"./dayjs.min-DcJlcSeq.js";import"./chunk-AYJ5UCUI-BAtatTO0.js";import"./cloneDeep-DDtjPt2-.js";import"./Skeleton-BInzLhzo.js";import"./SkeletonButton-KyUCB0K-.js";import"./SkeletonInlineBlock-BL6v8TIo.js";import"./SkeletonTable-CqlB2wyI.js";import"./times-CrMMOnKP.js";import"./toInteger-DplaRjwi.js";import"./isSymbol-Dvv5J75P.js";import"./SkeletonParagraph-Brr6ukk4.js";import"./MarkdownSynapse-DQNr3wea.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
