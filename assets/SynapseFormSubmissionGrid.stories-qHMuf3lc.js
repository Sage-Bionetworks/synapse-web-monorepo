import{j as l}from"./jsx-runtime-DBMcmXCa.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-B0kBNeMy.js";import{g as T}from"./handlers-OniT-WVQ.js";import{aH as S,M as a}from"./useFiles-BCC9o9bm.js";import"./OrientationBanner-D1D6xyRZ.js";import"./index-DBlnVwD8.js";import"./StringUtils-CzgJJW-6.js";import{l as _}from"./index-B4f-a6UF.js";import{S as E}from"./SynapseFormSubmissionGrid-D8fEg1XY.js";import"./mockSchema-C_gHvKyf.js";import"./mockFileEntity-d0p58uHm.js";import"./mock_file_handle-Ct1MSfYs.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-CoORu-Fc.js";import"./mockTeam-CucSp3ej.js";import"./SynapseConstants-D6yJoWPV.js";import"./uniqueId-zRrDOiE-.js";import"./toString-B0637kMA.js";import"./isObjectLike-OwuH3sZ9.js";import"./iframe-D_N6e9gY.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-C47FQwZW.js";import"./times-I6vxwNRK.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-BS7VKHeM.js";import"./asyncJobHandlers-CA8dkIPG.js";import"./BasicMockedCrudService-qmzi2X8T.js";import"./cloneDeep-DmxrBXJm.js";import"./_Uint8Array-Bido-coT.js";import"./_initCloneObject-DxaU8L-P.js";import"./_getTag-Dg9gL6QT.js";import"./isEqual-BzHeONx3.js";import"./_baseIsEqual-CXDd7ZQG.js";import"./mockAnnotationColumns-BK9EziOy.js";import"./tableQueryHandlers-DQ0MtopG.js";import"./omit-Bc_dig4H.js";import"./_baseGet-COx7JLGh.js";import"./isNil-CM9qot0x.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-OM56T8yk.js";import"./_baseFlatten-BDTc4dip.js";import"./pick-BoVDvQvj.js";import"./_baseSet-DlIjgGBT.js";import"./hasIn-DNbILcRx.js";import"./accessRequirementAclHandlers-BZm80CF9.js";import"./mockAccessRequirementAcls-BPt3oJEs.js";import"./mockAccessRequirements-CjHtQCDb.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CZdZHQnO.js";import"./accessRequirementHandlers-CQvrUPQB.js";import"./wikiHandlers-gNVQE-BK.js";import"./mockWikiPageKey-BqqW_WR-.js";import"./teamHandlers-Dj-Pj7-N.js";import"./dataAccessRequestHandlers-DzE9zNu1.js";import"./MockResearchProject-6qBgl9qa.js";import"./mock_discussion-yttkzwz_.js";import"./fakerUtils-CFWpQV58.js";import"./index-CPHimq5L.js";import"./mockTableEntity-BeuQ7xHA.js";import"./mockFileEntityACLVariants-Bg1yyxO7.js";import"./entityHandlers-BmCqnCfa.js";import"./mockEntity-TdKbMuJ1.js";import"./mockEvaluationQueue-0TKESkhm.js";import"./featureFlagHandlers-BxYtnXPl.js";import"./fileHandlers-BjBqEtmc.js";import"./personalAccessTokenHandlers-BV8EZoAm.js";import"./researchProjectHandlers-B_onap2G.js";import"./resetTwoFactorAuthHandlers-DfFf6mu4.js";import"./userProfileHandlers-DnxCnQer.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-C0reZBPa.js";import"./FullWidthAlert-C1aLdWsG.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-Dn4rajYU.js";import"./createTheme-BZ2zgW4D.js";import"./resolveComponentProps-Dtpa_tS3.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-Dc8viUTi.js";import"./createSvgIcon-CSOVfYb_.js";import"./DefaultPropsProvider-DuMbHCRm.js";import"./Close-DWBR5p3C.js";import"./IconButton-C200dxKl.js";import"./ButtonBase-nKx8H8dx.js";import"./useTimeout-6iW9qGJp.js";import"./useIsFocusVisible-CMn0OAnJ.js";import"./useEventCallback-D9ysatRx.js";import"./Paper-DaOo4yHe.js";import"./Stack-SvfrxjIC.js";import"./getThemeProps-BtMaQYIh.js";import"./useTheme-COxG8dpy.js";import"./Box-Chsd4vbP.js";import"./AlertTitle-DIxvf3iw.js";import"./Typography-DqN6Bou9.js";import"./useTheme-ZMiCMtR3.js";import"./Grow-BjLbQ-fL.js";import"./index-ByQiLxoL.js";import"./utils-BYTqi8xE.js";import"./ClickAwayListener-3VJLVNkD.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DtNzDJHf.js";import"./index-CpVUrsoO.js";import"./useControlled-BLmwoSKe.js";import"./useId-D_MF-2iJ.js";import"./Popper-BfKDlvYQ.js";import"./Button-CNqVIcaA.js";import"./useQuery-Bk6g_8Gf.js";import"./utils-NbB0Ut0Y.js";import"./Link-DmbSphAj.js";import"./Collapse-c4oLUGBD.js";import"./tinycolor-Begke6kS.js";import"./Fade-BfUz1XMr.js";import"./Skeleton-Ci_PYPE4.js";import"./inputBaseClasses-BQ5llsZJ.js";import"./calculateFriendlyFileSize-z3744QQS.js";import"./CheckCircleTwoTone-Bg8tee4I.js";import"./InfoTwoTone-BJxK8Eo6.js";import"./mutation-QlbpiYUc.js";import"./dayjs.min-Dkt-OZPU.js";import"./chunk-AYJ5UCUI-D8Kh-TfU.js";import"./index-C2tCeSSv.js";import"./react-qszGcZP5.js";import"./util-Dhun9d96.js";import"./WideButton-Bbb_YicD.js";import"./DeleteTwoTone-D0YXRGXe.js";import"./createSvgIcon-CMHW_zbH.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-iJxvGItd.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-BsPRllv8.js";import"./DialogBase-DEZ6K6O4.js";import"./Close-akNkC0PE.js";import"./HelpPopover-CCa_kXJE.js";import"./MarkdownPopover-CX2rjZ2O.js";import"./LightTooltip-Bh0LtSvU.js";import"./MarkdownSynapse-ff_yF9wH.js";import"./SkeletonButton-CJePCJ_2.js";import"./SkeletonInlineBlock-L2OJ_ShH.js";import"./SkeletonTable-BL02aR4j.js";import"./SkeletonParagraph-Cz6fv_U3.js";import"./HelpOutlineTwoTone-8cqgY82p.js";import"./DialogTitle-DaRVpTBl.js";import"./DialogContent-BsgajzLU.js";import"./Dialog-CjCgCpc4.js";import"./Modal-ZWjhcmh6.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-BX0icQUo.js";import"./WarningDialog-DvCFU5Iz.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
