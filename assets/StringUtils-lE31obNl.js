import{G as E,H as U,I as f,J as y,E as e,i as R}from"./VerificationSubmission-dxY1kvC5.js";const X="Terms of Use",k="org.sagebionetworks.repo.model.TermsOfUseAccessRequirement",d="org.sagebionetworks.repo.model.docker.DockerRepository",u="org.sagebionetworks.repo.model.FileEntity",i="org.sagebionetworks.repo.model.table.MaterializedView",I="org.sagebionetworks.repo.model.table.SubmissionView",c="org.sagebionetworks.repo.model.table.Dataset",T="org.sagebionetworks.repo.model.table.DatasetCollection",L="org.sagebionetworks.repo.model.table.VirtualTable",l="org.sagebionetworks.repo.model.table.TableEntity",O=[E,I,c,T],D=[l,...O,i,L],F="org.sagebionetworks.repo.model.Folder",g="org.sagebionetworks.repo.model.Link",P="org.sagebionetworks.repo.model.Project",N="org.sagebionetworks.repo.model.file.S3FileHandle",Y="org.sagebionetworks.repo.model.file.GoogleCloudFileHandle",V="org.sagebionetworks.repo.model.file.ExternalFileHandle",M="org.sagebionetworks.repo.model.file.ExternalObjectStoreFileHandle",h="org.sagebionetworks.repo.model.file.ProxyFileHandle",B="org.sagebionetworks.repo.model.MembershipInvtnSignedToken",v="org.sagebionetworks.repo.model.JoinTeamSignedToken",W="org.sagebionetworks.repo.model.InviteeVerificationSignedToken",K="org.sagebionetworks.repo.model.table.FacetColumnValuesRequest",H="org.sagebionetworks.repo.model.table.FacetColumnRangeRequest";function t(...s){return o=>!!(o&&typeof o=="object"&&"concreteType"in o&&s.includes(o.concreteType))}const j=t(N,Y),ee=t(V),se=t(g),oe=t(h,M,V),te=t(d),re=t(K),ne=t(H),ae=t(y),Ee=t(U),ie=t(f);t(N);const ce=t(u),Te=t(k);t(W);t(v);t(B);function le(s){return s.node_type?s.node_type:s.type===void 0?e.PROJECT:m(s.type)}function _e(s){switch(s){case e.PROJECT:case e.FOLDER:return!0;case e.LINK:case e.DOCKER_REPO:case e.FILE:case e.TABLE:case e.SUBMISSION_VIEW:case e.ENTITY_VIEW:case e.DATASET:case e.DATASET_COLLECTION:case e.MATERIALIZED_VIEW:case e.VIRTUAL_TABLE:return!1;default:throw new Error(`Unknown entity type: ${s}`)}}function ue(s){switch(s){case e.PROJECT:case e.FOLDER:case e.LINK:case e.DOCKER_REPO:case e.FILE:return!1;case e.TABLE:case e.SUBMISSION_VIEW:case e.ENTITY_VIEW:case e.DATASET:case e.DATASET_COLLECTION:case e.MATERIALIZED_VIEW:case e.VIRTUAL_TABLE:return!0;default:throw new Error(`Unknown entity type: ${s}`)}}function Ie(s){switch(s){case e.PROJECT:return"Project";case e.FOLDER:return"Folder";case e.FILE:return"File";case e.TABLE:return"Table";case e.LINK:return"Link";case e.ENTITY_VIEW:return"View";case e.DOCKER_REPO:return"Docker Repository";case e.SUBMISSION_VIEW:return"Submission View";case e.DATASET:return"Dataset";case e.DATASET_COLLECTION:return"Dataset Collection";case e.MATERIALIZED_VIEW:return"Materialized View";case e.VIRTUAL_TABLE:return"Virtual Table";default:return console.warn("Entity type could not be mapped to name:",s),""}}function m(s){if(Object.values(e).includes(s))return s;switch(s){case"org.sagebionetworks.repo.model.Project":return e.PROJECT;case"org.sagebionetworks.repo.model.Folder":return e.FOLDER;case u:return e.FILE;case"org.sagebionetworks.repo.model.Link":return e.LINK;case"org.sagebionetworks.repo.model.docker.DockerRepository":return e.DOCKER_REPO;case l:return e.TABLE;case"org.sagebionetworks.repo.model.table.SubmissionView":return e.SUBMISSION_VIEW;case E:return e.ENTITY_VIEW;case c:return e.DATASET;case T:return e.DATASET_COLLECTION;case i:return e.MATERIALIZED_VIEW;case L:return e.VIRTUAL_TABLE;default:throw new Error(`Unknown entity type: ${s}`)}}function Le(s){switch(s){case e.PROJECT:return"org.sagebionetworks.repo.model.Project";case e.FOLDER:return"org.sagebionetworks.repo.model.Folder";case e.FILE:return"org.sagebionetworks.repo.model.FileEntity";case e.LINK:return"org.sagebionetworks.repo.model.Link";case e.DOCKER_REPO:return"org.sagebionetworks.repo.model.docker.DockerRepository";case e.TABLE:return"org.sagebionetworks.repo.model.table.TableEntity";case e.SUBMISSION_VIEW:return"org.sagebionetworks.repo.model.table.SubmissionView";case e.ENTITY_VIEW:return"org.sagebionetworks.repo.model.table.EntityView";case e.DATASET:return"org.sagebionetworks.repo.model.table.Dataset";case e.DATASET_COLLECTION:return"org.sagebionetworks.repo.model.table.DatasetCollection";case e.MATERIALIZED_VIEW:return"org.sagebionetworks.repo.model.table.MaterializedView";case e.VIRTUAL_TABLE:return"org.sagebionetworks.repo.model.table.VirtualTable";default:throw new Error(`Unknown entity type: ${s}`)}}function J(s){switch(s){case e.PROJECT:case e.FOLDER:case e.LINK:case e.DOCKER_REPO:case e.SUBMISSION_VIEW:case e.MATERIALIZED_VIEW:case e.VIRTUAL_TABLE:return!1;case e.FILE:case e.TABLE:case e.ENTITY_VIEW:case e.DATASET:case e.DATASET_COLLECTION:return!0;default:throw new Error(`Unknown entity type: ${s}`)}}const Q=t(...D);t(...O);const Ae=t(l),Ce=t(I);t(i);const p=t(c),$=t(T),Re=s=>p(s)||$(s),de=t(E);function Oe(s){return(s.viewTypeMask&R)!=0}function ge(s){return s.viewTypeMask===R}function x(s){return J(m(s.concreteType))}function Ne(s){return x(s)?s.isLatestVersion?Q(s)?p(s)?"Draft":"Current":`${s.versionNumber.toString()} (Current)`:s.versionNumber.toString():(console.warn("Entity isn't versionable:",s),"")}function G(s){return s.toLowerCase().startsWith("syn")?s.toLowerCase():`syn${s}`}const n=["name","description","id","etag","createdOn","modifiedOn","createdBy","modifiedBy","parentId","concreteType"],b=[...n,"versionNumber","versionLabel","versionComment","isLatestVersion"],a=[...b,"columnIds","isSearchEnabled"],_=[...a],C=[..._,"items"],Ve={[g]:[...n,"linksTo","linksToClassName"],[d]:[...n,"repositoryName","isManaged"],[u]:[...b,"dataFileHandleId","fileNameOverride"],[I]:[..._,"scopeIds"],[c]:[...C,"size","checksum"],[T]:[...C],[E]:[..._,"scopeIds","viewTypeMask","type"],[l]:a,[i]:[...a,"definingSQL"],[L]:[...a,"definingSQL"],[F]:n,[P]:[...n,"alias"]},me={ALL_TABLES:[e.TABLE,e.ENTITY_VIEW,e.SUBMISSION_VIEW,e.DATASET,e.DATASET_COLLECTION,e.MATERIALIZED_VIEW,e.VIRTUAL_TABLE],CONTAINER:[e.PROJECT,e.FOLDER]},z=/^10.\d{4,9}\/[-._;()/:a-z0-9]+$/i;function pe(s){return s=s.trim(),z.test(s)?`https://dx.doi.org/${s}`:""}const w=/^(syn\d+)(?:\.(\d+))?$/i;function Z(s){const o=w.exec(s);return o&&{targetId:G(o[1]),targetVersionNumber:o[2]?parseInt(o[2]):void 0}}function be(s,o,r="â€¦"){return s.length<=o?s:s.substring(0,o)+r}function we(s){s==null&&(s="");let o=0;for(let r=0,A=s.length;r<A;r++){const S=s.charCodeAt(r);o=(o<<5)-o+S,o|=0}return o}function Se(s){if(typeof s=="number")return s;if(s.match(w)){const o=Z(s).targetId;return parseInt(o.substring(3))}else return parseInt(s)}function Ue(s){if(s.trim().length<8)return"A valid password must be at least 8 characters long";if(!/[a-zA-Z]/.test(s))return"A valid password must include letters";if(!/\d/.test(s))return"A valid password must include digits (0-9)";if(!/[~!@#$%^&*_\-+=`|\\(){}[\]:;"'<>,.?/]/.test(s))return"A valid password must include special characters ~!@#$%^&*_-+=`|\\(){}[]:;\"'<>,.?/"}function fe(s){return new Promise((o,r)=>{setTimeout(()=>{navigator.clipboard.writeText(s).then(o).catch(r)},0)})}export{Z as A,x as B,Ne as C,J as D,me as E,Ve as F,Y as G,u as H,P as I,te as J,se as K,j as L,X as M,Ee as N,ie as O,h as P,ue as Q,ee as R,w as S,k as T,ae as U,O as V,ne as W,we as X,ge as Y,Re as a,G as b,m as c,Te as d,Ie as e,fe as f,le as g,Oe as h,de as i,p as j,ce as k,pe as l,Q as m,Se as n,Le as o,_e as p,Ae as q,oe as r,N as s,be as t,V as u,Ue as v,M as w,$ as x,Ce as y,re as z};
