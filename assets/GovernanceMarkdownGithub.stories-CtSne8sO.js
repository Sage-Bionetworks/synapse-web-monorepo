import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-C-nnLZH6.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-DLNjqCPU.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-BjKrJDhm.js";import"./SynapseConstants-Bd4_h58t.js";import"./OrientationBanner-cbKX41Kv.js";import"./index-Ce-DoZYC.js";import"./index-Bc3skFOa.js";import"./iframe-BtSaXkuM.js";import"./spreadSx-CwcO6WA9.js";import"./react-7i1wTRCj.js";import"./FullWidthAlert-DDY--klD.js";import"./Alert-CawsPOmr.js";import"./createTheme-BueTOkol.js";import"./DefaultPropsProvider-BpRUECsb.js";import"./useSlot-DzYM2NXh.js";import"./useForkRef-B-XQJunB.js";import"./createSimplePaletteValueFilter-C0etH01x.js";import"./createSvgIcon-DuBP14r-.js";import"./Close-B4YztUj-.js";import"./IconButton-DhrIHtmc.js";import"./useTimeout-CmS7swDh.js";import"./ButtonBase-Dth68TUA.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-cVYl0jD1.js";import"./Paper-BMQ9bliB.js";import"./useTheme-BdsV2UtN.js";import"./useTheme-CESjAg12.js";import"./Stack-SJgolWM_.js";import"./extendSxProp-A8hSLdSh.js";import"./getThemeProps-tTcTqxCF.js";import"./Box-BM0uF6eN.js";import"./AlertTitle-B_ZKmDYB.js";import"./Typography-CCq_2k8T.js";import"./index-hdfdv7Z8.js";import"./ClickAwayListener-DkMj7hy7.js";import"./getReactElementRef-BshGVvhA.js";import"./index-B3GonlML.js";import"./index-B_yUMdDC.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-LPswSJij.js";import"./Tooltip-BJmPo455.js";import"./index-L24AK7Ts.js";import"./useControlled-D8fGF6t0.js";import"./Popper-DKZ5oZcV.js";import"./Button-BkrQibwj.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-DaTlqfog.js";import"./QueryClientProvider-i7CmffhL.js";import"./Link-BTa2TnZw.js";import"./Collapse-BE1J1oKa.js";import"./_baseUniq-DaVelePf.js";import"./_Uint8Array-Bjb-AI1p.js";import"./isArray-BomWlQac.js";import"./_getTag-C4wX9zYW.js";import"./isEqual-B4npu7s9.js";import"./merge-MLtxKLuV.js";import"./_initCloneObject-Br6pXeAy.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-BFpHeoSz.js";import"./inputBaseClasses-Dec7bLBK.js";import"./calculateFriendlyFileSize-CMIQVYOK.js";import"./CheckCircleTwoTone-CeziCU9H.js";import"./InfoTwoTone-CkavrGoq.js";import"./useMutation-PlwPtoOX.js";import"./dayjs.min-C2l0GvUg.js";import"./chunk-AYJ5UCUI-DDM9bpV7.js";import"./cloneDeep-Dz7n1ow1.js";import"./Skeleton-Kr-2WdY2.js";import"./SkeletonButton-CDqe-wQt.js";import"./SkeletonInlineBlock-JACfdKGg.js";import"./SkeletonTable-xDt7Tkxu.js";import"./times-vs3n5TPi.js";import"./toInteger-C6D2IDJF.js";import"./isSymbol-dVM8gOIk.js";import"./SkeletonParagraph-B2PbsTEb.js";import"./MarkdownSynapse-BtqUTsq3.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
