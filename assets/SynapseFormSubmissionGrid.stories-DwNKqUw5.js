import{j as l}from"./jsx-runtime-BRZS3XqV.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-DLbZnjVI.js";import{aF as S,M as a}from"./useFiles-DT6hcIL5.js";import"./OrientationBanner-Cej92lXT.js";import"./index-CocunraB.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-BjUp8HPO.js";import{S as E}from"./SynapseFormSubmissionGrid-Vn8Q3Pma.js";import"./mockSchema-CPPNKyOZ.js";import"./mockFileEntity-DsmT5vDd.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-BHFG4giK.js";import"./mockTeam-C5REi7We.js";import"./SynapseConstants-Bn0ZfuPv.js";import"./uniqueId-D8dzI0-E.js";import"./toString-CzkbOv_6.js";import"./isObjectLike-Ch1jIX1x.js";import"./iframe-DYt3ChXB.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BM3-ZUrL.js";import"./times-Ckf4vJoZ.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-CTBlp4Mg.js";import"./asyncJobHandlers-9ePBU7EB.js";import"./BasicMockedCrudService-L24dkeE5.js";import"./cloneDeep-G1XxhtGs.js";import"./_Uint8Array-BL-Me88q.js";import"./_initCloneObject-DWORq14n.js";import"./_getTag-GUncnsoi.js";import"./isEqual-e2b-ZfBh.js";import"./_baseIsEqual-XMcuzNdJ.js";import"./mockAnnotationColumns-DrXgF3eT.js";import"./tableQueryHandlers-BZsxnVs5.js";import"./omit-VV7w3zFw.js";import"./_baseGet-B6u9EqHX.js";import"./isNil-Cw5qWwbI.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-DhlXzTQF.js";import"./_baseFlatten-BUR2XUt1.js";import"./pick-CQqODmdT.js";import"./_baseSet-DYafpXlk.js";import"./hasIn-BTw4H7OP.js";import"./accessRequirementAclHandlers-D4gg1riT.js";import"./mockAccessRequirementAcls-D4vWnWmJ.js";import"./mockAccessRequirements-BhoiKkTQ.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-B1QD4D_7.js";import"./wikiHandlers-1C1JxnGv.js";import"./mockWikiPageKey-IWquk-uF.js";import"./teamHandlers-Blc9CmaG.js";import"./dataAccessRequestHandlers-Rdr52d8Q.js";import"./MockResearchProject-BVDhkK1g.js";import"./mock_discussion-VZuuLiII.js";import"./fakerUtils-BeQ1zTY9.js";import"./index-CKMVAI2H.js";import"./mockTableEntity-DOsgj7sm.js";import"./mockFileEntityACLVariants-CWbJpxmy.js";import"./entityHandlers-B14rKxKw.js";import"./mockEntity-KwNaLpEQ.js";import"./mockEvaluationQueue-CvMtRxvv.js";import"./featureFlagHandlers-B4hZwPC2.js";import"./fileHandlers-DelQNq6E.js";import"./personalAccessTokenHandlers-4-VjhUJN.js";import"./researchProjectHandlers-tL6-8Dyz.js";import"./resetTwoFactorAuthHandlers-RznIWnIS.js";import"./userProfileHandlers-CLC0g9EV.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-CzgTvDz_.js";import"./FullWidthAlert-DenfhEqP.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-BzQ3w-i2.js";import"./createTheme-CGRZ8lhJ.js";import"./resolveComponentProps-B7kow99E.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CwaqtBp7.js";import"./createSvgIcon-DrSrpjUE.js";import"./DefaultPropsProvider-DnSfdlzo.js";import"./Close-D48z0Brg.js";import"./IconButton-DnEI_ZVS.js";import"./ButtonBase-C8J7qx50.js";import"./useTimeout-DD2fy9Gt.js";import"./useIsFocusVisible-DrjNToTJ.js";import"./useEventCallback-V5MPUxUC.js";import"./Paper-B_miGDM5.js";import"./Stack-Cm7eDOYX.js";import"./getThemeProps-B5VTfPhr.js";import"./useTheme-Cmuf7htp.js";import"./Box-DAkKAoja.js";import"./AlertTitle-At8nRksm.js";import"./Typography-B5nvwako.js";import"./useTheme-BGfrpkOf.js";import"./Grow-DfpdITPV.js";import"./index-DEq8PKf6.js";import"./utils-CyklZQon.js";import"./ClickAwayListener-BNIu3AiL.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-Cd9QzmBG.js";import"./index-D0zZwq32.js";import"./useControlled-9lBX7zRL.js";import"./useId-DmpfYdh3.js";import"./Popper-DSp1FeIG.js";import"./Button-DawLv5b0.js";import"./useQuery-_ws85yL5.js";import"./utils-Dz9cxE1U.js";import"./Link-CNEgPUo2.js";import"./Collapse-CZFNRH1o.js";import"./tinycolor-Begke6kS.js";import"./Fade-CoSzwWpP.js";import"./Skeleton-BUNW0s0t.js";import"./inputBaseClasses-DhLGEEvE.js";import"./calculateFriendlyFileSize-CDRjbozM.js";import"./CheckCircleTwoTone-DBPw0BfE.js";import"./InfoTwoTone-ciM6HWp8.js";import"./useMutation-meEtlnbI.js";import"./dayjs.min-BI6axHk4.js";import"./chunk-AYJ5UCUI-BzOTHJcD.js";import"./index-BVWcfbtT.js";import"./react--z23vKgd.js";import"./util-OzXSxVCB.js";import"./WideButton-DqYy9ImT.js";import"./DeleteTwoTone-Coxm4ktm.js";import"./createSvgIcon-DUtVFxnd.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-ZSGBVBSx.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog--05Cglpb.js";import"./DialogBase-Bc88u_6S.js";import"./Close-Y_tzL8Dw.js";import"./HelpPopover-Dk5naLw-.js";import"./MarkdownPopover-LpD-0DvZ.js";import"./LightTooltip-CB_tiKqc.js";import"./MarkdownSynapse-C2ytnp7r.js";import"./SkeletonButton-DjJHAWNS.js";import"./SkeletonInlineBlock-ChJK_2Be.js";import"./SkeletonTable-DsNtHb0H.js";import"./SkeletonParagraph-DFqX7BD3.js";import"./HelpOutlineTwoTone-CBfl5HEB.js";import"./DialogTitle-C7J4myw3.js";import"./DialogContent-9tPFNk_b.js";import"./Dialog-B2wSs4As.js";import"./Modal-D6j6vOw7.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-0nOgrklK.js";import"./WarningDialog-D3R5KL-0.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
