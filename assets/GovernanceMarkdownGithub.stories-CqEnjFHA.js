import{u as o}from"./VerificationSubmission-BDh1zA9f.js";import{g as u,bd as d,be as l,B as f,bf as S,M as O}from"./useFiles-BD4KcggH.js";import"./StringUtils-C95LMFI-.js";import{h as i,H as n}from"./index-UBrnlL6I.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-B0DGiIqN.js";import"./SynapseConstants-C5fJ6W9x.js";import"./OrientationBanner-B1U-JKpH.js";import"./index-CApIUj-F.js";import"./index-CTBfKjC4.js";import"./iframe-gTIDAZQg.js";import"./spreadSx-CwcO6WA9.js";import"./react-CubyAX3H.js";import"./FullWidthAlert-DhFPV9iX.js";import"./Alert-WGmoL_4K.js";import"./createTheme-BeM14ukj.js";import"./DefaultPropsProvider-CodfpIlO.js";import"./useSlot-BQo3_OIz.js";import"./useForkRef-BbhCp5rg.js";import"./createSimplePaletteValueFilter-CPaswB4Q.js";import"./createSvgIcon-D58Sw3_z.js";import"./Close-BKdI9nH5.js";import"./IconButton-CqHRM4EF.js";import"./useTimeout-BvDOFDRr.js";import"./ButtonBase-mbVOgLji.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BpCYYZDo.js";import"./Paper-B8lFXjj-.js";import"./useTheme-BDDIZjtd.js";import"./useTheme-BA2R1Ps9.js";import"./Stack-DIijSgme.js";import"./useThemeProps-CMVD1ZMq.js";import"./getThemeProps-DqlpC9Mi.js";import"./extendSxProp-BZCmJIiL.js";import"./Box-Vn1G5ew2.js";import"./AlertTitle-CHQ1Ywle.js";import"./Typography-CE5_NmU_.js";import"./index-q0agkvi3.js";import"./ClickAwayListener-BDdlm6vq.js";import"./getReactElementRef-DoTKk2nz.js";import"./index-bPKcxg0x.js";import"./index-BXX3-DP5.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-D9O_1KqJ.js";import"./Tooltip-thvrSoEP.js";import"./index-CaRzBUHM.js";import"./useControlled-BprndzS8.js";import"./Popper-QoAfo2eP.js";import"./Button-DbuI_meR.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery--gmCGzxD.js";import"./QueryClientProvider-DkLrC5l_.js";import"./Link-Ci8k81v0.js";import"./Collapse-DdwAzucD.js";import"./_baseUniq-CtYXr8Su.js";import"./_Uint8Array-Dz3m3Swg.js";import"./isArray-DNhEbc_x.js";import"./_getTag-DhnUM1Y3.js";import"./isEqual-BdiSvygy.js";import"./noop-DX6rZLP_.js";import"./merge-BuKZby1l.js";import"./_initCloneObject-CHyCDwZf.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-B6EkDVCd.js";import"./inputBaseClasses--3QcI5AK.js";import"./calculateFriendlyFileSize-B1f455kq.js";import"./CheckCircleTwoTone-a7_qh5-t.js";import"./InfoTwoTone-D7rp3nLr.js";import"./useMutation-D8cnzs-A.js";import"./dayjs.min-Cu_x3gTh.js";import"./chunk-AYJ5UCUI-H1s9FfhD.js";import"./cloneDeep-BZPNU5xO.js";import"./Skeleton-K5NPRluW.js";import"./SkeletonButton-8bELaU-d.js";import"./SkeletonInlineBlock-8Hw4SajA.js";import"./SkeletonTable-sf-P4F3m.js";import"./times-WaCuw9lB.js";import"./toInteger-CISJsxcP.js";import"./isSymbol-DHxFOI7d.js";import"./SkeletonParagraph-dGZe7Get.js";import"./MarkdownSynapse-DYiLMHl-.js";import"./Container-BSQM9wAh.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Qr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Xr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Xr as __namedExportsOrder,Qr as default};
