import{el as c,j as i,eG as m,a0 as l}from"./iframe-Ci1lmE8g.js";import{S as s}from"./SustainabilityScorecard-D-vwGDas.js";import"./index-r8ZA1smB.js";import"./Close-CELbEfBf.js";import"./Dial-D30wlEtj.js";import"./CheckIcon-gSvO-QLN.js";import"./NoContentAvailable-CVUuE437.js";const p={entityId:"syn68561794",concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",partMask:m|l,query:{sql:"SELECT * FROM syn68561794",additionalFilters:[{concreteType:"org.sagebionetworks.repo.model.table.ColumnSingleValueQueryFilter",columnName:"toolName",operator:c.LIKE,values:["%DrugCell%"]}]}},a={queryRequest:p,filterColumn:"toolName",searchParamKey:"toolName",scoreDescriptorColumnName:"AlmanackScoreDescriptor",metricsConfig:[{key:"CloneRepository",label:"Repository",text:"Indicates presence of automated tests"},{key:"CheckReadme",label:"README",text:"Indicates presence of automated tests"},{key:"CheckDependencies",label:"Dependencies",text:"Presence of documentation for setup/use"},{key:"CheckTests",label:"Tests",text:"Presence of documentation for setup/use"}]},E={title:"Components/SustainabilityScorecard/Scorecard",component:s,args:a,parameters:{chromatic:{viewports:[600,1200]},withRouter:!0}},e={render:n=>i.jsx(s,{...n}),args:{...a}};var o,r,t;e.parameters={...e.parameters,docs:{...(o=e.parameters)==null?void 0:o.docs,source:{originalSource:`{
  render: args => <SustainabilityScorecard {...args} />,
  args: {
    ...mockProps
  }
}`,...(t=(r=e.parameters)==null?void 0:r.docs)==null?void 0:t.source}}};const R=["Demo"];export{e as Demo,R as __namedExportsOrder,E as default};
