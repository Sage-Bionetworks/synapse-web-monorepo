import{v as o}from"./VerificationSubmission-CDh9xETu.js";import{g as u,be as d,bf as l,B as f,bg as S,M as O}from"./useFiles-DO1cPBl7.js";import"./StringUtils-CsrYFBZo.js";import{h as i,H as n}from"./index-BTIzx0Wj.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-DeniLnbO.js";import"./SynapseConstants-BliToi0e.js";import"./OrientationBanner-DGX7LYY4.js";import"./index-BRBsISmc.js";import"./index-CWpaGFK7.js";import"./iframe-CJwrIpof.js";import"./spreadSx-CwcO6WA9.js";import"./react-4i24zxDG.js";import"./FullWidthAlert-7dmevFvZ.js";import"./Alert-e1fdK64c.js";import"./createTheme-Qw6dCODO.js";import"./DefaultPropsProvider-B_1_wKWC.js";import"./useSlot-CS4KC0jU.js";import"./useForkRef-ByDnI1AI.js";import"./createSimplePaletteValueFilter-DNCeFqr7.js";import"./createSvgIcon-D1X3oUr7.js";import"./Close-Bw8m5Hef.js";import"./IconButton-Gs_sYVQS.js";import"./useTimeout-CzHT3KD_.js";import"./ButtonBase-Wr9y_zmM.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-C8YsOKf9.js";import"./Paper-BVPD3mQe.js";import"./useTheme-DHciqbbk.js";import"./useTheme-6nf7h3Tc.js";import"./Stack-Bf8FV3-F.js";import"./extendSxProp-BByHy23N.js";import"./getThemeProps-CCMOZlfl.js";import"./Box-C-eGKuIR.js";import"./AlertTitle-CG-a6DqA.js";import"./Typography-B79vr9v9.js";import"./index-CMKHL7or.js";import"./ClickAwayListener-46oNtdkb.js";import"./getReactElementRef-86s1n294.js";import"./index-D6cMwY1N.js";import"./index-D2WEh5JI.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-CIJVMZUl.js";import"./Tooltip-D6q9sssE.js";import"./index-uY5dmQq2.js";import"./useControlled-VdZXMxh4.js";import"./Popper-Fyhhd020.js";import"./Button-CA46tzHk.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-DrawGXCF.js";import"./QueryClientProvider-CFTn6vB9.js";import"./Link-yQq2R-UK.js";import"./Collapse-BOJ3O8As.js";import"./_baseUniq-DB7Cxeo-.js";import"./_Uint8Array-B8CGF7rC.js";import"./isArray-BrJsc936.js";import"./_getTag-BOtS_nWm.js";import"./isEqual-pCpS_l18.js";import"./merge-D9QsSWfJ.js";import"./_initCloneObject-Br1VFpBs.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-BBSHnXK7.js";import"./inputBaseClasses-DbIpK7Kh.js";import"./calculateFriendlyFileSize-B39fPYuC.js";import"./CheckCircleTwoTone-CxSYaKRq.js";import"./InfoTwoTone-CnjItO4h.js";import"./useMutation-Dbv4F8QA.js";import"./dayjs.min-DiMZjeZL.js";import"./chunk-AYJ5UCUI-CERoDU_H.js";import"./cloneDeep-h3S60Dr-.js";import"./Skeleton-NVnaak77.js";import"./SkeletonButton-D8AR7jvp.js";import"./SkeletonInlineBlock-D2h5bgPq.js";import"./SkeletonTable-C4D7A4_N.js";import"./times-DY7cTlCK.js";import"./toInteger-BRHi2Sub.js";import"./isSymbol-D36BvKFW.js";import"./SkeletonParagraph-B2SNRfpB.js";import"./MarkdownSynapse-TmKPcuUB.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
