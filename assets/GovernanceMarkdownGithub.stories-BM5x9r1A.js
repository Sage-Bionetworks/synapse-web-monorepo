import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-C6BwGmgN.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-CN8l0H_r.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-CMzFGyzD.js";import"./SynapseConstants-CHfc5BRa.js";import"./OrientationBanner-CkE3LJzk.js";import"./index-DyKzhNf1.js";import"./index-rmXZupeT.js";import"./iframe-CnAxXqxV.js";import"./spreadSx-CwcO6WA9.js";import"./react-BslqEXOo.js";import"./FullWidthAlert-Cij9Lr9P.js";import"./Alert-Bd4EOZMs.js";import"./createTheme-7VwcU9MX.js";import"./DefaultPropsProvider-XLuEdgCM.js";import"./useSlot-D6xm9tOe.js";import"./useForkRef-B964cD4p.js";import"./createSimplePaletteValueFilter-BrqKSbt1.js";import"./createSvgIcon-C-kUqDRU.js";import"./Close-B2HfX8kl.js";import"./IconButton-BGihFqQO.js";import"./useTimeout-C7Qw7JlA.js";import"./ButtonBase-bRyxANaO.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-B7bm9t_J.js";import"./Paper-CXW8nM1b.js";import"./useTheme-Dj_3GmAW.js";import"./useTheme-CjWK0QVA.js";import"./Stack-ZJG2wcld.js";import"./extendSxProp-CMhnceC8.js";import"./getThemeProps-CCWsl_Bt.js";import"./Box-CMDBeJLc.js";import"./AlertTitle-Ba2SDaus.js";import"./Typography-C1bnshF6.js";import"./index-BQPAD3Qw.js";import"./ClickAwayListener-Dfg_Mgii.js";import"./getReactElementRef-ChnRrIQ2.js";import"./index-DEyJTSZg.js";import"./index-BFCDf8FD.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-bzjsRX5V.js";import"./Tooltip-Byt5Qei4.js";import"./index-DwY_HY0j.js";import"./useControlled-PcFy2od8.js";import"./Popper-BIm3Cl6k.js";import"./Button-z7wIW46U.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-IHp_taKB.js";import"./QueryClientProvider-D0RjbjLi.js";import"./Link-LP8RV5_G.js";import"./Collapse-BwPnxzem.js";import"./_baseUniq-CxWngQTg.js";import"./_Uint8Array-DEe3OgvP.js";import"./isArray-CLQzkOlL.js";import"./_getTag-39rwr1vt.js";import"./isEqual-zjmzDneB.js";import"./merge-DvCmlctf.js";import"./_initCloneObject-BoJxgDin.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-DbJe4Bd2.js";import"./inputBaseClasses-Dgezdmn3.js";import"./calculateFriendlyFileSize-O_GSSh-o.js";import"./CheckCircleTwoTone-UW5_dW2R.js";import"./InfoTwoTone-C_kTkL1y.js";import"./useMutation-CHebwS8k.js";import"./dayjs.min-CPnKhPbP.js";import"./chunk-AYJ5UCUI-ZuTesFP-.js";import"./cloneDeep-CODQJftl.js";import"./Skeleton-BziL8Y5z.js";import"./SkeletonButton-B-Tm9Q8s.js";import"./SkeletonInlineBlock-BoRyS2ag.js";import"./SkeletonTable-CyG8XVTX.js";import"./times-VRy4IDdy.js";import"./toInteger-tXcGozz3.js";import"./isSymbol-CT3JAaN1.js";import"./SkeletonParagraph--I_hz-Ir.js";import"./MarkdownSynapse-BY95TdS-.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
