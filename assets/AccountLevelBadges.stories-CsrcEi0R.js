import{g as f}from"./userProfileHandlers-yL_HPa9L.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-BaHBnPCT.js";import{A}from"./AccountLevelBadges-BjQyxGaM.js";import"./VerificationSubmission-D0sL2gwz.js";import"./index-RdIn85H9.js";import"./iframe-DnJ5JHSL.js";import"./mockEntity-B-sCeALb.js";import"./mockFileEntity-DhJlJ4vI.js";import"./StringUtils-Bt2r5KGg.js";import"./mock_file_handle-BgkszYEk.js";import"./mockProject-CPVIRAW7.js";import"./mockTeam-CnHYlifl.js";import"./SynapseConstants-BqMZZ0Uj.js";import"./OrientationBanner-D3mCNTls.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-D9zPyMPU.js";import"./index-DG5WaW8A.js";import"./spreadSx-CwcO6WA9.js";import"./react-DpPAoAus.js";import"./FullWidthAlert-C15S_5lN.js";import"./Alert-CqLArlEA.js";import"./createTheme-B8qtGaPA.js";import"./DefaultPropsProvider-WJKOyJT-.js";import"./useSlot-JvNPDeI7.js";import"./useForkRef-CW6ZjnOu.js";import"./createSimplePaletteValueFilter-DKnUICEw.js";import"./createSvgIcon-COjOD54i.js";import"./Close-COST_jYw.js";import"./IconButton-D4tlpKJ0.js";import"./useTimeout-C2yROX5q.js";import"./ButtonBase-HT1BmJkV.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-szAnAP88.js";import"./Paper-DP7YNfiE.js";import"./useTheme-a817PGTf.js";import"./useTheme-DoRa5GNx.js";import"./Stack-mJ9nGhMq.js";import"./extendSxProp-C3WEdxaP.js";import"./getThemeProps-nH5b3nzk.js";import"./Box-Dwzdnkyq.js";import"./AlertTitle-D_6eYjWf.js";import"./Typography-DJYJum-Z.js";import"./index-C0MKoZk1.js";import"./ClickAwayListener-BuTrm4_l.js";import"./getReactElementRef-Cn7e0r_1.js";import"./index-De9PzaEN.js";import"./index-BsQ9BBfm.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DIlAcZ3T.js";import"./Tooltip-D9bXZBwE.js";import"./index-DepU4Aic.js";import"./useControlled-CEU-8lDi.js";import"./Popper-CRSbOcEy.js";import"./Button-DfdvB59M.js";import"./uniqueId-Zmb2_QCn.js";import"./toString-CZBLh3Dy.js";import"./isArray-BNx9SFw4.js";import"./isSymbol-hYURkEXL.js";import"./times-Biwrgnwl.js";import"./_Uint8Array-93iIsemI.js";import"./identity-DKeuBCMA.js";import"./toInteger-C4MvgP0M.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-Ba3IRlbK.js";import"./QueryClientProvider-CRM5FpDi.js";import"./Link-Don1gO5O.js";import"./Collapse-BifcPkpD.js";import"./_baseUniq-B4bOwasf.js";import"./_getTag-CC1IQGmn.js";import"./isEqual-DhexJtMb.js";import"./merge-COeUm6ZQ.js";import"./_initCloneObject-U8B2jDKi.js";import"./tinycolor-Begke6kS.js";import"./Fade-CvRe1w3X.js";import"./inputBaseClasses-Bj2LEIDd.js";import"./calculateFriendlyFileSize-Ddu106po.js";import"./CheckCircleTwoTone-C1fKEsD6.js";import"./InfoTwoTone-Cz9XMzuy.js";import"./useMutation-nRNz6yUF.js";import"./dayjs.min-DpTEiHjS.js";import"./chunk-AYJ5UCUI-DUTlC2ep.js";import"./cloneDeep-Bl5O9E0A.js";import"./Skeleton-Z_xAmh5P.js";import"./AccountLevelBadge-DDE-A7iB.js";import"./Card-CamihboJ.js";import"./ConfirmationDialog-CAi6X-BG.js";import"./DialogBase-Bznm9xVq.js";import"./Close-B7oM2WAq.js";import"./HelpPopover-D-5l89TZ.js";import"./MarkdownPopover-DwP0Gx0y.js";import"./LightTooltip-BSCiQ-aU.js";import"./MarkdownSynapse-BL6Ta7Bh.js";import"./SkeletonButton-Dm6ZtGA6.js";import"./SkeletonInlineBlock-Ca8dv9Uu.js";import"./SkeletonTable-C3EaZc_V.js";import"./SkeletonParagraph-CODGbLfY.js";import"./HelpOutlineTwoTone-7MNaDPYf.js";import"./DialogTitle-CFci1Qg1.js";import"./DialogContent-LdOidXoR.js";import"./Dialog-RjtSVb0J.js";import"./Modal-CGPeQTLA.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-vcVR1Cn7.js";import"./LoadingScreen-DJCS4dnF.js";import"./LinearProgress-mYVJrgmp.js";import"./ToastMessage-BvZFjGzu.js";import"./CSSTransition-CQEpyrS-.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
