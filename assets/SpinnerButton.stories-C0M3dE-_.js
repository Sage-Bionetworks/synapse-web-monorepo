import{S as p}from"./SpinnerButton-CBhKSXyS.js";import"./jsx-runtime-DoxjgJx5.js";import"./index-Cu9bd8lq.js";import"./LoginAwareButton-BiwwJdkG.js";import"./react-router-dom-Dm3I-QQ7.js";import"./SynapseClient-CCAdBNnm.js";import"./OrientationBanner-BsmFKABX.js";import"./FullWidthAlert-DfzvViOl.js";import"./Alert-BjW6UdMW.js";import"./createTheme-CSXEdrm4.js";import"./index-GEGPABih.js";import"./styled-DhbZfYjm.js";import"./mergeSlotProps-BvStzxp7.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-Bm_QQ74L.js";import"./createSvgIcon-RFCzz5wB.js";import"./Paper-BNspCzZ8.js";import"./IconButton-dV1PosdL.js";import"./ButtonBase-B1PyklHR.js";import"./TransitionGroupContext-C4KIfRep.js";import"./useIsFocusVisible-Lp1_y5xp.js";import"./Stack-B3TCA9BM.js";import"./Box-CSxp1att.js";import"./AlertTitle-CaC9w9kZ.js";import"./Typography-5kwXSe6k.js";import"./utils-BX4sETT_.js";import"./index-BlO3JfGB.js";import"./Grow-WB7TPAH6.js";import"./ClickAwayListener-Ba-YFlDA.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BUEOzDXu.js";import"./index-DnaZGQZH.js";import"./useControlled-JEQ1v-P8.js";import"./useId-g68bhPgm.js";import"./Button-PewxtVEx.js";import"./index-DfM7mfu0.js";import"./SynapseConstants-CnTS8uWh.js";import"./RegularExpressions-DlyA5nPV.js";import"./useQuery-ChYzlhEH.js";import"./tinycolor-Begke6kS.js";import"./InfoTwoTone-q2nFdSda.js";import"./CheckCircleTwoTone-DZeepUDu.js";import"./colorManipulator-CBwtHKAF.js";import"./inputBaseClasses-OXp8mACw.js";import"./Fade-BnvAYJFW.js";import"./dayjs.min-D1RcYm3-.js";import"./index-SDyqs4cU.js";import"./tiny-invariant-CopsF_GD.js";import"./Link-Cn1DJ6En.js";import"./_getTag-CNUVqXoc.js";import"./_Map-BfIf8dAI.js";import"./isArray-ggc3KxVp.js";import"./isObject-C3e4t58V.js";import"./StringUtils-5IsdMFw2.js";const mr={title:"UI/SpinnerButton",component:p,argTypes:{isAuthenticated:{control:{type:"boolean"}},showSpinner:{control:{type:"boolean"}}},args:{isAuthenticated:!0,showSpinner:!1}},r={args:{isAuthenticated:!0,children:"Make Async call",showSpinner:!1,variant:"contained",color:"primary",onClick:()=>{alert("clicked")}}};var t,o,i;r.parameters={...r.parameters,docs:{...(t=r.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    isAuthenticated: true,
    children: 'Make Async call',
    showSpinner: false,
    variant: 'contained',
    color: 'primary',
    onClick: () => {
      alert('clicked');
    }
  }
}`,...(i=(o=r.parameters)==null?void 0:o.docs)==null?void 0:i.source}}};const er=["Demo"];export{r as Demo,er as __namedExportsOrder,mr as default};
