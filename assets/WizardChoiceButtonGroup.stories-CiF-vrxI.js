import{j as i}from"./jsx-runtime-BiWA54l5.js";import{W as m,a as t}from"./WizardChoiceButton-iCdADMIZ.js";import{I as l}from"./LayersTwoTone--gDr7i_e.js";import{F as d}from"./IconSvg-DrR9XhVD.js";import"./index-DhiVPEXr.js";import"./iframe-DdfsIYam.js";import"./Box-ChSwPMHV.js";import"./createTheme-D7uPp7E_.js";import"./useTheme-ClwTON04.js";import"./extendSxProp-BFwTiWAX.js";import"./spreadSx-CwcO6WA9.js";import"./Typography-BQoiqdiw.js";import"./index-BP2NWRlB.js";import"./DefaultPropsProvider-BNGQCVUl.js";import"./createSimplePaletteValueFilter-37lQ19gZ.js";import"./createSvgIcon-BrbTVqGj.js";import"./useTheme-Bgl42pYj.js";import"./Tooltip-BQ2Zx4cU.js";import"./index-CnleELMM.js";import"./useSlot-mlQ06HgV.js";import"./useForkRef-D6Ozyr_R.js";import"./useTimeout-DBCArjJg.js";import"./useControlled-DL7QACQp.js";import"./getReactElementRef-Cx7-4IP1.js";import"./index-3znFL5fM.js";import"./index-CbQDV7ub.js";import"./Grow-BA9w5EK3.js";import"./Popper-CzJrasAD.js";import"./ownerDocument-DW-IO8s5.js";import"./isFocusVisible-B8k4qzLc.js";import"./ContentCopyTwoTone-B_KNCmHT.js";import"./HelpOutlineTwoTone-BbVNahzS.js";import"./ErrorOutlined-DUxt2SL0.js";import"./GetAppTwoTone-Cy_6qB0y.js";import"./InfoOutlined-BGpvTobX.js";import"./PhoneTwoTone-BZn6nz1u.js";import"./DeleteTwoTone-D4OIn-cM.js";import"./CheckCircleTwoTone-C4eJ2xB1.js";const Y={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},e={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),i.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:i.jsx(l,{fontSize:"large"})}),i.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:i.jsx(d,{fontSize:"large"})})]})}};var r,s,n;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const Z=["Basic","WithIcons"];export{e as Basic,o as WithIcons,Z as __namedExportsOrder,Y as default};
