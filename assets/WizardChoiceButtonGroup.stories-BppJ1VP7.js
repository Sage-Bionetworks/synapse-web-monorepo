import{j as i}from"./jsx-runtime-BPwvgLas.js";import{W as m,a as t}from"./WizardChoiceButton-6i95HJqM.js";import{I as l}from"./LayersTwoTone-DZQ59zw5.js";import{F as d}from"./IconSvg-DmCn1sSh.js";import"./index-CBDLWlOB.js";import"./iframe-BOhnkrTR.js";import"./Box-DZ1qA8WV.js";import"./createTheme-CqhKahyM.js";import"./useTheme-CHrnUnqX.js";import"./Typography-CEe9erp9.js";import"./DefaultPropsProvider-CK3fJzAT.js";import"./createSvgIcon-CngalfwQ.js";import"./spreadSx-CwcO6WA9.js";import"./useTheme-P165y_LK.js";import"./Tooltip-_plCLI4q.js";import"./index-B9wPZdQL.js";import"./Grow-CJVUX4yR.js";import"./resolveComponentProps-CbacDgM7.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CYG44Oi1.js";import"./index-BwhZA35d.js";import"./utils-BPpJDtRg.js";import"./TransitionGroupContext-vIwZ2ZdW.js";import"./useEventCallback-BEeQPLsK.js";import"./useTimeout-D29s38n5.js";import"./useControlled-BK1AIYs5.js";import"./useId-CLSRERuv.js";import"./useIsFocusVisible-CRwyDx7g.js";import"./Popper-BvhU2AWB.js";import"./ownerDocument-DW-IO8s5.js";import"./ContentCopyTwoTone-BYwS8YuZ.js";import"./HelpOutlineTwoTone-63OLYDHD.js";import"./ErrorOutlined-DowNV_Pr.js";import"./GetAppTwoTone-D9Pcl_wP.js";import"./InfoOutlined-BNSua5Lw.js";import"./DeleteTwoTone-BPm2xhdh.js";import"./CheckCircleTwoTone-Bw2Wk5oI.js";const V={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},e={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),i.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:i.jsx(l,{fontSize:"large"})}),i.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:i.jsx(d,{fontSize:"large"})})]})}};var r,s,n;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const Y=["Basic","WithIcons"];export{e as Basic,o as WithIcons,Y as __namedExportsOrder,V as default};
