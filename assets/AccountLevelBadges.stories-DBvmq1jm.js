import{g as f}from"./userProfileHandlers-CKE12sYk.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles--CcWu9gA.js";import{A}from"./AccountLevelBadges-C1Ay-0F4.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-DxrQlaKO.js";import"./iframe-BBbPPlq-.js";import"./mockEntity-BzalaZaQ.js";import"./mockFileEntity-JaXa9Gkz.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-2ntjsuC_.js";import"./mockTeam-Obr_QFa_.js";import"./SynapseConstants-ghF4YRrd.js";import"./OrientationBanner-DU98_TTV.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-Dxjk3aKI.js";import"./index-DfH0xLBM.js";import"./spreadSx-CwcO6WA9.js";import"./react-DpIdD-62.js";import"./FullWidthAlert-BQJVxlFp.js";import"./Alert-RljSBmGs.js";import"./createTheme-C4Li-FeX.js";import"./DefaultPropsProvider-C5HBAaLd.js";import"./useSlot-ij2OcnyH.js";import"./useForkRef-C38TISwS.js";import"./createSimplePaletteValueFilter-CewVvtaD.js";import"./createSvgIcon-DgQOn1iH.js";import"./Close-BvUVUi_-.js";import"./IconButton-Bl0V3heo.js";import"./useTimeout-ByqevPT1.js";import"./ButtonBase-BXFH7Ps4.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-C03GnYa5.js";import"./Paper-BguwlWAj.js";import"./useTheme-uHI12HV_.js";import"./useTheme-59sMrz1c.js";import"./Stack-B39t_pfr.js";import"./extendSxProp-5e-7qZGm.js";import"./getThemeProps-Cs-uvllJ.js";import"./Box-DatqpWAL.js";import"./AlertTitle-RGiJ7hWV.js";import"./Typography-BsfUTGyU.js";import"./index-CIGP8gNZ.js";import"./ClickAwayListener-DAStxRA2.js";import"./getReactElementRef-C8IOmuiS.js";import"./index-C8f7utTL.js";import"./index-CRBvO-yL.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BgfT-li0.js";import"./Tooltip-BSuMYYSh.js";import"./index-CYsbSnLz.js";import"./useControlled-BITnwwUY.js";import"./Popper-BGskr9VS.js";import"./Button-CzBwcvk-.js";import"./uniqueId-Dm-yNi0K.js";import"./toString-BqKXGEo_.js";import"./isArray-CGdtKNqT.js";import"./isSymbol-CUEZzaKO.js";import"./times-D4UrFNax.js";import"./_Uint8Array-CwRGWxQt.js";import"./identity-DKeuBCMA.js";import"./toInteger-a_G3PH11.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-Cf8hH_U4.js";import"./QueryClientProvider-BZgP8lHY.js";import"./Link-Cm8C0lxO.js";import"./Collapse-CDaWcrSI.js";import"./_baseUniq-DBAE-w05.js";import"./_getTag-BhZRMS_V.js";import"./isEqual-N_Vc746J.js";import"./merge-BKp98YdC.js";import"./_initCloneObject-DRIcQyEX.js";import"./tinycolor-Begke6kS.js";import"./Fade-0QiC2KlA.js";import"./inputBaseClasses-mE9zzfPQ.js";import"./calculateFriendlyFileSize-CoY_9rm3.js";import"./CheckCircleTwoTone-Cw0D955-.js";import"./InfoTwoTone-DDsNRkE8.js";import"./useMutation-DsxIvPaF.js";import"./dayjs.min-C2tPzWeM.js";import"./chunk-AYJ5UCUI-RArPt-D8.js";import"./cloneDeep-Slp46nnr.js";import"./Skeleton-C7wJ6onP.js";import"./AccountLevelBadge-BWZdbRfy.js";import"./Card-CpeiHMDd.js";import"./ConfirmationDialog-Dvql8fL1.js";import"./DialogBase-CUl4gv-x.js";import"./Close-B9iKGYMf.js";import"./HelpPopover-BEC8cjAH.js";import"./MarkdownPopover-BpvKEQNP.js";import"./LightTooltip-Ckkct5ng.js";import"./MarkdownSynapse-BnYDI6G-.js";import"./SkeletonButton-irVg13Ua.js";import"./SkeletonInlineBlock-BQHtrUDc.js";import"./SkeletonTable-Dqfl39px.js";import"./SkeletonParagraph-CD_gloE7.js";import"./HelpOutlineTwoTone-C9n4kVVi.js";import"./DialogTitle-DYhef7W0.js";import"./DialogContent-DrRLLyum.js";import"./DialogActions-ChSFTwQ8.js";import"./Dialog-73GUbh29.js";import"./Modal-DDcHkS4I.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-D39jx8Ga.js";import"./LoadingScreen-DAcgp9oN.js";import"./LinearProgress-Cnbx1riw.js";import"./ToastMessage-hXFH9Tom.js";import"./CSSTransition-BGhdMiPW.js";const St={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Et=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Et as __namedExportsOrder,St as default};
