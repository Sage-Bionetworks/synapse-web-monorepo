import{j as e}from"./jsx-runtime-3f6CKeIF.js";import{s as p}from"./DefaultPropsProvider-sc08Vmw-.js";import{B as c}from"./Badge-cMS_Y9ay.js";import{p as m}from"./pluralize-1wlphgUp.js";import{i as u}from"./TableRowSelectionState-DDhG_iNs.js";import{P as f}from"./Paper-Das1pTqY.js";import{B as y}from"./Button-Drfg9msN.js";import{B as r}from"./Box-CptHO48m.js";import{T as g}from"./Typography-Cb5qF7iG.js";import{u as h}from"./react-CJyvR9hS.js";const t=p(c,{label:"InlineBadge"})(({theme:o})=>({position:"static",justifyContent:"flex-end",alignItems:"center",".MuiBadge-badge":{minWidth:"unset",position:"relative",transform:"none"}}));try{t.displayName="InlineBadge",t.__docgenInfo={description:"Renders a badge component in-line with other content, instead of as an overlay.",displayName:"InlineBadge",props:{slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"Partial<BadgeSlots>"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.",name:"slotProps",required:!1,type:{name:'{ root?: SlotProps<"span", BadgeRootSlotPropsOverrides, { className?: string; classes?: Partial<BadgeClasses>; children?: ReactNode; ... 11 more ...; displayValue: ReactNode; }>; badge?: SlotProps<...>; }'}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLSpanElement>"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}}}}}catch{}function s(o){const{show:l=!0,selectedRowCount:n,onClearSelection:i,customControls:d=e.jsx(e.Fragment,{})}=o,a=h(u);return l?e.jsxs(f,{sx:{display:"flex",alignItems:"center",justifyContent:"space-between",position:a?"fixed":"absolute",bottom:a?0:-70,left:0,width:"100%",height:"70px",zIndex:1,px:2.5},children:[e.jsx(y,{variant:"text",color:"error",onClick:()=>{i()},children:"Clear Selection"}),e.jsxs(r,{sx:{display:"flex",gap:2.5,alignItems:"center"},children:[e.jsxs(r,{sx:{display:"flex",gap:1.5},children:[e.jsx(t,{badgeContent:n.toLocaleString(),color:"primary",max:1/0}),e.jsxs(g,{variant:"body1",children:[m("Row",n)," Selected"]})]}),d]})]}):e.jsx(e.Fragment,{})}try{s.displayName="RowSelectionUI",s.__docgenInfo={description:"UI-only component for displaying the number of table rows selected, along with actions that can be performed on those rows",displayName:"RowSelectionUI",props:{show:{defaultValue:null,description:"",name:"show",required:!1,type:{name:"boolean"}},selectedRowCount:{defaultValue:null,description:"",name:"selectedRowCount",required:!0,type:{name:"number"}},onClearSelection:{defaultValue:null,description:"",name:"onClearSelection",required:!0,type:{name:"() => void"}},customControls:{defaultValue:null,description:"",name:"customControls",required:!1,type:{name:"ReactNode"}}}}}catch{}export{s as R};
