import{g as f}from"./userProfileHandlers-oTFDGj8G.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-BlF8TPl5.js";import{A}from"./AccountLevelBadges-DbsQFwdk.js";import"./VerificationSubmission-D0sL2gwz.js";import"./index-DDR8W_OP.js";import"./iframe-n5mwkj0K.js";import"./mockEntity-Bd3EqGJ7.js";import"./mockFileEntity-C4u6YUKb.js";import"./StringUtils-Bt2r5KGg.js";import"./mock_file_handle-BgkszYEk.js";import"./mockProject-CzOQP-Tz.js";import"./mockTeam-2cTjN04j.js";import"./SynapseConstants-CPmaicpC.js";import"./OrientationBanner-CJ1ESR_n.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-DiXyMZPQ.js";import"./index-CmvBv4Ni.js";import"./spreadSx-CwcO6WA9.js";import"./react-Cs0n9kFQ.js";import"./FullWidthAlert-B8v9piRr.js";import"./Alert-xAoisqCg.js";import"./createTheme-DekxhsWr.js";import"./DefaultPropsProvider-DurKmMsP.js";import"./useSlot-BA0kN4AN.js";import"./useForkRef-BCeimwSg.js";import"./createSimplePaletteValueFilter-BqCAAfVF.js";import"./createSvgIcon-DgFDwm57.js";import"./Close-BIhyvXJQ.js";import"./IconButton-i3mZ6Ezw.js";import"./useTimeout-CcoqqpEg.js";import"./ButtonBase-XDzeNizs.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BGQJ8oah.js";import"./Paper-84Q1WhB6.js";import"./useTheme-BvD-CNZH.js";import"./useTheme-DS1z3Y1X.js";import"./Stack-CBcPcYcV.js";import"./extendSxProp-Dh-qlJOe.js";import"./getThemeProps-jaih5qkn.js";import"./Box-BhLrdYXi.js";import"./AlertTitle-ByGWvG3o.js";import"./Typography-CLeqY5_n.js";import"./index-C7caafkY.js";import"./ClickAwayListener-CBV7B09E.js";import"./getReactElementRef-C0n-5JA5.js";import"./index-C3w_Pjwj.js";import"./index-nIDE90q0.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BY_78XwL.js";import"./Tooltip-BvV6KBuI.js";import"./index-tHFahJkl.js";import"./useControlled-CyRm7kwD.js";import"./Popper-BGRgwHFZ.js";import"./Button-CI5AcPJ7.js";import"./uniqueId-DCbPiQr7.js";import"./toString-Di8UJasC.js";import"./isArray-BkbdtJTH.js";import"./isSymbol-CzPCjI13.js";import"./times-DKm1aQOU.js";import"./_Uint8Array-CyN-wuBs.js";import"./identity-DKeuBCMA.js";import"./toInteger-D3BzJgox.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-BWXoVlNJ.js";import"./QueryClientProvider-Bs1L9MD9.js";import"./Link-CTR14mAv.js";import"./Collapse-aOJwFLzA.js";import"./_baseUniq-CKpk02ye.js";import"./_getTag-CltEB6Q0.js";import"./isEqual-PuORISZF.js";import"./merge-CKiJq7bQ.js";import"./_initCloneObject-CazOt6n1.js";import"./tinycolor-Begke6kS.js";import"./Fade-BtxUg5az.js";import"./inputBaseClasses-Dwl_TlYP.js";import"./calculateFriendlyFileSize-Du7Eq0-o.js";import"./CheckCircleTwoTone-7SP1PUwv.js";import"./InfoTwoTone-B8ckXdFt.js";import"./useMutation-DImeJWvL.js";import"./dayjs.min-BYlmw0LD.js";import"./chunk-AYJ5UCUI-CG-M0tOp.js";import"./cloneDeep-v-ROnd35.js";import"./Skeleton-DMznnk0J.js";import"./AccountLevelBadge-CB8dEA8r.js";import"./Card-d0SUsbgp.js";import"./ConfirmationDialog-BfPNoWbf.js";import"./DialogBase-YRY6b8PX.js";import"./Close-0_fzQsuY.js";import"./HelpPopover-CwjwtoZU.js";import"./MarkdownPopover-BKy7sqSZ.js";import"./LightTooltip-BIQ_h7fD.js";import"./MarkdownSynapse-CH8rN77J.js";import"./SkeletonButton-CAxZMTH8.js";import"./SkeletonInlineBlock-DYgxuoaF.js";import"./SkeletonTable-CfJST3Et.js";import"./SkeletonParagraph-Be8mt8hr.js";import"./HelpOutlineTwoTone-DYyFsJa6.js";import"./DialogTitle-CE09mMxa.js";import"./DialogContent-WaKNEXm_.js";import"./Dialog-BKTAXJ4-.js";import"./Modal-DatguPh3.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-M1zxiyim.js";import"./LoadingScreen-DJAqUJkz.js";import"./LinearProgress-BwML7CTO.js";import"./ToastMessage-C9DqX38T.js";import"./CSSTransition-CYAEc_qN.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
