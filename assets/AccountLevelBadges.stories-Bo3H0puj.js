import{g as f}from"./userProfileHandlers-hwlQQKXu.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-WZRtSsNc.js";import{A}from"./AccountLevelBadges-DiHNAqOR.js";import"./VerificationSubmission-16RBrwfH.js";import"./index-h6u8APIF.js";import"./iframe-Czx5Dmi0.js";import"./mockEntity-CdqDcCk9.js";import"./mockFileEntity-D--JsO_k.js";import"./StringUtils-B_EIkN_W.js";import"./mock_file_handle-t2fDWYxy.js";import"./mockProject-q38E28gF.js";import"./mockTeam-Cp7gnNA-.js";import"./SynapseConstants-BLM21pa-.js";import"./OrientationBanner-ElxnVDle.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-7bLOgSTC.js";import"./index-9TTcYVc_.js";import"./spreadSx-CwcO6WA9.js";import"./react-DlmncmcU.js";import"./FullWidthAlert-CsPgeHuk.js";import"./Alert-mrkBi6in.js";import"./createTheme-DetxTjb2.js";import"./DefaultPropsProvider-CtKJNfPj.js";import"./useSlot-Tf7QcJnO.js";import"./useForkRef-C7pV92fh.js";import"./createSimplePaletteValueFilter-CXnjF6Zs.js";import"./createSvgIcon-C0ZSoRRV.js";import"./Close-NwpORwlT.js";import"./IconButton-BZkY5H-N.js";import"./useTimeout-DYRa_dr8.js";import"./ButtonBase-BWgIRray.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DIiahqiB.js";import"./Paper-CbcZq6PP.js";import"./useTheme-DZOGkB3v.js";import"./useTheme-DM1dQSDI.js";import"./Stack-2ox-Ad0l.js";import"./extendSxProp-Dj0Tb7v9.js";import"./getThemeProps-CdZnDORy.js";import"./Box-Dy5ekAQq.js";import"./AlertTitle-B5c08fVM.js";import"./Typography-C1hk1xps.js";import"./index-BMbKnGiz.js";import"./ClickAwayListener-Cmw51NWg.js";import"./getReactElementRef-BVzUeeGA.js";import"./index-Bn2Fmzct.js";import"./index-ZL7ET78i.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-seWSR3vl.js";import"./Tooltip-5yyA0MtP.js";import"./index-DmTgUWkb.js";import"./useControlled-B5jxCiTd.js";import"./Popper-OxILuenQ.js";import"./Button-DkW-IEcU.js";import"./uniqueId-B4JR_DQ8.js";import"./toString-Cddfhdkd.js";import"./isArray-wv-qry3w.js";import"./isSymbol-Bpxm0Ru6.js";import"./times-TiP4IDIO.js";import"./_Uint8Array-CZXWf0wa.js";import"./identity-DKeuBCMA.js";import"./toInteger-sDJQXy2h.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-GFI84f-6.js";import"./QueryClientProvider-CybjnCa8.js";import"./Link-5MArhe6M.js";import"./Collapse-_N5J_E3C.js";import"./_baseUniq-CzQc4vO5.js";import"./_getTag-B1_q1IMX.js";import"./isEqual-BeKpR506.js";import"./merge-BkX_m9ug.js";import"./_initCloneObject-BZbm0-zy.js";import"./tinycolor-Begke6kS.js";import"./Fade-DV6rNrzp.js";import"./inputBaseClasses-D2LWFDZ3.js";import"./calculateFriendlyFileSize-CA8SV0xk.js";import"./CheckCircleTwoTone-B4xc24bl.js";import"./InfoTwoTone-D7N4NCht.js";import"./useMutation-CtBwPbJh.js";import"./dayjs.min-D2apGn21.js";import"./chunk-AYJ5UCUI-CYDaopvs.js";import"./cloneDeep-CgZcCEDV.js";import"./Skeleton-KYXzY8Ax.js";import"./AccountLevelBadge-C_SUn2Be.js";import"./Card-DLmvga-J.js";import"./ConfirmationDialog-DZR4swSq.js";import"./DialogBase-DyLg5jLP.js";import"./Close-BaBEQLLl.js";import"./HelpPopover-D-U3O9JE.js";import"./MarkdownPopover-CHPdSPln.js";import"./LightTooltip-BN95cbI1.js";import"./MarkdownSynapse-BRCbGM2j.js";import"./SkeletonButton-CAJdjKiY.js";import"./SkeletonInlineBlock-DgBJezEl.js";import"./SkeletonTable-CWvlKbeN.js";import"./SkeletonParagraph-HWnNDh4k.js";import"./HelpOutlineTwoTone-CiEPI5M9.js";import"./DialogTitle-BZNf5RaC.js";import"./DialogContent-DMFZyAm9.js";import"./Dialog-DYD288gX.js";import"./Modal-DMMPjYBd.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-xzuURvHD.js";import"./LoadingScreen-e_-CDvco.js";import"./LinearProgress-BhLZH7-y.js";import"./ToastMessage-BLL_E1Bg.js";import"./CSSTransition-Bm5lgvH2.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
