import{j as t}from"./jsx-runtime-Du8NFWEI.js";import{r as f}from"./index-Dl6G-zuu.js";import"./SynapseClient-Ihq4xrvb.js";import{h as te}from"./index-S3N2_v0E.js";import{a as T}from"./queryUtils-AiLKfwbw.js";import{p as B,g as se}from"./SqlFunctions-XONJfa6m.js";import"./getEndpoint-CjoHA800.js";import{a as H}from"./SynapseConstants-BVYQRCsB.js";import{a as Q}from"./useGetQueryResultBundle-CLS5N-6K.js";import{c as re,P as oe}from"./factory-CIC3r464.js";import{d as C}from"./dayjs.min-d18Up55D.js";import{O as ne}from"./LightTooltip-COLbiJZG.js";import{M as ie}from"./Dialog--0zFVEET.js";import{g as U}from"./ColorGradient-BJYx2bEb.js";import{B as g}from"./Box-DCOGDgwA.js";import{T as E}from"./Typography-B88_J_TK.js";import"./LeftRightPanel-DwKmO81x.js";import{S as ae}from"./StyledFormControl-BNgdB6B_.js";import"./WideButton-D5-h12qa.js";import"./InputSizedButton-BdA8J1bf.js";import{I as le}from"./InputLabel-D0wmCbAz.js";import{S as ue}from"./Select-CDrLCvLS.js";import{M as de}from"./MenuItem-BC9pRpBm.js";import{S}from"./Skeleton-C2B0Utez.js";const ce="species",me="observationphase",L={concreteType:"org.sagebionetworks.repo.model.table.QueryResultBundle",queryResult:{concreteType:"org.sagebionetworks.repo.model.table.QueryResult",queryResults:{concreteType:"org.sagebionetworks.repo.model.table.RowSet",tableId:"syn52408661",etag:"a3270cb2-4373-4e12-9981-e12326e54ad1",headers:[{name:"species",columnType:"STRING",id:"152514"},{name:"observationPhase",columnType:"STRING",id:"197976"},{name:"observationPhaseOrder",columnType:"INTEGER",id:"198102"},{name:"observationTimeMax",columnType:"INTEGER",id:"198103"},{name:"observationTimeUnits",columnType:"STRING",id:"198101"}],rows:[{rowId:9,versionNumber:4,values:["Danio rerio","embryo","1","7","days"]},{rowId:10,versionNumber:4,values:["Danio rerio","larval","2","3","months"]},{rowId:11,versionNumber:4,values:["Danio rerio","juvenile","3","6","months"]},{rowId:12,versionNumber:4,values:["Danio rerio","adult","4","12","months"]},{rowId:16,versionNumber:4,values:["Drosophila","embryo","1","24","hours"]},{rowId:17,versionNumber:4,values:["Drosophila","larval","2","5","days"]},{rowId:18,versionNumber:4,values:["Drosophila","pupal","3","12","days"]},{rowId:19,versionNumber:4,values:["Drosophila","adult","4","5","weeks"]},{rowId:1,versionNumber:4,values:["Mus musculus","prenatal","1","21","days"]},{rowId:2,versionNumber:4,values:["Mus musculus","postnatal","2","6","months"]},{rowId:20,versionNumber:4,values:["Rattus norvegicus","prenatal","1","23","days"]},{rowId:21,versionNumber:4,values:["Rattus norvegicus","neonatal","2","4","weeks"]},{rowId:22,versionNumber:4,values:["Rattus norvegicus","weanling","3","2","months"]},{rowId:23,versionNumber:4,values:["Rattus norvegicus","juvenile","4","3","months"]},{rowId:24,versionNumber:4,values:["Rattus norvegicus","adolescent","5","6","months"]},{rowId:25,versionNumber:4,values:["Rattus norvegicus","adult","6","12","months"]},{rowId:13,versionNumber:4,values:["Saccharomyces","log phase","1","7","days"]},{rowId:14,versionNumber:4,values:["Saccharomyces","stationary phase","2","2","weeks"]},{rowId:15,versionNumber:4,values:["Saccharomyces","death phase","3","3","weeks"]},{rowId:3,versionNumber:4,values:["Sus scrofa","prenatal","1","115","days"]},{rowId:4,versionNumber:4,values:["Sus scrofa","neonatal","2","3","months"]},{rowId:5,versionNumber:4,values:["Sus scrofa","weanling","3","6","months"]},{rowId:6,versionNumber:4,values:["Sus scrofa","juvenile","4","12","months"]},{rowId:7,versionNumber:4,values:["Sus scrofa","adolescent","5","2","years"]},{rowId:8,versionNumber:4,values:["Sus scrofa","adult","6","3","years"]}]}}};var k;const pe=(k=L.queryResult)==null?void 0:k.queryResults.headers.findIndex(e=>e.name.toLowerCase()===ce);var F;const R=(F=L.queryResult)==null?void 0:F.queryResults.headers.findIndex(e=>e.name.toLowerCase()===me),ve=re(oe),he=(e,s,a,u)=>{let n=-1;return{timepoints:s.map((o,r)=>{const i=parseFloat(o.values[a.observationTime]),d=o.values[a.observationTimeUnits];return o.rowId==u&&(n=r),e.add(i,d)}),hoverOverIndex:n}},M=e=>e.length==0?C().add(1,"days"):e.reduce((s,a)=>!s||a.isAfter(s)?a:s),ye=(e,s)=>{if(e.timepoints==null||e.timepoints.length==0)return[{x:[C().format()],y:[.5],mode:"lines",line:{color:"blue",width:2},customdata:[],hoverinfo:"none"}];const a=e.timepoints.reduce((n,l,o)=>{const r=n;return r[l.format()]||(r[l.format()]=[]),r[l.format()].push(s[o]),n},{});return e.timepoints.map((n,l)=>{const o=n.format(),r=l==e.hoverOverIndex,d=a[o].map(m=>m.rowId);return{x:[o,o,o],y:[0,.5,1],mode:"lines",line:{color:r?"black":"gray",width:r?2:1},customdata:[d,d,d],hoverinfo:"none"}})},fe=(e,s,a,u,n,l)=>{const o=u.map(i=>i.x[0]),r=u.map(i=>{const d=i.customdata[0];if(d&&d.length>0){const m=d.length,y=n==null?void 0:n.filter(p=>d[0]==p.rowId);if(y&&y.length>0){const p=y[0],v=parseFloat(p.values[l.observationTime]),b=p.values[l.observationTimeUnits],c=m>1?`(${m})`:"";return`${v} ${b} ${c}`}}return""});return{hovermode:"closest",dragmode:!1,showlegend:!1,xaxis:{showgrid:!1,showticklabels:!0,showline:!1,zeroline:!1,tickvals:o,ticktext:r,tickangle:-45},yaxis:{range:[0,1.25],showgrid:!1,zeroline:!1,showline:!1,showticklabels:!1},shapes:[{type:"rect",x0:e.subtract(s.diff(e)/10).format(),x1:s.add(s.diff(e)/3).format(),y0:.25,y1:.75,fillcolor:a,opacity:.8,line:{width:0}}],margin:{l:0,r:0,t:60,b:60}}},j=({color:e,rowData:s,schema:a,widthPx:u})=>{const[n,l]=f.useState(),[o,r]=f.useState(),[i,d]=f.useState(1),m=C(),y=f.useRef(null),p=n==null?void 0:n.points[0].customdata,v=s==null?void 0:s.filter(x=>p==null?void 0:p.includes(x.rowId)),b=o==null?void 0:o.points[0].customdata,c=f.useMemo(()=>he(m,s,a,(b==null?void 0:b.length)>0?b[0]:void 0),[b,s,a,m]),w=M(c.timepoints),h=f.useMemo(()=>ye(c,s),[c,s]);return t.jsxs("div",{ref:y,style:{width:u},children:[t.jsx(ve,{style:{width:u,height:"220px"},data:h,layout:fe(m,w,e,h,s,a),config:{displayModeBar:!1},useResizeHandler:!0,onClick:x=>{l(x),r(void 0)},onDoubleClick:()=>{d(i+1)},onHover:x=>{r(x)},onUnhover:()=>{r(void 0)}},`Plot-${e}-${i}`),v&&t.jsx(ie,{onClose:()=>l(void 0),open:!!v&&v.length>0,children:v.map(x=>t.jsx(ne,{data:x.values,schema:a,includePortalCardClass:!1},x.rowId))})]})};try{M.displayName="getMaxDate",M.__docgenInfo={description:"",displayName:"getMaxDate",props:{}}}catch{}try{j.displayName="TimelinePhase",j.__docgenInfo={description:"",displayName:"TimelinePhase",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},color:{defaultValue:null,description:"",name:"color",required:!0,type:{name:"string"}},rowData:{defaultValue:null,description:"",name:"rowData",required:!0,type:{name:"Row[]"}},schema:{defaultValue:null,description:"",name:"schema",required:!0,type:{name:"ObservationCardSchema"}},widthPx:{defaultValue:null,description:"",name:"widthPx",required:!0,type:{name:"number"}}}}}catch{}const O=({color:e,phaseName:s})=>t.jsxs(g,{sx:{display:"flex",alignItems:"center",gap:"7px"},children:[t.jsx(g,{sx:{backgroundColor:e,width:"20px",height:"20px"}}),t.jsx(E,{variant:"body1",children:s==null?void 0:s.toUpperCase()})]});try{O.displayName="TimelineLegendItem",O.__docgenInfo={description:"",displayName:"TimelineLegendItem",props:{color:{defaultValue:null,description:"",name:"color",required:!0,type:{name:"string"}},phaseName:{defaultValue:null,description:"",name:"phaseName",required:!0,type:{name:"string | null"}}}}}catch{}const q=({sql:e,additionalFilters:s,species:a,setSpecies:u})=>{var m,y;const n=B(e),l=Q({entityId:n,query:{sql:`SELECT distinct unnest(species) FROM ${n} WHERE species IS NOT NULL AND observationTime IS NOT NULL GROUP BY species`,additionalFilters:s},partMask:H,concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest"}),{data:o,isLoading:r}=l,i=(y=(m=o==null?void 0:o.queryResult)==null?void 0:m.queryResults)==null?void 0:y.rows,d=i&&i.length>0?i[0].values[0]:void 0;return a==null&&d!=null&&u(d),r||!i||i.length<2?t.jsx(t.Fragment,{}):t.jsx(g,{children:t.jsxs(ae,{children:[t.jsx(le,{children:"Species"}),t.jsx(ue,{sx:{marginLeft:"2px",marginBottom:"2px"},value:a,label:"Species",onChange:p=>{u(p.target.value)},children:i==null?void 0:i.map(p=>{const v=p.values[0];return t.jsx(de,{value:v,children:v},v)})})]})})};try{q.displayName="TimelinePlotSpeciesSelector",q.__docgenInfo={description:"",displayName:"TimelinePlotSpeciesSelector",props:{sql:{defaultValue:null,description:"",name:"sql",required:!0,type:{name:"string"}},additionalFilters:{defaultValue:null,description:"",name:"additionalFilters",required:!1,type:{name:"QueryFilter[]"}},species:{defaultValue:null,description:"",name:"species",required:!1,type:{name:"string | null"}},setSpecies:{defaultValue:null,description:"",name:"setSpecies",required:!0,type:{name:"Dispatch<SetStateAction<string | null | undefined>>"}}}}}catch{}const ge=e=>{const[s,a]=f.useState({width:1,height:2});return f.useEffect(()=>{const u=()=>{if(e.current){const n=e.current.getBoundingClientRect(),{width:l,height:o}=n,r=Math.round(l),i=Math.round(o);(s.width!=r||s.height!=i)&&a({width:r,height:i})}};return u(),window.addEventListener("resize",u),()=>{window.removeEventListener("resize",u)}},[s.height,s.width,e]),s},xe="observationphase",be="observationtime",Ie="observationtimeunits",Te="observationsubmittername",Ne="observationtext",_e="observationtype",we="synapseid",Se="doi",V=({sql:e,searchParams:s,sqlOperator:a,defaultSpecies:u,title:n,subTitle:l})=>{const o=B(e),[r,i]=f.useState(u),d=f.createRef(),m=ge(d),y=se(void 0,s,a)??[],p=r?{columnName:"species",concreteType:"org.sagebionetworks.repo.model.table.ColumnMultiValueFunctionQueryFilter",values:[r],function:te.HAS}:void 0,v=[...y];p&&v.push(p);const b=Q({entityId:o,query:{sql:`${e} WHERE observationTime IS NOT NULL`,sort:[{column:"observationTime",direction:"ASC"}],additionalFilters:v},partMask:H,concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest"},{enabled:!!r}),{data:c,isLoading:w}=b,h=f.useMemo(()=>{var I;if(r)return(I=L.queryResult)==null?void 0:I.queryResults.rows.filter(N=>N.values[pe]==r)},[r]);if(w)return t.jsx(Re,{});const x=T(xe,c),$=T(be,c),D=T(Ie,c),G=T(Te,c),z=T(Ne,c),K=T(Se,c),W=T(_e,c),Y=T(we,c),X={observationSubmitterName:G,synapseId:Y,observationType:W,observationText:z,observationTime:$,observationTimeUnits:D,doi:K},J=m.width&&h?m.width/h.length:0,Z=h==null?void 0:h.map(()=>"auto").join(" ");return t.jsxs(t.Fragment,{children:[r&&t.jsxs(t.Fragment,{children:[n&&t.jsx(E,{variant:"h2",children:n}),l&&t.jsx(E,{variant:"body1Italic",sx:{margin:"10px 0px"},children:l})]}),t.jsxs(g,{children:[t.jsxs(g,{sx:{display:"flex",justifyContent:"space-between"},children:[t.jsx(g,{children:!u&&t.jsx(q,{setSpecies:i,species:r,sql:e,additionalFilters:y})}),h&&t.jsx(g,{sx:{display:"flex",justifyContent:"flex-end",gap:"25px"},children:h.map((I,_)=>{const{colorPalette:N}=U(_,1);return t.jsx(O,{color:N[0],phaseName:I.values[R]},I.rowId)})})]}),r&&h&&t.jsx("div",{ref:d,children:t.jsx(g,{sx:{display:"inline-grid",gridTemplateColumns:Z,minWidth:m.width,maxWidth:m.width},className:"forcePlotlyDefaultCursor",children:h.map((I,_)=>{var A;const{colorPalette:N}=U(_,1),P=(A=c==null?void 0:c.queryResult)==null?void 0:A.queryResults.rows.filter(ee=>ee.values[x]==I.values[R]);return P?t.jsx(j,{name:I.values[R],color:N[0],rowData:P,schema:X,widthPx:J},I.rowId):t.jsx(t.Fragment,{})})})})]})]})},Re=()=>t.jsxs(g,{children:[t.jsxs(g,{sx:{display:"flex",justifyContent:"flex-end",gap:"10px"},children:[t.jsx(S,{height:"45px",width:"80px"}),t.jsx(S,{height:"45px",width:"80px"})]}),t.jsx(g,{sx:{display:"flex"},children:t.jsx(S,{height:"150px",width:"100%"})})]});try{V.displayName="TimelinePlot",V.__docgenInfo={description:"",displayName:"TimelinePlot",props:{sql:{defaultValue:null,description:"",name:"sql",required:!0,type:{name:"string"}},searchParams:{defaultValue:null,description:"",name:"searchParams",required:!1,type:{name:"Record<string, string>"}},sqlOperator:{defaultValue:null,description:"",name:"sqlOperator",required:!1,type:{name:"enum",value:[{value:'"LIKE"'},{value:'"EQUAL"'},{value:'"IN"'},{value:'"HAS"'},{value:'"HAS_LIKE"'}]}},title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"string"}},subTitle:{defaultValue:null,description:"",name:"subTitle",required:!1,type:{name:"string"}},defaultSpecies:{defaultValue:null,description:"",name:"defaultSpecies",required:!1,type:{name:"string"}}}}}catch{}export{V as T};
