import{j as l}from"./jsx-runtime-CRy6x3sP.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-DgSKKZGp.js";import{aF as S,M as a}from"./useFiles-Cxf8eV4n.js";import"./OrientationBanner-CJcNE3jz.js";import"./index-CE2Ac4IV.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-Dsi3Wje2.js";import{S as E}from"./SynapseFormSubmissionGrid-Dk8vZ3W0.js";import"./mockSchema-BdJrDYt0.js";import"./mockFileEntity-LEcnwyIv.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-CIC3T_B5.js";import"./mockTeam-D9DE-S2T.js";import"./SynapseConstants-Dr3_l-La.js";import"./uniqueId-CIVu4QNe.js";import"./toString-D9TzDClD.js";import"./isObjectLike-BPkWATOE.js";import"./iframe-BdAv9r7b.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-ByhCwmes.js";import"./times-DT3UiAAp.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DMbp0I6o.js";import"./asyncJobHandlers-CZv-lURJ.js";import"./BasicMockedCrudService-BvPADy4A.js";import"./cloneDeep-C8UhJl5n.js";import"./_Uint8Array-B9mZlz1W.js";import"./_initCloneObject-BYZKyK7O.js";import"./_getTag-DPXvVhQY.js";import"./isEqual-_ddOeoH0.js";import"./_baseIsEqual-CRCrmKl4.js";import"./mockAnnotationColumns-BsYr5VSK.js";import"./tableQueryHandlers-DNPsxhhb.js";import"./omit-DrrkA393.js";import"./_baseGet-BSYB20oY.js";import"./isNil-shTrIGGc.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-Be5BfqC_.js";import"./_baseFlatten-BZh2afS1.js";import"./pick-QiDUsKvC.js";import"./_baseSet-CwPJRBnz.js";import"./hasIn-DQJL5wIx.js";import"./accessRequirementAclHandlers-CHKwCBRB.js";import"./mockAccessRequirementAcls-DO7O2MNR.js";import"./mockAccessRequirements-BiJpCjfU.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-BZHrrJ5Y.js";import"./wikiHandlers-CzOoUBXS.js";import"./mockWikiPageKey-mTIVMFEY.js";import"./teamHandlers-CQ8Goq8E.js";import"./dataAccessRequestHandlers-wlnozi15.js";import"./MockResearchProject-DtiAzaJk.js";import"./mock_discussion-BFxGVF7L.js";import"./fakerUtils-DT2kNVGX.js";import"./index-CwbgsrqX.js";import"./mockTableEntity-Dgs0cWkk.js";import"./mockFileEntityACLVariants-C5zUPPwT.js";import"./entityHandlers-Bj1-26Hw.js";import"./mockEntity-DGaEJuo9.js";import"./mockEvaluationQueue-6UyzL9mk.js";import"./featureFlagHandlers-qsZZmmhN.js";import"./fileHandlers-CdWmSUQd.js";import"./personalAccessTokenHandlers-C90lYhU1.js";import"./researchProjectHandlers-CMXjCfjh.js";import"./resetTwoFactorAuthHandlers-2dyNfXd8.js";import"./userProfileHandlers-rS2aivhu.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-CxN-DzGm.js";import"./FullWidthAlert-DcvBOpAA.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-B2s1bC-M.js";import"./createTheme-Chr0Mdmk.js";import"./resolveComponentProps-CP6vIIt2.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-C6Z4Jw8F.js";import"./createSvgIcon-CiHFREdi.js";import"./DefaultPropsProvider-_g6l0FJe.js";import"./Close-BIDKcCyq.js";import"./IconButton-Df9li5yN.js";import"./ButtonBase-D1lRUUMa.js";import"./useTimeout-CBH_whYp.js";import"./useIsFocusVisible-dvxC9prE.js";import"./useEventCallback-B2yVaD7P.js";import"./Paper-BO3sHqW8.js";import"./Stack-N50kn1Mv.js";import"./getThemeProps-BS_qL9ir.js";import"./useTheme-XiVtr3LS.js";import"./Box-etwwWi4O.js";import"./AlertTitle-DpdAxaYw.js";import"./Typography-cABtXJa_.js";import"./useTheme-DiZnRNE7.js";import"./Grow-DjIVuFVR.js";import"./index-e1WoLxJ7.js";import"./utils-BbQ6ehAh.js";import"./ClickAwayListener-Cku9OPRg.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-CSpbyYgv.js";import"./index-D1UKly7L.js";import"./useControlled-DkdtTMBP.js";import"./useId-BRVnYYpi.js";import"./Popper-BLUMdNSt.js";import"./Button-DG4g__Z5.js";import"./useQuery-CHFprEsD.js";import"./utils-DzX4tJbb.js";import"./Link-CbuyVXAA.js";import"./Collapse-DQAQjUwZ.js";import"./tinycolor-Begke6kS.js";import"./Fade-BePaFpCm.js";import"./Skeleton-D2sKrEc4.js";import"./inputBaseClasses-CzYtpewL.js";import"./calculateFriendlyFileSize-6zAl83cW.js";import"./CheckCircleTwoTone-t841N9sD.js";import"./InfoTwoTone-ClHbIujv.js";import"./useMutation-Cdlk9RaF.js";import"./dayjs.min-KU4kcmn5.js";import"./chunk-AYJ5UCUI-Bsd4FnUA.js";import"./index-33x153AN.js";import"./react-BGcvK65e.js";import"./util-Fzy3GwE1.js";import"./WideButton-HkdDYBAn.js";import"./DeleteTwoTone-DmWKkaCa.js";import"./createSvgIcon-BfeT4iqF.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-C6zfv98b.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-D9FKhDuR.js";import"./DialogBase-Ce--ZzUH.js";import"./Close-BUQeewLn.js";import"./HelpPopover-BIpsNaQq.js";import"./MarkdownPopover-DpsG7j4h.js";import"./LightTooltip-BKz0-sPK.js";import"./MarkdownSynapse-BLXi6IUg.js";import"./SkeletonButton-2nxgRoEB.js";import"./SkeletonInlineBlock-CVbi4qCR.js";import"./SkeletonTable-BFVKwZ3B.js";import"./SkeletonParagraph-DfuEJlc5.js";import"./HelpOutlineTwoTone-Ck9BzNoC.js";import"./DialogTitle-BkRTI5yY.js";import"./DialogContent-BsjKI9qb.js";import"./Dialog-lwPnHZFX.js";import"./Modal-yXTVJYSY.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-BiH4YTul.js";import"./WarningDialog-jZDhNAmE.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
