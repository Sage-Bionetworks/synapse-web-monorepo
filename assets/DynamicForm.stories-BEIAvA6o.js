import{D as i}from"./DynamicForm-CrqF96ru.js";import{f as p}from"./index-CVAUwOAi.js";import"./jsx-runtime-DoxjgJx5.js";import"./index-Cu9bd8lq.js";import"./useQuery-BEUP4ZKU.js";import"./utils-BECe8vEQ.js";import"./useMutation-BUHlmdy0.js";import"./MuiForm-B9c1Xjx_.js";import"./isPlainObject-BDeK4qKc.js";import"./_getPrototype-DSx75BAr.js";import"./index.modern-BSaf6tm9.js";import"./index-D7T9YJ1n.js";import"./styled-BBrRP0Md.js";import"./createTheme-KpOM0lcD.js";import"./index-GEGPABih.js";import"./toNumber-DDV9Xfgs.js";import"./createSvgIcon-BQYafHE5.js";import"./createSvgIcon-DTfImBwS.js";import"./useForkRef-Bm_QQ74L.js";import"./createChainedFunction-BO_9K8Jh.js";import"./ownerWindow-BN2rbQ_G.js";import"./ownerDocument-DW-IO8s5.js";import"./isMuiElement-yx-QWTmT.js";import"./useId-g68bhPgm.js";import"./useControlled-JEQ1v-P8.js";import"./TransitionGroupContext-C4KIfRep.js";import"./useIsFocusVisible-Lp1_y5xp.js";import"./IconButton-Dr0cGlMc.js";import"./ButtonBase-D5yFTmEe.js";import"./Grid-BiU_vZg-.js";import"./utils-tKVbghIn.js";import"./index-zcEXKDIA.js";import"./Box-BaZAwz5V.js";import"./Paper-1rWVnzjH.js";import"./TextField-MZUQmcSK.js";import"./FormControl-50a7htm-.js";import"./useFormControl-vG3XTiAH.js";import"./inputBaseClasses-DMmjJS2A.js";import"./isHostComponent-DVu5iVWx.js";import"./InputLabel-BjkrglSW.js";import"./Select-BqEsC8PY.js";import"./Menu-BU3C8pZu.js";import"./index-hbniaWjI.js";import"./Popover-CT2XV_hT.js";import"./Modal-DNSTGzgH.js";import"./Backdrop-BqLX_ZJd.js";import"./Fade-AJK8kXQa.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./mergeSlotProps-HzkJhcwJ.js";import"./Grow-B7DzSRwx.js";import"./MenuList-CXnUymlR.js";import"./List-C-z4TKEf.js";import"./Input-DW-xlQoU.js";import"./FormHelperText-pf8vAP2Q.js";import"./Typography-Cf0oTcRj.js";import"./ListItem-CLOmNf87.js";import"./listItemButtonClasses-CuzvoPMS.js";import"./ListItemIcon-TtI1gyGG.js";import"./MenuItem-gHrt4hXT.js";import"./dividerClasses-B6U17G2q.js";import"./ListItemText-g7PCXd7l.js";import"./ContentCopy-B4-twFSJ.js";import"./Button-D1yxts2k.js";import"./Divider-Dd5RbBtU.js";import"./FormControlLabel-DV0Zwuvj.js";import"./Stack-D7-BSZET.js";import"./Checkbox-ClPRnb5T.js";import"./FormGroup-DAGBLe4C.js";import"./RadioGroup-B4-NWUD2.js";import"./Radio-BMCDSNLt.js";import"./Slider-C8kvnyAT.js";import"./ToastMessage-CWs_grJW.js";import"./FullWidthAlert-DEIFRXi9.js";import"./Alert-CFMVYrhF.js";import"./AlertTitle-D3sbju9B.js";import"./ClickAwayListener-Ba-YFlDA.js";import"./Tooltip-UqEOsFTY.js";import"./CSSTransition-DzRRqh3G.js";import"./hasClass-D5ZjVvBY.js";import"./uniqueId-CSw6ftlJ.js";import"./toString-CYyvKWOl.js";import"./isArray-ggc3KxVp.js";import"./isSymbol-BzKS7Qf1.js";import"./SkeletonButton-CQGyUFm_.js";import"./Skeleton-BfmxkurM.js";import"./SkeletonInlineBlock-Wf_2EmvG.js";import"./SkeletonTable-B2Xyr5Cv.js";import"./times-Bw9geEsI.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-czOlq-ma.js";import"./SkeletonParagraph-Bu08v3Hj.js";import"./index-D0JCpg9J.js";const Mo={title:"UI/DynamicForm",component:i},o={args:{schemaUrl:"https://raw.githubusercontent.com/nf-osi/nf-research-tools-schema/main/NF-Tools-Schemas/SubmitObservationSchema.json",uiSchemaUrl:"https://raw.githubusercontent.com/nf-osi/nf-research-tools-schema/main/NF-Tools-Schemas/SubmitObservationUiSchema.json",postUrl:"https://submit-form.com/KwZ46H4T",onCancel:p()}};var t,r,m;o.parameters={...o.parameters,docs:{...(t=o.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    schemaUrl: 'https://raw.githubusercontent.com/nf-osi/nf-research-tools-schema/main/NF-Tools-Schemas/SubmitObservationSchema.json',
    uiSchemaUrl: 'https://raw.githubusercontent.com/nf-osi/nf-research-tools-schema/main/NF-Tools-Schemas/SubmitObservationUiSchema.json',
    postUrl: 'https://submit-form.com/KwZ46H4T',
    // Set mutateFormDataBeforePost if service expects the form data wrapped in some other data.  For example:
    // mutateFormDataBeforePost: formData => {
    //   return {
    //     event_type: 'submission',
    //     client_payload: {
    //       formData: formData,
    //     },
    //   }
    // },
    onCancel: fn()
  }
}`,...(m=(r=o.parameters)==null?void 0:r.docs)==null?void 0:m.source}}};const Qo=["NFDataSubmissionForm"];export{o as NFDataSubmissionForm,Qo as __namedExportsOrder,Mo as default};
