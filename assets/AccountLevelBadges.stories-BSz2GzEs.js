import{g as f}from"./userProfileHandlers-B-dFbbdV.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-DTIYA5rx.js";import{A}from"./AccountLevelBadges-DHuR9Qkn.js";import"./VerificationSubmission-16RBrwfH.js";import"./index-Bc7_yWEg.js";import"./iframe-CFx4SmlQ.js";import"./mockEntity-nT2QYoSB.js";import"./mockFileEntity-CyVbhpWu.js";import"./StringUtils-B_EIkN_W.js";import"./mock_file_handle-t2fDWYxy.js";import"./mockProject-D_T6felT.js";import"./mockTeam-BTdmGNRp.js";import"./SynapseConstants-Badmnctn.js";import"./OrientationBanner-W-oxA1oW.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-SKRyRm18.js";import"./index-DG11J9On.js";import"./spreadSx-CwcO6WA9.js";import"./react-DjUZwrS0.js";import"./FullWidthAlert-dAH4WwYR.js";import"./Alert-Bwo9jVk2.js";import"./createTheme-C3ZlBHOR.js";import"./DefaultPropsProvider-BngAxNfg.js";import"./useSlot-DTL4s5Fo.js";import"./useForkRef-DqKQMU6v.js";import"./createSimplePaletteValueFilter-DLcVTaCv.js";import"./createSvgIcon-CaT9xKql.js";import"./Close-XhtxoZ4V.js";import"./IconButton-BGgUVhRP.js";import"./useTimeout-BVRtd2bj.js";import"./ButtonBase-Byp5VrHb.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BwCph7sa.js";import"./Paper-CQ-ti9pd.js";import"./useTheme-CGOBdzwx.js";import"./useTheme-Dlh4q2q2.js";import"./Stack-DVpO78Of.js";import"./extendSxProp-De9UySGh.js";import"./getThemeProps-BqQ-LewE.js";import"./Box-DSEnYR08.js";import"./AlertTitle-TTBh0xNw.js";import"./Typography-Bg3Brpmd.js";import"./index-q0p95m-D.js";import"./ClickAwayListener-B4yhA0Px.js";import"./getReactElementRef-DrXrtI8G.js";import"./index-CJuEcaaD.js";import"./index-DBl0twju.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DP_AFsYT.js";import"./Tooltip-CdI8BHtE.js";import"./index-CKkvvCY2.js";import"./useControlled-ByefJ87W.js";import"./Popper-BFgdKwjW.js";import"./Button-C53OkhyL.js";import"./uniqueId-dzhwEmsN.js";import"./toString-D-4cTbJV.js";import"./isArray-ol0mTvVW.js";import"./isSymbol-CcsJyso8.js";import"./times-CbxHQHRI.js";import"./_Uint8Array-DQTcvvta.js";import"./identity-DKeuBCMA.js";import"./toInteger-Cz62hbO-.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-BXO0nReV.js";import"./QueryClientProvider-BCm9WdUt.js";import"./Link-vyBZc_X6.js";import"./Collapse-0lsId-M4.js";import"./_baseUniq-nvsczMT_.js";import"./_getTag-Cty8vqd7.js";import"./isEqual-DXatWGPi.js";import"./merge-CeYIG25n.js";import"./_initCloneObject-BBpqQKrX.js";import"./tinycolor-Begke6kS.js";import"./Fade-7kRVzn_c.js";import"./inputBaseClasses-sMEcRXLK.js";import"./calculateFriendlyFileSize-CYRBhA6n.js";import"./CheckCircleTwoTone-C1_4w8s1.js";import"./InfoTwoTone-B9OihmVW.js";import"./useMutation-CmMiPDVM.js";import"./dayjs.min-CLD5-AUH.js";import"./chunk-AYJ5UCUI-56tzNCw-.js";import"./cloneDeep-SdJSSkEq.js";import"./Skeleton-BejAbq-W.js";import"./AccountLevelBadge-9gnXpZam.js";import"./Card-DgpaG2PT.js";import"./ConfirmationDialog-N3uuGSEu.js";import"./DialogBase-C0-SIiiM.js";import"./Close-D8yId755.js";import"./HelpPopover-DkazgtBj.js";import"./MarkdownPopover-UpjplZW5.js";import"./LightTooltip-CS6jz4qc.js";import"./MarkdownSynapse-BFZJ3Ygk.js";import"./SkeletonButton-4qIF_GQV.js";import"./SkeletonInlineBlock-CTbLMq_D.js";import"./SkeletonTable-BbZNHtsQ.js";import"./SkeletonParagraph-BXfHQnCb.js";import"./HelpOutlineTwoTone-jB-p_P8d.js";import"./DialogTitle-C-3YVaFF.js";import"./DialogContent-DENGOMq4.js";import"./Dialog-CkF8LVPN.js";import"./Modal--IHg28i0.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-CYHptUNh.js";import"./LoadingScreen-Cs7JXrRE.js";import"./LinearProgress-C-0lOfL8.js";import"./ToastMessage-BTx7IM6I.js";import"./CSSTransition-p-5iL93H.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
