import{j as s}from"./jsx-runtime-D_zvdyIk.js";import{l as I,S as N,g as R,B as q}from"./useFiles-K8DYYfbL.js";import{R as h,a as w}from"./VerificationSubmission-BDh1zA9f.js";import{l as j,u as H}from"./StringUtils-NPb0VexC.js";import{S as F}from"./SynapseConstants-BNqJ1dmQ.js";import{r as m}from"./index-BWypuEAC.js";import"./OrientationBanner-DO3atoak.js";import{u as g,c as C,A as L}from"./AccessRequirementList-gEE6o4PB.js";import{u as S}from"./useEntityBundle-BQvWcaI2.js";import{I as V}from"./IconSvg-DAwDaGoV.js";import{u as O}from"./useTheme-C5bnTO0C.js";import{B}from"./Button-Dcf2Uy6O.js";import{B as D}from"./Box-BNUP0C4N.js";var l=(e=>(e.Accessible="Accessible",e.AccessibleWithTerms="AccessibleWithTerms",e.AccessBlockedByRestriction="AccessBlockedByRestriction",e.AccessBlockedByACL="AccessBlockedByACL",e.AccessBlockedToAnonymous="AccessBlockedToAnonymous",e.AccessibleExternalFileHandle="AccessibleExternalFileHandle",e))(l||{});const U={AccessBlockedToAnonymous:{icon:"accessClosed",color:e=>e.palette.warning.main,tooltipText:"You must sign in to access this item."},AccessBlockedByRestriction:{icon:"accessClosed",color:e=>e.palette.warning.main,tooltipText:"You must request access to this restricted item."},AccessBlockedByACL:{icon:"accessClosed",color:e=>e.palette.warning.main,tooltipText:"You do not have download access for this item."},AccessibleWithTerms:{icon:"accessOpen",color:e=>e.palette.success.main,tooltipText:"View Terms"},Accessible:{icon:"accessOpen",color:e=>e.palette.success.main,tooltipText:""},AccessibleExternalFileHandle:{icon:"linkOff",color:e=>e.palette.grey[700],tooltipText:"Access may be controlled by an external system."}};function p(e){const{restrictionUiType:o}=e,n=O();if(o){const c=U[o];return s.jsx(V,{icon:c.icon,label:c.tooltipText,sx:{color:c.color(n),height:"16px",verticalAlign:"text-top"}})}return s.jsx(s.Fragment,{})}try{p.displayName="AccessIcon",p.__docgenInfo={description:"",displayName:"AccessIcon",props:{restrictionUiType:{defaultValue:null,description:"",name:"restrictionUiType",required:!0,type:{name:"enum",value:[{value:'"Accessible"'},{value:'"AccessibleWithTerms"'},{value:'"AccessBlockedByRestriction"'},{value:'"AccessBlockedByACL"'},{value:'"AccessBlockedToAnonymous"'},{value:'"AccessibleExternalFileHandle"'}]}}}}}catch{}const E={p:"0px",minWidth:"unset"};function y(e,o){const{accessToken:n}=I(),c=!!n,{data:i}=g({restrictableObjectType:h.ENTITY,objectId:e}),{data:t,isLoading:u}=G(e,{enabled:o.enabled});if(i&&!u)return t?l.AccessibleExternalFileHandle:i.hasUnmetAccessRequirement?l.AccessBlockedByRestriction:i.userEntityPermissions.canDownload?i.restrictionLevel!==w.OPEN?l.AccessibleWithTerms:l.Accessible:c?l.AccessBlockedByACL:l.AccessBlockedToAnonymous}function G(e,o){return S(e,void 0,void 0,{...o,select:n=>{if(!j(n.entity))return!1;const c=n.entity,i=n.fileHandles,t=i==null?void 0:i.find(u=>u.id===c.dataFileHandleId);return t&&H(t)}})}function k(e){const[o,n]=m.useState(!1),[c,i]=m.useState([]),{entityId:t,showButtonText:u=!0,showExternalAccessIcon:_=!1}=e,a=y(t,{enabled:_}),{accessToken:x}=I(),{data:r}=g({restrictableObjectType:h.ENTITY,objectId:t}),b=m.useCallback(()=>{N.getAllAccessRequirements(x,t).then(d=>{C(d)?window.open(`${R(q.PORTAL_ENDPOINT)}AccessRequirements:ID=${t}&TYPE=ENTITY`,"_blank"):(i(d),n(!0))})},[x,t]),T=m.useMemo(()=>a===l.AccessBlockedToAnonymous?s.jsx(B,{sx:E,className:F,onClick:d=>{if(d.isTrusted){const A=new MouseEvent("click",{bubbles:!0});d.currentTarget.dispatchEvent(A)}},children:s.jsx(p,{restrictionUiType:a})}):s.jsx(p,{restrictionUiType:a}),[a]),v=m.useMemo(()=>{if(!r||!a)return s.jsx(s.Fragment,{});const d=r==null?void 0:r.hasUnmetAccessRequirement,A=r==null?void 0:r.restrictionLevel;let f="";if(d)f="Request Access";else{if(w.OPEN===A)return T;f="View Terms"}return s.jsxs(s.Fragment,{children:[s.jsxs(B,{sx:E,className:e.className,onClick:b,children:[s.jsx(p,{restrictionUiType:a}),u&&s.jsx(D,{sx:{ml:"5px"},children:f})]}),o&&s.jsx(L,{subjectId:t,subjectType:h.ENTITY,accessRequirementFromProps:c,renderAsModal:!0,onHide:()=>{n(!1)}})]})},[t,r,c,o,b,e.className,a,u,T]);return a?s.jsx("span",{style:{whiteSpace:"nowrap"},children:v}):s.jsx(s.Fragment,{})}try{y.displayName="useGetRestrictionUiType",y.__docgenInfo={description:`Determines whether an Entity is accessible for download, or if it is blocked by the ACL or unmet Access Requirements.

To make download available, and determine if the file is downloadable via the web, see {@link DirectDownload.tsx }`,displayName:"useGetRestrictionUiType",props:{}}}catch{}try{k.displayName="HasAccessV2",k.__docgenInfo={description:`HasAccess shows if the user has access to the file or not. If the user doesn't have access due to a restriction,
then a link will be shown that opens a modal with steps to request access.`,displayName:"HasAccessV2",props:{onHide:{defaultValue:null,description:"",name:"onHide",required:!1,type:{name:"() => void"}},entityId:{defaultValue:null,description:"",name:"entityId",required:!0,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},showButtonText:{defaultValue:null,description:"",name:"showButtonText",required:!1,type:{name:"boolean"}},showExternalAccessIcon:{defaultValue:{value:"false"},description:`If true, the component will show enhanced UI for the case where
- the entity is a FileEntity, AND
- the caller has permission to fetch the dataFileHandle, AND
- the dataFileHandle is an instance of ExternalFileHandleInterface (i.e. the file is not controlled by Synapse)
Note that this requires an additional API call that cannot be batched, so it should be avoided in bulk  contexts if possible.`,name:"showExternalAccessIcon",required:!1,type:{name:"boolean"}}}}}catch{}export{k as H};
