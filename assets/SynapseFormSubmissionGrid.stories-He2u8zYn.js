import{j as l}from"./jsx-runtime-CoXzOFQn.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-BOQbGhlB.js";import{aH as S,M as a}from"./useFiles-DkRsMa6G.js";import"./OrientationBanner-BN7sc-yW.js";import"./index-Bv-s9W2u.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-lVPrPf8r.js";import{S as E}from"./SynapseFormSubmissionGrid-cAdImTp9.js";import"./mockSchema-BWbMUeG3.js";import"./mockFileEntity-e1ifJPqb.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-CvQO50up.js";import"./mockTeam-Bvbadeqp.js";import"./SynapseConstants-Bfg1qQ66.js";import"./uniqueId-CEGstLjV.js";import"./toString-C3HlysTi.js";import"./isObjectLike-D46PIp9S.js";import"./iframe-Cbn6Wioa.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-DLlUdl0I.js";import"./times-CBusaBCX.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-7HU0D_N7.js";import"./asyncJobHandlers-BxjJkQdZ.js";import"./BasicMockedCrudService-D5dTw7rn.js";import"./cloneDeep-Szv4Lrja.js";import"./_Uint8Array-CAE93Lp8.js";import"./_initCloneObject-DTpM-W_c.js";import"./_getTag-CYQCzpsu.js";import"./isEqual-mmtDgPnd.js";import"./_baseIsEqual-Cv659kD2.js";import"./mockAnnotationColumns-DnLgpyEC.js";import"./tableQueryHandlers-B6LCliKu.js";import"./omit-QwlDB5jp.js";import"./_baseGet-DINMO5ev.js";import"./isNil-IKS6J4hT.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-Dt1OjAEO.js";import"./_baseFlatten-CawTG152.js";import"./pick-CS49zYsb.js";import"./_baseSet-DjbsWkCT.js";import"./hasIn-B5k4xA4s.js";import"./accessRequirementAclHandlers-BnWErpHL.js";import"./mockAccessRequirementAcls-eZil_ZMj.js";import"./mockAccessRequirements-4XTu3FUO.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-DnQpl6Ax.js";import"./wikiHandlers-DrPMx8Kb.js";import"./mockWikiPageKey-aOtgNL3C.js";import"./teamHandlers-8bGFJ39l.js";import"./dataAccessRequestHandlers-CLfd7sHu.js";import"./MockResearchProject-CRNstrSk.js";import"./mock_discussion-DgvQ2qYw.js";import"./fakerUtils-BO2scaQZ.js";import"./index-BN_Di7rS.js";import"./mockTableEntity-ByHerU-4.js";import"./mockFileEntityACLVariants-dsIBSi8m.js";import"./entityHandlers-BmczUHiA.js";import"./mockEntity-DnN-TtY5.js";import"./mockEvaluationQueue-DIoz02fr.js";import"./featureFlagHandlers-Dp8Oz_sq.js";import"./fileHandlers-Dk01DXJ3.js";import"./personalAccessTokenHandlers-CebxRJof.js";import"./researchProjectHandlers-Bd4fURmM.js";import"./resetTwoFactorAuthHandlers-56mEfz3L.js";import"./userProfileHandlers-BcMoW4mu.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-CntLVBsw.js";import"./FullWidthAlert-Vqv0OtJl.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-3vS49jrx.js";import"./createTheme-B2jVum5G.js";import"./resolveComponentProps-Da3g-n6Q.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CYGkZ_5i.js";import"./createSvgIcon-zGAR842g.js";import"./DefaultPropsProvider-CV1WaMnn.js";import"./Close-BLBNR7A4.js";import"./IconButton-EuepfCvL.js";import"./ButtonBase-DsKebiHo.js";import"./useTimeout-CxKGPiOF.js";import"./useIsFocusVisible-CNLfUmJ0.js";import"./useEventCallback-BzaKhurB.js";import"./Paper-DTlkPfUp.js";import"./Stack-cKH5qMzO.js";import"./getThemeProps-BpylFmtp.js";import"./useTheme-BjBg_HQE.js";import"./Box-BCl-T6Nm.js";import"./AlertTitle-BN8ssDQ0.js";import"./Typography-mifgVkJr.js";import"./useTheme-BFXFTIwP.js";import"./Grow-DEaHBlcM.js";import"./index-CDrKje1t.js";import"./utils-Bov2-oov.js";import"./ClickAwayListener-CQQ6DDI4.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DfqKSysC.js";import"./index-ByVQsoFM.js";import"./useControlled-CDkZ20IG.js";import"./useId-BXknn2vZ.js";import"./Popper-BA5jVx5O.js";import"./Button-CQ-PKmTk.js";import"./useQuery-BRqwTfcM.js";import"./utils-Dml2HCW2.js";import"./Link-8rZT6qId.js";import"./Collapse-DUScFzSi.js";import"./tinycolor-Begke6kS.js";import"./Fade-DfUGStCB.js";import"./Skeleton-C6cw4nQZ.js";import"./inputBaseClasses-CRfo2RbF.js";import"./calculateFriendlyFileSize-BVB5UzoH.js";import"./CheckCircleTwoTone-DLeaCtrD.js";import"./InfoTwoTone-ZwE3NCw_.js";import"./mutation-B83MkDYj.js";import"./dayjs.min-B7F5G4Hx.js";import"./chunk-AYJ5UCUI-DxylnMeD.js";import"./index-BTAejVQp.js";import"./react-DOQBJuAS.js";import"./util-iKHneq1j.js";import"./WideButton-BIAD3BVJ.js";import"./DeleteTwoTone-pSqUb9CE.js";import"./createSvgIcon-DVQG_0Z8.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-Bok_3so3.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-C1fwHRkZ.js";import"./DialogBase-Cmd9OWJd.js";import"./Close-BKL1z3Nx.js";import"./HelpPopover-CvXxnpWa.js";import"./MarkdownPopover-BSouLdBd.js";import"./LightTooltip-D_qO6EC5.js";import"./MarkdownSynapse-GECupzRz.js";import"./SkeletonButton-DR0N7GYk.js";import"./SkeletonInlineBlock-BFqLSwwy.js";import"./SkeletonTable-Ck6SYnBv.js";import"./SkeletonParagraph-Du53LuXu.js";import"./HelpOutlineTwoTone-CBmI5w2E.js";import"./DialogTitle-BnUuI_jE.js";import"./DialogContent-DlZliOU3.js";import"./Dialog-DSGSrrBV.js";import"./Modal-DJEr2ePS.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-DoJW_1Xn.js";import"./WarningDialog-D5cdrVdT.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
