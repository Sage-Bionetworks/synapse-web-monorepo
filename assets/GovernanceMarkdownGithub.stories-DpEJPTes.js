import{u as o}from"./VerificationSubmission-CNoSrCdk.js";import{g as u,bb as d,bc as l,B as S,bd as f,M as O}from"./useFiles-BPERm-cu.js";import"./StringUtils-BmiE0y30.js";import{h as i,H as n}from"./index-BtJtByqt.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-BaPbWhJj.js";import"./SynapseConstants-D00XTuqK.js";import"./OrientationBanner-DwasDZmJ.js";import"./index-BCRFxw-n.js";import"./index-yCXaIsJ4.js";import"./iframe-Dgw0ddSq.js";import"./spreadSx-CwcO6WA9.js";import"./react-D3jiIDv1.js";import"./FullWidthAlert-BIBV4Cq8.js";import"./Alert-DTtaGRoB.js";import"./createTheme-Do2aQZve.js";import"./DefaultPropsProvider-DA7gNYCg.js";import"./useSlot-DEVxrYXR.js";import"./useForkRef-Bn9qWfWW.js";import"./createSimplePaletteValueFilter-BHnhbDkS.js";import"./createSvgIcon-DdAS40k4.js";import"./Close-BBLxdgjF.js";import"./IconButton-CblLNGjE.js";import"./useTimeout-Da7I_d7d.js";import"./ButtonBase-BGA1bzPt.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BVLjCIit.js";import"./Paper-DMmdFBKL.js";import"./useTheme-Cp6Z_OGT.js";import"./useTheme-C0QTeBxb.js";import"./Stack-7VNSqroz.js";import"./extendSxProp-B1V_wo3n.js";import"./getThemeProps-D7cW0aau.js";import"./Box-CRuUmbYm.js";import"./AlertTitle-BTKxYoJ7.js";import"./Typography-CmGZeFeL.js";import"./index-DwjXVB4n.js";import"./ClickAwayListener-DRFmCXUS.js";import"./getReactElementRef-CXJuXcK9.js";import"./index-DmP6khY1.js";import"./index-CQ8BoWaF.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-r6SG4a-A.js";import"./Tooltip-BrgXw1Ls.js";import"./index-jmgeEAfX.js";import"./useControlled-vLN5jkuc.js";import"./Popper-CZtBRXx-.js";import"./Button-Bdu-kUqw.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-C9SHkG8T.js";import"./QueryClientProvider-S4LJ2qFq.js";import"./Link-B9YecAyg.js";import"./Collapse-BSRMULAt.js";import"./_baseUniq-UUyCIDNM.js";import"./_Uint8Array-D7urBA5u.js";import"./isArray-DAFWMPVS.js";import"./_getTag-D8Au6Ygl.js";import"./isEqual-BrcUvxQT.js";import"./merge-C0TzSy4i.js";import"./_initCloneObject-vSuvn-Og.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-tsytefLF.js";import"./inputBaseClasses-CgrUI19Y.js";import"./calculateFriendlyFileSize-CjVI3fw6.js";import"./CheckCircleTwoTone-B-HOVuQz.js";import"./InfoTwoTone-2u3rIjXL.js";import"./useMutation-DLlWKSte.js";import"./dayjs.min-CALBWj5h.js";import"./chunk-AYJ5UCUI-BfnxM5bb.js";import"./cloneDeep-v_2cqpzj.js";import"./Skeleton-C6DJCA98.js";import"./SkeletonButton-CIKiRPZR.js";import"./SkeletonInlineBlock-BfBiczww.js";import"./SkeletonTable-DS_fp9Vl.js";import"./times-Bagj5sU6.js";import"./toInteger-y8QuViu8.js";import"./isSymbol-BT1VYbZu.js";import"./SkeletonParagraph-BehKgm63.js";import"./MarkdownSynapse-B3TY98Qr.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
