import{M as E,f as _}from"./useFiles-BWzpbira.js";import{l as h}from"./index-BYPWaN4I.js";import{j as r}from"./jsx-runtime-CxQJGWmB.js";import"./VerificationSubmission-CMrrYimb.js";import"./StringUtils-Bdqa-HwM.js";import"./OrientationBanner-B7lzUez5.js";import"./index-bYuXtfvu.js";import{n as x}from"./useAccessRequirements-ByyDpQmR.js";import{p as T}from"./pluralize-DYyn_2kU.js";import{E as O}from"./EntityLink-BBB0irF3.js";import{T as M}from"./Typography-Ci2kAYGi.js";import{L as S}from"./List-Bn-BhDrY.js";import{L as k}from"./ListItem-BJOAabO3.js";import{A as C}from"./Alert-Bi1MPf5U.js";import"./SynapseConstants-D3gSaWkR.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useTimeout-CKXPEWw5.js";import"./FullWidthAlert-DvY_ZKmv.js";import"./spreadSx-CwcO6WA9.js";import"./Stack-DbdBQoMT.js";import"./DefaultPropsProvider-CR6JJVGo.js";import"./createTheme-BhfFif7c.js";import"./extendSxProp-BaSZxf1G.js";import"./getThemeProps-BKg1XlR8.js";import"./useTheme-eWijQT4_.js";import"./Box-BRuH1Ora.js";import"./AlertTitle-wIkcLOLb.js";import"./useForkRef-Dz67y12k.js";import"./useSlot-DmrfrwWw.js";import"./useTheme-CAoH1kQC.js";import"./ClickAwayListener-DXa8E7oh.js";import"./getReactElementRef-DLB-yWFi.js";import"./index-aySbfJ0W.js";import"./iframe-BorzRatB.js";import"./index-CLzFrY6n.js";import"./ownerDocument-DW-IO8s5.js";import"./Paper-vTxZNVZo.js";import"./Grow-DXtNWBBe.js";import"./Tooltip-CIvfN4g7.js";import"./index-dEv_nVrL.js";import"./useControlled-4-utESF-.js";import"./Popper-C-FGpZWn.js";import"./isFocusVisible-B8k4qzLc.js";import"./Button-VWYMgatt.js";import"./createSimplePaletteValueFilter-DvhmL7gt.js";import"./ButtonBase-DncC0xkq.js";import"./CircularProgress-BE3JMWLs.js";import"./useQuery-oCM2ScmL.js";import"./utils-DZeFJEEI.js";import"./Link-DQQymv2C.js";import"./Collapse-CG5TH7JR.js";import"./_baseUniq-DWXvxkjA.js";import"./_Uint8Array-D3y4G5m1.js";import"./_baseTimes-36S_kd0L.js";import"./isObjectLike--mXepCRA.js";import"./isArray-Dxzbedgu.js";import"./_getTag-BZVYVZDa.js";import"./isEqual-hVZZo_Zh.js";import"./merge-CvokAV8g.js";import"./_initCloneObject-DB4cLElU.js";import"./identity-DKeuBCMA.js";import"./createSvgIcon-CGs2aUKk.js";import"./tinycolor-Begke6kS.js";import"./Fade-I42jnFEQ.js";import"./inputBaseClasses-OOFSrIFW.js";import"./calculateFriendlyFileSize-DlyyWhYD.js";import"./CheckCircleTwoTone-Bi8LtDNf.js";import"./InfoTwoTone-CyiHi3rF.js";import"./index-pdYlt5rv.js";import"./useMutation-0ePs12yi.js";import"./dayjs.min-B3WKbRA4.js";import"./chunk-AYJ5UCUI-CANmZQ7w.js";import"./cloneDeep-_uTojtj1.js";import"./Skeleton-uiHptTpV.js";import"./util-STRyia0c.js";import"./index-BEaZtgWO.js";import"./react-CeHOpBdi.js";import"./index-8kkaCG0j.js";import"./_baseOrderBy-DIIE6RpT.js";import"./toString-DNHJFbxw.js";import"./isSymbol-Bjl_AErD.js";import"./_baseGet-CR20RMHH.js";import"./_baseIteratee-t8Nl2XdP.js";import"./hasIn-72nxA5su.js";import"./_baseMap-Un-L1cnN.js";import"./_baseEach-W8DErMfV.js";import"./useQueries-v43J4m3x.js";import"./useInfiniteQuery-DEtJlADm.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./useEntity-C5-3gFgR.js";import"./pickBy-COYa3GRU.js";import"./isString-DySOzWNa.js";import"./toInteger-BVn_iR-8.js";import"./pick-BUEcY-hu.js";import"./_baseSet-D6o-WgeR.js";import"./omit-D4OaQ19k.js";import"./_baseSlice-F8doVSIJ.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntityBundle-BvfKodMv.js";import"./useGetEntityHeaders-CavD9RuM.js";import"./EntityIcon-FGMzieTi.js";import"./IconSvg-DXF4Dt9j.js";import"./LayersTwoTone-BzbTZINV.js";import"./ContentCopyTwoTone-_pqMHBHh.js";import"./HelpOutlineTwoTone-CD9k6dUc.js";import"./ErrorOutlined-DLc-ba9Z.js";import"./GetAppTwoTone-CSuhkWcT.js";import"./InfoOutlined-CIx4KSFf.js";import"./PhoneTwoTone-B2b7fLFt.js";import"./DeleteTwoTone-DZnkVVEl.js";import"./ErrorChip-YfSYYSwg.js";import"./Chip-CPonylyV.js";import"./Avatar-QIjN5KOI.js";import"./isHostComponent-DVu5iVWx.js";import"./isMuiElement-CGh_4KJs.js";import"./listItemButtonClasses-zCeTu_Y8.js";import"./Close-DdKd6WtE.js";import"./IconButton-BO_Vyt7M.js";const c=p=>{const n={ids:[p.accessRequirementId]},{data:e,isError:a,error:f}=x(n),t=(e==null?void 0:e.pages.flatMap(o=>o.results)[0])??void 0,d=(t==null?void 0:t.relatedProjectIds.length)||0,A=`${T("project",d,!0)}${d>0?":":""}`;return r.jsxs(r.Fragment,{children:[t&&r.jsxs(r.Fragment,{children:[r.jsx(M,{variant:"body1",children:A}),r.jsx(S,{sx:{listStyleType:"disc",pl:4},children:t.relatedProjectIds.map(o=>r.jsx(k,{sx:{display:"list-item",py:"4px",".no-margin-y":{my:0}},children:r.jsx(O,{entity:o,link:!1,showIcon:!1,className:"no-margin-y"})},o))})]}),a&&r.jsx(C,{severity:"error",children:f.message})]})};try{c.displayName="AccessRequirementRelatedProjectsList",c.__docgenInfo={description:"",displayName:"AccessRequirementRelatedProjectsList",props:{accessRequirementId:{defaultValue:null,description:"",name:"accessRequirementId",required:!0,type:{name:"number"}}}}}catch{}const He={title:"Governance/AccessRequirementRelatedProjectsList",component:c},i={args:{accessRequirementId:9603055}},s={args:{accessRequirementId:9605913}},m={args:{accessRequirementId:1234567},parameters:{stack:"mock",msw:{handlers:[h.rest.post(`${E}${_}`,async(p,n,e)=>{const a={results:[{id:"1234567",type:"org.sagebionetworks.repo.model.ManagedACTAccessRequirement",createdOn:"2017-08-23T18:48:20.892Z",modifiedOn:"2023-12-14T00:43:41.315Z",name:"Team AR without Related Projects",version:"1",relatedProjectIds:[],reviewerIds:[]}]};return n(e.status(200),e.json(a))})]}}};var l,u,R;i.parameters={...i.parameters,docs:{...(l=i.parameters)==null?void 0:l.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 9603055
  }
}`,...(R=(u=i.parameters)==null?void 0:u.docs)==null?void 0:R.source}}};var j,g,y;s.parameters={...s.parameters,docs:{...(j=s.parameters)==null?void 0:j.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 9605913
  }
}`,...(y=(g=s.parameters)==null?void 0:g.docs)==null?void 0:y.source}}};var I,P,q;m.parameters={...m.parameters,docs:{...(I=m.parameters)==null?void 0:I.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 1234567
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [
      // searchAccessRequirements
      rest.post(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_SEARCH}\`, async (req, res, ctx) => {
        const zeroRelatedProjects = {
          results: [{
            id: '1234567',
            type: 'org.sagebionetworks.repo.model.ManagedACTAccessRequirement',
            createdOn: '2017-08-23T18:48:20.892Z',
            modifiedOn: '2023-12-14T00:43:41.315Z',
            name: 'Team AR without Related Projects',
            version: '1',
            relatedProjectIds: [],
            reviewerIds: []
          }]
        };
        return res(ctx.status(200), ctx.json(zeroRelatedProjects));
      })]
    }
  }
}`,...(q=(P=m.parameters)==null?void 0:P.docs)==null?void 0:q.source}}};const Ke=["ManyProjects","OneProject","ZeroProjectsMock"];export{i as ManyProjects,s as OneProject,m as ZeroProjectsMock,Ke as __namedExportsOrder,He as default};
