import{l as m}from"./index-9f_cw2Bh.js";import{M as o,a0 as e,c as u,d as I}from"./useFiles-C129Twu4.js";import{g as _,a as S}from"./MockSubmission-CEagooP-.js";import{m as s}from"./mockAccessRequirements-B4gJGPSJ.js";import{r as R,g as O}from"./tableQueryHandlers-DKS6Fn5x.js";import{m as C}from"./mockRejectionReasonsTableQueryResultBundle-DI70dpzk.js";import{S as g}from"./SubmissionPage-BXjnK9t-.js";import{g as l}from"./userProfileHandlers-CvqhZ2Pr.js";import{R as A}from"./SynapseConstants-BHnlY45b.js";import"./OrientationBanner-Dw8hNLuQ.js";import"./jsx-runtime-DoxjgJx5.js";import"./index-Cu9bd8lq.js";import"./FullWidthAlert-D4QbP6vY.js";import"./Alert-D00uobdd.js";import"./createTheme-CWLQ-DuD.js";import"./index-GEGPABih.js";import"./styled-BNZh1-oq.js";import"./mergeSlotProps-CZobtCgD.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-Bm_QQ74L.js";import"./createSvgIcon-BhV3a4Zr.js";import"./Paper-CK0RlmZk.js";import"./IconButton-DDEa3AGu.js";import"./ButtonBase-CE85FUiZ.js";import"./TransitionGroupContext-C4KIfRep.js";import"./useIsFocusVisible-Lp1_y5xp.js";import"./Stack-Dwyinhto.js";import"./Box-D4TeY3X6.js";import"./AlertTitle-CVJKKi4h.js";import"./Typography-CaL9sKMg.js";import"./utils-C9mnvDyn.js";import"./index-BlO3JfGB.js";import"./Grow-BHNGh791.js";import"./ClickAwayListener-Ba-YFlDA.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-Bt6FmARF.js";import"./index-fnC48NPc.js";import"./useControlled-JEQ1v-P8.js";import"./useId-g68bhPgm.js";import"./Button-CnDFdqMc.js";import"./util-CdUO4X_X.js";import"./index-C2pXwPwl.js";import"./useQuery-BEUP4ZKU.js";import"./utils-BECe8vEQ.js";import"./index-BNbykmw2.js";import"./RegularExpressions-vjpKT7U4.js";import"./tinycolor-Begke6kS.js";import"./InfoTwoTone-Dmc1pswj.js";import"./CheckCircleTwoTone-JZD1d26p.js";import"./calculateFriendlyFileSize-BVprIR7U.js";import"./Skeleton-D27KV3ni.js";import"./inputBaseClasses-u371dScS.js";import"./Fade-DjpTbL11.js";import"./Link-B86BngSw.js";import"./cloneDeep-DY69WO0s.js";import"./_initCloneObject-CKdTzPLh.js";import"./_baseTimes-36S_kd0L.js";import"./isArray-ggc3KxVp.js";import"./StringUtils-Bf9G6LS7.js";import"./dayjs.min-D1RcYm3-.js";import"./index-SDyqs4cU.js";import"./tiny-invariant-CopsF_GD.js";import"./merge-CCcBxO6N.js";import"./identity-DKeuBCMA.js";import"./mockWiki-CtNSCDYu.js";import"./mock_user_profile-CyZOyNQ0.js";import"./mock_file_handle-DClkukaW.js";import"./mockWikiPageKey-BUG4r6oc.js";import"./mockFileEntity-B6eXtKlF.js";import"./mockProject-C6MX3HmO.js";import"./mockTeam-CWhSpEVf.js";import"./uniqueId-CSw6ftlJ.js";import"./toString-CYyvKWOl.js";import"./isSymbol-BzKS7Qf1.js";import"./times-Bw9geEsI.js";import"./toInteger-czOlq-ma.js";import"./BasicMockedCrudService-D_rhhQEo.js";import"./asyncJobHandlers-BvlPF62a.js";import"./omit-BMGLzBAr.js";import"./_baseFlatten-fwHzSaWk.js";import"./_baseSlice-F8doVSIJ.js";import"./DateFormatter-BvIz8-7P.js";import"./timezone-ClTQq11v.js";import"./ConfirmationDialog-CnqhFRr0.js";import"./Close-CSFzIByn.js";import"./createSvgIcon-CMTsqNxh.js";import"./createChainedFunction-BO_9K8Jh.js";import"./ownerWindow-BN2rbQ_G.js";import"./isMuiElement-yx-QWTmT.js";import"./ActionRequiredCard-DksgjVcR.js";import"./Icon-qpnG_Y8U.js";import"./IconSvg-Ba4yGxCp.js";import"./LayersTwoTone-BdLgRYRO.js";import"./ErrorOutlined-T6sjfcxT.js";import"./GetAppTwoTone-mQ-VL1kM.js";import"./InfoOutlined-DlYufPXz.js";import"./DeleteTwoTone-Dev5FGll.js";import"./useEntity-DUa-3eTG.js";import"./useQueries-CXm_8CG9.js";import"./useMutation-BUHlmdy0.js";import"./useInfiniteQuery-BP0_Pjsz.js";import"./omitBy-DS1hbP_6.js";import"./_baseIndexOf-DlmoT9Yo.js";import"./_baseIteratee-D7O75MbE.js";import"./hasIn-Dtd7A__g.js";import"./pick-BS2M43kd.js";import"./QueryFilterUtils-C926R8KP.js";import"./isNumber-BM-UBS4N.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./LoadingScreen-ChQAEbd0.js";import"./Backdrop-D_3O0Mkt.js";import"./LinearProgress-3w3Lw59m.js";import"./useTeamMembers-BhUMt92V.js";import"./index-S6oMIluj.js";import"./SkeletonTable-WTp71Rcs.js";import"./UserBadge-BIjVFzmT.js";import"./Popover-DIIz8dIA.js";import"./Modal-DUnPLoCh.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./ToastMessage-g7z1TdJs.js";import"./CSSTransition-CgXYrxvl.js";import"./hasClass-D5ZjVvBY.js";import"./Menu-BEh8iwf6.js";import"./MenuList-BNT0Hd0h.js";import"./List-CqRim60B.js";import"./Divider-B0htvEts.js";import"./dividerClasses-4W0k7R-l.js";import"./MenuItem-CiBYe7yt.js";import"./Card-BA3FnaCw.js";import"./Avatar-DjHGVXZf.js";import"./EntityIcon-BMtZ59uV.js";import"./pluralize-D3rOHoU0.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./index.modern-BSaf6tm9.js";import"./_getPrototype-DSx75BAr.js";import"./index-Dl_32E6e.js";import"./isPlainObject-BDeK4qKc.js";import"./toNumber-DDV9Xfgs.js";import"./now-3qigre4W.js";import"./ThemesPlot-DupWYv85.js";import"./ElementWithTooltip-eZfIGmOi.js";import"./SynapseTableConstants-2qH3fDlQ.js";import"./ShowMore-D9tD7OdY.js";import"./Dropdown-bnzd1VoU.js";import"./ThemeProvider-BS-PCUTx.js";import"./createWithBsPrefix-B-Bo-ltc.js";import"./SqlFunctions-CKCPhwso.js";import"./factory-DQ_FQLjW.js";import"./sortBy-BDtzkxEi.js";import"./noop-DX6rZLP_.js";import"./without-B9eKmLM0.js";import"./uniq-CETAS_wh.js";import"./useGetEntityHeaders-BF2oHka2.js";import"./DownloadConfirmationUI-CXt5j34N.js";import"./useDownloadList-CcFXcBbF.js";import"./SkeletonInlineBlock-CuT4NKvT.js";import"./use-deep-compare-effect.esm-BJt8Qld_.js";import"./StandaloneLoginForm-BPNysBji.js";import"./useTwoFactorEnrollment-Dm3mZi_0.js";import"./TextField-r2jOAKdR.js";import"./FormControl-EVF2GEo2.js";import"./useFormControl-vG3XTiAH.js";import"./InputLabel-CtY5MIT3.js";import"./LoginMethodButton-B3APy40_.js";import"./LastLoginInfo-BeUzTLNx.js";import"./TextField-DpTqZgYM.js";import"./Select-8eKUm_Os.js";import"./useAccessRequirements-BuBXmQEI.js";import"./useMediaQuery-DeeoPgjr.js";import"./TwoFactorEnrollmentForm-0SrAOoYP.js";import"./LeftRightPanel-o_JMi6Tr.js";import"./DialogContent-DovhpbCX.js";import"./Grid-ps-2UMpI.js";import"./UserSearchBoxV2-BvG7m4er.js";import"./Select-49a62830.esm-DNb8Ws2M.js";import"./UserOrTeamBadge-DN8GaMy0.js";import"./TeamBadge-DuS4nwZA.js";import"./Form-icUcw2KK.js";import"./Col-1nUqr21k.js";import"./RadioGroup-BRNoHnJ5.js";import"./Radio-eyhGV30W.js";import"./FormControlLabel-BehRBTI5.js";import"./FormGroup-DbSnk97O.js";import"./UploadDocumentField-BRcDtPJK.js";import"./FileUpload-dhiDjYh8.js";import"./AuthenticatedRequirement-BU0Wh5AQ.js";import"./RequirementItem-CM2utSQN.js";import"./ConditionalWrapper-C6_4TcM5.js";import"./CertificationRequirement-Cca1zTYC.js";import"./ValidationRequirement-Cr-HzlYD.js";import"./TwoFactorAuthEnabledRequirement-CkhPUWcO.js";import"./EntityLink-m1qI_6L5.js";import"./ErrorChip-BOFtq-H-.js";import"./Chip-BeyCtz-t.js";import"./EnumFacetFilterSkeleton-I6ji_gOB.js";import"./Checkbox-CMxRAOuT.js";import"./IconList-Bkd9K0vR.js";import"./react-router-dom-BIEbmEv8.js";import"./SkeletonButton-BvfzBqnx.js";import"./SkeletonParagraph-CsTpS47q.js";import"./SelectionCriteriaPill-BkZ8EDUI.js";import"./Close-Bl818ae0.js";import"./UserCardList-54Muo8es.js";import"./OpenData-Cpv31pme.js";import"./AclEditor-BkBz6QCB.js";import"./IconSvgButton-HVGhTBrE.js";import"./useUpdateAcl-Bd9qe2KM.js";import"./Box-CPs0Ct5S.js";import"./NoSearchResults-CjlTHUk9.js";import"./NoData-C6O5T8E1.js";import"./Tabs-B9WUJfYJ.js";import"./QueryCount-B69TQJr4.js";import"./UpsetPlot-BlVgLh0G.js";import"./lz-string-D345GCHL.js";import"./react-sizeme-CSOwE_ZL.js";import"./colorPalette-BSrfa2_g.js";import"./LargeButton--QV9Hvz8.js";import"./RangeSlider-ByH7zh7D.js";import"./Slider-Ca3sEmDV.js";import"./SynapseVideo-CKdRHPDp.js";import"./WarningDialog-BILDm9CR.js";import"./RejectDataAccessRequestModal-bxAFXBJb.js";import"./CannedRejectionDialog-DPk1-FGd.js";import"./immutable.es-DHy1u56X.js";import"./mockEntity-Cfnr2nE7.js";const Bi={title:"Governance/SubmissionPage",component:g,parameters:{stack:"mock"}},p={name:"SubmissionPage",loaders:[()=>R({sql:`SELECT * FROM ${A}`},C)],parameters:{msw:{handlers:[...l(o),..._(o),m.rest.get(`${o}${e(":id")}`,async(i,t,r)=>{const d=S.find(E=>i.params.id===E.id);return t(r.status(200),r.json(d))}),m.rest.get(`${o}${u(":id")}`,async(i,t,r)=>t(r.status(200),r.json(s))),m.rest.get(`${o}${I(":id")}`,async(i,t,r)=>t(r.status(200),r.json({wikiPageId:123,ownerObjectId:s.id,ownerObjectType:"ACCESS_REQUIREMENT"}))),m.rest.get(`${o}/repo/v1/accessRequirement/:id/acl`,async(i,t,r)=>t(r.status(200),r.json({id:i.id,creationDate:"2022-05-20T14:32:31.665Z",etag:"f4fbd4f2-751d-40dd-9421-1d2693231217",resourceAccess:[{principalId:3350396,accessType:["REVIEW_SUBMISSIONS"]}]}))),...O(o),m.rest.put(`${o}${e(":id")}`,async(i,t,r)=>t(r.status(201),r.json(await i.json())))]}},args:{submissionId:1}};var n,a,c;p.parameters={...p.parameters,docs:{...(n=p.parameters)==null?void 0:n.docs,source:{originalSource:`{
  name: 'SubmissionPage',
  loaders: [() => registerTableQueryResult({
    sql: \`SELECT * FROM \${REJECT_SUBMISSION_CANNED_RESPONSES_TABLE}\`
  }, mockRejectionReasonsTableQueryResultBundle)],
  parameters: {
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), ...getWikiHandlers(MOCK_REPO_ORIGIN),
      // Return submission based on ID
      rest.get(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        const submission = mockSubmissions.find(submission => req.params.id === submission.id);
        return res(ctx.status(200), ctx.json(submission));
      }),
      // Return a mocked access requirement
      rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json(mockManagedACTAccessRequirement));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_WIKI_PAGE_KEY(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          wikiPageId: 123,
          ownerObjectId: mockManagedACTAccessRequirement.id,
          ownerObjectType: 'ACCESS_REQUIREMENT'
        }));
      }), rest.get(\`\${MOCK_REPO_ORIGIN}/repo/v1/accessRequirement/:id/acl\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          id: req.id,
          creationDate: '2022-05-20T14:32:31.665Z',
          etag: 'f4fbd4f2-751d-40dd-9421-1d2693231217',
          resourceAccess: [{
            principalId: 3350396,
            accessType: ['REVIEW_SUBMISSIONS']
          }]
        }));
      }), ...getHandlersForTableQuery(MOCK_REPO_ORIGIN), rest.put(\`\${MOCK_REPO_ORIGIN}\${DATA_ACCESS_SUBMISSION_BY_ID(':id')}\`, async (req, res, ctx) => {
        return res(ctx.status(201), ctx.json(await req.json()));
      })]
    }
  },
  args: {
    submissionId: 1
  }
}`,...(c=(a=p.parameters)==null?void 0:a.docs)==null?void 0:c.source}}};const Di=["Demo"];export{p as Demo,Di as __namedExportsOrder,Bi as default};
