import{j as n}from"./jsx-runtime-DoxjgJx5.js";import{r as f}from"./index-Cu9bd8lq.js";import{d as ne}from"./AddCircleTwoTone-DOPSLik9.js";import{D as F,w as L,E as K}from"./VerificationSubmission-DL9jxYsQ.js";import{V as R,A as ae,B as le,e as ie,L as re,f as oe,g as E,h as se,T as de,S as ue,M as ce,i as pe,u as me}from"./Renderers-C_IOGQjh.js";import{u as ye}from"./useEntitySelection-Dt-xqsCJ.js";import{l as $,ba as fe}from"./useFiles-DHO02hsn.js";import{g as D,q as M,d as he}from"./RegularExpressions-SKYrON-T.js";import"./OrientationBanner-6TFYkqd5.js";import{N as be}from"./ConfirmationDialog-Cd1rPCWh.js";import{u as ge}from"./utils-BECe8vEQ.js";import{B as Ce}from"./LoadingScreen-Be03UZKS.js";import{C as Se}from"./Checkbox-BnrBea29.js";import{a as Ee}from"./useDownloadList-Cd70xcJz.js";import{d as Q}from"./ToastMessage-BzITCHuf.js";import{B as U}from"./Box-Bt_N9PQN.js";import{B as De}from"./Button-j3jTttn9.js";const z=1200,Ve=46;function B({entities:l,isLoading:c,hasNextPage:d,fetchNextPage:r,isFetchingNextPage:h,versionSelection:p,selectColumnType:V,selected:i,visibleTypes:m,selectableTypes:o,toggleSelection:u,sort:y,setSort:v,noResultsPlaceholder:N,enableSelectAll:q,selectAllIsChecked:b=!1,getChildrenInfiniteRequestObject:w,totalEntities:T,setCurrentContainer:_}){const A=ge(),{accessToken:O,keyFactory:j}=$(),G=V!=="none",[W,k]=f.useState(!1),[J,I]=f.useState(!1),X=()=>{w&&A.cancelQueries({queryKey:j.getEntityChildrenQueryKey(w,!0)}),I(!1),k(!1)},Z=a=>m.includes(D(a))?o.includes(D(a))?i.has(a.id)?"selected":"default":"disabled":"hidden";f.useEffect(()=>{async function a(){W&&(d&&r?(I(!0),h||r()):(u(b?l.filter(e=>i.has(e.id)).map(e=>i.get(e.id)):await Promise.all(l.filter(e=>{const t=D(e);return!i.has(e.id)&&o.includes(t)&&m.includes(t)}).map(async e=>{var s;let t;if(p===R.REQUIRED&&M(D(e))&&(Object.prototype.hasOwnProperty.call(e,"versionNumber")&&(t=e.versionNumber),!t)){I(!0);const S=1,g=0;t=(s=(await A.fetchQuery({queryKey:j.getPaginatedEntityVersionsQueryKey(e.id,S,g),queryFn:()=>fe(e.id,O,g,S)})).results[0])==null?void 0:s.versionNumber}return{targetId:e.id,targetVersionNumber:t}}))),k(!1),I(!1)))}a()},[O,l,r,d,p,A,h,b,o,i,W,u,m,j]);const Y=l.reduce((a,e)=>{var s;const t=Z(e);if(t!=="hidden"){const S=D(e),g=(s=i.get(e.id))==null?void 0:s.targetVersionNumber;let C;"versionNumber"in e&&(g!=null?C=g:p===R.REQUIRED&&(C=e.versionNumber)),a.push({...e,entityId:e.id,versionNumber:C,entityType:S,isSelected:t==="selected",isDisabled:t==="disabled",isVersionableEntity:M(S),currentSelectedVersion:g})}return a},[]),ee=f.useMemo(()=>{const a=d||l.filter(e=>o.includes(D(e))&&m.includes(D(e))).length>0;return q&&n.jsx("div",{"data-testid":"Select All",style:a?{cursor:"pointer"}:{cursor:"not-allowed"},onClick:()=>{a&&k(!0)},children:n.jsx(Se,{inputProps:{"aria-label":"Select All"},checked:b,disabled:!a,onChange:()=>{}})})},[q,l,d,b,o,m]),te=f.useCallback(a=>_&&he(a.rowData.entityType)?n.jsx("span",{role:"link",className:"EntityFinderTableCellContainerLink",onClick:e=>{e.stopPropagation(),_(a.rowData.id)},children:a.rowData.name}):a.rowData.name,[_]),H={};return y&&(H[y.sortBy]=y.sortDirection.toLowerCase()),n.jsxs("div",{className:"EntityFinderDetailsView",children:[n.jsx(Ce,{show:J,currentProgress:l.length,totalProgress:T,hintText:T?`${l.length.toLocaleString()} of ${T==null?void 0:T.toLocaleString()}`:`Fetching ${l.length.toLocaleString()}`,headlineText:"Fetching selected items",onCancel:X}),n.jsx(ae,{className:"DetailsViewAutosizer",children:({height:a,width:e})=>n.jsxs(le,{classPrefix:"DetailsViewTable",data:Y,height:a,width:e>z?e:z,rowHeight:Ve,overscanRowCount:5,rowClassName:({rowIndex:t})=>{let s="EntityFinderDetailsViewRow";return t%2===0&&(s+=" isEven"),s},rowProps:({rowData:t})=>({"aria-selected":t.isSelected,"aria-disabled":t.isDisabled}),headerCellProps:{role:"columnheader"},sortState:H,components:{SortIndicator:ie},onColumnSort:({key:t,order:s})=>{y&&v&&v(t,s==="asc"?F.ASC:F.DESC)},rowEventHandlers:{onClick:({rowData:t})=>{const{id:s,isDisabled:S,isVersionableEntity:g}=t;let{currentSelectedVersion:C}=t;S||(g&&p===R.REQUIRED&&C==null&&Object.prototype.hasOwnProperty.call(t,"versionNumber")&&(C=t.versionNumber),u({targetId:s,targetVersionNumber:C}))}},onEndReached:()=>{d&&r&&!h&&r()},emptyRenderer:c?re:()=>n.jsx(oe,{noResultsPlaceholder:N}),children:[G&&n.jsx(E,{title:"",minWidth:50,maxWidth:50,width:50,dataKey:"isSelected",headerRenderer:ee,cellRenderer:se},"isSelected"),n.jsx(E,{title:"",minWidth:45,maxWidth:45,width:45,dataKey:"entityType",align:"center",cellRenderer:de},"type"),n.jsx(E,{title:"File Name",width:500,sortable:y!=null,resizable:!0,cellRenderer:te},L.NAME),n.jsx(E,{title:"Size",width:200,sortable:!1,resizable:!0,cellRenderer:ue},"SIZE"),n.jsx(E,{title:"Modified On",width:220,minWidth:170,sortable:y!=null,cellRenderer:ce},L.MODIFIED_ON),n.jsx(E,{width:130,dataKey:"id",title:"ID",minWidth:130},"id"),n.jsx(E,{title:"Actions",minWidth:100,maxWidth:100,width:100,cellRenderer:pe},"actions")]})})]})}try{B.displayName="ChallengeDataTable",B.__docgenInfo={description:'Displays a list of entities in a table.\n\nIf the list of entities is paginated, the `hasNextPage` prop can be set to indicate that there is more data to load.\nWhen the view is ready to load more data, the `fetchNextPage` callback will be invoked. The view is designed to handle\nan "infinite scroll" pattern, so entities should not be removed from the list when loading the next page.',displayName:"ChallengeDataTable",props:{versionSelection:{defaultValue:null,description:"",name:"versionSelection",required:!0,type:{name:"enum",value:[{value:'"DISALLOWED"'},{value:'"REQUIRED"'},{value:'"TRACKED"'},{value:'"UNTRACKED"'}]}},selectColumnType:{defaultValue:null,description:"",name:"selectColumnType",required:!0,type:{name:"enum",value:[{value:'"none"'},{value:'"checkbox"'}]}},enableSelectAll:{defaultValue:null,description:"",name:"enableSelectAll",required:!0,type:{name:"boolean"}},visibleTypes:{defaultValue:null,description:"",name:"visibleTypes",required:!0,type:{name:"EntityType[]"}},selected:{defaultValue:null,description:"",name:"selected",required:!0,type:{name:"EntitySelectionMapType"}},selectableTypes:{defaultValue:null,description:"",name:"selectableTypes",required:!0,type:{name:"EntityType[]"}},isIdSelected:{defaultValue:null,description:"",name:"isIdSelected",required:!0,type:{name:"(header: EntityFinderHeader) => boolean"}},isSelectable:{defaultValue:null,description:"",name:"isSelectable",required:!0,type:{name:"(header: EntityFinderHeader) => boolean"}},toggleSelection:{defaultValue:null,description:"",name:"toggleSelection",required:!0,type:{name:"(entity: Reference | Reference[]) => void"}},setCurrentContainer:{defaultValue:null,description:"",name:"setCurrentContainer",required:!1,type:{name:"Dispatch<SetStateAction<EntityTreeContainer>>"}},entities:{defaultValue:null,description:"",name:"entities",required:!0,type:{name:"EntityFinderHeader[]"}},isLoading:{defaultValue:null,description:"",name:"isLoading",required:!0,type:{name:"boolean"}},hasNextPage:{defaultValue:null,description:"",name:"hasNextPage",required:!1,type:{name:"boolean"}},fetchNextPage:{defaultValue:null,description:"",name:"fetchNextPage",required:!1,type:{name:"(() => Promise<any>)"}},isFetchingNextPage:{defaultValue:null,description:"",name:"isFetchingNextPage",required:!1,type:{name:"boolean"}},sort:{defaultValue:null,description:"The current sort of the view. If the view cannot be sorted, set this to `undefined`",name:"sort",required:!1,type:{name:"{ sortBy: SortBy; sortDirection: Direction; }"}},setSort:{defaultValue:null,description:"If sortable, `setSort` will be invoked when the user tries to change the sort",name:"setSort",required:!1,type:{name:"((soryBy: SortBy, sortDirection: Direction) => void)"}},noResultsPlaceholder:{defaultValue:null,description:"",name:"noResultsPlaceholder",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},selectAllIsChecked:{defaultValue:{value:"false"},description:"We defer to the configuration component to determine this",name:"selectAllIsChecked",required:!1,type:{name:"boolean"}},getChildrenInfiniteRequestObject:{defaultValue:null,description:"This request object is only used to tell react-query to cancel fetching all children at once.",name:"getChildrenInfiniteRequestObject",required:!1,type:{name:"EntityChildrenRequest"}},totalEntities:{defaultValue:null,description:"The total number of entities that can be retrieved",name:"totalEntities",required:!1,type:{name:"number"}}}}}catch{}function P({parentContainerId:l,...c}){const[d,r]=f.useState(L.NAME),[h,p]=f.useState(F.ASC),V={parentId:l,includeTotalChildCount:!0,includeTypes:c.visibleTypes,sortBy:d,sortDirection:h},{data:i,isLoading:m,isFetchingNextPage:o,hasNextPage:u,fetchNextPage:y}=be(V,{throwOnError:!0}),v=(i==null?void 0:i.pages.flatMap(b=>b.page))??[],N=i==null?void 0:i.pages[0].totalChildCount,q=me(v,c.selected.size,c.isIdSelected,c.isSelectable,u,y,o);return n.jsx(B,{entities:v,isLoading:m,hasNextPage:u,fetchNextPage:y,isFetchingNextPage:o,sort:{sortBy:d,sortDirection:h},setSort:(b,w)=>{r(b),p(w)},selectAllIsChecked:q,getChildrenInfiniteRequestObject:V,totalEntities:N,...c})}try{P.displayName="ChallengeEntityChildrenDetails",P.__docgenInfo={description:"",displayName:"ChallengeEntityChildrenDetails",props:{versionSelection:{defaultValue:null,description:"",name:"versionSelection",required:!0,type:{name:"enum",value:[{value:'"DISALLOWED"'},{value:'"REQUIRED"'},{value:'"TRACKED"'},{value:'"UNTRACKED"'}]}},selectColumnType:{defaultValue:null,description:"",name:"selectColumnType",required:!0,type:{name:"enum",value:[{value:'"none"'},{value:'"checkbox"'}]}},enableSelectAll:{defaultValue:null,description:"",name:"enableSelectAll",required:!0,type:{name:"boolean"}},visibleTypes:{defaultValue:null,description:"",name:"visibleTypes",required:!0,type:{name:"EntityType[]"}},selected:{defaultValue:null,description:"",name:"selected",required:!0,type:{name:"EntitySelectionMapType"}},selectableTypes:{defaultValue:null,description:"",name:"selectableTypes",required:!0,type:{name:"EntityType[]"}},isIdSelected:{defaultValue:null,description:"",name:"isIdSelected",required:!0,type:{name:"(header: EntityFinderHeader) => boolean"}},isSelectable:{defaultValue:null,description:"",name:"isSelectable",required:!0,type:{name:"(header: EntityFinderHeader) => boolean"}},toggleSelection:{defaultValue:null,description:"",name:"toggleSelection",required:!0,type:{name:"(entity: Reference | Reference[]) => void"}},setCurrentContainer:{defaultValue:null,description:"",name:"setCurrentContainer",required:!1,type:{name:"Dispatch<SetStateAction<EntityTreeContainer>>"}},parentContainerId:{defaultValue:null,description:"",name:"parentContainerId",required:!0,type:{name:"string"}}}}}catch{}function x({parentContainerId:l}){const{downloadCartPageUrl:c}=$(),d=!0,[r,h]=ye(d),{mutate:p}=Ee({onSuccess:()=>{Q("File(s) were successfully added to your Download Cart.","success",{primaryButtonConfig:{text:"View Download Cart",onClick:()=>window.location.href=c}})},onError:o=>{Q(`Unable to add the file to your Download Cart. ${o.reason}`,"danger")}}),V=f.useCallback(o=>r.has(o.id),[r]),i=f.useCallback(()=>{const o=Array.from(r.values()).map(u=>({fileEntityId:u.targetId,versionNumber:u.targetVersionNumber}));p(o)},[r,p]),m={versionSelection:R.REQUIRED,selectColumnType:"checkbox",enableSelectAll:!0,visibleTypes:[K.FILE],selected:r,selectableTypes:[K.FILE],isIdSelected:V,isSelectable:()=>!0,toggleSelection:h};return n.jsxs(n.Fragment,{children:[n.jsx(U,{children:n.jsx(P,{parentContainerId:l,...m})}),n.jsx(U,{mt:4,children:n.jsx(De,{endIcon:n.jsx(ne,{}),variant:"outlined",sx:{alignSelf:"flex-end",height:"47px"},onClick:i,disabled:!r.toArray().length,children:"Add to Download Cart"})})]})}try{x.displayName="ChallengeDataDownload",x.__docgenInfo={description:"",displayName:"ChallengeDataDownload",props:{parentContainerId:{defaultValue:null,description:"",name:"parentContainerId",required:!0,type:{name:"string"}}}}}catch{}try{x.displayName="ChallengeDataDownload",x.__docgenInfo={description:"",displayName:"ChallengeDataDownload",props:{parentContainerId:{defaultValue:null,description:"",name:"parentContainerId",required:!0,type:{name:"string"}}}}}catch{}try{ChallengeDataTable.displayName="ChallengeDataTable",ChallengeDataTable.__docgenInfo={description:'Displays a list of entities in a table.\n\nIf the list of entities is paginated, the `hasNextPage` prop can be set to indicate that there is more data to load.\nWhen the view is ready to load more data, the `fetchNextPage` callback will be invoked. The view is designed to handle\nan "infinite scroll" pattern, so entities should not be removed from the list when loading the next page.',displayName:"ChallengeDataTable",props:{versionSelection:{defaultValue:null,description:"",name:"versionSelection",required:!0,type:{name:"enum",value:[{value:'"DISALLOWED"'},{value:'"REQUIRED"'},{value:'"TRACKED"'},{value:'"UNTRACKED"'}]}},selectColumnType:{defaultValue:null,description:"",name:"selectColumnType",required:!0,type:{name:"enum",value:[{value:'"none"'},{value:'"checkbox"'}]}},enableSelectAll:{defaultValue:null,description:"",name:"enableSelectAll",required:!0,type:{name:"boolean"}},visibleTypes:{defaultValue:null,description:"",name:"visibleTypes",required:!0,type:{name:"EntityType[]"}},selected:{defaultValue:null,description:"",name:"selected",required:!0,type:{name:"EntitySelectionMapType"}},selectableTypes:{defaultValue:null,description:"",name:"selectableTypes",required:!0,type:{name:"EntityType[]"}},isIdSelected:{defaultValue:null,description:"",name:"isIdSelected",required:!0,type:{name:"(header: EntityFinderHeader) => boolean"}},isSelectable:{defaultValue:null,description:"",name:"isSelectable",required:!0,type:{name:"(header: EntityFinderHeader) => boolean"}},toggleSelection:{defaultValue:null,description:"",name:"toggleSelection",required:!0,type:{name:"(entity: Reference | Reference[]) => void"}},setCurrentContainer:{defaultValue:null,description:"",name:"setCurrentContainer",required:!1,type:{name:"Dispatch<SetStateAction<EntityTreeContainer>>"}},entities:{defaultValue:null,description:"",name:"entities",required:!0,type:{name:"EntityFinderHeader[]"}},isLoading:{defaultValue:null,description:"",name:"isLoading",required:!0,type:{name:"boolean"}},hasNextPage:{defaultValue:null,description:"",name:"hasNextPage",required:!1,type:{name:"boolean"}},fetchNextPage:{defaultValue:null,description:"",name:"fetchNextPage",required:!1,type:{name:"(() => Promise<any>)"}},isFetchingNextPage:{defaultValue:null,description:"",name:"isFetchingNextPage",required:!1,type:{name:"boolean"}},sort:{defaultValue:null,description:"The current sort of the view. If the view cannot be sorted, set this to `undefined`",name:"sort",required:!1,type:{name:"{ sortBy: SortBy; sortDirection: Direction; }"}},setSort:{defaultValue:null,description:"If sortable, `setSort` will be invoked when the user tries to change the sort",name:"setSort",required:!1,type:{name:"((soryBy: SortBy, sortDirection: Direction) => void)"}},noResultsPlaceholder:{defaultValue:null,description:"",name:"noResultsPlaceholder",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},selectAllIsChecked:{defaultValue:{value:"false"},description:"We defer to the configuration component to determine this",name:"selectAllIsChecked",required:!1,type:{name:"boolean"}},getChildrenInfiniteRequestObject:{defaultValue:null,description:"This request object is only used to tell react-query to cancel fetching all children at once.",name:"getChildrenInfiniteRequestObject",required:!1,type:{name:"EntityChildrenRequest"}},totalEntities:{defaultValue:null,description:"The total number of entities that can be retrieved",name:"totalEntities",required:!1,type:{name:"number"}}}}}catch{}export{x as C};
