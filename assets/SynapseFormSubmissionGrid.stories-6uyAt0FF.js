import{j as l}from"./jsx-runtime-d_jSGfuW.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DsgC4t7y.js";import{g as T}from"./handlers-H_5_1yJ1.js";import{aD as S,M as a}from"./useFiles-Dsa3u--j.js";import"./OrientationBanner-B-arf4vv.js";import"./index-CsMIurHC.js";import"./StringUtils-tNCAfVhp.js";import{l as _}from"./index-Czsk-lzH.js";import{S as E}from"./SynapseFormSubmissionGrid-DTxP3ZAf.js";import"./mockSchema-CeQHtDmO.js";import"./mockFileEntity-BzIuoyv1.js";import"./mock_file_handle-DS_yjaGE.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-nNelj9J9.js";import"./mockTeam-D_yuGAOP.js";import"./SynapseConstants-BmRSEcUC.js";import"./uniqueId-DoD0QRy_.js";import"./toString-TA4EATTq.js";import"./isObjectLike-htAwhsM6.js";import"./iframe-BJUV8yd-.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-CTVE5bUB.js";import"./times-BmLsJreT.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-CatpUP2F.js";import"./asyncJobHandlers-D2qB7EMO.js";import"./BasicMockedCrudService-BEDA5sdI.js";import"./cloneDeep-DjuOrVDN.js";import"./_Uint8Array-Qz23elJ2.js";import"./_initCloneObject-DutgCJVD.js";import"./_getTag-CR_tant5.js";import"./isEqual-DjXGrVN1.js";import"./_baseIsEqual-DpmEyEs-.js";import"./mockAnnotationColumns-DDks9BiL.js";import"./tableQueryHandlers-Di98lN60.js";import"./omit-DNE76oAs.js";import"./_baseGet-DBD9yzsd.js";import"./isNil-SZ1XCHa2.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-DlMI-LlY.js";import"./_baseFlatten-mEEadNuB.js";import"./pick-C9dnqqDA.js";import"./_baseSet-D1kVgTYA.js";import"./hasIn-DmpeEDFR.js";import"./accessRequirementAclHandlers-CrPsCHqe.js";import"./mockAccessRequirementAcls-CaOuWEwU.js";import"./mockAccessRequirements-nk0QUCQs.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DHj13qiO.js";import"./accessRequirementHandlers-ve6Iw6TB.js";import"./wikiHandlers-CAoFZx0X.js";import"./mockWikiPageKey-D4rVsQHp.js";import"./teamHandlers-C7zlsvI8.js";import"./dataAccessRequestHandlers-L_laAK46.js";import"./MockResearchProject-DulrYRrf.js";import"./mock_discussion-zFbiy-Zg.js";import"./fakerUtils-DyiUOOFZ.js";import"./index-C9cHFmMJ.js";import"./mockTableEntity-B_oxIbkJ.js";import"./mockFileEntityACLVariants-9atThEDH.js";import"./entityHandlers-Y9RExxeR.js";import"./mockEntity-CE5yVtl0.js";import"./mockEvaluationQueue-D2JssgcM.js";import"./featureFlagHandlers-W-Afd5xj.js";import"./fileHandlers-DGDGP6TZ.js";import"./personalAccessTokenHandlers-_gr0SAXA.js";import"./researchProjectHandlers-DS3FR9gA.js";import"./resetTwoFactorAuthHandlers-DiVFCPiS.js";import"./userProfileHandlers-BJBnyTpC.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-BzjYJz1e.js";import"./FullWidthAlert-g5VY_JP0.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-BRIWNOtu.js";import"./createTheme-CXF9bY3g.js";import"./resolveComponentProps-BVjKbyvI.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-Qy2WE2L8.js";import"./createSvgIcon-nJ4brtSX.js";import"./DefaultPropsProvider-BjdTxmMk.js";import"./Close-CcYrHUCv.js";import"./IconButton-Oayiszqv.js";import"./ButtonBase-BemfzaRk.js";import"./useTimeout-M7ILagoH.js";import"./useIsFocusVisible-CONob7Sg.js";import"./useEventCallback-BI5RiCjo.js";import"./Paper-BOIlBj0a.js";import"./Stack-B6pwuley.js";import"./getThemeProps-BkFfL3GX.js";import"./useTheme-Co028x8f.js";import"./Box-0w0QXb9q.js";import"./AlertTitle-BCj215so.js";import"./Typography-DI7kYxjv.js";import"./useTheme-DxaRAP13.js";import"./Grow-Cse7N1kt.js";import"./index-ZO1NugB6.js";import"./utils-CXikhHHF.js";import"./ClickAwayListener-BhXis3j3.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-CuINGH26.js";import"./index-DioXFVDj.js";import"./useControlled-2RzUJcJv.js";import"./useId-BbVskIHx.js";import"./Popper-Dpp_HX4T.js";import"./Button-S6YMXMba.js";import"./useQuery-D3ZPFprG.js";import"./utils-C7K2lhfB.js";import"./Link-6Al-Fqj4.js";import"./Collapse-BHgec6F8.js";import"./tinycolor-Begke6kS.js";import"./Fade-BMnops2P.js";import"./Skeleton-wblQ7WdV.js";import"./inputBaseClasses-CsqekATJ.js";import"./calculateFriendlyFileSize-C5bVMG5e.js";import"./CheckCircleTwoTone-C73kqWtj.js";import"./InfoTwoTone-Ds0ttC-r.js";import"./mutation-CpK9fLVW.js";import"./dayjs.min-h1P3Bc9m.js";import"./chunk-AYJ5UCUI-CJN4kzPf.js";import"./index-C6EkIRZO.js";import"./react-CLp1HUW8.js";import"./util-Dw5g-8BS.js";import"./WideButton-BskYTbeY.js";import"./DeleteTwoTone-2TupvUZ6.js";import"./createSvgIcon-DtnylZYw.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-DpxTcz5Q.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-ClxZqXIf.js";import"./DialogBase-Ct6lUlXC.js";import"./Close-CWIq27gH.js";import"./HelpPopover-DMWnnF-n.js";import"./MarkdownPopover-Du9avExH.js";import"./LightTooltip-B7bvdrNB.js";import"./MarkdownSynapse-Bplz6Xi1.js";import"./useMutation-DDvEyqjo.js";import"./SkeletonButton-BbgqHJzb.js";import"./SkeletonInlineBlock-Br8kD0JA.js";import"./SkeletonTable-8F8y6Hkc.js";import"./SkeletonParagraph-Cvq575Hf.js";import"./HelpOutlineTwoTone-CfkATvzo.js";import"./DialogTitle-D6VxSVIE.js";import"./DialogContent-MXVHP1mF.js";import"./Dialog-Bq-sjqHS.js";import"./Modal-BZUEVv-N.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-B0QFjJH5.js";import"./WarningDialog-Dw0ziRQq.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},To={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const _o=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,_o as __namedExportsOrder,To as default};
