import{g as f}from"./userProfileHandlers-CREO6OWX.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-DfvSHy59.js";import{A}from"./AccountLevelBadges-MWv4jCX_.js";import"./VerificationSubmission-16RBrwfH.js";import"./index-Cqro5rR0.js";import"./iframe-pqb1pWSd.js";import"./mockEntity-DJa-p-dH.js";import"./mockFileEntity-BYfpJqGT.js";import"./StringUtils-B_EIkN_W.js";import"./mock_file_handle-t2fDWYxy.js";import"./mockProject-BRM3FQRG.js";import"./mockTeam-DSPv2xGP.js";import"./SynapseConstants-DBaXNK7e.js";import"./OrientationBanner-i6W0EBQp.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-B5ZWLZ5-.js";import"./index-D9ihYNBM.js";import"./spreadSx-CwcO6WA9.js";import"./react-CeveDELd.js";import"./FullWidthAlert-R0M4V0bV.js";import"./Alert-CjbkLLmN.js";import"./createTheme-BWIyDVrX.js";import"./DefaultPropsProvider-D2MKCCrb.js";import"./useSlot-DtUY8ilh.js";import"./useForkRef-B6xUNni8.js";import"./createSimplePaletteValueFilter-BNigTjTM.js";import"./createSvgIcon-BmRPqEb8.js";import"./Close-BEVHtHX9.js";import"./IconButton-DAJFbbML.js";import"./useTimeout-Bn2K5TYG.js";import"./ButtonBase-Z-MGLh88.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-B0zbCkH8.js";import"./Paper-mhgVS_uG.js";import"./useTheme-DO7dZYA7.js";import"./useTheme-D1zuUO8e.js";import"./Stack-BSZBaPmG.js";import"./extendSxProp-9cMljFx5.js";import"./getThemeProps-DNYjrSwN.js";import"./Box-mWMALOus.js";import"./AlertTitle-m68_MPj5.js";import"./Typography-7LVqlzoQ.js";import"./index-CwGSJ5dj.js";import"./ClickAwayListener-DcwV8dky.js";import"./getReactElementRef-Ps-f7eKg.js";import"./index-XxObJK5o.js";import"./index-nNjREFEA.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DzrXL7gM.js";import"./Tooltip-BKdee5xx.js";import"./index-D65xsDcS.js";import"./useControlled-CrGo9MTn.js";import"./Popper-BeeuG86A.js";import"./Button-D5076Oxi.js";import"./uniqueId-DoWsN8ZP.js";import"./toString-CO5YCBid.js";import"./isArray-xHMFFYhw.js";import"./isSymbol-BEwM0VUQ.js";import"./times-DLaYzIvl.js";import"./_Uint8Array-BWgfEmFY.js";import"./identity-DKeuBCMA.js";import"./toInteger-DeN10Eni.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-DdLEtQxq.js";import"./QueryClientProvider-CGLdhYBU.js";import"./Link-lxWKc_ox.js";import"./Collapse-Bv5dU9k5.js";import"./_baseUniq-BmE0A_Xr.js";import"./_getTag-Gpw-hnp_.js";import"./isEqual-DhLJQUGp.js";import"./merge-C2LH0t1x.js";import"./_initCloneObject-CfrF0OoR.js";import"./tinycolor-Begke6kS.js";import"./Fade-BIiVZsiZ.js";import"./inputBaseClasses-BXrTwmtb.js";import"./calculateFriendlyFileSize-Da5J-8Wb.js";import"./CheckCircleTwoTone-BDAODfpi.js";import"./InfoTwoTone-CxGbcOZj.js";import"./useMutation-9nl8qwzg.js";import"./dayjs.min-fPgISjHY.js";import"./chunk-AYJ5UCUI-Be12IADQ.js";import"./cloneDeep-BDjbbeKs.js";import"./Skeleton-B7HWIVJV.js";import"./AccountLevelBadge-1PLzgUbq.js";import"./Card-ChT8k6dC.js";import"./ConfirmationDialog-DZmjMZhF.js";import"./DialogBase-C6ZM2WDW.js";import"./Close-zqeEhJdX.js";import"./HelpPopover-rv0dJuV9.js";import"./MarkdownPopover-DuRAV91w.js";import"./LightTooltip-Cm_PoHec.js";import"./MarkdownSynapse-tBrP3dAz.js";import"./SkeletonButton-Bo5n7eSe.js";import"./SkeletonInlineBlock-CQ2cg9rb.js";import"./SkeletonTable-B__cBoGS.js";import"./SkeletonParagraph-Bqdfds8k.js";import"./HelpOutlineTwoTone-CeblfON8.js";import"./DialogTitle-Cna8JZyU.js";import"./DialogContent-Ds8Uq_ae.js";import"./Dialog--qdycZ49.js";import"./Modal-yvkAunG4.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-DHEWrQNO.js";import"./LoadingScreen-DSdAJTyR.js";import"./LinearProgress-CpxbK2cj.js";import"./ToastMessage-BRIVeS6g.js";import"./CSSTransition-DBpDS59a.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
