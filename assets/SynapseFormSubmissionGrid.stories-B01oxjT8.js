import{j as l}from"./jsx-runtime-BGAr_H6J.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-BI5WaB2N.js";import{g as T}from"./handlers-DTjI8dtY.js";import{aD as S,M as a}from"./useFiles-CUgp-bJ5.js";import"./OrientationBanner-CwmgbjT1.js";import"./index-CBNOfi9b.js";import"./StringUtils-DN6u4g4A.js";import{l as _}from"./index-Bh1yARfc.js";import{S as E}from"./SynapseFormSubmissionGrid-Cg7raZPh.js";import"./mockSchema-2Lz7aZHu.js";import"./mockFileEntity-D1E_Hb1_.js";import"./mock_file_handle-CFTRkxcS.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-gnx7I4oi.js";import"./mockTeam-BXsmjD1o.js";import"./SynapseConstants-BEbm2BNF.js";import"./uniqueId-B5Xx2N1K.js";import"./toString-B18YgA5k.js";import"./isObjectLike-CM6iWqWY.js";import"./iframe-Bz49s2ek.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-D-UeOBse.js";import"./times-BFf5JBXq.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-CbgnmVti.js";import"./asyncJobHandlers-Dz1Ob9ht.js";import"./BasicMockedCrudService-DORLhYRt.js";import"./cloneDeep-CpnMvqCH.js";import"./_Uint8Array-BMQd7pdf.js";import"./_initCloneObject-D_6r56Q0.js";import"./_getTag-CICsfDiG.js";import"./isEqual-Dsql6eRH.js";import"./_baseIsEqual-UKYRkdWd.js";import"./mockAnnotationColumns-DH_FuMk7.js";import"./tableQueryHandlers-CbhWH7Ka.js";import"./omit-DM-z2WXu.js";import"./_baseGet-CVGgQAio.js";import"./isNil-DtAF69a6.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BMUIzKJf.js";import"./_baseFlatten-iE5W60Hy.js";import"./pick-bIt_s7uy.js";import"./_baseSet-hClTUX9X.js";import"./hasIn-Bw19DFou.js";import"./accessRequirementAclHandlers-BcZrue8g.js";import"./mockAccessRequirementAcls-D8c4s3gx.js";import"./mockAccessRequirements-CxwFiQfI.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CgjxDh2Q.js";import"./accessRequirementHandlers-BI0GCIKF.js";import"./wikiHandlers-DvBWFz6E.js";import"./mockWikiPageKey-Baf4twp2.js";import"./teamHandlers-2__SRV6K.js";import"./dataAccessRequestHandlers-CjaG2Q0v.js";import"./MockResearchProject-P-mb1V9F.js";import"./mock_discussion-8-sFfcNW.js";import"./fakerUtils-CjR6I31a.js";import"./index-KJbKbgLS.js";import"./mockTableEntity-BvFd6IU2.js";import"./mockFileEntityACLVariants-DckfVtvn.js";import"./entityHandlers-BSJPilZV.js";import"./mockEntity-BauFjhdG.js";import"./mockEvaluationQueue-ChpMa4se.js";import"./featureFlagHandlers-BnHwNCae.js";import"./fileHandlers-DradoC29.js";import"./personalAccessTokenHandlers-CWKe9PNM.js";import"./researchProjectHandlers-DDIuJRvk.js";import"./resetTwoFactorAuthHandlers-CPhNZH7e.js";import"./userProfileHandlers-BwRI_Ftr.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-8dlZc-k1.js";import"./FullWidthAlert-CZGhZILF.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-BCPuGqa7.js";import"./createTheme-BS2Hxz2C.js";import"./resolveComponentProps-CIYnEhb-.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-iaYYc9cH.js";import"./createSvgIcon-BH1qGqe_.js";import"./DefaultPropsProvider-C6M_N1al.js";import"./Close-8S-yuGkV.js";import"./IconButton-BHS8NsAP.js";import"./ButtonBase-MOgQUm9a.js";import"./useTimeout-DSVaU9sB.js";import"./useIsFocusVisible-5-ZlgN9V.js";import"./useEventCallback-viMIHUvK.js";import"./Paper-WIHJYIv3.js";import"./Stack-C_q3MTiC.js";import"./getThemeProps-pJg6N0Fu.js";import"./useTheme-DV8_YPZg.js";import"./Box-Ci6k8vkL.js";import"./AlertTitle-C5rWDhGv.js";import"./Typography-DukInDzv.js";import"./useTheme-CRJ8F4UU.js";import"./Grow-BQyhnjKi.js";import"./index-842qkzaE.js";import"./utils-DswcbYna.js";import"./ClickAwayListener-DtNMOS5b.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-8CUwFe3k.js";import"./index-CfXlikfe.js";import"./useControlled-Dm9u6Igu.js";import"./useId-CtRXL8u3.js";import"./Popper-BqzUuKEl.js";import"./Button-CD9r6Dww.js";import"./useQuery-T8y6ai37.js";import"./utils-DNqFuDFi.js";import"./Link-DtnlThUQ.js";import"./Collapse-BgbjfOQO.js";import"./tinycolor-Begke6kS.js";import"./Fade-C7Q7hfy9.js";import"./Skeleton-6KImEvG6.js";import"./inputBaseClasses-C-bNqgbr.js";import"./calculateFriendlyFileSize-Cdyr_EDz.js";import"./CheckCircleTwoTone-1HEsco6v.js";import"./InfoTwoTone-Dm-TNOU9.js";import"./mutation-CVy7um_a.js";import"./dayjs.min-CfPuZ0Gd.js";import"./chunk-AYJ5UCUI-BqUDfuKM.js";import"./index-DACJwC5s.js";import"./react-BlXBSA_S.js";import"./util-1MpYx0kR.js";import"./WideButton-D61DE2b5.js";import"./DeleteTwoTone-Cf4PGMBt.js";import"./createSvgIcon-CSxYGI7t.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-C5IBdctz.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-yGhyR-Na.js";import"./DialogBase-BIYvxuv_.js";import"./Close-RH6TzyIS.js";import"./HelpPopover-uBh0bAyd.js";import"./MarkdownPopover-BoF22pP1.js";import"./LightTooltip-BRWP6_2R.js";import"./MarkdownSynapse-B1me5itT.js";import"./useMutation-B13Z37nL.js";import"./SkeletonButton-DxJ8_eb7.js";import"./SkeletonInlineBlock-CKtNsQDI.js";import"./SkeletonTable-ES3cTZms.js";import"./SkeletonParagraph-D9XjKQKC.js";import"./HelpOutlineTwoTone-CF5v5_Fc.js";import"./DialogTitle-ESaea_R5.js";import"./DialogContent-_JlbbfIP.js";import"./Dialog-CmRY58Y-.js";import"./Modal-CXHFwGZe.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-D0-rmjlZ.js";import"./WarningDialog-AQXjsxCf.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},To={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const _o=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,_o as __namedExportsOrder,To as default};
