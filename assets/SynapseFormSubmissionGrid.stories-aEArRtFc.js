import{j as l}from"./jsx-runtime-BSDkjlWP.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-DkQPdOo6.js";import{aH as S,M as a}from"./useFiles-CZsA5Qbe.js";import"./OrientationBanner-D5sJkCGc.js";import"./index-C5la8P61.js";import"./StringUtils-Df7AZImX.js";import{l as _}from"./index-K2rA1iYw.js";import{S as E}from"./SynapseFormSubmissionGrid-CLYuhFTJ.js";import"./mockSchema-DQB84jPa.js";import"./mockFileEntity-lj_oIKci.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-DLBal2yt.js";import"./mockTeam-DrIDrIRT.js";import"./SynapseConstants-vcY9rUFQ.js";import"./uniqueId-DF_XNRmE.js";import"./toString-DdeBW9bk.js";import"./isObjectLike-k4kl7PfQ.js";import"./iframe-CpEO7aLV.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-D-4sADwM.js";import"./times-D810fRPe.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-C9wYIDOk.js";import"./asyncJobHandlers-BGxtvpf4.js";import"./BasicMockedCrudService-aCxauf8p.js";import"./cloneDeep-jr1Kpy2S.js";import"./_Uint8Array-E7WFpk-u.js";import"./_initCloneObject-BFRTamF7.js";import"./_getTag-D5ek6wSw.js";import"./isEqual-RCY8KJA0.js";import"./_baseIsEqual-CPf1wA0P.js";import"./mockAnnotationColumns-D1rJ6XEk.js";import"./tableQueryHandlers-C7Pc5Cfd.js";import"./omit-BN34rELC.js";import"./_baseGet-BCs8zo3x.js";import"./isNil-BXln-Rw9.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-kqURPiz6.js";import"./_baseFlatten-u7JQskS0.js";import"./pick-D4MERBUh.js";import"./_baseSet-DYSjwchE.js";import"./hasIn-Dq8sZqEk.js";import"./accessRequirementAclHandlers-odcEaZj_.js";import"./mockAccessRequirementAcls-CIdGLjM_.js";import"./mockAccessRequirements-Do2pVEM0.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-D0bToNQu.js";import"./wikiHandlers-YYJYAb-6.js";import"./mockWikiPageKey-Co64sv33.js";import"./teamHandlers-DvBZEZXl.js";import"./dataAccessRequestHandlers-Co0ZqlS0.js";import"./MockResearchProject-B2sbBauR.js";import"./mock_discussion-BQIl9Meo.js";import"./fakerUtils-roEUqdnR.js";import"./index-DuzDRq1K.js";import"./mockTableEntity-CI9gjNw4.js";import"./mockFileEntityACLVariants-C3qWrWOJ.js";import"./entityHandlers-CMto9nlK.js";import"./mockEntity-Dh8eweOl.js";import"./mockEvaluationQueue-DiJ90f9X.js";import"./featureFlagHandlers-Cf7kF5Y9.js";import"./fileHandlers-BtgJmEB3.js";import"./personalAccessTokenHandlers-BVZG-Hkw.js";import"./researchProjectHandlers-B0GlNZXs.js";import"./resetTwoFactorAuthHandlers-C59klb4f.js";import"./userProfileHandlers-DgXj1tpv.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-D5hN35Nq.js";import"./FullWidthAlert-B6cMQssk.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-CNReWYbj.js";import"./createTheme-CcZqtVQC.js";import"./resolveComponentProps-WbVcNb2t.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-C-qyZ7hs.js";import"./createSvgIcon-BuoEkjeb.js";import"./DefaultPropsProvider-CCFrHV6G.js";import"./Close-Dmq5Q2BI.js";import"./IconButton-CeBEfxKg.js";import"./ButtonBase-Dj24P196.js";import"./useTimeout-MHdoqxi2.js";import"./useIsFocusVisible-Brkq1bEu.js";import"./useEventCallback-By8RRSD5.js";import"./Paper-BL99ePLy.js";import"./Stack-BZKtOe4B.js";import"./getThemeProps-B-5KhnFs.js";import"./useTheme-DimN_8rV.js";import"./Box-CWVIrzZU.js";import"./AlertTitle-DTLuH1wp.js";import"./Typography-CSVNfWP2.js";import"./useTheme-CzNl4uro.js";import"./Grow-DYzRzPjY.js";import"./index-DFadZPdC.js";import"./utils-q2kOI160.js";import"./ClickAwayListener-Df_B1HkZ.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-Cc_s_Ea-.js";import"./index-CQTG83Ai.js";import"./useControlled-BL8CHqmI.js";import"./useId-CJHw81FJ.js";import"./Popper-Z-Tjlb1o.js";import"./Button-BQQptVZp.js";import"./useQuery-BLfnvJIe.js";import"./utils-Bl63LDw7.js";import"./Link-D383uXAh.js";import"./Collapse-DnVU92Yn.js";import"./tinycolor-Begke6kS.js";import"./Fade-VkwcT0iP.js";import"./Skeleton-BQySDk-s.js";import"./inputBaseClasses-BbfvtJGq.js";import"./calculateFriendlyFileSize-DpIr_Q57.js";import"./CheckCircleTwoTone-RvtZIOI1.js";import"./InfoTwoTone-DmSSeuxV.js";import"./mutation-BOccHYKf.js";import"./dayjs.min-D__DKXuu.js";import"./chunk-AYJ5UCUI-BR7iJ0im.js";import"./index-DPgOB9HS.js";import"./react-J0iAw686.js";import"./util-BCaQXI0O.js";import"./WideButton-C1rMHGsi.js";import"./DeleteTwoTone-CYYUaumR.js";import"./createSvgIcon-CNC2qn7b.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-CU8zqNYe.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-BCKHRcu2.js";import"./DialogBase-Clhr1ZfK.js";import"./Close-D58yVRuY.js";import"./HelpPopover-B7MOD_Pb.js";import"./MarkdownPopover-Ct88UVtv.js";import"./LightTooltip-DafZKvbj.js";import"./MarkdownSynapse-CSD_n8au.js";import"./SkeletonButton-KxtiKdna.js";import"./SkeletonInlineBlock-BNPmfQp_.js";import"./SkeletonTable-rx4VV35m.js";import"./SkeletonParagraph-C8aKAP0Y.js";import"./HelpOutlineTwoTone-B-rR6HGl.js";import"./DialogTitle-DThwa6a7.js";import"./DialogContent-C6jZvfC-.js";import"./Dialog-DjPxoAs8.js";import"./Modal-BNZPQ3HB.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-DY38PZk5.js";import"./WarningDialog-Day7Dr1n.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
