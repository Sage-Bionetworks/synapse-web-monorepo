import{j as l}from"./jsx-runtime-MbANjM5d.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-DNIoF_D5.js";import{aH as S,M as a}from"./useFiles-r0U6RSjO.js";import"./OrientationBanner-Csl-2pZk.js";import"./index-Stft8yAF.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-DNq32Zb8.js";import{S as E}from"./SynapseFormSubmissionGrid-DPsMkwC2.js";import"./mockSchema-DUDAiHiF.js";import"./mockFileEntity-CSK_3hqJ.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-DZVD_8bw.js";import"./mockTeam-w7-V6F7p.js";import"./SynapseConstants-Ddv_sASQ.js";import"./uniqueId-nutccZnb.js";import"./toString-xp1OkfS8.js";import"./isObjectLike-CGmwipMX.js";import"./iframe-Eyx7BfFH.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-B43JR4dv.js";import"./times-DgQCrNkG.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-CAWntfGl.js";import"./asyncJobHandlers-DGxOsBVM.js";import"./BasicMockedCrudService-B0C0FvQF.js";import"./cloneDeep-UBC5IJiv.js";import"./_Uint8Array-5zdnKaSc.js";import"./_initCloneObject-CWmp2ROs.js";import"./_getTag-BOvE1drH.js";import"./isEqual-CpPaJiLx.js";import"./_baseIsEqual-C_N9kwgW.js";import"./mockAnnotationColumns-fxNMjc58.js";import"./tableQueryHandlers-LPfxUC9V.js";import"./omit-BANb5VpN.js";import"./_baseGet-CFhRBQ39.js";import"./isNil-cy96NJPL.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-D95p5VCO.js";import"./_baseFlatten-uUviGSBo.js";import"./pick-DnqN5Caz.js";import"./_baseSet-B0EmaBiJ.js";import"./hasIn-Bw8cIoI9.js";import"./accessRequirementAclHandlers-ugEtvqfz.js";import"./mockAccessRequirementAcls-UGqUR66m.js";import"./mockAccessRequirements-yl8rE1Kv.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-BPfCW8Z3.js";import"./wikiHandlers-CI93S-Om.js";import"./mockWikiPageKey-Cp-aysdI.js";import"./teamHandlers-B6g2ku6g.js";import"./dataAccessRequestHandlers-CG433QV9.js";import"./MockResearchProject-B-ff12cZ.js";import"./mock_discussion-DagxRAVH.js";import"./fakerUtils-CJYhnIlT.js";import"./index-BPx4BfsD.js";import"./mockTableEntity-BBJnCats.js";import"./mockFileEntityACLVariants-CHzlpU_t.js";import"./entityHandlers-C_Fn0DsD.js";import"./mockEntity-IWjXAT1u.js";import"./mockEvaluationQueue-C1iRi30u.js";import"./featureFlagHandlers-nAKQEWFr.js";import"./fileHandlers-MzjCU0BG.js";import"./personalAccessTokenHandlers-Bnng4Ykl.js";import"./researchProjectHandlers-BkNM5Pl9.js";import"./resetTwoFactorAuthHandlers-DsZcC3Dw.js";import"./userProfileHandlers-Dw8r_FDv.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-Guw97GTb.js";import"./FullWidthAlert-BXy9FGq7.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-BEs0h04_.js";import"./createTheme-jQ9KZqcc.js";import"./resolveComponentProps-Uv4DXZPh.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CM-vHVZZ.js";import"./createSvgIcon-ahNp5mb4.js";import"./DefaultPropsProvider-FhwSztk3.js";import"./Close-DeUlv-hX.js";import"./IconButton-C3n9Amn2.js";import"./ButtonBase-CfpZjHJu.js";import"./useTimeout-DgOeYeoR.js";import"./useIsFocusVisible-B-x5fER0.js";import"./useEventCallback-stF_Adn8.js";import"./Paper-ClGej5m7.js";import"./Stack-ZfUk0QTF.js";import"./getThemeProps-CwbHPl98.js";import"./useTheme-Cg8edm68.js";import"./Box-BazTlXiX.js";import"./AlertTitle-D4wSndy1.js";import"./Typography-Bp1kuzQ9.js";import"./useTheme-DxzWrAqM.js";import"./Grow-B6bNt6NJ.js";import"./index-BwLOZI6R.js";import"./utils-Q2rLk6hY.js";import"./ClickAwayListener-CzS2Hc3O.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-CGzCAXGw.js";import"./index-D7Er7lOD.js";import"./useControlled-Da1pt4FN.js";import"./useId-CTllctf1.js";import"./Popper-D24yfDla.js";import"./Button-QMhARrEB.js";import"./useQuery-BLYr3XUa.js";import"./utils-BqgeSEgy.js";import"./Link-hNn2B0Ku.js";import"./Collapse-DchOfKL9.js";import"./tinycolor-Begke6kS.js";import"./Fade-DTssxnyf.js";import"./Skeleton-9Zi_XDpB.js";import"./inputBaseClasses-DZEjAUWo.js";import"./calculateFriendlyFileSize-_EOO9nxF.js";import"./CheckCircleTwoTone-WWJOEVUL.js";import"./InfoTwoTone-yt1o89I7.js";import"./mutation-oi93bAPr.js";import"./dayjs.min-3V6J6eqe.js";import"./chunk-AYJ5UCUI-DlvXe13e.js";import"./index-D4uvL01q.js";import"./react-Ty8OjFhT.js";import"./util-C-atTiiY.js";import"./WideButton-DQo2P0jp.js";import"./DeleteTwoTone-BQOwYq-B.js";import"./createSvgIcon-BZ8LXVjg.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-D496t4vJ.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-CHky1hm3.js";import"./DialogBase-CL9OUDN3.js";import"./Close-C35uFUyG.js";import"./HelpPopover-D_BoiCBj.js";import"./MarkdownPopover-D_6u08TK.js";import"./LightTooltip-DfG8f8ME.js";import"./MarkdownSynapse-Bgyei_f7.js";import"./SkeletonButton-D6c8ap4r.js";import"./SkeletonInlineBlock-fchMbG23.js";import"./SkeletonTable-N2IyK5Sa.js";import"./SkeletonParagraph-Dy-ZD-BK.js";import"./HelpOutlineTwoTone-tTnlS8FW.js";import"./DialogTitle-BDfSoXPo.js";import"./DialogContent-XvhCH6C8.js";import"./Dialog-CDDYBvoc.js";import"./Modal-DdYZdFnc.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-hWAuyd8W.js";import"./WarningDialog-nhoKJ7Rs.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
