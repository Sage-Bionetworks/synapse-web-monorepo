import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-DKWrsfR3.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-Dgy-cxcj.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-BmZmnryi.js";import"./SynapseConstants-C13SoDMh.js";import"./OrientationBanner-BLSW5725.js";import"./index-VRnyeoRr.js";import"./index-Co6kSeZ4.js";import"./iframe-E9QC53ED.js";import"./spreadSx-CwcO6WA9.js";import"./react-3zvAdkLg.js";import"./FullWidthAlert-BQQ4yDY3.js";import"./Alert-D9b2Jaou.js";import"./createTheme-C4gBf2a4.js";import"./DefaultPropsProvider-61bxVHLz.js";import"./useSlot-DzkULoZG.js";import"./useForkRef-Ie0jToSw.js";import"./createSimplePaletteValueFilter-Di6fTx_Y.js";import"./createSvgIcon-B2xCGPCA.js";import"./Close-Gmlsem60.js";import"./IconButton-CSbPtiTS.js";import"./useTimeout-DdwtR0nj.js";import"./ButtonBase-BVgSALXL.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-st75d_5x.js";import"./Paper-Bk3UaSkA.js";import"./useTheme-BNzonNUR.js";import"./useTheme-g4P-trrK.js";import"./Stack-vQcGt2V6.js";import"./extendSxProp-DjvHTGIN.js";import"./getThemeProps-C4dGaN9v.js";import"./Box-DuaunoIg.js";import"./AlertTitle-BlQPnX9A.js";import"./Typography-D0Pox0eh.js";import"./index-BW1ZnCRi.js";import"./ClickAwayListener-Bs5Cn-b4.js";import"./getReactElementRef-CzBAlckD.js";import"./index-L4uyOg9X.js";import"./index-xRVqPkfL.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BlhGKlVk.js";import"./Tooltip-DDH1jL_v.js";import"./index-DZ-xbKd_.js";import"./useControlled-urFJ8eZT.js";import"./Popper-rS_tjiGt.js";import"./Button-SCmwow4H.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-C_nQkRPK.js";import"./QueryClientProvider-BeCxgO5m.js";import"./Link-h2BZotPB.js";import"./Collapse-Bak0_57i.js";import"./_baseUniq-C1-450lM.js";import"./_Uint8Array-DKto8TjN.js";import"./isArray-CzN_o68b.js";import"./_getTag-q5_1F86d.js";import"./isEqual-CiHPje5G.js";import"./merge-CYB3oyvs.js";import"./_initCloneObject-BkGoruF9.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-DJkg1TX1.js";import"./inputBaseClasses-s48QUKJF.js";import"./calculateFriendlyFileSize-Bo9QkoJO.js";import"./CheckCircleTwoTone-BxTVhx7V.js";import"./InfoTwoTone-B62BC5hf.js";import"./useMutation-BFApg2RG.js";import"./dayjs.min-1FMm97F5.js";import"./chunk-AYJ5UCUI-dfXExToj.js";import"./cloneDeep-CU_BdLCR.js";import"./Skeleton-Bec8Blff.js";import"./SkeletonButton-D2-Axgvf.js";import"./SkeletonInlineBlock--0z21j1u.js";import"./SkeletonTable-BQ53FZrC.js";import"./times-C5OlnX4j.js";import"./toInteger-CTJWjYUb.js";import"./isSymbol-eUljeJX2.js";import"./SkeletonParagraph-CFmXwIfI.js";import"./MarkdownSynapse-BU6PA9m2.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
