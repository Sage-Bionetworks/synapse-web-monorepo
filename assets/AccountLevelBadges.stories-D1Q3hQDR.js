import{g as f}from"./userProfileHandlers-rS2aivhu.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-Cxf8eV4n.js";import{A}from"./AccountLevelBadges-1tgpCerO.js";import"./VerificationSubmission-DHPhgAH7.js";import"./index-Dsi3Wje2.js";import"./OrientationBanner-CJcNE3jz.js";import"./jsx-runtime-CRy6x3sP.js";import"./index-CE2Ac4IV.js";import"./iframe-BdAv9r7b.js";import"./index-33x153AN.js";import"./spreadSx-CwcO6WA9.js";import"./react-BGcvK65e.js";import"./FullWidthAlert-DcvBOpAA.js";import"./Alert-B2s1bC-M.js";import"./createTheme-Chr0Mdmk.js";import"./resolveComponentProps-CP6vIIt2.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-C6Z4Jw8F.js";import"./createSvgIcon-CiHFREdi.js";import"./DefaultPropsProvider-_g6l0FJe.js";import"./Close-BIDKcCyq.js";import"./IconButton-Df9li5yN.js";import"./ButtonBase-D1lRUUMa.js";import"./useTimeout-CBH_whYp.js";import"./TransitionGroupContext-CxN-DzGm.js";import"./useIsFocusVisible-dvxC9prE.js";import"./useEventCallback-B2yVaD7P.js";import"./Paper-BO3sHqW8.js";import"./Stack-N50kn1Mv.js";import"./getThemeProps-BS_qL9ir.js";import"./useTheme-XiVtr3LS.js";import"./Box-etwwWi4O.js";import"./AlertTitle-DpdAxaYw.js";import"./Typography-cABtXJa_.js";import"./useTheme-DiZnRNE7.js";import"./Grow-DjIVuFVR.js";import"./index-e1WoLxJ7.js";import"./utils-BbQ6ehAh.js";import"./ClickAwayListener-Cku9OPRg.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-CSpbyYgv.js";import"./index-D1UKly7L.js";import"./useControlled-DkdtTMBP.js";import"./useId-BRVnYYpi.js";import"./Popper-BLUMdNSt.js";import"./Button-DG4g__Z5.js";import"./util-Fzy3GwE1.js";import"./mockEntity-DGaEJuo9.js";import"./mockFileEntity-LEcnwyIv.js";import"./StringUtils-Bj0SG9ce.js";import"./mock_file_handle-C2NjfX48.js";import"./mockProject-CIC3T_B5.js";import"./mockTeam-D9DE-S2T.js";import"./SynapseConstants-Dr3_l-La.js";import"./uniqueId-CIVu4QNe.js";import"./toString-D9TzDClD.js";import"./isObjectLike-BPkWATOE.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-ByhCwmes.js";import"./times-DT3UiAAp.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DMbp0I6o.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./useQuery-CHFprEsD.js";import"./utils-DzX4tJbb.js";import"./Link-CbuyVXAA.js";import"./Collapse-DQAQjUwZ.js";import"./isNil-shTrIGGc.js";import"./_Uint8Array-B9mZlz1W.js";import"./_baseIsEqual-CRCrmKl4.js";import"./_getTag-DPXvVhQY.js";import"./tinycolor-Begke6kS.js";import"./Fade-BePaFpCm.js";import"./Skeleton-D2sKrEc4.js";import"./inputBaseClasses-CzYtpewL.js";import"./calculateFriendlyFileSize-6zAl83cW.js";import"./CheckCircleTwoTone-t841N9sD.js";import"./InfoTwoTone-ClHbIujv.js";import"./useMutation-Cdlk9RaF.js";import"./isEqual-_ddOeoH0.js";import"./dayjs.min-KU4kcmn5.js";import"./chunk-AYJ5UCUI-Bsd4FnUA.js";import"./cloneDeep-C8UhJl5n.js";import"./_initCloneObject-BYZKyK7O.js";import"./merge-Be5BfqC_.js";import"./AccountLevelBadge-CA2Isok9.js";import"./Card-BMKb8qAW.js";import"./ConfirmationDialog-D9FKhDuR.js";import"./DialogBase-Ce--ZzUH.js";import"./Close-BUQeewLn.js";import"./createSvgIcon-BfeT4iqF.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-C6zfv98b.js";import"./ownerWindow-HkKU3E4x.js";import"./HelpPopover-BIpsNaQq.js";import"./MarkdownPopover-DpsG7j4h.js";import"./LightTooltip-BKz0-sPK.js";import"./MarkdownSynapse-BLXi6IUg.js";import"./SkeletonButton-2nxgRoEB.js";import"./SkeletonInlineBlock-CVbi4qCR.js";import"./SkeletonTable-BFVKwZ3B.js";import"./SkeletonParagraph-DfuEJlc5.js";import"./HelpOutlineTwoTone-Ck9BzNoC.js";import"./DialogTitle-BkRTI5yY.js";import"./DialogContent-BsjKI9qb.js";import"./Dialog-lwPnHZFX.js";import"./Modal-yXTVJYSY.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-BiH4YTul.js";import"./LoadingScreen-B-sF4Vvf.js";import"./LinearProgress-DT084dyS.js";import"./ToastMessage-D9WGNpua.js";import"./CSSTransition-DYcQkYOh.js";const Pt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Vt=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Vt as __namedExportsOrder,Pt as default};
