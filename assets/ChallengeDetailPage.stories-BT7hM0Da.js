import{hj as s}from"./iframe-DkJtXMGY.js";import{C as c}from"./ChallengeDetailPage-CmpMaRVQ.js";import"./index-r8ZA1smB.js";import"./useGetEntityChallenge-B89uhoJM.js";import"./useTeamMembers-D6CnY3Vp.js";import"./useGetUserTeams-BEpLew8L.js";import"./useInfiniteQuery-iYy68X6j.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./ChallengeRegisterButton-DeX4-6RK.js";import"./ExitToApp-BbwBHH2G.js";import"./SpinnerButton-DAg_Lbwj.js";import"./LoginAwareButton-CoKKPZ21.js";import"./useAccessRequirements-WV52cU1E.js";import"./index-BhkdXidL.js";import"./_baseOrderBy-B-3aV5TD.js";import"./_baseIteratee-fqRe5hEX.js";import"./_baseMap-lB5D5faS.js";import"./_baseEach-BWCq4nkB.js";import"./useQueries-Z-3gwq5U.js";import"./useEntity-CO16wdW2.js";import"./pickBy-TCGe6MDQ.js";import"./isString-BGlEt5YE.js";import"./queryOptions-C9woPjwX.js";import"./useEntityBundle-B1ApGHDu.js";import"./AccessRequirementList-Chq4wNsU.js";import"./groupBy-CDC241_8.js";import"./_createAggregator-yAzaqnfe.js";import"./DialogBase-buJoyvfa.js";import"./Close-BlNc4-DS.js";import"./HelpPopover-Bw54_hwN.js";import"./MarkdownPopover-HbQMpPTM.js";import"./LightTooltip-DemkIWEH.js";import"./MarkdownSynapse-Cj88j8IZ.js";import"./SkeletonButton-Wvy1B_g_.js";import"./SkeletonInlineBlock-BZs9NYqd.js";import"./SkeletonTable-Boy2sN_O.js";import"./SkeletonParagraph-D2M_qyIo.js";import"./EntityLink-BqpJWKI0.js";import"./useGetEntityHeaders-BV7RK0QT.js";import"./EntityIcon-Ll_hyWOT.js";import"./ErrorChip-CrnWChky.js";import"./Chip-C5Eg6zQf.js";import"./UserOrTeamBadge-yADcIefg.js";import"./UserBadge-D10KGNES.js";import"./MenuItem-__VZzdvD.js";import"./Card-BrdkgB5x.js";import"./TeamBadge-Cz3XVBkB.js";import"./UnmanagedACTAccessRequirementItem-D96nOoDD.js";import"./RequirementItem-BcnU9vZO.js";import"./LockTwoTone-qAEF7vz4.js";import"./UserSearchBoxV2-q9HR-Gu6.js";import"./useDebouncedEffect-CbC68BJS.js";import"./use-deep-compare-effect.esm-aTxZvlU9.js";import"./uniq-BY50vU0D.js";import"./without-BNFOWFRc.js";import"./Select-aab027f3.esm-BlNTofID.js";import"./defineProperty-CegpTSss.js";import"./ManagedACTAccessRequirementItemView-BCkmC8nL.js";import"./SelfSignAccessRequirementItem-CNK61cHn.js";import"./DataAccessRequestAccessorsFilesForm-BNZ__XPG.js";import"./enums-DEEgdRlW.js";import"./_arrayReduce-CrxnWFSq.js";import"./forEach-B8iwwgef.js";import"./useDataAccessSubmission-BStWTxwZ.js";import"./RadioGroup-CGXPC58P.js";import"./Radio-DnYOEHwV.js";import"./SwitchBase-LVCk0Af2.js";import"./FormGroup-DCl1RDUc.js";import"./FormControlLabel-BtRUWfK0.js";import"./UploadDocumentField-EHY1DS9K.js";import"./FileUpload-D3Jh9cWd.js";import"./ManagedACTAccessRequirementFormWikiWrapper-BCBUP1m3.js";import"./GridLegacy-kxAEsx-9.js";import"./ResearchProjectForm-BAy58JNI.js";import"./TextFieldWithWordLimit-D0FIPXnt.js";import"./AuthenticatedRequirement-YIDpiXAR.js";import"./CertificationRequirement-CoVie8DY.js";import"./TwoFactorAuthEnabledRequirement-g8-qdRl7.js";import"./ValidationRequirement-D63edw6H.js";import"./ChallengeTeamWizard-DAtEAEBu.js";import"./CreateChallengeTeam-B7yVVTWm.js";import"./useTeam-_2HgBmOm.js";import"./papaparse.min-D1KxGBLm.js";import"./Search-YNLkUiEj.js";import"./Box-Bc8zTrL5.js";import"./DataGrid-DbkzI70q.js";import"./index-C-_p9hnQ.js";import"./index-Chjiymov.js";import"./index-nQ7cDiJu.js";import"./Switch-BOtVrk-T.js";import"./ListItemIcon-CKBraPLc.js";import"./Badge-DvAhZHUM.js";import"./usePreviousProps-B2s_NTFp.js";import"./Autocomplete-D8JJjyd7.js";import"./KeyboardArrowRight-DbHT7G6L.js";import"./LastPage-DKJIzEoY.js";import"./ListItemText-CZ27qOtB.js";import"./Checkbox-1S1SsZEO.js";import"./InputAdornment-C08nIKom.js";import"./extends-CF3RwP-h.js";import"./ConfirmationDialog-DYXCYbxt.js";const mo={title:"Synapse/Challenge/ChallengeDetailPage",component:c,parameters:{backgrounds:{default:"Challenge Header",values:[{name:"Challenge Header",value:"#3E68AA"}]}}},r={args:{projectId:s.id},parameters:{stack:"mock"}},o={args:{projectId:"syn51208606"},parameters:{stack:"production"}};var t,m,p;r.parameters={...r.parameters,docs:{...(t=r.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    projectId: mockProject.id
  },
  parameters: {
    stack: 'mock'
  }
}`,...(p=(m=r.parameters)==null?void 0:m.docs)==null?void 0:p.source}}};var i,e,a;o.parameters={...o.parameters,docs:{...(i=o.parameters)==null?void 0:i.docs,source:{originalSource:`{
  args: {
    projectId: 'syn51208606'
  },
  parameters: {
    stack: 'production'
  }
}`,...(a=(e=o.parameters)==null?void 0:e.docs)==null?void 0:a.source}}};const po=["MockDemo","ProductionDemo"];export{r as MockDemo,o as ProductionDemo,po as __namedExportsOrder,mo as default};
