import{M as E,f as _}from"./useFiles-BWuLPj2y.js";import{l as h}from"./index-2wuVB_WI.js";import{j as r}from"./jsx-runtime-pz7QQOmo.js";import"./VerificationSubmission-CMrrYimb.js";import"./StringUtils-Bdqa-HwM.js";import"./OrientationBanner-DLGwKdIZ.js";import"./index-BkKaf4Ho.js";import{n as x}from"./useAccessRequirements-Cyy-lGNR.js";import{p as T}from"./pluralize-CisYQK0P.js";import{E as O}from"./EntityLink-Bq4FjTXG.js";import{T as M}from"./Typography-BpEg9lnQ.js";import{L as S}from"./List-dMZ8r_t4.js";import{L as k}from"./ListItem-BqGdv7x9.js";import{A as C}from"./Alert-DZ1-YJ5J.js";import"./SynapseConstants-DqbwpJte.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useTimeout-BnD3DM9b.js";import"./FullWidthAlert-FMrKqPy0.js";import"./spreadSx-CwcO6WA9.js";import"./Stack-BBjhye3J.js";import"./DefaultPropsProvider-C6A-qVkx.js";import"./createTheme-DuUL91l1.js";import"./extendSxProp-CHVZ7BAY.js";import"./getThemeProps-Co--yioZ.js";import"./useTheme-imrqGidV.js";import"./Box-6XLjaT8E.js";import"./AlertTitle-DFP-OzT0.js";import"./useForkRef-eaA_P2jt.js";import"./useSlot-CseuYiCV.js";import"./useTheme-BDljqhle.js";import"./ClickAwayListener-B1qmSzfh.js";import"./getReactElementRef-D4-PQAOY.js";import"./index-BgycnQqH.js";import"./iframe-N1NjX4sZ.js";import"./index-BP3TMka1.js";import"./ownerDocument-DW-IO8s5.js";import"./Paper-LNXwjcQq.js";import"./Grow-D5vDP2u6.js";import"./Tooltip-WBrotzIj.js";import"./index-ClAHp6dc.js";import"./useControlled-DTMPcRAW.js";import"./Popper-CkYnXUnB.js";import"./isFocusVisible-B8k4qzLc.js";import"./Button-Qd13FJKn.js";import"./createSimplePaletteValueFilter-CkIxcuNr.js";import"./ButtonBase-DWWY2pSR.js";import"./CircularProgress-D_SqX67-.js";import"./useQuery-RMpGeomP.js";import"./utils-BWibdo-S.js";import"./Link-xhuw0OcQ.js";import"./Collapse-B1KAEHuI.js";import"./_baseUniq-BLvPIbux.js";import"./_Uint8Array-7x4Mh3s-.js";import"./_baseTimes-36S_kd0L.js";import"./isObjectLike-BuDkcWZ-.js";import"./isArray-Dxzbedgu.js";import"./_getTag-DxNqHPDO.js";import"./isEqual-G1MPuDt_.js";import"./merge-CQYn9gHb.js";import"./_initCloneObject-y7vXpgAY.js";import"./identity-DKeuBCMA.js";import"./createSvgIcon-CKu4rHpW.js";import"./tinycolor-Begke6kS.js";import"./Fade-wXtwH8d6.js";import"./inputBaseClasses-BeK6_XdW.js";import"./calculateFriendlyFileSize-BXRB4AoI.js";import"./CheckCircleTwoTone-C1MTqsoH.js";import"./InfoTwoTone-HVwsLyYe.js";import"./index-Dq4jw88k.js";import"./useMutation-D2BXtkSL.js";import"./dayjs.min-Z4mswLOl.js";import"./chunk-AYJ5UCUI-DhqXvRZD.js";import"./cloneDeep-DFx8R1y8.js";import"./Skeleton-BYFliYg3.js";import"./util-CYkx4Vja.js";import"./index-3beyqzOm.js";import"./react-C3MJ79ut.js";import"./index-CwTNbACH.js";import"./_baseOrderBy-BxRYNIUw.js";import"./toString-BSAfEQtx.js";import"./isSymbol-C7byGtnP.js";import"./_baseGet-DVy17Hl8.js";import"./_baseIteratee-CFstaHHa.js";import"./hasIn-D7zJYzMR.js";import"./_baseMap-Cs9RBMsz.js";import"./_baseEach-B56njgcQ.js";import"./useQueries-BjIN_Vyp.js";import"./useInfiniteQuery-Wtq0U4aZ.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./useEntity-ksJUqELN.js";import"./pickBy-CxobrQno.js";import"./isString-B2btVYDb.js";import"./toInteger-IPUHDOyO.js";import"./pick-B8Rhxkaw.js";import"./_baseSet-Bwjr8z7F.js";import"./omit-DMTxnEkd.js";import"./_baseSlice-F8doVSIJ.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntityBundle-_PHcs3in.js";import"./useGetEntityHeaders-B5_qhHBv.js";import"./EntityIcon-D-Q_Spbn.js";import"./IconSvg-DJonvVyi.js";import"./LayersTwoTone-DL9zv7Uh.js";import"./ContentCopyTwoTone-D_KKOSHT.js";import"./HelpOutlineTwoTone-DSkkLw2N.js";import"./ErrorOutlined-CC8nXaIg.js";import"./GetAppTwoTone-DuKqVh0E.js";import"./InfoOutlined-BK8cDlWa.js";import"./PhoneTwoTone-Da48eZ4e.js";import"./DeleteTwoTone-D3q7B9Uy.js";import"./ErrorChip-C2P0agf4.js";import"./Chip-CYo2stdT.js";import"./Avatar-MeCJM9NU.js";import"./isHostComponent-DVu5iVWx.js";import"./isMuiElement-BCiVhV5N.js";import"./listItemButtonClasses-BWEIt3UM.js";import"./Close-DeVmZdlb.js";import"./IconButton-jzK83RDC.js";const c=p=>{const n={ids:[p.accessRequirementId]},{data:e,isError:a,error:f}=x(n),t=(e==null?void 0:e.pages.flatMap(o=>o.results)[0])??void 0,d=(t==null?void 0:t.relatedProjectIds.length)||0,A=`${T("project",d,!0)}${d>0?":":""}`;return r.jsxs(r.Fragment,{children:[t&&r.jsxs(r.Fragment,{children:[r.jsx(M,{variant:"body1",children:A}),r.jsx(S,{sx:{listStyleType:"disc",pl:4},children:t.relatedProjectIds.map(o=>r.jsx(k,{sx:{display:"list-item",py:"4px",".no-margin-y":{my:0}},children:r.jsx(O,{entity:o,link:!1,showIcon:!1,className:"no-margin-y"})},o))})]}),a&&r.jsx(C,{severity:"error",children:f.message})]})};try{c.displayName="AccessRequirementRelatedProjectsList",c.__docgenInfo={description:"",displayName:"AccessRequirementRelatedProjectsList",props:{accessRequirementId:{defaultValue:null,description:"",name:"accessRequirementId",required:!0,type:{name:"number"}}}}}catch{}const He={title:"Governance/AccessRequirementRelatedProjectsList",component:c},i={args:{accessRequirementId:9603055}},s={args:{accessRequirementId:9605913}},m={args:{accessRequirementId:1234567},parameters:{stack:"mock",msw:{handlers:[h.rest.post(`${E}${_}`,async(p,n,e)=>{const a={results:[{id:"1234567",type:"org.sagebionetworks.repo.model.ManagedACTAccessRequirement",createdOn:"2017-08-23T18:48:20.892Z",modifiedOn:"2023-12-14T00:43:41.315Z",name:"Team AR without Related Projects",version:"1",relatedProjectIds:[],reviewerIds:[]}]};return n(e.status(200),e.json(a))})]}}};var l,u,R;i.parameters={...i.parameters,docs:{...(l=i.parameters)==null?void 0:l.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 9603055
  }
}`,...(R=(u=i.parameters)==null?void 0:u.docs)==null?void 0:R.source}}};var j,g,y;s.parameters={...s.parameters,docs:{...(j=s.parameters)==null?void 0:j.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 9605913
  }
}`,...(y=(g=s.parameters)==null?void 0:g.docs)==null?void 0:y.source}}};var I,P,q;m.parameters={...m.parameters,docs:{...(I=m.parameters)==null?void 0:I.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 1234567
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [
      // searchAccessRequirements
      rest.post(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_SEARCH}\`, async (req, res, ctx) => {
        const zeroRelatedProjects = {
          results: [{
            id: '1234567',
            type: 'org.sagebionetworks.repo.model.ManagedACTAccessRequirement',
            createdOn: '2017-08-23T18:48:20.892Z',
            modifiedOn: '2023-12-14T00:43:41.315Z',
            name: 'Team AR without Related Projects',
            version: '1',
            relatedProjectIds: [],
            reviewerIds: []
          }]
        };
        return res(ctx.status(200), ctx.json(zeroRelatedProjects));
      })]
    }
  }
}`,...(q=(P=m.parameters)==null?void 0:P.docs)==null?void 0:q.source}}};const Ke=["ManyProjects","OneProject","ZeroProjectsMock"];export{i as ManyProjects,s as OneProject,m as ZeroProjectsMock,Ke as __namedExportsOrder,He as default};
