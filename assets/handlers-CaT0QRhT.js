import{a as P,b as _,c as k,d as M}from"./mockSchema-D7dMGihe.js";import{g as O}from"./asyncJobHandlers-Difo6jnx.js";import{bI as F,bJ as U,bK as w,bL as D,bM as B,bN as $,bO as L,bP as V,g as j,B as E}from"./useFiles-DsXNnbuB.js";import{l as i}from"./index-8dYqqbvO.js";import{M as G}from"./mockAnnotationColumns-CzJPHrQs.js";import{g as W}from"./accessRequirementAclHandlers-CpWOHCx1.js";import{c as q}from"./accessRequirementHandlers-CwVJTssG.js";import{g as K,a as J}from"./teamHandlers-DnNMjrG7.js";import{g as Y}from"./dataAccessRequestHandlers-Dgf78Ipm.js";import{s as f,p as A}from"./VerificationSubmission-CMrrYimb.js";import{m as R,a as H}from"./mock_discussion-CceK4CUO.js";import{m as X}from"./mockProject-sUqAWyhw.js";import{M as m}from"./mock_user_profile-CCzWeUML.js";import{B as g}from"./BasicMockedCrudService-L6PwXMzD.js";import{g as Q}from"./entityHandlers-V0HBSvRc.js";import{a as b}from"./mockEvaluationQueue-CtH7RcRh.js";import{g as z}from"./featureFlagHandlers-Do0oCwca.js";import{g as Z}from"./fileHandlers-LXQGkM1d.js";import{g as x}from"./personalAccessTokenHandlers-sFVISpZE.js";import{g as tt}from"./researchProjectHandlers-C8N6QiTw.js";import{g as et}from"./resetTwoFactorAuthHandlers-mMhJ6vEW.js";import{f as v}from"./fakerUtils-Cwv0OPfA.js";import{c as st,b as ot,a as rt,g as nt}from"./tableQueryHandlers-C0EnzYQ0.js";import{g as at,a as it}from"./userProfileHandlers-Wj4lHoIS.js";import{b as ut}from"./wikiHandlers-C62zzqf0.js";const y={PENDING:"PENDING",CODE_SENT:"CODE_SENT",FAILED:"FAILED",REVOKED:"REVOKED",VERIFIED:"VERIFIED"},ct=[P,_,k,M];function dt(s){return O(U,o=>F(o),o=>{const r=o.$id,t=ct.find(e=>{var n;return(n=e.$id)==null?void 0:n.includes(r)});if(!t)throw new Error(`Validation schema with id ${r} not found in mock data.`);return{concreteType:"org.sagebionetworks.repo.model.schema.GetValidationSchemaResponse",validationSchema:t}},s)}const lt=new g({initialData:R,idField:"id",autoGenerateId:!0}),S=new g({initialData:H,idField:"id",autoGenerateId:!0});function mt(s,o){return S.getMany(r=>r.forumId===s).filter(r=>{switch(o){case f.NO_FILTER:return!0;case f.DELETED_ONLY:return r.isDeleted;case f.EXCLUDE_DELETED:return!r.isDeleted}})}function pt(s){return[i.rest.get(`${s}${w}/:id`,async(o,r,t)=>{let e=404,n={reason:`MSW could not find a mock forum object with ID ${o.params.id}`};const a=lt.getOneById(o.params.id);return a&&(e=200,n=a),r(t.status(e),t.json(n))}),i.rest.get(`${s}${D}/:id`,async(o,r,t)=>{let e=404,n={reason:`MSW could not find a mock discussion thread bundle object with ID ${o.params.id}`};o.params.id==="messageUrl"&&(n={reason:"GET /thread/messageUrl is not yet implemented"});const a=S.getOneById(o.params.id);return a&&(e=200,n=a),r(t.status(e),t.json(n))}),i.rest.post(`${s}${D}`,async(o,r,t)=>{const e=await o.json(),n=S.create({forumId:e.forumId,projectId:X.id,title:e.title,createdOn:new Date().toISOString(),createdBy:String(m),modifiedOn:new Date().toISOString(),etag:"etag",messageKey:"todo key",numberOfViews:0,numberOfReplies:0,lastActivity:new Date().toISOString(),activeAuthors:[String(m)],isEdited:!1,isDeleted:!1,isPinned:!1});return r(t.status(201),t.json(n))}),i.rest.get(`${s}${B(":forumId")}`,async(o,r,t)=>{const e=o.url.searchParams.get("offset"),n=e?parseInt(e):0,a=o.url.searchParams.get("limit"),u=a?parseInt(a):10,c=o.params.filter??f.EXCLUDE_DELETED,l=mt(o.params.forumId,c),h={results:l.slice(n,n+u),totalNumberOfResults:l.length};return r(t.status(200),t.json(h))}),i.rest.get(`${s}${w}/:id/moderators`,async(o,r,t)=>{const e={results:[String(m)],totalNumberOfResults:1};return r(t.status(200),t.json(e))})]}const ft={creators:[{creatorName:"Farnsworth, Hubert"},{creatorName:"Wong, Amy"}],titles:[{title:"Mathematics of quantum neutrino fields"}],publicationYear:3024};function It(s,o=ft){return[i.rest.get(`${s}${$}/doi`,async(r,t,e)=>t(e.status(201),e.json(o)))]}function gt(s){return[i.rest.get(`${s}${L(":evaluationId")}`,async(o,r,t)=>{let e=404,n={reason:`Mock Service worker could not find a mock evaluation queue with ID ${o.params.evaluationId}`};const a=b.find(u=>u.id===o.params.entityId);return a&&(n=a,e=200),r(t.status(e),t.json(n))}),i.rest.get(`${s}${V}`,async(o,r,t)=>{const n={results:b,totalNumberOfResults:b.length};return r(t.status(200),t.json(n))})]}function N(){return crypto.getRandomValues(new Uint32Array(1))[0]}const ht=()=>`grid-session-${N()*1e5}`,p=new Map;function bt(s){return[i.rest.post(`${s}/repo/v1/grid/session/async/start`,async(o,r,t)=>{const e=`job-${Date.now()}-${Math.random().toString(36).substring(2,9)}`,n=await o.json();return p.set(e,{status:"PROCESSING",startTime:Date.now(),sessionId:ht()}),r(t.status(201),t.json(n))}),i.rest.get(`${s}/repo/v1/grid/session/async/get/:token`,async(o,r,t)=>{const{token:e}=o.params,n=typeof e=="string"?e:e[0],a=p.get(n);return a?(a.status="COMPLETE",r(t.status(200),t.json({concreteType:"org.sagebionetworks.repo.model.grid.GridSession",gridSession:{sessionId:a.sessionId,startedBy:"mockUser",startedOn:new Date().toISOString(),etag:`etag-${Date.now()}`,modifiedOn:new Date().toISOString(),lastReplicaIdClient:1,lastReplicaIdService:1}}))):r(t.status(404),t.text("Job not found"))}),i.rest.post(`${s}/repo/v1/grid/:sessionId/replica`,async(o,r,t)=>{const{gridSessionId:e}=await o.json();if(!Array.from(p.values()).find(c=>c.sessionId===e))return r(t.status(404),t.text("Grid session not found"));const a=N()%1e3,u={concreteType:"org.sagebionetworks.repo.model.grid.GridReplica",replica:{gridSessionId:e,replicaId:a,createdBy:"mockUser",isAgentReplica:!1,createdOn:new Date().toISOString()}};return r(t.status(201),t.json(u))}),i.rest.get(`${s}/repo/v1/grid/:sessionId/presignedUrl`,async(o,r,t)=>{const{sessionId:e}=o.params,n=typeof e=="string"?e:e[0];if(!Array.from(p.values()).find(c=>c.sessionId===n))return r(t.status(404),t.text("Grid session not found"));const u=`https://mock-s3-bucket/${n}/data.csv?presigned=true`;return r(t.status(200),t.json({presignedUrl:u}))})]}function yt(s){return[i.rest.post(`${s}${$}/message`,async(o,r,t)=>{const e=await o.json();return r(t.status(201),t.json(e))})]}const St="https://short.io/abc123",wt=(s,o)=>({id:"123456",originalURL:s,shortURL:St,domain:o}),Dt=()=>[i.rest.post("https://api.short.io/links/public",async(s,o,r)=>{const t=await s.json();return o(r.status(200),r.json(wt(t.originalURL,t.domain)))})];function C(s){return{subscriptionId:String(v.number.int({min:1e3,max:9999})),subscriberId:String(m),createdOn:v.date.anytime().toISOString(),...s}}const jt=R.map(s=>C({objectId:s.id,objectType:A.FORUM})),Et=H.map(s=>C({objectType:A.THREAD,objectId:s.id})),I=new g({initialData:[...jt,...Et],idField:"subscriptionId",autoGenerateId:!0});function T(s,o="ASC",r=0,t=10,e){const n=I.getAll().filter(u=>s?u.objectType===s:!0).filter(u=>e?e.includes(u.objectId):!0).sort((u,c)=>{const l=new Date(c.createdOn).getTime()-new Date(u.createdOn).getTime();return o==="ASC"?l:-1*l}),a=n.length;return{results:n.slice(r,r+t),totalNumberOfResults:a}}function vt(s){return[i.rest.get(`${s}/repo/v1/subscription/all`,async(o,r,t)=>{const e=o.url.searchParams.get("objectType")??void 0,n=o.url.searchParams.get("sortDirection")??void 0,a=o.url.searchParams.get("offset"),u=a?parseInt(a):void 0,c=o.url.searchParams.get("limit"),l=c?parseInt(c):void 0,h=T(e??void 0,n,u,l);return r(t.status(200),t.json(h))}),i.rest.post(`${s}/repo/v1/subscription/list`,async(o,r,t)=>{const e=await o.json(),n=T(e.objectType,e.sortDirection,void 0,void 0,e.idList);return r(t.status(200),t.json(n))}),i.rest.post(`${s}/repo/v1/subscription`,async(o,r,t)=>{const e=await o.json(),n=I.create({subscriberId:String(m),objectId:e.objectId,objectType:e.objectType,createdOn:new Date().toISOString()});return r(t.status(201),t.json(n))}),i.rest.delete(`${s}/repo/v1/subscription/:id`,async(o,r,t)=>{const e=o.params.id;return I.delete(e),r(t.status(200),t.body(""))}),i.rest.post(`${s}/repo/v1/subscription/subscribers`,async(o,r,t)=>{const e=await o.json(),a={subscribers:I.getMany(u=>u.objectType===e.objectType&&u.objectId===e.objectId).map(u=>u.subscriberId)};return r(t.status(200),t.json(a))})]}const d=new g({initialData:[],idField:"id",autoGenerateId:!0});function Tt(s){return[i.rest.get(`${s}/repo/v1/webhook/:webhookId`,async(o,r,t)=>{const e=o.params.webhookId,n=d.getOneById(e);return n?r(t.status(200),t.json(n)):r(t.status(404),t.json({reason:`Webhook with ID ${e} not found`}))}),i.rest.post(`${s}/repo/v1/webhook/list`,async(o,r,t)=>{const e={page:d.getAll()};return r(t.status(200),t.json(e))}),i.rest.post(`${s}/repo/v1/webhook`,async(o,r,t)=>{const e=await o.json(),n=d.create({...e,verificationStatus:y.CODE_SENT});return r(t.status(201),t.json(n))}),i.rest.put(`${s}/repo/v1/webhook/:webhookId`,async(o,r,t)=>{const e=o.params.webhookId,n=await o.json(),a=d.getOneById(e);if(!a)return r(t.status(404),t.json({reason:`Webhook with ID ${e} not found`}));let u=a==null?void 0:a.verificationStatus;a&&a.invokeEndpoint!==n.invokeEndpoint&&(u=y.CODE_SENT);const c=d.update(e,{...n,verificationStatus:u});return r(t.status(201),t.json(c))}),i.rest.post(`${s}/repo/v1/webhook/:webhookId/verify`,async(o,r,t)=>{const e=o.params.webhookId,n=d.getOneById(e);if(!n)return r(t.status(404),t.json({reason:`Webhook with ID ${e} not found`}));const a=d.update(e,{...n,verificationStatus:y.VERIFIED});return r(t.status(201),t.json(a))}),i.rest.put(`${s}/repo/v1/webhook/:webhookId/verificationCode`,async(o,r,t)=>{const e=o.params.webhookId,n=d.getOneById(e);return n?r(t.status(201),t.json(n)):r(t.status(404),t.json({reason:`Webhook with ID ${e} not found`}))}),i.rest.delete(`${s}/repo/v1/webhook/:webhookId`,async(o,r,t)=>{const e=o.params.webhookId;return d.delete(e),r(t.status(200),t.body(""))})]}const $t=(s,o)=>[i.rest.options("*",async(r,t,e)=>t(e.status(200))),i.rest.get(`${s}/auth/v1/authenticatedOn`,async(r,t,e)=>t(e.status(200),e.json({authenticatedOn:new Date().toISOString()}))),...Q(s),...at(s),it(s,!0,!0),...ut(s),...q(s),...W(s),...Y(s),...tt(s),...Z(s),...bt(s),...pt(s),...vt(s),...gt(s),st(s),...ot(G,s),...rt(s),...x(s),...K(s),...J(s),...et(s),...yt(s),z({portalOrigin:o}),...nt(s),...It(s),...Dt(),...Tt(s),...dt(s)];$t(j(E.REPO_ENDPOINT),j(E.PORTAL_ENDPOINT));export{y as W,$t as g};
