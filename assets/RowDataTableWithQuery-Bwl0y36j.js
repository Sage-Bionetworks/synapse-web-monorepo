import{gx as c,j as t,eG as y,a0 as f}from"./iframe-Ci1lmE8g.js";import{p as R}from"./SqlFunctions-DhkJEscO.js";import"./SkeletonButton-CC-6gNoS.js";import"./SkeletonInlineBlock-B2RYwmUI.js";import{S as q}from"./SkeletonTable-DkbE7er9.js";import"./SkeletonParagraph-ITJPOI8x.js";import{R as _}from"./RowDataTable-Dg4Oq0Sn.js";const r=a=>{const{columnAliases:o,columnLinks:n,query:s,displayedColumns:l}=a,i=R(s.sql),u={partMask:y|f,concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",entityId:i,query:s},{data:e,isLoading:d}=c(u),m=(e==null?void 0:e.queryResult.queryResults.rows[0].values)??[],p=(e==null?void 0:e.queryResult.queryResults.headers)??[];return d?t.jsx(q,{numRows:6,numCols:1}):t.jsx(_,{columnAliases:o,columnLinks:n,rowData:m,headers:p,displayedColumns:l})};try{r.displayName="RowDataTableWithQuery",r.__docgenInfo={description:"For the first row returned by the query, displays a table of column names and Synapse Table row data represented as key/value pairs",displayName:"RowDataTableWithQuery",props:{query:{defaultValue:null,description:"The query used to retrieve data",name:"query",required:!0,type:{name:"Query"}},displayedColumns:{defaultValue:null,description:"Optional list of column names whose data should be displayed in the table. If not provided, all columns with data will be shown.",name:"displayedColumns",required:!1,type:{name:"string[]"}},columnAliases:{defaultValue:null,description:"Optional display value overrides for column names",name:"columnAliases",required:!1,type:{name:"Record<string, string>"}},columnLinks:{defaultValue:null,description:"Optional configuration for linking columns",name:"columnLinks",required:!1,type:{name:"LabelLinkConfig"}}}}}catch{}export{r as R};
