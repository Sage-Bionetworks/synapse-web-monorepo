import{g as f}from"./userProfileHandlers-BIaSYm7w.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-C5GiG6iR.js";import{A}from"./AccountLevelBadges-DpvLpcSZ.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-Dp51JxO_.js";import"./iframe-7mSOVxB4.js";import"./mockEntity-Dvwd4BMs.js";import"./mockFileEntity-DZlaFxEu.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-DaUdFazR.js";import"./mockTeam-GvvUqgnt.js";import"./SynapseConstants-DR3ZY5to.js";import"./OrientationBanner-DTwv04dt.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-Cttw0ji8.js";import"./index-DhkrNZP9.js";import"./spreadSx-CwcO6WA9.js";import"./react-DNGujwIQ.js";import"./FullWidthAlert-DqSJWw0w.js";import"./Alert-Bcu7YUGe.js";import"./createTheme-BEG23Ggb.js";import"./DefaultPropsProvider-D8qfDHRM.js";import"./useSlot-Cgv1l8f6.js";import"./useForkRef-DUgLIqtH.js";import"./createSimplePaletteValueFilter-DZHcTxQ7.js";import"./createSvgIcon-qNmQe6T_.js";import"./Close-BDpIkTE7.js";import"./IconButton-DUJ3IKSK.js";import"./useTimeout-Dsks5eoH.js";import"./ButtonBase-ChUbS1mW.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BSbUa5om.js";import"./Paper-BytkjR6o.js";import"./useTheme-DCbcQagQ.js";import"./useTheme-CJKuA382.js";import"./Stack-ChEyF6Lm.js";import"./extendSxProp-k92RHa9w.js";import"./getThemeProps-Bvz_Yv-K.js";import"./Box-GerujGRq.js";import"./AlertTitle-C1GLrwYc.js";import"./Typography-N2x2sTVo.js";import"./index-mhILb2ra.js";import"./ClickAwayListener-tdz5sGJK.js";import"./getReactElementRef-DX99WyYx.js";import"./index-lsxcFOrl.js";import"./index-DLyeVumG.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-j8gNrfr7.js";import"./Tooltip-DytzHFyA.js";import"./index-DCR3wo31.js";import"./useControlled-qZ-DKamJ.js";import"./Popper-DajLVUbX.js";import"./Button-Dze9PDvM.js";import"./uniqueId-BK5vgBGN.js";import"./toString-Dstvm05g.js";import"./isArray-DyXgv0Dp.js";import"./isSymbol-DkZtFhjU.js";import"./times-iyTCHHDT.js";import"./_Uint8Array-CYqUimyu.js";import"./identity-DKeuBCMA.js";import"./toInteger-2PGZO6RB.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-IRTxbv8J.js";import"./QueryClientProvider-BvgHDx5W.js";import"./Link-C0xIS8o2.js";import"./Collapse-CMsDtAkp.js";import"./_baseUniq-BNFfhkx0.js";import"./_getTag-B054JqLn.js";import"./isEqual-CZijml2n.js";import"./merge-DLdcbeqX.js";import"./_initCloneObject-D3LEGgk4.js";import"./tinycolor-Begke6kS.js";import"./Fade-DivBPYoP.js";import"./inputBaseClasses-DS1hE1Od.js";import"./calculateFriendlyFileSize-CRiqTUTG.js";import"./CheckCircleTwoTone-h7KWLQ_B.js";import"./InfoTwoTone-DiY69-1L.js";import"./useMutation-Bd72eRV1.js";import"./dayjs.min-DzXHqPwj.js";import"./chunk-AYJ5UCUI-rnSQre8c.js";import"./cloneDeep-qVXU3mzn.js";import"./Skeleton-BELkBN0u.js";import"./AccountLevelBadge-uSeFnitM.js";import"./Card-Df0-3kQt.js";import"./ConfirmationDialog-Bd28BS5p.js";import"./DialogBase-6oqzs1cM.js";import"./Close-s1mq5GCI.js";import"./HelpPopover-DeFT83oF.js";import"./MarkdownPopover-BdeaiAEz.js";import"./LightTooltip-Br25-K__.js";import"./MarkdownSynapse-g90MzaAQ.js";import"./SkeletonButton-DhAxEJNt.js";import"./SkeletonInlineBlock-pqAvYpmW.js";import"./SkeletonTable-Bz4BZ-L2.js";import"./SkeletonParagraph-C7MtYQwW.js";import"./HelpOutlineTwoTone-BbANbNFP.js";import"./DialogTitle-D5xrQx_Y.js";import"./DialogContent-BwJOf3ZJ.js";import"./DialogActions-BrL_K9to.js";import"./Dialog-BA1Nvt-3.js";import"./Modal-2zRFP0BL.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-J3wN-_xe.js";import"./LoadingScreen-BAj9HGR3.js";import"./LinearProgress-DlHpbgZk.js";import"./ToastMessage-qZHtJJL8.js";import"./CSSTransition-DkUb5Hmj.js";const St={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Et=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Et as __namedExportsOrder,St as default};
