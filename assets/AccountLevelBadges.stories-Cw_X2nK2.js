import{g as f}from"./userProfileHandlers-CiN2vLTS.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-DPmKtaqp.js";import{A}from"./AccountLevelBadges-C12OtZZk.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-DhxQI7UM.js";import"./iframe-DR_wcsJ3.js";import"./mockEntity-CzzaPXhC.js";import"./mockFileEntity-D0R8dfMf.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-Dc6FQp91.js";import"./mockTeam-BGXh1aqZ.js";import"./SynapseConstants-BbI0AJBI.js";import"./OrientationBanner-lZgnnZcG.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-Be2xkMBW.js";import"./index-C4bFWea_.js";import"./spreadSx-CwcO6WA9.js";import"./react-Diy3wJ2J.js";import"./FullWidthAlert-Bm8mD_nI.js";import"./Alert-Gm8LkqSS.js";import"./createTheme-BKtT3vHL.js";import"./DefaultPropsProvider-CsIOc2_l.js";import"./useSlot-ChH1W-cP.js";import"./useForkRef-CReL5Qun.js";import"./createSimplePaletteValueFilter-foGX4r19.js";import"./createSvgIcon-NOjMq3CR.js";import"./Close-MzmSqWNs.js";import"./IconButton-D1l0t7O6.js";import"./useTimeout-Ch_01VeS.js";import"./ButtonBase-DIEaJI0n.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-D37HSALL.js";import"./Paper-C6vQplp2.js";import"./useTheme-C3LmMcRI.js";import"./useTheme-BXNQ9Oj4.js";import"./Stack-wvYbR1wo.js";import"./extendSxProp-T8cT23Rr.js";import"./getThemeProps-DrmqKevn.js";import"./Box-BV9qkT5w.js";import"./AlertTitle-CN8BhV3h.js";import"./Typography-8oN0kMzT.js";import"./index-BgV9qtHJ.js";import"./ClickAwayListener-DGKw14OH.js";import"./getReactElementRef-C5BUXneH.js";import"./index-BqTtgb23.js";import"./index-D8zxXPsW.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BSXzewNv.js";import"./Tooltip-Dnd3ZbUN.js";import"./index-BgIpVkb_.js";import"./useControlled-ibM83Vh5.js";import"./Popper-Bg-xoKDy.js";import"./Button-DlngBMCX.js";import"./uniqueId-vxyFupZU.js";import"./toString-D29nv_O4.js";import"./isArray-DZRaET66.js";import"./isSymbol-oe11Mw4O.js";import"./times-D1l0oIKD.js";import"./_Uint8Array-BTv2MYuK.js";import"./identity-DKeuBCMA.js";import"./toInteger-7BbEDMrt.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-eVv6WEkZ.js";import"./QueryClientProvider-Bhgh6MhR.js";import"./Link-CzopMOzZ.js";import"./Collapse-C2O0PVYE.js";import"./_baseUniq-o-vnUTJB.js";import"./_getTag-D8MmAh0k.js";import"./isEqual-BaO30kUk.js";import"./merge-ykGFvrTe.js";import"./_initCloneObject-RtGkh5Y0.js";import"./tinycolor-Begke6kS.js";import"./Fade-DiIvNAK2.js";import"./inputBaseClasses-B6_bqzpm.js";import"./calculateFriendlyFileSize-D4ChoND8.js";import"./CheckCircleTwoTone-BO-FnXe-.js";import"./InfoTwoTone-CYADDrkm.js";import"./useMutation-CmFUdHTM.js";import"./dayjs.min-ClxLSL3W.js";import"./chunk-AYJ5UCUI-BOl_xBJE.js";import"./cloneDeep-B1_bHtD-.js";import"./Skeleton-DplS7Xu7.js";import"./AccountLevelBadge-C6JgPAXl.js";import"./Card-C0lUGwjo.js";import"./ConfirmationDialog-CSZ2zKHN.js";import"./DialogBase-yDZgwXqo.js";import"./Close-C5m5voD1.js";import"./HelpPopover-DuGu2-2V.js";import"./MarkdownPopover-IUTFvcJe.js";import"./LightTooltip-BI9pnLwu.js";import"./MarkdownSynapse-BMPmhWyK.js";import"./SkeletonButton-BB1wHKKn.js";import"./SkeletonInlineBlock-BXWq-2P2.js";import"./SkeletonTable-BnM8LOBk.js";import"./SkeletonParagraph-Bj3mpYEA.js";import"./HelpOutlineTwoTone-C93qBrbh.js";import"./DialogTitle-BtS3ZGVB.js";import"./DialogContent-GQhsZNra.js";import"./DialogActions-rlIDyA5f.js";import"./Dialog-D4Dlgull.js";import"./Modal-CCaCxt5v.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-CJHEe6Wz.js";import"./LoadingScreen-CROT2vVZ.js";import"./LinearProgress-Z8kghisw.js";import"./ToastMessage-BlAXrom5.js";import"./CSSTransition-Dz2HwWQA.js";const St={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Et=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Et as __namedExportsOrder,St as default};
