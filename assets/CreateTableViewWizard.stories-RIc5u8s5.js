import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{bv as ge}from"./useFiles-CiWZBkKO.js";import{b as se,r as le,h as Ie}from"./VerificationSubmission-BDh1zA9f.js";import{E as r,e as F,q as Ve}from"./StringUtils-NPb0VexC.js";import"./OrientationBanner-CMi5J3Xm.js";import{r as a}from"./index-DVXuPh3J.js";import{q as ve,o as xe}from"./useEntity-DL5t9auw.js";import{u as Oe,a as Le,T as je}from"./TableColumnSchemaForm-DjjZjivn.js";import{u as Pe}from"./useMutation-BE_nYNq6.js";import{D as Ne}from"./DialogBase-D_b0Av88.js";import{E as Ae}from"./EntityViewMaskEditor-DSsGwJX9.js";import{E as Me}from"./EntityViewScopeEditor-WKL7S6BE.js";import{T as R}from"./TextField-DfiVrxu-.js";import{B as C}from"./Box-DHdI_VIg.js";import{T as pe}from"./Typography-B5kl18Sk.js";import{L as T}from"./Link-DjvlLkni.js";import{S as Be}from"./SubmissionViewScopeEditor-DDFqtDTj.js";import{u as me}from"./useGetFeatureFlag-D4DrgZ1S.js";import{W as ce,a as f,b as h}from"./WizardChoiceButton-qf2RG8pv.js";import{i as ke}from"./index-5MLw2Lsl.js";import{A as q}from"./Alert-Dhfyg0x0.js";import{B as Y}from"./Button-CTAUiiqM.js";import{d as De}from"./ToastMessage-DMSGhLBT.js";import{f as We}from"./index-Dkr3Whrv.js";import"./SynapseConstants-BF0xI1nm.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useTimeout-lMzTsu5c.js";import"./FullWidthAlert-D8GNbXzy.js";import"./spreadSx-CwcO6WA9.js";import"./Stack-8QssDc1d.js";import"./DefaultPropsProvider-P-wA5QFY.js";import"./createTheme-DhCIHWzU.js";import"./extendSxProp-CTnaCTz_.js";import"./getThemeProps-CWmg3UDs.js";import"./useTheme-C0vPMqs4.js";import"./AlertTitle-DWvpSUlS.js";import"./useForkRef-DINnoC6x.js";import"./useSlot-sJj7T_V9.js";import"./useTheme-Bw8q8KD5.js";import"./ClickAwayListener-9C0d15Hg.js";import"./getReactElementRef-CbfwcKB1.js";import"./index-C9FXgNRy.js";import"./iframe-CcdBVske.js";import"./index-CJUR3CjR.js";import"./ownerDocument-DW-IO8s5.js";import"./Paper-SRl-J5j-.js";import"./Grow-J7OzO2bk.js";import"./Tooltip-CdyQ0dq6.js";import"./index-DxiwdZ50.js";import"./useControlled-BfSlMi9Y.js";import"./Popper-DsgILYQG.js";import"./isFocusVisible-B8k4qzLc.js";import"./useQuery-DB03csRo.js";import"./QueryClientProvider-BDV_sZ5X.js";import"./Collapse-tnSpEh-M.js";import"./_baseUniq-BZvbcYpQ.js";import"./_Uint8Array-B_QpfvPN.js";import"./isArray-Cl2ALenN.js";import"./_getTag-D4hgnD7J.js";import"./isEqual-B7q4kpMQ.js";import"./merge-lG9uDrSF.js";import"./_initCloneObject-LbJB5-xz.js";import"./identity-DKeuBCMA.js";import"./createSvgIcon-BupLM2YH.js";import"./tinycolor-Begke6kS.js";import"./Fade-BQVsj24k.js";import"./inputBaseClasses-4PWin2zj.js";import"./calculateFriendlyFileSize-Ci7_l22M.js";import"./CheckCircleTwoTone-C_TFawf0.js";import"./InfoTwoTone-wfilD4hN.js";import"./index-Ebch7RO5.js";import"./createSimplePaletteValueFilter-t7pPNWrv.js";import"./dayjs.min-BjRyZKBT.js";import"./chunk-AYJ5UCUI-CRi1VNEj.js";import"./cloneDeep-Cgj8pCn6.js";import"./Skeleton-Ced94OUm.js";import"./index-DxhPwj9j.js";import"./react-BxKwmmbS.js";import"./pickBy-HgOIcUZ0.js";import"./isString-6KjRRtVL.js";import"./toInteger-DwVRmScC.js";import"./isSymbol-U5ztrPps.js";import"./toString-u7Ie6P0T.js";import"./_baseIteratee-YdPUmDX-.js";import"./_baseGet-Ct9JaxED.js";import"./hasIn-C6oa6yzX.js";import"./pick-BzSOZBhv.js";import"./_baseSet-CB7xR6sg.js";import"./omit-Ds-Xf59x.js";import"./_baseSlice-F8doVSIJ.js";import"./useQueries-Ds1qhs_d.js";import"./useInfiniteQuery-COg61YXW.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntityBundle-ChFe4VCd.js";import"./SchemaDrivenAnnotationEditor-CBUOZT2U.js";import"./ConfirmationDialog-BqknS-8A.js";import"./JsonSchemaForm-DmXt6DQ8.js";import"./enums-nvVxiMLC.js";import"./_arrayReduce-CrxnWFSq.js";import"./_baseEach-C7_0jG6c.js";import"./times-B5Zk2SNp.js";import"./uniq-TJBvKOzP.js";import"./forEach-BEd84Fvh.js";import"./GridLegacy-BXQs6jUx.js";import"./MarkdownPopover-C-2IM9DT.js";import"./LightTooltip-BRQJHazD.js";import"./MarkdownSynapse-BChfeZ3l.js";import"./SkeletonButton-BT1TjPSL.js";import"./SkeletonInlineBlock-CCuugtxf.js";import"./SkeletonTable-CFK-Ww2S.js";import"./SkeletonParagraph-D1vBYK5a.js";import"./HelpTwoTone-C2-tXBaX.js";import"./IconButton-C5Mr8mVs.js";import"./ButtonBase-C7m_tL04.js";import"./CircularProgress-xe4givlB.js";import"./InputLabel-DDuFAvC1.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-DQy09Q_l.js";import"./FormLabel-CBCdnrig.js";import"./ContentCopy-IIZ6-JJH.js";import"./Close-nKvPIuF_.js";import"./ArrowUpward-CtGIdrRu.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./groupBy-BgMg7h5Y.js";import"./_createAggregator-B8Pf1Qrp.js";import"./_baseMap-C0OvKeBz.js";import"./List-CVGxBXR_.js";import"./ListItem-D666Llj1.js";import"./isHostComponent-DVu5iVWx.js";import"./isMuiElement-r_peXG3p.js";import"./listItemButtonClasses-B3GG7bE2.js";import"./FormHelperText-CT1ZD5lx.js";import"./DateTimePicker-BMZfRlv3.js";import"./localizedFormat-BBGmjIEb.js";import"./utc-CK9sGMAn.js";import"./useMobilePicker-DHQoYaud.js";import"./index-CLjHaBMF.js";import"./index-Chjiymov.js";import"./CSSTransition-Bq54B9cJ.js";import"./Modal-Cw8KrmK0.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-DMRxNbQ9.js";import"./Dialog-ByaD6_7M.js";import"./DialogContent-DGjGLOBp.js";import"./visuallyHidden-Dan1xhjv.js";import"./FormControl-Cp2vpjbe.js";import"./InputAdornment-BRBV5fxS.js";import"./index-DimV2jzs.js";import"./Chip-CTML24tg.js";import"./Tabs-CiRsEubb.js";import"./debounce-Be36O1Ab.js";import"./KeyboardArrowRight-CsSYZfXY.js";import"./Divider-Dpld24n7.js";import"./dividerClasses-Bleo6Nr_.js";import"./MenuItem-CRwnILF-.js";import"./MenuList-BSDxOg3F.js";import"./Autocomplete-B-ptE8bD.js";import"./Input-dPqxMiAl.js";import"./InputBase-DFYBGQcN.js";import"./Select-DaHaOG_4.js";import"./Menu-BekjjKUo.js";import"./Popover-UqsxV5iO.js";import"./mergeSlotProps-FzBc5PUp.js";import"./Close-Xv7jIJH3.js";import"./usePreviousProps-BtZxnRtZ.js";import"./LoadingScreen-Bp3bCUBo.js";import"./LinearProgress-Cg3SBP5I.js";import"./use-deep-compare-effect.esm-BIRkd6h3.js";import"./TextWidget-sz_z1ynu.js";import"./pluralize-D4CgRm1f.js";import"./MultiValueField-DrLnJ0eX.js";import"./DateFormatter-CDhHGxTh.js";import"./JSONArrayEditorModal-ClLwJfBu.js";import"./papaparse.min-D1KxGBLm.js";import"./EntityFinderModal-DBkCmiwz.js";import"./WarningDialog-CokEXiBh.js";import"./EntityFinder-BlfjFm9C.js";import"./IconSvg-CbKLk6vs.js";import"./LayersTwoTone-D2NnCA-W.js";import"./ContentCopyTwoTone-Dk7hD1Iz.js";import"./HelpOutlineTwoTone-C7V89pG_.js";import"./ErrorOutlined-Dy9NwyU5.js";import"./GetAppTwoTone-28pxkbbA.js";import"./InfoOutlined-Bav64dkP.js";import"./PhoneTwoTone-DewbsmS8.js";import"./DeleteTwoTone-BcbtgZZY.js";import"./Search-B8zkR073.js";import"./immutable.es-BJjDfH8f.js";import"./defineProperty-CegpTSss.js";import"./useEntitySelection-BLk-GJt2.js";import"./useGetEntityChildren-CH-1LjZd.js";import"./StyledTanStackTable-BHoQEEpL.js";import"./StyledTableContainer-BJTuBywx.js";import"./ExpandCollapseButton-CaBhxca3.js";import"./index-BiezS4UC.js";import"./index-DcWOOWrA.js";import"./const-BP60AzNb.js";import"./ColumnHeader-BgNO5gnI.js";import"./EnumFacetFilterUI-5Mfvmpnc.js";import"./FacetFilterHeader-CyZOY41E.js";import"./FormControlLabel-DhLvolU0.js";import"./Checkbox-Ci1CzH-l.js";import"./SwitchBase-b_1CRglw.js";import"./Radio-_msfAZSB.js";import"./useDownloadList-BWtAOLTZ.js";import"./DownloadConfirmationUtils-CgpWbL4f.js";import"./EntityBadgeIcons-C4kPLscV.js";import"./index-c1Fnit5e.js";import"./EntityModal-asi_qeI7.js";import"./FileHandleUtils-D_l0_h2x.js";import"./UserBadge-z8gNJ7MB.js";import"./Card-BNbVc-sJ.js";import"./Avatar-BO4i6kDQ.js";import"./LockTwoTone-fUbbcLxG.js";import"./EntityIcon-C6yIHCRE.js";import"./FileEntityDirectDownload-Dy7eB3ri.js";import"./DirectDownload-G3aR7sJu.js";import"./SynapseTableConstants-2qH3fDlQ.js";import"./HelpPopover-BYfL3T2E.js";import"./useFavorites-8oEccBYt.js";import"./useGetEntityHeaders-CeXBybW3.js";import"./NoSearchResults-vDBq-_M9.js";import"./useSearch-DUho2Oif.js";import"./DropdownSelect-QEVr8uAF.js";import"./getValidReactChildren-DtjpUKu3.js";import"./index.esm-Df4jMviZ.js";import"./DialogTitle-CJRbkWrr.js";import"./FormGroup-1AhHR1Uk.js";import"./EntityHeaderTable-C4hiz-od.js";import"./EntityHeaderTableCellRenderers-DLse1hHv.js";import"./EntityLink-D5Bdpj7M.js";import"./ErrorChip-BnlSnyUU.js";import"./useDebouncedEffect-ara6NA-Q.js";import"./upperFirst-Cv70zqAI.js";import"./_stringToArray-N8cAV6t0.js";import"./useEvaluation-DyYEUylW.js";import"./EvaluationFinder-lSN039a9.js";import"./Grid-D7i9uSYf.js";import"./ListItemIcon-C7TKgIKh.js";import"./ListItemText-DkGb_zo4.js";import"./RadioGroup-b-7vclFr.js";import"./Slider-BtY3KNAo.js";import"./uniqueId-TyUCqP8Y.js";function Fe(t){return Pe({...t,mutationFn:i=>ge(i.sql,i.entityType)})}const qe=e.jsxs(C,{sx:{mb:2.5},children:[e.jsx(pe,{variant:"body1",sx:{color:"grey.700",mb:1.25},children:"If you store normalized data in Synapse tables, views, or datasets, you can combine separate data sources using Materialized Views. A materialized view is a type of Synapse table that is defined using a Synapse SQL statement, which can contain SQL keywords such as JOIN and UNION to combine existing Synapse tables."}),e.jsx(T,{href:"https://help.synapse.org/docs/Combining-Data-from-Multiple-Table-Sources.2973270158.html",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about Materialized Views"})]}),Ye=e.jsx(C,{sx:{mb:2.5},children:e.jsx(pe,{variant:"body1",sx:{color:"grey.700",mb:1.25},children:"A Synapse Virtual Table is a type of table that is defined by a Synapse SQL query. Any query on a Virtual Table will execute the defining SQL statement on the referenced table. The defining SQL of a Virtual Table cannot include JOIN clauses on multiple tables."})});function U(t){const{entityType:i,...s}=t;return e.jsxs(e.Fragment,{children:[i===r.materializedview&&qe,i===r.virtualtable&&Ye,e.jsx(R,{label:"Defining SQL",placeholder:"SELECT * FROM syn123",fullWidth:!0,multiline:!0,required:!0,minRows:6,...s})]})}try{U.displayName="SqlDefinedTableEditor",U.__docgenInfo={description:"Component used to edit the SQL of a Synapse entity defined by SQL, such as a MaterializedView or VirtualTable",displayName:"SqlDefinedTableEditor",props:{component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"Partial<TextFieldSlots>"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.",name:"slotProps",required:!1,type:{name:"{ root?: SlotProps<ElementType<FormControlProps, keyof IntrinsicElements>, {}, BaseTextFieldProps>; ... 4 more ...; select?: SlotProps<...>; } | { ...; } | { ...; }"}},entityType:{defaultValue:null,description:"",name:"entityType",required:!1,type:{name:"enum",value:[{value:'"link"'},{value:'"table"'},{value:'"file"'},{value:'"folder"'},{value:'"entityview"'},{value:'"submissionview"'},{value:'"dataset"'},{value:'"datasetcollection"'},{value:'"project"'},{value:'"dockerrepo"'},{value:'"materializedview"'},{value:'"virtualtable"'},{value:'"recordset"'}]}}}}}catch{}function Re(t,i){switch(t){case"CHOOSE_TABLE_TYPE":return"Create Table or View";case"CHOOSE_VIEW_TYPE":return"Create View";case"ENTITY_VIEW_SCOPE":case"SUBMISSION_VIEW_SCOPE":return`Define ${F(i)} Scope`;case"TABLE_SQL":return"Create a SQL-Defined View";case"TABLE_COLUMNS":return`Add Columns to ${F(i)}`;case"TABLE_NAME":return`Create the ${F(i)}`}}function Ue(t,i){switch(t){case"CHOOSE_TABLE_TYPE":break;case"CHOOSE_VIEW_TYPE":return"CHOOSE_TABLE_TYPE";case"ENTITY_VIEW_SCOPE":case"SUBMISSION_VIEW_SCOPE":case"TABLE_SQL":return"CHOOSE_VIEW_TYPE";case"TABLE_COLUMNS":if(i===r.table)return"CHOOSE_TABLE_TYPE";if(i===r.entityview)return"ENTITY_VIEW_SCOPE";if(i===r.submissionview)return"SUBMISSION_VIEW_SCOPE";break;case"TABLE_NAME":if(i===r.table||i===r.entityview||i===r.submissionview)return"TABLE_COLUMNS";if(i===r.materializedview||i===r.virtualtable)return"TABLE_SQL";break}return console.warn(`Unknown previous step at ${t} for type ${i}`),"CHOOSE_TABLE_TYPE"}function re(t){return t==="TABLE_NAME"}function ze(t){return t===r.table?"TABLE_COLUMNS":t===r.entityview?"ENTITY_VIEW_SCOPE":t===r.submissionview?"SUBMISSION_VIEW_SCOPE":t===r.materializedview||t===r.virtualtable?"TABLE_SQL":"CHOOSE_TABLE_TYPE"}function He(t,i,s){[r.table,r.entityview,r.submissionview,r.dataset,r.datasetcollection].includes(i)&&s.length>0&&(t.columnIds=s.map(_=>_.id))}function Qe(t,i,s){[r.entityview,r.submissionview].includes(i)&&s.length>0&&(t.scopeIds=s)}function $e(t,i,s){i===r.entityview&&(t.viewTypeMask=s)}function Je(t,i,s){[r.materializedview,r.virtualtable].includes(i)&&(t.definingSQL=s)}function z(t){const{name:i,setName:s,description:y,setDescription:_}=t,n=me(se.DESCRIPTION_FIELD);return e.jsxs(e.Fragment,{children:[e.jsx(R,{required:!0,label:"Name",value:i,onChange:p=>{s(p.target.value)},fullWidth:!0}),n&&e.jsx(R,{label:"Description",value:y,onChange:p=>{_(p.target.value||void 0)},fullWidth:!0,multiline:!0,rows:3,sx:{my:2}})]})}try{z.displayName="TableNameForm",z.__docgenInfo={description:`React component for the naming a new table or view.
Renders UI to provide the name and description of a table or view.`,displayName:"TableNameForm",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},setName:{defaultValue:null,description:"",name:"setName",required:!0,type:{name:"Dispatch<SetStateAction<string>>"}},description:{defaultValue:null,description:"",name:"description",required:!0,type:{name:"string"}},setDescription:{defaultValue:null,description:"",name:"setDescription",required:!0,type:{name:"Dispatch<SetStateAction<string>>"}}}}}catch{}const Ge=e.jsxs(e.Fragment,{children:[e.jsx(h,{children:"Synapse tables are used to organize web-accessible, sharable, and queryable data. Tables may be queried and edited with the Synapse UI, as well as with the Synapse programmatic clients."}),e.jsx(T,{href:"https://help.synapse.org/docs/Organizing-Data-With-Tables.2011038095.html",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about Tables"})]}),Ke=e.jsxs(e.Fragment,{children:[e.jsx(h,{children:"Views allow you to see and query groups of other objects in Synapse, such as files, tables, projects, or submissions and any associated annotations about those items."}),e.jsx(T,{href:"https://help.synapse.org/docs/Views.2011070739.html",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about Views"})]});function H(t){const{onTableSelected:i,onViewSelected:s}=t;return e.jsxs(ce,{children:[e.jsx(f,{title:"Table",description:Ge,onClick:()=>{i()}}),e.jsx(f,{title:"View",description:Ke,onClick:s})]})}try{H.displayName="TableTypeSelection",H.__docgenInfo={description:`React component for the first step of creating a new table or view.
The user will decide if they want to create a Table or a View`,displayName:"TableTypeSelection",props:{onTableSelected:{defaultValue:null,description:"",name:"onTableSelected",required:!0,type:{name:"() => void"}},onViewSelected:{defaultValue:null,description:"",name:"onViewSelected",required:!0,type:{name:"() => void"}}}}}catch{}const Ze=e.jsxs(e.Fragment,{children:[e.jsx(h,{children:"This view lists all files, folders, and/or tables in the selected folders or projects."}),e.jsx(T,{href:"https://help.synapse.org/docs/Views.2011070739.html#Views-CreatingaFileView",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about File Views"})]}),Xe=e.jsxs(e.Fragment,{children:[e.jsx(h,{children:"This view lists all (and only) your selected projects."}),e.jsx(T,{href:"https://help.synapse.org/docs/Views.2011070739.html#Views-CreatingaProjectView",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about Project Views"})]}),et=e.jsxs(e.Fragment,{children:[e.jsx(h,{children:"This view lists all submissions within one or more evaluation queues."}),e.jsx(T,{href:"https://help.synapse.org/docs/Views.2011070739.html#Views-CreatingaSubmissionView",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about Submission Views"})]}),tt=e.jsxs(e.Fragment,{children:[e.jsx(h,{children:"The results of a query across multiple sources, defined by a SQL statement."}),e.jsx(T,{href:"https://help.synapse.org/docs/Combining-Data-from-Multiple-Table-Sources.2973270158.html",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about Materialized Views"})]}),it=e.jsx(h,{children:"A saved query on another table or view where complex filters can be applied to aggregated results."});function Q(t){const{onTypeSelected:i}=t,s=me(se.VIRTUALTABLE_SUPPORT);return e.jsxs(ce,{children:[e.jsx(f,{title:"Files, Folders, and Other Objects",description:Ze,onClick:()=>{i(r.entityview)}}),e.jsx(f,{title:"Projects",description:Xe,onClick:()=>{i(r.entityview,le)}}),e.jsx(f,{title:"Challenge Submissions",description:et,onClick:()=>{i(r.submissionview)}}),e.jsx(f,{title:"Materialized View",description:tt,onClick:()=>{i(r.materializedview)}}),s&&e.jsx(f,{title:"Virtual Table",description:it,onClick:()=>{i(r.virtualtable)}})]})}try{Q.displayName="ViewTypeSelection",Q.__docgenInfo={description:`React component for selecting a View type in the View creation wizard.
Renders UI to show all view types where the user must choose one to continue.`,displayName:"ViewTypeSelection",props:{onTypeSelected:{defaultValue:null,description:"",name:"onTypeSelected",required:!0,type:{name:"(type: EntityType, viewTypeMask?: number) => void"}}}}}catch{}function $(t){const{open:i,parentId:s,onComplete:y,onCancel:_}=t,[n,p]=a.useState("CHOOSE_TABLE_TYPE"),[w,ue]=a.useState(""),[g,de]=a.useState(void 0),[o,Ee]=a.useState(void 0),[c,Se]=a.useState([]),[u,fe]=a.useState([]),[m,J]=a.useState(Ie),v=m===le,[S,x]=a.useState([]),O=a.useRef(null),[b,Te]=a.useState(""),d=a.useMemo(()=>{if(o===r.entityview)return{scope:c,viewTypeMask:m,viewEntityType:o};if(o===r.submissionview)return{scope:u,viewEntityType:o}},[o,c,u,m]),{data:L,isLoading:j,isError:P}=Oe(d==null?void 0:d.viewEntityType,d==null?void 0:d.viewTypeMask,{enabled:n==="ENTITY_VIEW_SCOPE"||n==="SUBMISSION_VIEW_SCOPE",staleTime:1/0}),{mutateAsync:G,error:N}=ve({onSuccess:l=>{y(l.id)}}),{mutate:K,data:I,error:A}=Fe({onSuccess:l=>{l&&l.isValid&&p("TABLE_NAME")}}),M=a.useMemo(()=>A?A.reason:I&&I.invalidReason?I.invalidReason:null,[A,I]),{mutateAsync:Z,error:B}=Le(),k=a.useCallback((l,E)=>{Ee(l),E!=null&&J(E),p(ze(l))},[]),X=a.useCallback(()=>{p("CHOOSE_VIEW_TYPE")},[]),ee=a.useCallback(async()=>{if(!o){console.error("entityType was not defined!"),p("CHOOSE_TABLE_TYPE");return}let l=[];if(S&&o!==r.materializedview&&o!==r.virtualtable)try{l=await Z(S.map(W=>xe(W,ke)))}catch{return}const E={name:w,description:g,parentId:s,concreteType:Ve(o)};He(E,o,l),Qe(E,o,o===r.submissionview?u:c),$e(E,o,m),Je(E,o,b);try{await G(E)}catch{return}},[S,Z,G,g,o,w,s,c,u,b,m]),te=a.useCallback(l=>{x(l),p("TABLE_NAME")},[]),ie=a.useCallback(()=>{O.current!=null&&O.current.submit()},[]),he=n!=="CHOOSE_TABLE_TYPE",ye=n!=="CHOOSE_TABLE_TYPE"&&n!=="CHOOSE_VIEW_TYPE",_e=a.useCallback(()=>{const l=Ue(n,o);["CHOOSE_TABLE_TYPE","CHOOSE_VIEW_TYPE"].includes(l)&&x([]),p(l)},[n,o]),be=a.useCallback(()=>{re(n)?ee():n==="TABLE_SQL"&&o?K({sql:b,entityType:o}):n==="TABLE_COLUMNS"?ie():(n==="ENTITY_VIEW_SCOPE"||n==="SUBMISSION_VIEW_SCOPE")&&(S.length==0&&L&&x(L.map(l=>({...l,id:void 0}))),p("TABLE_COLUMNS"))},[n,ee,ie,S.length,L,K,o,b]),Ce=a.useMemo(()=>n==="ENTITY_VIEW_SCOPE"?c.length===0||m===0||j&&!P:n==="SUBMISSION_VIEW_SCOPE"?u.length===0||m===0||j&&!P:!1,[c.length,u.length,n,m,j,P]),D=a.useMemo(()=>e.jsxs(e.Fragment,{children:[N&&e.jsx(q,{sx:{my:2},severity:"error",children:N.message}),B&&e.jsx(q,{sx:{my:2},severity:"error",children:B.message}),M&&e.jsx(q,{sx:{my:2},severity:"error",children:M})]}),[B,N,M]),we=a.useMemo(()=>{switch(n){case"CHOOSE_TABLE_TYPE":return e.jsx(H,{onTableSelected:()=>{k(r.table)},onViewSelected:X});case"CHOOSE_VIEW_TYPE":return e.jsx(Q,{onTypeSelected:k});case"ENTITY_VIEW_SCOPE":return e.jsxs(e.Fragment,{children:[e.jsx(Me,{scopeIds:c,onChange:Se,isProjectView:v}),!v&&e.jsx(Ae,{value:m,onChange:J})]});case"SUBMISSION_VIEW_SCOPE":return e.jsx(Be,{evaluationIds:u,onChange:fe});case"TABLE_SQL":return e.jsxs(e.Fragment,{children:[e.jsx(C,{sx:{mt:1.25},children:e.jsx(U,{value:b,onChange:l=>Te(l.target.value),entityType:o})}),D]});case"TABLE_COLUMNS":return e.jsx(je,{initialData:S,entityType:o,ref:O,onSubmit:te,viewScope:d});case"TABLE_NAME":return e.jsxs(e.Fragment,{children:[e.jsx(z,{name:w,setName:ue,description:g,setDescription:de}),D]})}},[n,X,k,c,v,m,u,w,g,b,o,D,S,te,d]);return e.jsx(Ne,{open:i,onCancel:_,maxWidth:"md",title:Re(n,o),content:we,actions:e.jsxs(C,{sx:{display:"flex",width:"100%",gap:2.25,mt:2},children:[he&&e.jsx(Y,{variant:"outlined",onClick:_e,children:"Back"}),e.jsx(C,{sx:{m:"auto"}}),e.jsx(Y,{variant:"outlined",onClick:_,children:"Cancel"}),ye&&e.jsx(Y,{variant:"contained",onClick:be,disabled:Ce,children:re(n)?"Finish":"Next"})]})})}try{$.displayName="CreateTableViewWizard",$.__docgenInfo={description:`Wizard to create a Synapse table, view, or other table type.

See the README.md in this folder for a visualization of the flowchart`,displayName:"CreateTableViewWizard",props:{open:{defaultValue:null,description:"",name:"open",required:!0,type:{name:"boolean"}},parentId:{defaultValue:null,description:"",name:"parentId",required:!0,type:{name:"string"}},onCancel:{defaultValue:null,description:"",name:"onCancel",required:!0,type:{name:"() => void"}},onComplete:{defaultValue:null,description:"",name:"onComplete",required:!0,type:{name:"(newEntityId: string) => void"}}}}}catch{}const An={title:"Synapse/Create Table Wizard",component:$,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=7108-22337&mode=design&t=acwaLAqUDge5p8eQ-4"}},tags:["autodocs"]},V={args:{open:!0,parentId:"syn23567475",onComplete:t=>{De(`Successfully created ${t}`)},onCancel:We()}};var oe,ne,ae;V.parameters={...V.parameters,docs:{...(oe=V.parameters)==null?void 0:oe.docs,source:{originalSource:`{
  args: {
    open: true,
    parentId: 'syn23567475',
    onComplete: newId => {
      displayToast(\`Successfully created \${newId}\`);
    },
    onCancel: fn()
  }
}`,...(ae=(ne=V.parameters)==null?void 0:ne.docs)==null?void 0:ae.source}}};const Mn=["Demo"];export{V as Demo,Mn as __namedExportsOrder,An as default};
