import{j as e}from"./jsx-runtime-DoxjgJx5.js";import{r as b}from"./index-Cu9bd8lq.js";import{p as L,g as V}from"./SqlFunctions-GsjBPiB-.js";import{l as k,S as C}from"./useFiles-SmxjvgXw.js";import{f as F}from"./SynapseConstants-03FNPEMB.js";import"./RegularExpressions-kZf2njeX.js";import{u as D}from"./use-deep-compare-effect.esm-BJt8Qld_.js";import{g as u}from"./VerificationSubmission-DL9jxYsQ.js";import"./OrientationBanner-CW2K3-RQ.js";import{M as j}from"./ConfirmationDialog-lSUEOYdu.js";import{S as M}from"./SkeletonTable-DlB4aIzG.js";import{T as A}from"./Typography-Jzf0ov00.js";const K=[u.BOOLEAN_LIST,u.DATE_LIST,u.ENTITYID_LIST,u.INTEGER_LIST,u.STRING_LIST],N=({sql:d,searchParams:g,sqlOperator:_,isMarkdown:c=!1,columnLink:l,friendlyValuesMap:R,columnNameIsSectionTitle:h=!1,limit:E,additionalFiltersSessionStorageKey:q})=>{const{accessToken:T}=k(),[o,I]=b.useState(),[x,w]=b.useState();D(()=>{(async function(){var r;w(!0);const t=L(d),m=V(q,g,_),i={partMask:F,concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",entityId:t,query:{sql:d,limit:E,additionalFilters:m}},s=await C.getQueryTableResults(i,T);w(!1);const n=(r=s==null?void 0:s.queryResult)==null?void 0:r.queryResults;n?I(n):console.log("SubsectionRowRenderer: Error getting data")})()},[d,T,g,_]);const p=a=>{if(!R)return a;const t=R[a];return t||a};return e.jsxs("div",{className:"SubsectionRowRenderer bootstrap-4-backport",children:[x&&e.jsx(M,{numRows:2,numCols:1}),!x&&o&&o.rows.length>0&&o.headers.map((a,t)=>l&&a.name==l.linkColumnName?e.jsx(e.Fragment,{}):e.jsxs("div",{className:"SubsectionRowRenderer__item",role:"table",children:[e.jsx(A,{variant:h?"sectionTitle":"subsectionHeader",role:"heading",style:{paddingTop:"10px",marginBottom:"5px"},children:a.name}),h&&e.jsx("hr",{}),e.jsx("div",{role:"rowgroup",children:o.rows.map((m,f)=>{const i=m.values[t];if(!i)return e.jsx(e.Fragment,{});let s;if(K.includes(a.columnType))s=JSON.parse(i).map((r,S)=>e.jsxs("div",{className:"SubsectionRowRenderer__item__value",role:"row",children:[c&&e.jsx(j,{markdown:p(r)}),!c&&e.jsx("p",{children:p(r)})]},`row-${f}-col-${t}-multi-value`));else{let n;const r=p(i);if(c)n=e.jsx(j,{markdown:r});else if(l&&l.matchColumnName==a.name){const S=o.headers.findIndex(y=>y.name==l.linkColumnName),v=m.values;v.some(y=>y===null)&&console.warn("Row has null value(s) when no nulls expected"),S>-1?n=e.jsx("a",{rel:"noopener noreferrer",target:"_blank",href:v[S],children:r}):n=e.jsx("p",{children:r})}else n=e.jsx("p",{children:r});s=e.jsx("div",{className:"SubsectionRowRenderer__item__value",role:"row",children:n},`row-${f}-col-${t}-single`)}return s})})]},`header-${t}`))]})};try{N.displayName="SubsectionRowRenderer",N.__docgenInfo={description:"",displayName:"SubsectionRowRenderer",props:{sql:{defaultValue:null,description:"",name:"sql",required:!0,type:{name:"string"}},isMarkdown:{defaultValue:{value:"false"},description:"",name:"isMarkdown",required:!1,type:{name:"boolean"}},sqlOperator:{defaultValue:null,description:"",name:"sqlOperator",required:!1,type:{name:"enum",value:[{value:'"LIKE"'},{value:'"EQUAL"'},{value:'"IN"'},{value:'"HAS"'},{value:'"HAS_LIKE"'}]}},searchParams:{defaultValue:null,description:"",name:"searchParams",required:!1,type:{name:"Record<string, string>"}},columnLink:{defaultValue:null,description:"",name:"columnLink",required:!1,type:{name:"ColumnSpecifiedLink"}},friendlyValuesMap:{defaultValue:null,description:"",name:"friendlyValuesMap",required:!1,type:{name:"FriendlyValuesMap"}},columnNameIsSectionTitle:{defaultValue:{value:"false"},description:"",name:"columnNameIsSectionTitle",required:!1,type:{name:"boolean"}},limit:{defaultValue:null,description:"",name:"limit",required:!1,type:{name:"number"}},additionalFiltersSessionStorageKey:{defaultValue:null,description:"",name:"additionalFiltersSessionStorageKey",required:!1,type:{name:"string"}}}}}catch{}export{N as S};
