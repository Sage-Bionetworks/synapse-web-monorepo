import{H as i,z as v,I,J as O,h as C}from"./VerificationSubmission-BDh1zA9f.js";const X="Terms of Use",U="org.sagebionetworks.repo.model.TermsOfUseAccessRequirement",f="org.sagebionetworks.repo.model.docker.DockerRepository",c="org.sagebionetworks.repo.model.table.MaterializedView",p="org.sagebionetworks.repo.model.table.SubmissionView",l="org.sagebionetworks.repo.model.table.Dataset",E="org.sagebionetworks.repo.model.table.DatasetCollection",b="org.sagebionetworks.repo.model.table.VirtualTable",u="org.sagebionetworks.repo.model.table.TableEntity",k=[i,p,l,E],S=[u,...k,c,b],m="org.sagebionetworks.repo.model.FileEntity",F="org.sagebionetworks.repo.model.Folder",L="org.sagebionetworks.repo.model.Link",P="org.sagebionetworks.repo.model.Project",y="org.sagebionetworks.repo.model.file.S3FileHandle",Y="org.sagebionetworks.repo.model.file.GoogleCloudFileHandle",R="org.sagebionetworks.repo.model.file.ExternalFileHandle",h="org.sagebionetworks.repo.model.file.ExternalObjectStoreFileHandle",D="org.sagebionetworks.repo.model.file.ProxyFileHandle",M="org.sagebionetworks.repo.model.MembershipInvtnSignedToken",z="org.sagebionetworks.repo.model.JoinTeamSignedToken",H="org.sagebionetworks.repo.model.InviteeVerificationSignedToken",j="org.sagebionetworks.repo.model.table.FacetColumnValuesRequest",$="org.sagebionetworks.repo.model.table.FacetColumnRangeRequest";function r(...t){return o=>!!(o&&typeof o=="object"&&"concreteType"in o&&t.includes(o.concreteType))}const Z=r(y,Y),ee=r(R),te=r(L),oe=r(D,h,R),re=r(f),se=r(j),ae=r($),ne=r(O),ie=r(v),ce=r(I);r(y);const le=r(m),Ee=r(U);r(H);r(z);r(M);const e={project:"project",folder:"folder",file:"file",table:"table",link:"link",entityview:"entityview",dockerrepo:"dockerrepo",submissionview:"submissionview",dataset:"dataset",datasetcollection:"datasetcollection",materializedview:"materializedview",virtualtable:"virtualtable",recordset:"recordset"};function ue(t){return t.node_type?t.node_type:t.type===void 0?e.project:N(t.type)}function de(t){switch(t){case e.project:case e.folder:return!0;case e.link:case e.dockerrepo:case e.file:case e.recordset:case e.table:case e.submissionview:case e.entityview:case e.dataset:case e.datasetcollection:case e.materializedview:case e.virtualtable:return!1;default:throw new Error(`Unknown entity type: ${t}`)}}function _e(t){switch(t){case e.project:case e.folder:case e.link:case e.dockerrepo:case e.file:case e.recordset:return!1;case e.table:case e.submissionview:case e.entityview:case e.dataset:case e.datasetcollection:case e.materializedview:case e.virtualtable:return!0;default:throw new Error(`Unknown entity type: ${t}`)}}function Te(t){switch(t){case e.project:return"Project";case e.folder:return"Folder";case e.file:return"File";case e.table:return"Table";case e.link:return"Link";case e.entityview:return"View";case e.dockerrepo:return"Docker Repository";case e.submissionview:return"Submission View";case e.dataset:return"Dataset";case e.datasetcollection:return"Dataset Collection";case e.materializedview:return"Materialized View";case e.virtualtable:return"Virtual Table";case e.recordset:return"Record Set";default:return console.warn("Entity type could not be mapped to name:",t),""}}function N(t){if(Object.values(e).includes(t))return t;switch(t){case"org.sagebionetworks.repo.model.Project":return e.project;case"org.sagebionetworks.repo.model.Folder":return e.folder;case m:return e.file;case"org.sagebionetworks.repo.model.Link":return e.link;case"org.sagebionetworks.repo.model.docker.DockerRepository":return e.dockerrepo;case u:return e.table;case"org.sagebionetworks.repo.model.table.SubmissionView":return e.submissionview;case i:return e.entityview;case l:return e.dataset;case E:return e.datasetcollection;case c:return e.materializedview;case b:return e.virtualtable;case"org.sagebionetworks.repo.model.RecordSet":return e.recordset;default:throw new Error(`Unknown entity type: ${t}`)}}function pe(t){switch(t){case e.project:return"org.sagebionetworks.repo.model.Project";case e.folder:return"org.sagebionetworks.repo.model.Folder";case e.file:return"org.sagebionetworks.repo.model.FileEntity";case e.link:return"org.sagebionetworks.repo.model.Link";case e.dockerrepo:return"org.sagebionetworks.repo.model.docker.DockerRepository";case e.table:return"org.sagebionetworks.repo.model.table.TableEntity";case e.submissionview:return"org.sagebionetworks.repo.model.table.SubmissionView";case e.entityview:return"org.sagebionetworks.repo.model.table.EntityView";case e.dataset:return"org.sagebionetworks.repo.model.table.Dataset";case e.datasetcollection:return"org.sagebionetworks.repo.model.table.DatasetCollection";case e.materializedview:return"org.sagebionetworks.repo.model.table.MaterializedView";case e.virtualtable:return"org.sagebionetworks.repo.model.table.VirtualTable";case e.recordset:return"org.sagebionetworks.repo.model.RecordSet";default:throw new Error(`Unknown entity type: ${t}`)}}function x(t){switch(t){case e.project:case e.folder:case e.link:case e.dockerrepo:case e.submissionview:case e.materializedview:case e.virtualtable:return!1;case e.file:case e.recordset:case e.table:case e.entityview:case e.dataset:case e.datasetcollection:return!0;default:throw new Error(`Unknown entity type: ${t}`)}}const Q=r(...S);r(...k);const be=r(u),me=r(p);r(c);const A=r(l),K=r(E),we=t=>A(t)||K(t),ge=r(i);function Ce(t){return(t.viewTypeMask&C)!=0}function fe(t){return t.viewTypeMask===C}function B(t){return x(N(t.concreteType))}function ke(t){return B(t)?t.isLatestVersion?Q(t)?A(t)?"Draft":"Current":`${t.versionNumber.toString()} (Current)`:t.versionNumber.toString():(console.warn("Entity isn't versionable:",t),"")}function G(t){return t.toLowerCase().startsWith("syn")?t.toLowerCase():`syn${t}`}const a=["name","description","id","etag","createdOn","modifiedOn","createdBy","modifiedBy","parentId","concreteType"],_=[...a,"versionNumber","versionLabel","versionComment","isLatestVersion"],n=[..._,"columnIds","isSearchEnabled"],T=[...n],g=[...T,"items"],Le={[L]:[...a,"linksTo","linksToClassName"],[f]:[...a,"repositoryName","isManaged"],[m]:[..._,"dataFileHandleId","fileNameOverride"],[p]:[...T,"scopeIds"],[l]:[...g,"size","checksum","count"],[E]:[...g],[i]:[...T,"scopeIds","viewTypeMask","type"],[u]:n,[c]:[...n,"definingSQL"],[b]:[...n,"definingSQL"],[F]:a,[P]:[...a,"alias"],"org.sagebionetworks.repo.model.RecordSet":[..._,"upsertKey","csvDescriptor"],"org.sagebionetworks.repo.model.Preview":[],"org.sagebionetworks.repo.model.ExampleEntity":[]},ye={ALL_TABLES:[e.table,e.entityview,e.submissionview,e.dataset,e.datasetcollection,e.materializedview,e.virtualtable],CONTAINER:[e.project,e.folder]},q=/^10.\d{4,9}\/[-._;()/:a-z0-9]+$/i;function Re(t){return t=t.trim(),q.test(t)?`https://dx.doi.org/${t}`:""}const V=/^(syn\d+)(?:\.(\d+))?$/i;function J(t){const o=V.exec(t);return o&&{targetId:G(o[1]),targetVersionNumber:o[2]?parseInt(o[2]):void 0}}function Ne(t,o,s="â€¦"){return t.length<=o?t:t.substring(0,o)+s}function Ae(t){t==null&&(t="");let o=0;for(let s=0,d=t.length;s<d;s++){const w=t.charCodeAt(s);o=(o<<5)-o+w,o|=0}return o}function Ve(t){if(t==null)return NaN;if(typeof t=="number")return t;if(t.match(V)){const o=J(t).targetId;return parseInt(o.substring(3))}else return parseInt(t)}function ve(t){if(t.trim().length<8)return"A valid password must be at least 8 characters long";if(!/[a-zA-Z]/.test(t))return"A valid password must include letters";if(!/\d/.test(t))return"A valid password must include digits (0-9)";if(!/[~!@#$%^&*_\-+=`|\\(){}[\]:;"'<>,.?/]/.test(t))return"A valid password must include special characters ~!@#$%^&*_-+=`|\\(){}[]:;\"'<>,.?/"}function Ie(t){return new Promise((o,s)=>{setTimeout(()=>{navigator.clipboard.writeText(t).then(o).catch(s)},0)})}function Oe(t,o){const s=t.split(/[\\/]/);return`${s[s.length-1].replace(/\.[^/.]+$/,"")}.${o}`}export{Oe as A,se as B,B as C,Le as D,e as E,m as F,Y as G,P as H,te as I,Z as J,J as K,X as L,re as M,ie as N,ce as O,D as P,_e as Q,x as R,V as S,U as T,ne as U,k as V,ae as W,ke as X,ee as Y,Ae as Z,fe as _,we as a,G as b,N as c,Ee as d,Te as e,Ie as f,ue as g,Ce as h,ge as i,A as j,K as k,le as l,ye as m,Ve as n,Q as o,Re as p,pe as q,de as r,be as s,Ne as t,oe as u,ve as v,y as w,R as x,h as y,me as z};
