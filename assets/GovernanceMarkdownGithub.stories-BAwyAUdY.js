import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-KkqJyoYZ.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-Czw6hBcG.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-DeU1gz6G.js";import"./SynapseConstants-BuxqniVA.js";import"./OrientationBanner-CQ4al9ts.js";import"./index-CqfvS4OY.js";import"./index-B_NH1tG1.js";import"./iframe-DHCImqeI.js";import"./spreadSx-CwcO6WA9.js";import"./react-D2T44UuD.js";import"./FullWidthAlert-Cnt4nJ8k.js";import"./Alert-XDLX-kgZ.js";import"./createTheme-CR4l9uHY.js";import"./DefaultPropsProvider-DObZu-x4.js";import"./useSlot-BgKGFXDJ.js";import"./useForkRef-LW0sx3G7.js";import"./createSimplePaletteValueFilter-B4F2o6yw.js";import"./createSvgIcon-DWa7O56I.js";import"./Close-Di3tbyvY.js";import"./IconButton-BJ3jKP03.js";import"./useTimeout-B2kCgEvL.js";import"./ButtonBase-Bkor91_R.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DoHiQExb.js";import"./Paper-B8iPITrA.js";import"./useTheme-D3T9ikY1.js";import"./useTheme-DIzPV2Gw.js";import"./Stack-CDLC3VVo.js";import"./extendSxProp-CPr-MONH.js";import"./getThemeProps-Ds3KKIqm.js";import"./Box-B3jqVByX.js";import"./AlertTitle-C2sBobMK.js";import"./Typography-i0V5tERP.js";import"./index-O1AecroA.js";import"./ClickAwayListener-Cp_ppUmU.js";import"./getReactElementRef-ByWD4INQ.js";import"./index-BtONyuYK.js";import"./index-BqR61apv.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-PH4sX_uL.js";import"./Tooltip-xaz2F5ki.js";import"./index-VdUxzL5Z.js";import"./useControlled-D93q3dyv.js";import"./Popper-FEJGxMLG.js";import"./Button-DoIvstwE.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-BuLOb3lc.js";import"./QueryClientProvider-WI38r6wY.js";import"./Link-Dp5s2AVD.js";import"./Collapse-D3fprLKJ.js";import"./_baseUniq-CD_mmW-P.js";import"./_Uint8Array-CyA3Nt41.js";import"./isArray-BOhUVnS7.js";import"./_getTag-C4-01JXd.js";import"./isEqual-DikMqJ7x.js";import"./merge-CCMRKMk9.js";import"./_initCloneObject-Cn82PUw-.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-BTOeofJf.js";import"./inputBaseClasses-CNuRHAx7.js";import"./calculateFriendlyFileSize-DJiWUp2i.js";import"./CheckCircleTwoTone-GQrVTNRb.js";import"./InfoTwoTone-DiCCtnov.js";import"./useMutation-CHIXNxbT.js";import"./dayjs.min-Wk8Alc5x.js";import"./chunk-AYJ5UCUI-C1dCOLZ7.js";import"./cloneDeep-DFZ6TNqL.js";import"./Skeleton-sOiy-Fvd.js";import"./SkeletonButton-CcQL5GYS.js";import"./SkeletonInlineBlock-B4qNnXPj.js";import"./SkeletonTable-BZz3ntN_.js";import"./times-D0GWJ3QC.js";import"./toInteger-DjnZoQei.js";import"./isSymbol-Dejodpo7.js";import"./SkeletonParagraph-DDIcEvWa.js";import"./MarkdownSynapse-B7t2izf1.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
