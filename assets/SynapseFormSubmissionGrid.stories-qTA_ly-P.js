import{j as l}from"./jsx-runtime-CeNNE178.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-ByEvKGzx.js";import{aF as S,M as a}from"./useFiles-CYCG5By9.js";import"./OrientationBanner--O3J5zHJ.js";import"./index-Bt2HldYQ.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-GCnGed6d.js";import{S as E}from"./SynapseFormSubmissionGrid-BWAgzg4b.js";import"./mockSchema-BqBs5_cw.js";import"./mockFileEntity-BI9T87OA.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-aDZbUhUR.js";import"./mockTeam-BCP9sAWv.js";import"./SynapseConstants-CmfpXss_.js";import"./uniqueId-B7qRQUTU.js";import"./toString-C1edKCyB.js";import"./isObjectLike-DvBEekQS.js";import"./iframe-BLXaVYvq.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-DIHlfHOR.js";import"./times-CvknjA7f.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-Yo1R2fxd.js";import"./asyncJobHandlers-kKj2hHNL.js";import"./BasicMockedCrudService-CNOGN8WI.js";import"./cloneDeep-xAnl9iNy.js";import"./_Uint8Array-BlRziyVS.js";import"./_initCloneObject-B-889FSA.js";import"./_getTag-BStwP3vH.js";import"./isEqual-BjlCgmbf.js";import"./_baseIsEqual-DUAR2DVI.js";import"./mockAnnotationColumns-0iPJGXso.js";import"./tableQueryHandlers-D4pUz0px.js";import"./omit-DqRX423t.js";import"./_baseGet-C0pszOOY.js";import"./isNil-BnN6qy0c.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BnQpxRnb.js";import"./_baseFlatten-BpFw8DKB.js";import"./pick-CIZjvhh1.js";import"./_baseSet-DnmbuHkq.js";import"./hasIn-COtitIxG.js";import"./accessRequirementAclHandlers-D_KPpRq4.js";import"./mockAccessRequirementAcls-dwrXwZFR.js";import"./mockAccessRequirements-B_0lF79-.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-CG-q4gfE.js";import"./wikiHandlers-Dnf5eHOs.js";import"./mockWikiPageKey-BEXjfiEP.js";import"./teamHandlers-Cayu0eE3.js";import"./dataAccessRequestHandlers-BVQWNYnu.js";import"./MockResearchProject-BXofl6qx.js";import"./mock_discussion-BSkHtGbA.js";import"./fakerUtils-BgocmWeB.js";import"./index-Dm2X2R0s.js";import"./mockTableEntity-BiSKj2-Z.js";import"./mockFileEntityACLVariants-Nuuqec8I.js";import"./entityHandlers-BW2FVpvH.js";import"./mockEntity-B2MI7rXX.js";import"./mockEvaluationQueue-C6DM-N2V.js";import"./featureFlagHandlers-Bcmt61ZU.js";import"./fileHandlers-CpgqAbxn.js";import"./personalAccessTokenHandlers-B0FUBQ3E.js";import"./researchProjectHandlers-DLR2xBUk.js";import"./resetTwoFactorAuthHandlers-CI2G5fIt.js";import"./userProfileHandlers-BZa-2SpW.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-Da8-nKIU.js";import"./FullWidthAlert-DyeuC1vJ.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-B7nkz1ia.js";import"./createTheme-CKb99kjG.js";import"./resolveComponentProps-CMIWR73s.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-uSm8hWtq.js";import"./createSvgIcon-DLoGZJ7f.js";import"./DefaultPropsProvider-CZ1ixMCP.js";import"./Close-BJ7cjjFc.js";import"./IconButton-Bk_PmWuO.js";import"./ButtonBase-DGK36sqj.js";import"./useTimeout-CmIrVyao.js";import"./useIsFocusVisible-C5zF6H-R.js";import"./useEventCallback-CS_P56Cl.js";import"./Paper-DPHdlQ6w.js";import"./Stack-B2UZSqeE.js";import"./getThemeProps-MWZ41NY4.js";import"./useTheme-D2L9K1WU.js";import"./Box-Bhf9Kz_5.js";import"./AlertTitle-CMAceEnv.js";import"./Typography-CFXxu8IN.js";import"./useTheme-Dl4JanPa.js";import"./Grow-C5U1AU2n.js";import"./index-BHhAFVUK.js";import"./utils-DshReT03.js";import"./ClickAwayListener-CA8RUKC1.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BmtwnYm2.js";import"./index-DNfyRJhZ.js";import"./useControlled-C5JTjFUD.js";import"./useId-QtHUq3oX.js";import"./Popper-BoV6apG6.js";import"./Button-WgFG7Kv7.js";import"./useQuery-ozFMDHTC.js";import"./utils-C7h47-8F.js";import"./Link-wPFjZble.js";import"./Collapse-BG7m57yp.js";import"./tinycolor-Begke6kS.js";import"./Fade-TT1SN1XX.js";import"./Skeleton-1xe7MdCp.js";import"./inputBaseClasses-Kd2PBwef.js";import"./calculateFriendlyFileSize-Dy-aVZfM.js";import"./CheckCircleTwoTone-DIkLEp5G.js";import"./InfoTwoTone-xvjf5lJX.js";import"./useMutation-Cr2LGzTW.js";import"./dayjs.min-CUcU5xVS.js";import"./chunk-AYJ5UCUI-0PQAposk.js";import"./index-CfmE6CoI.js";import"./react-BMavKsjq.js";import"./util-ChdntyMD.js";import"./WideButton-Chh8kgQO.js";import"./DeleteTwoTone-DAFnY6bN.js";import"./createSvgIcon--COmSFeb.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-B2AqNi1n.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-CHD6proz.js";import"./DialogBase-BUK2IXjy.js";import"./Close-C25SYy_0.js";import"./HelpPopover-yOvDZn8G.js";import"./MarkdownPopover-4xfjz9Kb.js";import"./LightTooltip-D9yS0lLZ.js";import"./MarkdownSynapse-CioQYKdy.js";import"./SkeletonButton-0L9NaRI_.js";import"./SkeletonInlineBlock-DzYfnxTK.js";import"./SkeletonTable-BiktFgWe.js";import"./SkeletonParagraph-cjwMM4Yj.js";import"./HelpOutlineTwoTone-1n3bxGSM.js";import"./DialogTitle-DF16obyT.js";import"./DialogContent-CmdT7Cwh.js";import"./Dialog-ymqhtWsJ.js";import"./Modal-BUNLOkeP.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-BE3NEOZw.js";import"./WarningDialog-CdCb6bLr.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
