import{j as l}from"./jsx-runtime-DxZczy0O.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-DGeOgdpE.js";import{aH as S,M as a}from"./useFiles-C10gkL60.js";import"./OrientationBanner-CiSCQ_7F.js";import"./index-S5J7S5hv.js";import"./StringUtils-Df7AZImX.js";import{l as _}from"./index-BcZ93NM_.js";import{S as E}from"./SynapseFormSubmissionGrid-B7gVmXQh.js";import"./mockSchema-DSeDB-Z1.js";import"./mockFileEntity-JpMe2M0I.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-CoNOrhGs.js";import"./mockTeam-Bcwqsbjz.js";import"./SynapseConstants-DVJ44WEh.js";import"./uniqueId-tUOclRlG.js";import"./toString-Bzm3UT7Z.js";import"./isObjectLike-DxYlDsig.js";import"./iframe-D3F2GMA7.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-DUuN9trd.js";import"./times-D-Aq82bZ.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-CsACraHJ.js";import"./asyncJobHandlers-CqdAgsyx.js";import"./BasicMockedCrudService-utHzKHHv.js";import"./cloneDeep-B7okS4l1.js";import"./_Uint8Array-B9EMhkHn.js";import"./_initCloneObject-CvHG9Ysp.js";import"./_getTag-165XvxeE.js";import"./isEqual-CUPX6WUC.js";import"./_baseIsEqual-Br_DSe-0.js";import"./mockAnnotationColumns-BgK_5Z7P.js";import"./tableQueryHandlers-BqZpUmdi.js";import"./omit-BVC72kUY.js";import"./_baseGet-DH0eDha3.js";import"./isNil-CsjaTIlp.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-CL0PpV51.js";import"./_baseFlatten-BolFvJxh.js";import"./pick-CYaHerIb.js";import"./_baseSet-DBN35L64.js";import"./hasIn-BOHAPdr8.js";import"./accessRequirementAclHandlers-BjoLJLb-.js";import"./mockAccessRequirementAcls-BiGPCaXy.js";import"./mockAccessRequirements-CrTvmiPs.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-D-4qnUlA.js";import"./wikiHandlers-_LaMq9z8.js";import"./mockWikiPageKey-C2ZjFJ1B.js";import"./teamHandlers-gd1nDzhL.js";import"./dataAccessRequestHandlers-Oi8FAMeg.js";import"./MockResearchProject-GCkTSkIz.js";import"./mock_discussion-C8AqBdDI.js";import"./fakerUtils-BglWUcok.js";import"./index-DuD9_SHA.js";import"./mockTableEntity-DNeZ2LLC.js";import"./mockFileEntityACLVariants-BK1J30G_.js";import"./entityHandlers-DK2_Tb6E.js";import"./mockEntity-BIKCeJfV.js";import"./mockEvaluationQueue-o57svdSJ.js";import"./featureFlagHandlers-C-WHa_28.js";import"./fileHandlers-BIV70Zzr.js";import"./personalAccessTokenHandlers-DtyvIFzy.js";import"./researchProjectHandlers-Ct-CYReD.js";import"./resetTwoFactorAuthHandlers-DoTQN9b1.js";import"./userProfileHandlers-peglSv6w.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-BEFHcCZ7.js";import"./FullWidthAlert-so-_t30t.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-CqpKQP2G.js";import"./createTheme-DxPmDsXe.js";import"./resolveComponentProps-CaeHLUnl.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-C3ujZQD1.js";import"./createSvgIcon-DQggPujc.js";import"./DefaultPropsProvider-CA0JTeAn.js";import"./Close-DxYTa1FQ.js";import"./IconButton-DR6tIRVX.js";import"./ButtonBase-CjjADlAH.js";import"./useTimeout-95Uu6vA_.js";import"./useIsFocusVisible-ji6_XkFI.js";import"./useEventCallback-DPi-ZLqb.js";import"./Paper-BK4Bj4O7.js";import"./Stack-DWwTHUXD.js";import"./getThemeProps-V1ucmu3E.js";import"./useTheme-XnoFM_Wx.js";import"./Box-BVA_w1QW.js";import"./AlertTitle-45qqL5YG.js";import"./Typography-v0POtSOq.js";import"./useTheme-CJBEKZ9c.js";import"./Grow-DmDJqap6.js";import"./index-DUffBxe0.js";import"./utils-BOKoqyc0.js";import"./ClickAwayListener-BEJzrLjm.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-CozM-hK3.js";import"./index-41pZ6gO6.js";import"./useControlled-1wnSshbR.js";import"./useId-BwAKmsvV.js";import"./Popper-CjgMXnFP.js";import"./Button-BVtDS0Z4.js";import"./useQuery-CAfiiP8Y.js";import"./utils-2N3F0i7m.js";import"./Link-1GOzsUPc.js";import"./Collapse-BlrqS6Dh.js";import"./tinycolor-Begke6kS.js";import"./Fade-DSiiFgFh.js";import"./Skeleton-Btxwmn1A.js";import"./inputBaseClasses-CdbVFe9I.js";import"./calculateFriendlyFileSize-CtJxsaxb.js";import"./CheckCircleTwoTone-BQIZghha.js";import"./InfoTwoTone-CYOxB8wk.js";import"./mutation-BPJK6jID.js";import"./dayjs.min-qDEsEwdo.js";import"./chunk-AYJ5UCUI-DO6vE-8k.js";import"./index-DFiExYtk.js";import"./react-CeNnC5eF.js";import"./util-wE9um9Y9.js";import"./WideButton-CYxXLNdS.js";import"./DeleteTwoTone-zBHFpsqu.js";import"./createSvgIcon-D9EnoDNv.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-CKVb4SHD.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-DFU_IjeT.js";import"./DialogBase-BBhIC30o.js";import"./Close-KEljNl-R.js";import"./HelpPopover-DhDqNSPU.js";import"./MarkdownPopover-CMgtND4D.js";import"./LightTooltip-z4VGvyCS.js";import"./MarkdownSynapse-Dnej1XEu.js";import"./SkeletonButton-BR8bMIGW.js";import"./SkeletonInlineBlock-Dkq7-Bpc.js";import"./SkeletonTable-T7Ax6RbE.js";import"./SkeletonParagraph-CkquWa0V.js";import"./HelpOutlineTwoTone-F4QWVnmQ.js";import"./DialogTitle-BuiWin42.js";import"./DialogContent-CNVbxBt5.js";import"./Dialog-UVwUQhRp.js";import"./Modal-C73aY1NM.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-Cyp-1omj.js";import"./WarningDialog-D0Yu-oLV.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
