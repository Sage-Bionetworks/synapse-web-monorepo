import{j as l}from"./jsx-runtime-B8F9yCu2.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-B0kBNeMy.js";import{g as T}from"./handlers-UqFz7CHX.js";import{aH as S,M as a}from"./useFiles-DUNIhSV7.js";import"./OrientationBanner-Bji4jA3k.js";import"./index-DQ1pwsUN.js";import"./StringUtils-CzgJJW-6.js";import{l as _}from"./index-BGCwCqF6.js";import{S as E}from"./SynapseFormSubmissionGrid-BCisB5lu.js";import"./mockSchema-CyIwO54D.js";import"./mockFileEntity-DJarW4jA.js";import"./mock_file_handle-Ct1MSfYs.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-CMr_TI_H.js";import"./mockTeam-CbXCF2wr.js";import"./SynapseConstants-DQ1zBBb6.js";import"./uniqueId-BKWm8MfJ.js";import"./toString-Cv3UMp2j.js";import"./isObjectLike-6xxBu9nc.js";import"./iframe-Ber0uhpE.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-B19r0Yln.js";import"./times-DwUpU9ZF.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-1bRyGB6Y.js";import"./asyncJobHandlers-DrLg_fGF.js";import"./BasicMockedCrudService-Clja3KV5.js";import"./cloneDeep-ZEcnoJdE.js";import"./_Uint8Array-trlUSQMK.js";import"./_initCloneObject-DmeBfQFl.js";import"./_getTag-0tTDydmm.js";import"./isEqual-CmS8f6Z7.js";import"./_baseIsEqual-Bq4Nylta.js";import"./mockAnnotationColumns-CBdnEoQm.js";import"./tableQueryHandlers-BWsa20o2.js";import"./omit-DseQEs04.js";import"./_baseGet-BmpsHY9p.js";import"./isNil-DuX8kKMU.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-R-dqjrns.js";import"./_baseFlatten-DON7wyT8.js";import"./pick-BMpfad1g.js";import"./_baseSet-DlWGaieZ.js";import"./hasIn-BCl84wqw.js";import"./accessRequirementAclHandlers-DTirdQkM.js";import"./mockAccessRequirementAcls-C_60r3oY.js";import"./mockAccessRequirements-D2U-4gjD.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CZdZHQnO.js";import"./accessRequirementHandlers-CLwjzGhp.js";import"./wikiHandlers-BOTdDOb1.js";import"./mockWikiPageKey-DPTZThZg.js";import"./teamHandlers-opGvILO-.js";import"./dataAccessRequestHandlers-BHTnOwdA.js";import"./MockResearchProject-ChaW5KTM.js";import"./mock_discussion-Da4AHblu.js";import"./fakerUtils-CR7rMQaQ.js";import"./index-CRc_z1w1.js";import"./mockTableEntity-3mCHcFX_.js";import"./mockFileEntityACLVariants-BWmZbqVp.js";import"./entityHandlers-BL_qFLEt.js";import"./mockEntity-BJXs1W_X.js";import"./mockEvaluationQueue-B5jWwk_1.js";import"./featureFlagHandlers-DHNTS7UZ.js";import"./fileHandlers-0RBzysbW.js";import"./personalAccessTokenHandlers-BvbINfdq.js";import"./researchProjectHandlers-mO256MHh.js";import"./resetTwoFactorAuthHandlers-BbYMTp5W.js";import"./userProfileHandlers-BHbAmruu.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-BrtiFLkN.js";import"./FullWidthAlert-BrTMKYXm.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-PZkf-jPQ.js";import"./createTheme-CvWzDpdo.js";import"./resolveComponentProps-XsoZTRWC.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-BaidT4sD.js";import"./createSvgIcon-DXdrzfQq.js";import"./DefaultPropsProvider-DTNalRio.js";import"./Close-CKQJvfvd.js";import"./IconButton-jrtzc4fH.js";import"./ButtonBase-BQJxoogz.js";import"./useTimeout-LLr9iMPv.js";import"./useIsFocusVisible-kYimsF7D.js";import"./useEventCallback-cNUA3zHB.js";import"./Paper-DolJMAHJ.js";import"./Stack-DNk4NVtx.js";import"./getThemeProps-Bmb8xS95.js";import"./useTheme-DC6cp_DY.js";import"./Box-CHcO_qIh.js";import"./AlertTitle-BZV0Rp7k.js";import"./Typography-Cr5v_ihi.js";import"./useTheme-BMkoP2Dd.js";import"./Grow-DIdr3kKL.js";import"./index-CzXE8kXs.js";import"./utils-crfQibeg.js";import"./ClickAwayListener-BdTMHeZW.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-CRXO9dAn.js";import"./index-Cj0i8O2P.js";import"./useControlled-CuR_U5EM.js";import"./useId-DXwVjo-q.js";import"./Popper-8HZykaUC.js";import"./Button-CYW7tum7.js";import"./useQuery-v9fHbYhn.js";import"./utils-C14kvl81.js";import"./Link-D--XjCYV.js";import"./Collapse-BFO6utOk.js";import"./tinycolor-Begke6kS.js";import"./Fade-CBo9pmeT.js";import"./Skeleton-BodMJu2e.js";import"./inputBaseClasses-HXrsNBjw.js";import"./calculateFriendlyFileSize-gcXWr6JQ.js";import"./CheckCircleTwoTone-D3yXCAfy.js";import"./InfoTwoTone-GaZs2gOk.js";import"./mutation-Dxj-2szy.js";import"./dayjs.min-CtWKk_St.js";import"./chunk-AYJ5UCUI-CtF4x_xB.js";import"./index-D-sqPWvT.js";import"./react-DbIxCYhJ.js";import"./util-D_dj-gIg.js";import"./WideButton-B8BnExMx.js";import"./DeleteTwoTone-DHRgXcs1.js";import"./createSvgIcon-B1004WJX.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-VqxkO2pH.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-DHaVmITT.js";import"./DialogBase-9ThBfZT0.js";import"./Close-gMlVCzfq.js";import"./HelpPopover-CwdJnADK.js";import"./MarkdownPopover-C7F4v8v2.js";import"./LightTooltip-NWZ_R3F2.js";import"./MarkdownSynapse-Bvp5Yn_3.js";import"./SkeletonButton-DtA7ta7U.js";import"./SkeletonInlineBlock-BmxTw9Xy.js";import"./SkeletonTable-DQK8oMZu.js";import"./SkeletonParagraph-YpL83hB1.js";import"./HelpOutlineTwoTone-DNygck5C.js";import"./DialogTitle-Cym0y6WO.js";import"./DialogContent-B3Z8yFEI.js";import"./Dialog-Cu-3T6n5.js";import"./Modal-kfoGuyzI.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-fvamfRUP.js";import"./WarningDialog-FL_FBCK6.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
