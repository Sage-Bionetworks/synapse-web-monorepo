import{g as E}from"./handlers-YaK3mLXf.js";import{g as j,B as I,M as N}from"./useFiles-CwDpHdTz.js";import{j as t}from"./jsx-runtime-CQPQXr52.js";import{a as h,b as R}from"./useSubscription-C6SwXAE1.js";import{p as s,m as D}from"./VerificationSubmission-DKyendrM.js";import{r as b}from"./index-KKmRTF5s.js";import{D as F}from"./DropdownSelect-CtSzoMvb.js";import"./StringUtils-BcSmk1fX.js";import"./OrientationBanner-DyZBz6DX.js";import{u as v}from"./useEntity-Dl8fureq.js";import{c as M}from"./useForum-Dz_YSOZn.js";import{T as P}from"./Topic-CZ-1UVnx.js";import{c as C}from"./useThread-wiwLliHV.js";import{B as k}from"./Box-Xg0w7t2C.js";import{T as A,a as T}from"./Tabs-NLiulQLV.js";import{S as B}from"./Stack-9Hc468Wb.js";import{B as $}from"./Button-CDG2w3Q3.js";import"./mockSchema-Dgw8GP8K.js";import"./mockFileEntity-C26VSTfZ.js";import"./mock_file_handle-qAzg5fnb.js";import"./mock_user_profile-CCzWeUML.js";import"./mockProject-B_auO4LZ.js";import"./mockTeam-dSZ0s6BE.js";import"./SynapseConstants-pq2jxX2i.js";import"./uniqueId-Ci8UCdS7.js";import"./toString-CE_mjtl-.js";import"./isObjectLike-Dd4dGT1V.js";import"./iframe-DRiXRSY5.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-h4R5yMGb.js";import"./times-DwnHVqG8.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-BzwIgAfw.js";import"./asyncJobHandlers-Be6CE4H1.js";import"./index-BJFVTdgW.js";import"./util-DIw-fYpp.js";import"./BasicMockedCrudService-MN91ERO5.js";import"./cloneDeep-BGb7d97h.js";import"./_Uint8Array-Dx0fLmqC.js";import"./_initCloneObject-B4x6wi9T.js";import"./_getTag-D0V2SLmd.js";import"./isEqual-CAN5-Gd-.js";import"./mockAnnotationColumns-CsYOAlSh.js";import"./tableQueryHandlers-ymEvIeqz.js";import"./omit-CFbnYORD.js";import"./_baseGet-BXXgH14j.js";import"./isNil-B_BJKF3J.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-iQbBRW5N.js";import"./_baseFlatten-CBFbsVJF.js";import"./pick-DRhGijKa.js";import"./_baseSet-U7ntMWj9.js";import"./hasIn-BbJ5hrG5.js";import"./accessRequirementAclHandlers-Bw008I1t.js";import"./mockAccessRequirementAcls-V9JKVB5I.js";import"./mockAccessRequirements-hzbxWTOy.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CfZ4orwO.js";import"./accessRequirementHandlers-JFrKn84A.js";import"./wikiHandlers-Bl8K5dHC.js";import"./mockWikiPageKey-MnV5TQGB.js";import"./teamHandlers-BX_kUfzX.js";import"./dataAccessRequestHandlers-CP-yLSsU.js";import"./MockResearchProject-FWG80hYB.js";import"./mock_discussion-CfhrhuDt.js";import"./fakerUtils-DVpf94cM.js";import"./index-BWMEhKmC.js";import"./mockTableEntity-BQg2eDSI.js";import"./mockFileEntityACLVariants-DtGIy_bP.js";import"./entityHandlers-C3NfeYpL.js";import"./mockEntity-BzPPjKYR.js";import"./mockEvaluationQueue-DG9NWl4h.js";import"./featureFlagHandlers-BN1yO2vm.js";import"./fileHandlers-Ewf04lKU.js";import"./personalAccessTokenHandlers-BRBQ1Hkt.js";import"./researchProjectHandlers-B0gpA9g2.js";import"./resetTwoFactorAuthHandlers-DhaRP2K6.js";import"./userProfileHandlers-uJcUhR6W.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useTimeout-BCXwqZGe.js";import"./FullWidthAlert-DtTI913S.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-C_ZZXjq8.js";import"./createTheme-BqgKvQ8G.js";import"./DefaultPropsProvider-CWjJlZr6.js";import"./useSlot-CLNHE8BT.js";import"./useForkRef-D79-SeVS.js";import"./createSimplePaletteValueFilter-BTPJzFbr.js";import"./createSvgIcon-B8xlFo8P.js";import"./Close-DwV5UBXB.js";import"./IconButton-m3tI1RB4.js";import"./ButtonBase-BaArPKRC.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-Bq52wuuH.js";import"./Paper-jcbo9BO-.js";import"./useTheme-DBGU2jzI.js";import"./useTheme-HEqh14Zh.js";import"./AlertTitle-DFGqbxHs.js";import"./Typography-DVQWdlVG.js";import"./index-DLQYH-hE.js";import"./extendSxProp-CQpNTWbd.js";import"./ClickAwayListener-ChCwd6mN.js";import"./getReactElementRef-Bvh2yZ15.js";import"./index-CbuTK_hw.js";import"./index-CS9z8aEe.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-lyiR1ZA0.js";import"./Tooltip-CCpJJKI-.js";import"./index-ygp4hJLM.js";import"./useControlled-DKh-KTFM.js";import"./Popper-C9xFKDlU.js";import"./useQuery-DH7Ym7ZZ.js";import"./utils-CtWK0csr.js";import"./Link-BuOcEBSX.js";import"./Collapse-D4K7Ux3-.js";import"./tinycolor-Begke6kS.js";import"./Fade-HbE-yoUa.js";import"./inputBaseClasses-D0lO1Juj.js";import"./calculateFriendlyFileSize-DQ8c_zc0.js";import"./CheckCircleTwoTone-DpMtbz9w.js";import"./InfoTwoTone-BNWQZzrY.js";import"./useMutation-DLlT5jgZ.js";import"./dayjs.min-CZ_KWEVN.js";import"./chunk-AYJ5UCUI-sa7DX7t9.js";import"./Skeleton-DRAPXtU3.js";import"./useInfiniteQuery-BW3kM9TY.js";import"./IconSvg-CS5GBm4P.js";import"./LayersTwoTone-DEA7_lIy.js";import"./ContentCopyTwoTone-C0RQ4uoC.js";import"./HelpOutlineTwoTone-CoKjjJ-w.js";import"./ErrorOutlined-OP0VS034.js";import"./GetAppTwoTone-Cir1yim4.js";import"./InfoOutlined-BV1ag7ot.js";import"./PhoneTwoTone-CtDLSllh.js";import"./DeleteTwoTone-Bg1weUvf.js";import"./getValidReactChildren-FvW8zF7I.js";import"./MenuList-IEY9m_Bg.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./List-B0BCP95-.js";import"./MenuItem-CogwEDE3.js";import"./dividerClasses--i7RCFVu.js";import"./index-lUjIlAO0.js";import"./react-B4ldvmD6.js";import"./pickBy-BSW_e5ti.js";import"./_baseIndexOf-rBnIfvEs.js";import"./isString-DerHpDTn.js";import"./_baseIteratee-DvPSObUS.js";import"./useQueries-DLqNYIWi.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntityBundle-j8nsRfT1.js";import"./ConditionalWrapper-xvpsN7CC.js";import"./debounce-Be36O1Ab.js";import"./KeyboardArrowRight-CcKN2gv2.js";import"./getThemeProps-DjdTtCv_.js";function g(i){const{subscription:p}=i,{data:o}=M(p.objectId),{data:m}=v(o==null?void 0:o.projectId,void 0,{enabled:!!o}),{isSubscribed:a,isLoading:n,toggleSubscribed:e}=h(p.objectId,s.FORUM);let c;return o&&(c=`${j(I.PORTAL_ENDPOINT)}Synapse:${o.projectId}/discussion`),t.jsx(P,{isLoading:n,isSubscribed:a,icon:"dashboard",name:m==null?void 0:m.name,nameHref:c,onToggleSubscribe:e})}try{g.displayName="ForumTopic",g.__docgenInfo={description:"",displayName:"ForumTopic",props:{subscription:{defaultValue:null,description:"",name:"subscription",required:!0,type:{name:"Subscription"}}}}}catch{}function H(i){const{subscription:p}=i,{threadData:o}=C(p.objectId),{isSubscribed:m,isLoading:a,toggleSubscribed:n}=h(p.objectId,s.THREAD);let e;return o&&(e=`${j(I.PORTAL_ENDPOINT)}Synapse:${o.projectId}/discussion/threadId=${p.objectId}`),t.jsx(P,{isLoading:a,isSubscribed:m,icon:"discussion",name:o==null?void 0:o.title,nameHref:e,onToggleSubscribe:n})}try{ThreadTopic.displayName="ThreadTopic",ThreadTopic.__docgenInfo={description:"",displayName:"ThreadTopic",props:{subscription:{defaultValue:null,description:"",name:"subscription",required:!0,type:{name:"Subscription"}}}}}catch{}function S(i){const{subscription:p}=i;switch(p.objectType){case s.FORUM:return t.jsx(g,{subscription:p});case s.THREAD:return t.jsx(H,{subscription:p});default:return console.warn(`Subscription type ${i.subscription.objectType} not supported in UI`),t.jsx(t.Fragment,{})}}try{S.displayName="SubscriptionItem",S.__docgenInfo={description:`Simple discriminator component that maps a {@link Subscription} rendered on the {@link SubscriptionPage } to
a {@link Topic } component`,displayName:"SubscriptionItem",props:{subscription:{defaultValue:null,description:"",name:"subscription",required:!0,type:{name:"Subscription"}}}}}catch{}const d=[{value:"ASC",label:"Date Posted"},{value:"DESC",label:"Most Recent"}];function w(){const[i,p]=b.useState(s.FORUM),[o,m]=b.useState(d[0]),a=b.useId(),n={objectType:i,sortBy:D.CREATED_ON,sortDirection:o.value},{data:e,hasNextPage:c,isFetchingNextPage:f,fetchNextPage:O}=R(n,{staleTime:1/0,select:r=>({pages:r.pages.flatMap(l=>l.results),pageParams:r.pageParams})},[`subscriptionPageFetch_${a}`,n]);return t.jsxs(t.Fragment,{children:[t.jsx(k,{sx:{float:"right"},children:t.jsx(F,{variant:"outlined",options:d.map(r=>r.label),selectedIndex:d.findIndex(r=>r.value===o.value),setSelectedIndex:r=>m(d[r])})}),t.jsxs(A,{sx:{mb:3},value:i,onChange:(r,l)=>{r.stopPropagation(),p(l)},textColor:"secondary",indicatorColor:"secondary",children:[t.jsx(T,{value:s.FORUM,label:"Project Forums"}),t.jsx(T,{value:s.THREAD,label:"Threads"})]}),t.jsx(B,{sx:{gap:.5},children:e==null?void 0:e.pages.map(r=>t.jsx(S,{subscription:r},r.subscriptionId))}),c&&t.jsx($,{variant:"contained",onClick:()=>{O()},disabled:f,sx:{mt:6},children:f?"Loading...":"Load More"})]})}const Hr={title:"Synapse/Following/SubscriptionPage",component:w,parameters:{stack:"mock"}},u={name:"SubscriptionPage",args:{},parameters:{msw:{handlers:{...E(N)}}}};var _,y,x;u.parameters={...u.parameters,docs:{...(_=u.parameters)==null?void 0:_.docs,source:{originalSource:`{
  name: 'SubscriptionPage',
  args: {},
  parameters: {
    msw: {
      handlers: {
        ...getHandlers(MOCK_REPO_ORIGIN)
      }
    }
  }
}`,...(x=(y=u.parameters)==null?void 0:y.docs)==null?void 0:x.source}}};const wr=["Demo"];export{u as Demo,wr as __namedExportsOrder,Hr as default};
