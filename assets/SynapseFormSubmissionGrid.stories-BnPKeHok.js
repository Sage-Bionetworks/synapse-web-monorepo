import{j as l}from"./jsx-runtime-CZmUC0kc.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-DvCE_3h1.js";import{aF as S,M as a}from"./useFiles-QsHV2q1R.js";import"./OrientationBanner-Bqf4PnT9.js";import"./index-D48dKAGK.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-CaZRYjfA.js";import{S as E}from"./SynapseFormSubmissionGrid-HTVSlWxL.js";import"./mockSchema-D0abhxBO.js";import"./mockFileEntity-U9FMP1i_.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-C2IylWFG.js";import"./mockTeam-CQThp78w.js";import"./SynapseConstants-BtQ24Nut.js";import"./uniqueId-BNVOIyXj.js";import"./toString-BtL3po-k.js";import"./isObjectLike-DKyqGUYf.js";import"./iframe-DXxs8wzV.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-Db5oJ-yg.js";import"./times-DpG8gG-S.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-g29JVhcw.js";import"./asyncJobHandlers-N3g23Twy.js";import"./BasicMockedCrudService-DfvoeYYZ.js";import"./cloneDeep-hNZImc-4.js";import"./_Uint8Array-K-J4cL1T.js";import"./_initCloneObject-02v0DsxF.js";import"./_getTag-CYk1drFw.js";import"./isEqual-b23C5zIw.js";import"./_baseIsEqual-DH-XEyfw.js";import"./mockAnnotationColumns-C9qQJsZq.js";import"./tableQueryHandlers-CeZMqKq8.js";import"./omit-DgmN4gEa.js";import"./_baseGet-B_EdYx8s.js";import"./isNil-BEj-5XkN.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-Dd1BqavR.js";import"./_baseFlatten-9ptRnsH_.js";import"./pick-PxY5EqP9.js";import"./_baseSet-CXmwEcTv.js";import"./hasIn-9BSiWDqX.js";import"./accessRequirementAclHandlers-D8XYMvUj.js";import"./mockAccessRequirementAcls-CWsWANj_.js";import"./mockAccessRequirements-BlxYKckT.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-7SaCBxo3.js";import"./wikiHandlers-JRHK9iTU.js";import"./mockWikiPageKey-De1HHTCZ.js";import"./teamHandlers-R9yCOeXP.js";import"./dataAccessRequestHandlers-BbJx-NZY.js";import"./MockResearchProject-DiYnFgcA.js";import"./mock_discussion-vmvQAnRH.js";import"./fakerUtils-BY-5Y8VT.js";import"./index-C7-o_222.js";import"./mockTableEntity-DXbFk5gC.js";import"./mockFileEntityACLVariants-XuqLsmiR.js";import"./entityHandlers-pHhiEzJz.js";import"./mockEntity-BCbRCpX_.js";import"./mockEvaluationQueue-BINglLmf.js";import"./featureFlagHandlers-TC7a_z_v.js";import"./fileHandlers-DkF01B6r.js";import"./personalAccessTokenHandlers-BYWmCmib.js";import"./researchProjectHandlers-Ct376RuL.js";import"./resetTwoFactorAuthHandlers-Ce730_v1.js";import"./userProfileHandlers-CepmxdVv.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-xk93-I-l.js";import"./FullWidthAlert-WrZ35eIA.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-CrX7ZBHc.js";import"./createTheme-DdUHwKDu.js";import"./resolveComponentProps-DBk_bQ3w.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-B4VymO4y.js";import"./createSvgIcon-CGfU68f8.js";import"./DefaultPropsProvider-DnsYkYhu.js";import"./Close-B2Put2a1.js";import"./IconButton-MNk6eaK_.js";import"./ButtonBase-DijL8LGZ.js";import"./useTimeout-CfJSgBAN.js";import"./useIsFocusVisible-pZRnHMmE.js";import"./useEventCallback-CfXeTH2v.js";import"./Paper-BWc9QIn7.js";import"./Stack-s10dd2v_.js";import"./getThemeProps-DpFYsVdH.js";import"./useTheme-Cdkd9-zl.js";import"./Box-EZ-Kz8mO.js";import"./AlertTitle-qABI-vcz.js";import"./Typography-CDDEj6bd.js";import"./useTheme-CDkkRwMy.js";import"./Grow-DPoxz4OE.js";import"./index-CTlj-uEa.js";import"./utils-BgEZDT5t.js";import"./ClickAwayListener-CyT30qp6.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-B0EkgW6k.js";import"./index-7Uf9BQgU.js";import"./useControlled-DZ97s39z.js";import"./useId-Buvf4Xiv.js";import"./Popper-DgH4d2MR.js";import"./Button-CYaahIbs.js";import"./useQuery-DWbROD4e.js";import"./utils-DnrSKvOR.js";import"./Link-Cbjql7oX.js";import"./Collapse-DQpZ3-gN.js";import"./tinycolor-Begke6kS.js";import"./Fade-B1FcSJEt.js";import"./Skeleton-DJgc57tZ.js";import"./inputBaseClasses-DcQwlFr_.js";import"./calculateFriendlyFileSize-9m6yHg2A.js";import"./CheckCircleTwoTone-BY4FzlSL.js";import"./InfoTwoTone-DL9tebAy.js";import"./useMutation-hkATgPdp.js";import"./dayjs.min-DlNJuh2r.js";import"./chunk-AYJ5UCUI-S23a5Wq1.js";import"./index-Bqph6avf.js";import"./react-DnH3PGz_.js";import"./util-RMwz9FGd.js";import"./WideButton-CaBuJahL.js";import"./DeleteTwoTone-B1A_Ei_g.js";import"./createSvgIcon-GZrTebC1.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-C3LdGDS0.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-BJJXm5HD.js";import"./DialogBase-qg-8oXaq.js";import"./Close-xcrOgfIk.js";import"./HelpPopover-uajD5hUq.js";import"./MarkdownPopover-BKWV683N.js";import"./LightTooltip-sHA6cHH-.js";import"./MarkdownSynapse-CFzu2KcT.js";import"./SkeletonButton-CMbg4Bdv.js";import"./SkeletonInlineBlock-BrxzpBUR.js";import"./SkeletonTable-BIbnUYiA.js";import"./SkeletonParagraph-CYjIXPs8.js";import"./HelpOutlineTwoTone-D5GuTbzU.js";import"./DialogTitle-CNlVEGdQ.js";import"./DialogContent-BbksoyzQ.js";import"./Dialog-CnQjj7Tx.js";import"./Modal-0SjNpFpL.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-Bmsj-0DB.js";import"./WarningDialog-Cl-ydriK.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
