import{j as l}from"./jsx-runtime-CbE1-_Hu.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-BI5WaB2N.js";import{g as T}from"./handlers-CfN30NXS.js";import{aF as S,M as a}from"./useFiles-CAlHmr5T.js";import"./OrientationBanner-DGngaujv.js";import"./index-DRsegcgA.js";import"./StringUtils-BXg3aRdm.js";import{l as _}from"./index-CJca-8Gt.js";import{S as E}from"./SynapseFormSubmissionGrid-YO1Gdbkd.js";import"./mockSchema-BLBAFWw9.js";import"./mockFileEntity-BAlt1Fl3.js";import"./mock_file_handle-DwnN5i7-.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-JUZW5yQT.js";import"./mockTeam-naHc2c-e.js";import"./SynapseConstants-bJg229mq.js";import"./uniqueId-CkX8RXYg.js";import"./toString-CmzALc6y.js";import"./isObjectLike-Cqjtje0X.js";import"./iframe-DRSrCG1x.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-C30cp9od.js";import"./times-CvYdDYV5.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-huepMrbI.js";import"./asyncJobHandlers-VdciBfPr.js";import"./BasicMockedCrudService-DFFTeHlZ.js";import"./cloneDeep-BgDpPnkU.js";import"./_Uint8Array-D2WfOTdE.js";import"./_initCloneObject-Dh3qvFnp.js";import"./_getTag-C1ILiECS.js";import"./isEqual-DE_dUMMt.js";import"./_baseIsEqual-CV2sNz5h.js";import"./mockAnnotationColumns-DFWHdYkM.js";import"./tableQueryHandlers-C1zD_g9h.js";import"./omit-akqTq58U.js";import"./_baseGet-GyfWhR0t.js";import"./isNil-qGzJk0AT.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-Bw0szGHI.js";import"./_baseFlatten-DiblasBu.js";import"./pick-DjkcqNs1.js";import"./_baseSet-BaC7BkH2.js";import"./hasIn-DDzuAgDZ.js";import"./accessRequirementAclHandlers-Bw8UnJiK.js";import"./mockAccessRequirementAcls-M3FGITFc.js";import"./mockAccessRequirements-CYEjjfdJ.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-5OtZEItt.js";import"./accessRequirementHandlers-C6wZWLXj.js";import"./wikiHandlers-CKbIf6p3.js";import"./mockWikiPageKey-DoCxS3k3.js";import"./teamHandlers-DTpGznnM.js";import"./dataAccessRequestHandlers-Db4YU3BT.js";import"./MockResearchProject-24wmgHDI.js";import"./mock_discussion-Cb1BTb4M.js";import"./fakerUtils-CqqkKSib.js";import"./index-MZNyO3KY.js";import"./mockTableEntity-DoWWpSzP.js";import"./mockFileEntityACLVariants-HY9S-Wf_.js";import"./entityHandlers-DPQyCXtW.js";import"./mockEntity-C3Dq6sUK.js";import"./mockEvaluationQueue-21Hz_THe.js";import"./featureFlagHandlers-Dy8fVGQv.js";import"./fileHandlers-DfKG9jDU.js";import"./personalAccessTokenHandlers-DbeWBMbZ.js";import"./researchProjectHandlers-CN_I5AZj.js";import"./resetTwoFactorAuthHandlers-GtWZwkhe.js";import"./userProfileHandlers-YCeqWjJW.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-OZASuHiR.js";import"./FullWidthAlert-3uSpNraA.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-Bw1ywpIE.js";import"./createTheme-C7_V6wpJ.js";import"./resolveComponentProps-BN9HfiQD.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-C78wZDeC.js";import"./createSvgIcon-18JsIaS-.js";import"./DefaultPropsProvider-C12ceKGQ.js";import"./Close-DOqyLWj4.js";import"./IconButton-sxPalBtr.js";import"./ButtonBase-CmnTtM5f.js";import"./useTimeout-DQT_LAZn.js";import"./useIsFocusVisible-obP2HoUH.js";import"./useEventCallback-BvBBsNbH.js";import"./Paper-CqJ40SAY.js";import"./Stack-Dg2xMObN.js";import"./getThemeProps-BLKeHxpS.js";import"./useTheme-CQ-aVgZE.js";import"./Box-D2GFn1fE.js";import"./AlertTitle-BCwKsMwc.js";import"./Typography-lU14u2GV.js";import"./useTheme-CRuycb0z.js";import"./Grow-CPE-J13k.js";import"./index-CziNeJdu.js";import"./utils-cOnYn6rO.js";import"./ClickAwayListener-D_gLR8Uu.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-v1tj7X5H.js";import"./index-C7UNvflh.js";import"./useControlled-CujF-W-N.js";import"./useId-C6f6WTtB.js";import"./Popper-IFEDVLcM.js";import"./Button-BVRJ5q5Y.js";import"./useQuery-szSrlcgI.js";import"./utils-CsQgGKbD.js";import"./Link-Cm7aV6n7.js";import"./Collapse-CPeMUQEz.js";import"./tinycolor-Begke6kS.js";import"./Fade-vW6FvaYU.js";import"./Skeleton-Dgpvxrx_.js";import"./inputBaseClasses-DIfFvLjN.js";import"./calculateFriendlyFileSize-D9Fs0pNs.js";import"./CheckCircleTwoTone-DGPS0HlM.js";import"./InfoTwoTone-DBfE9lFd.js";import"./useMutation-DBuu9s3L.js";import"./dayjs.min-rU54EIQ-.js";import"./chunk-AYJ5UCUI-CRE7f-_Q.js";import"./index-LifXYACQ.js";import"./react-DxM2qjbL.js";import"./util-pPivCuBa.js";import"./WideButton-C0hWw-s_.js";import"./DeleteTwoTone-6jJIKL45.js";import"./createSvgIcon-YIs8UOke.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-DPyGcwKT.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-CcACYwO5.js";import"./DialogBase-Co5kEjRk.js";import"./Close-ChlOWSb2.js";import"./HelpPopover-BXpgmgIv.js";import"./MarkdownPopover-e1vaQpgo.js";import"./LightTooltip-PCl5UWXu.js";import"./MarkdownSynapse-feYU6r02.js";import"./SkeletonButton-DYVaAb0X.js";import"./SkeletonInlineBlock-CNo-zot-.js";import"./SkeletonTable-CX6FtGwf.js";import"./SkeletonParagraph-CcLfVfMY.js";import"./HelpOutlineTwoTone-BoKP6I7c.js";import"./DialogTitle-Htw--Vko.js";import"./DialogContent-2yj6NAF8.js";import"./Dialog-CXyceiSz.js";import"./Modal-BgUjCm4V.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-DN9q4oz3.js";import"./WarningDialog-Bse4M_cO.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
