import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-B8lGVSZx.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-Cq89ug1d.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-DJ5Fdh9G.js";import"./SynapseConstants-BV_vjEV4.js";import"./OrientationBanner-C78UQJCr.js";import"./index-BMDI4sDj.js";import"./index-C8AgDejC.js";import"./iframe-BpbBGkgc.js";import"./spreadSx-CwcO6WA9.js";import"./react-B80l2OrH.js";import"./FullWidthAlert-1tHM104s.js";import"./Alert-fdSUVrh5.js";import"./createTheme-dGGVbsHM.js";import"./DefaultPropsProvider-CEqRozh0.js";import"./useSlot-Csx6ihJx.js";import"./useForkRef-QK4cJop7.js";import"./createSimplePaletteValueFilter-DQe7d5Qb.js";import"./createSvgIcon-CchSg1Gx.js";import"./Close-CxVV_b-1.js";import"./IconButton-muudUxJv.js";import"./useTimeout-BkEmZ-C2.js";import"./ButtonBase-cVvht4wM.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-CgsLq8_L.js";import"./Paper-CRP6Ta3q.js";import"./useTheme-BVkYgVpj.js";import"./useTheme-CfmQtQKd.js";import"./Stack-CdExR9_o.js";import"./extendSxProp-D0VtO7mi.js";import"./getThemeProps-DYqoV81W.js";import"./Box-_-I0XUqB.js";import"./AlertTitle-_N-Juk4h.js";import"./Typography-YA-Nis2y.js";import"./index-B_eatk0d.js";import"./ClickAwayListener-Cus--QEu.js";import"./getReactElementRef-BiSbqrbX.js";import"./index-Ckm25AxB.js";import"./index-BbU_ZiS0.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow--3DiAtyk.js";import"./Tooltip-BgTWlnJ0.js";import"./index-Bs_yQwLJ.js";import"./useControlled-CY9xyabe.js";import"./Popper-Bd_A_V6g.js";import"./Button-8Hf9dmO4.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-BrTWN470.js";import"./QueryClientProvider-Bgnvz8QP.js";import"./Link-BE6I7YcM.js";import"./Collapse-nm8xx53n.js";import"./_baseUniq-hk5S7B08.js";import"./_Uint8Array-BXZJkGT_.js";import"./isArray-_KeI5LAQ.js";import"./_getTag-Cp8N0B3j.js";import"./isEqual-lgf4hh2o.js";import"./merge-iiJlJXc8.js";import"./_initCloneObject-CwKxztrP.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-eufq9lg7.js";import"./inputBaseClasses-CqPu9QD6.js";import"./calculateFriendlyFileSize-mq7SKF2J.js";import"./CheckCircleTwoTone-B2In--cY.js";import"./InfoTwoTone-c1x43jMK.js";import"./useMutation-m6_xjbin.js";import"./dayjs.min-BZRgxVGz.js";import"./chunk-AYJ5UCUI-fXw5Uk8X.js";import"./cloneDeep-BV8D8Wbh.js";import"./Skeleton-kBOXpjk-.js";import"./SkeletonButton-D3-iUFh-.js";import"./SkeletonInlineBlock-S45RsyEw.js";import"./SkeletonTable-IuoxRDP2.js";import"./times-DsmPGJra.js";import"./toInteger--9yohRtZ.js";import"./isSymbol-BWqlk5jE.js";import"./SkeletonParagraph-wfMWbqKd.js";import"./MarkdownSynapse-DruhsIYl.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
