import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-DgA4sua4.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-DWUzeT0V.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-Bim8PRBO.js";import"./SynapseConstants-zhQmHXV5.js";import"./OrientationBanner-DsTkx0ky.js";import"./index-DjodvIJ6.js";import"./index-FnFoRS2l.js";import"./iframe-BQgclLfy.js";import"./spreadSx-CwcO6WA9.js";import"./react-BSQxsnlC.js";import"./FullWidthAlert-B8IEykrY.js";import"./Alert-DnM99hfv.js";import"./createTheme-xxG_Y475.js";import"./DefaultPropsProvider-LSaRYRMW.js";import"./useSlot-CteJh10u.js";import"./useForkRef-BJPB9EdG.js";import"./createSimplePaletteValueFilter-B89P2Dui.js";import"./createSvgIcon-BMJln5th.js";import"./Close-DykoredG.js";import"./IconButton-CZDDDf23.js";import"./useTimeout-DZfUf5bC.js";import"./ButtonBase-CAhI8_mC.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-CJsjeJiY.js";import"./Paper-CsXkdq0v.js";import"./useTheme-Cpa7SYtl.js";import"./useTheme-CfY3xsPY.js";import"./Stack-CUWnYNVz.js";import"./extendSxProp-BWUDsKqM.js";import"./getThemeProps-QKc8-Hqp.js";import"./Box-DyKT-36E.js";import"./AlertTitle-_U30P438.js";import"./Typography-COutbzFt.js";import"./index-CvIgDNYY.js";import"./ClickAwayListener-DgVK_jOs.js";import"./getReactElementRef-DEnUjsW1.js";import"./index-DKvTqSYg.js";import"./index-BzKQHyrx.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BgEkX_7W.js";import"./Tooltip-DDWHVSDc.js";import"./index-BUAnQT2C.js";import"./useControlled-BUg4_r2X.js";import"./Popper-BDFe7_BE.js";import"./Button-Bfbd_Rk8.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-BF7bVPWQ.js";import"./QueryClientProvider-CqDDjuBT.js";import"./Link-CXFgKSkP.js";import"./Collapse-DbXwNbAg.js";import"./_baseUniq-BrlURNwb.js";import"./_Uint8Array-DZ13kat9.js";import"./isArray-W6YcrcUU.js";import"./_getTag-CK2ZhFSX.js";import"./isEqual-BoqKulYO.js";import"./merge-CLKi3xPO.js";import"./_initCloneObject-lvQYDOyD.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-D88S9uD9.js";import"./inputBaseClasses-BxmTzBG0.js";import"./calculateFriendlyFileSize-CqeuH4m4.js";import"./CheckCircleTwoTone-C0axq3F9.js";import"./InfoTwoTone-DROq7EBW.js";import"./useMutation-B7DmEc4c.js";import"./dayjs.min-Bqzlt4CZ.js";import"./chunk-AYJ5UCUI-X23U4ZIo.js";import"./cloneDeep-8pg9jL2B.js";import"./Skeleton-GGWL1Irm.js";import"./SkeletonButton-DueoXPFh.js";import"./SkeletonInlineBlock-B9K6roya.js";import"./SkeletonTable-B402m2Mx.js";import"./times-COiBzNQ3.js";import"./toInteger-Dkh6Er-S.js";import"./isSymbol-Dl1y1v-B.js";import"./SkeletonParagraph-CLE3DR8E.js";import"./MarkdownSynapse-BDbraBBg.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
