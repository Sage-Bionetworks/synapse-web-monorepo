import{u as o}from"./VerificationSubmission-BDh1zA9f.js";import{g as u,bd as d,be as l,B as f,bf as S,M as O}from"./useFiles-BMNFt-8g.js";import"./StringUtils-C95LMFI-.js";import{h as i,H as n}from"./index-uWJABxRk.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-oGA1NXwH.js";import"./SynapseConstants-ruF53FsM.js";import"./OrientationBanner-DeOiH3yd.js";import"./index-D5GYg9hQ.js";import"./index-BD8T7zq6.js";import"./iframe-BCztISwF.js";import"./spreadSx-CwcO6WA9.js";import"./react-BmWlFtp9.js";import"./FullWidthAlert-DeCznv24.js";import"./Alert-DXEjMnWz.js";import"./createTheme-CTBtZ_cy.js";import"./DefaultPropsProvider-B9JV_CUS.js";import"./useSlot-fds4Yeop.js";import"./useForkRef-C_rm1XEs.js";import"./createSimplePaletteValueFilter-DeoxNqRG.js";import"./createSvgIcon-Pv2fR8IF.js";import"./Close-H9g7nKcO.js";import"./IconButton-BRuECVtO.js";import"./useTimeout-0eXle5dh.js";import"./ButtonBase-DzeUsUkN.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BxBCqc4_.js";import"./Paper-_pmqSPmr.js";import"./useTheme-CQSNJTUG.js";import"./useTheme-DFpCyL4Y.js";import"./Stack-l4t04YEH.js";import"./useThemeProps-CGtS0plU.js";import"./getThemeProps-Fi8dnZUZ.js";import"./extendSxProp-iPj9BVlN.js";import"./Box-DQV0lxds.js";import"./AlertTitle-Bm25oWD_.js";import"./Typography-Cxv8qnpg.js";import"./index-CIL5iEm5.js";import"./ClickAwayListener-D0w7bfZZ.js";import"./getReactElementRef-JB-rNIYf.js";import"./index-C6FD6fLo.js";import"./index-CLf-jdg9.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BkapnwIp.js";import"./Tooltip-BrvlfHcB.js";import"./index-CKxt-HAj.js";import"./useControlled-BDiO9zgL.js";import"./Popper-CPoBNdFa.js";import"./Button-D3ajUzUs.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-DQtNzDr0.js";import"./QueryClientProvider-DStyJqXK.js";import"./Link-DckGLzQN.js";import"./Collapse-EXdIFGDf.js";import"./_baseUniq-4-5ousxn.js";import"./_Uint8Array-C6Z07qUy.js";import"./isArray-DGqRpJYm.js";import"./_getTag-Bu_44Cjs.js";import"./isEqual-BwYcoTf8.js";import"./noop-DX6rZLP_.js";import"./merge-DiV7m9Pu.js";import"./_initCloneObject-CmXH6YeZ.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-DlP0g-24.js";import"./inputBaseClasses-BQe-pxTr.js";import"./calculateFriendlyFileSize-Dks1cdcZ.js";import"./CheckCircleTwoTone-HUw_GkW9.js";import"./InfoTwoTone-DFOS-ggU.js";import"./useMutation-O6IXzSsV.js";import"./dayjs.min-B3-A15Bv.js";import"./chunk-AYJ5UCUI-BsG23He-.js";import"./cloneDeep-f1dMV6ix.js";import"./Skeleton-whSO5RLo.js";import"./SkeletonButton-BcbTJMaZ.js";import"./SkeletonInlineBlock-OvC2sURA.js";import"./SkeletonTable-BzjYkWzl.js";import"./times-BbQaFKf0.js";import"./toInteger-_gmo1qyA.js";import"./isSymbol-DLj05rTF.js";import"./SkeletonParagraph-dN9CjyMk.js";import"./MarkdownSynapse-D60oF5Ur.js";import"./Container-CFfXsKJ_.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Qr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Xr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Xr as __namedExportsOrder,Qr as default};
