import{j as l}from"./jsx-runtime-BruYoQko.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-BCLYbgig.js";import{aH as S,M as a}from"./useFiles-Y12FH1bv.js";import"./OrientationBanner-BZu9QjtH.js";import"./index-B-uy-sdx.js";import"./StringUtils-Df7AZImX.js";import{l as _}from"./index-B6_TrWKd.js";import{S as E}from"./SynapseFormSubmissionGrid-BbgFZEJ1.js";import"./mockSchema-DLy7g6e4.js";import"./mockFileEntity-nxPbrBJ9.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-Dk1hZtc5.js";import"./mockTeam-DSFgsq7c.js";import"./SynapseConstants-B3NxpShm.js";import"./uniqueId-BbAHD0e5.js";import"./toString-CBUiyRuQ.js";import"./isObjectLike-CB51Nx8C.js";import"./iframe-EbtsSfNi.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-HDLLyEDe.js";import"./times-ClaKe9pp.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-BDEI1AM-.js";import"./asyncJobHandlers-B4Ru-q06.js";import"./BasicMockedCrudService-B4aV-y72.js";import"./cloneDeep-BWJvylmg.js";import"./_Uint8Array-CnGxCulp.js";import"./_initCloneObject-CmQS0zFf.js";import"./_getTag-CxzBhuc_.js";import"./isEqual-BQl57RAj.js";import"./_baseIsEqual-CDbb4T68.js";import"./mockAnnotationColumns-BeX8HJdM.js";import"./tableQueryHandlers-s8XAR_1u.js";import"./omit-DSIQLl_4.js";import"./_baseGet-BV8yp-Vy.js";import"./isNil-1RPAbAz-.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BPZ2_WTR.js";import"./_baseFlatten-CA79OuIp.js";import"./pick-D3LShjTt.js";import"./_baseSet-BJM6jLRK.js";import"./hasIn-C1ooT7n2.js";import"./accessRequirementAclHandlers-BbvzBkZ1.js";import"./mockAccessRequirementAcls-Db7Ybfdv.js";import"./mockAccessRequirements-CwQGDGcd.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-C8SOgdtc.js";import"./wikiHandlers-Biw7a6xY.js";import"./mockWikiPageKey-DMJGiiY5.js";import"./teamHandlers-BPZODHe_.js";import"./dataAccessRequestHandlers-CoVSHzBn.js";import"./MockResearchProject-J5hJlrvc.js";import"./mock_discussion-BOX31stt.js";import"./fakerUtils-bfCNSLw6.js";import"./index-D3R6pPlc.js";import"./mockTableEntity-BbrIQtad.js";import"./mockFileEntityACLVariants-2XGQTQ3V.js";import"./entityHandlers-Be9SpV-v.js";import"./mockEntity-oZ8z-X9_.js";import"./mockEvaluationQueue-Cp3wqFyO.js";import"./featureFlagHandlers-C0hqRahs.js";import"./fileHandlers-BbeQlV9K.js";import"./personalAccessTokenHandlers-swbidrQo.js";import"./researchProjectHandlers-BNnf2ab4.js";import"./resetTwoFactorAuthHandlers-C4BaxE9O.js";import"./userProfileHandlers-CngZZkvW.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-n7ftLhnx.js";import"./FullWidthAlert-Bj0hNDHq.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-DBLm8Pok.js";import"./createTheme-srFiYvEO.js";import"./resolveComponentProps-B82OG9Zp.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-ChVQG-lw.js";import"./createSvgIcon-2G3uB26y.js";import"./DefaultPropsProvider-DFjoNSbJ.js";import"./Close-Dy69P2Lg.js";import"./IconButton-Dwzx9qi2.js";import"./ButtonBase-DG0zMMeh.js";import"./useTimeout-Cv-QQYzw.js";import"./useIsFocusVisible-DiXQCVbx.js";import"./useEventCallback-C16K_eB4.js";import"./Paper-D4Tga6OS.js";import"./Stack-CZCOHPbK.js";import"./getThemeProps-DeCu2QiA.js";import"./useTheme-Cbn8UOjv.js";import"./Box-Cqz8jNcW.js";import"./AlertTitle-Dludu-yD.js";import"./Typography-oxIQOfGg.js";import"./useTheme-DHXa63_v.js";import"./Grow-CRBk-oNE.js";import"./index-DpIgPCaI.js";import"./utils-BP1xdL2F.js";import"./ClickAwayListener-5g4aG161.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DDQG6vte.js";import"./index-3w0ggcn7.js";import"./useControlled-Baesg9Fm.js";import"./useId-C6yrAKwc.js";import"./Popper-BVfSTFT0.js";import"./Button-BnBdmOxs.js";import"./useQuery-CZIsftBW.js";import"./utils-D7XdtvjZ.js";import"./Link-CSVa4weM.js";import"./Collapse-BLl7ItWH.js";import"./tinycolor-Begke6kS.js";import"./Fade-D4jjhn0e.js";import"./Skeleton-5aKuyqmQ.js";import"./inputBaseClasses-DSstwJAW.js";import"./calculateFriendlyFileSize-Bglr51Pk.js";import"./CheckCircleTwoTone-BXw1IUwh.js";import"./InfoTwoTone-CjzZE5sW.js";import"./mutation-Cl20WE66.js";import"./dayjs.min-Djvj_XYE.js";import"./chunk-AYJ5UCUI-1wUcRWZS.js";import"./index-DomK8mv2.js";import"./react-DQ_ckMew.js";import"./util-DUs4LiAF.js";import"./WideButton-aIecyIMT.js";import"./DeleteTwoTone-RVcJZYa8.js";import"./createSvgIcon-Bi-vdrQn.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-BySKWkHU.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-DKj1McsM.js";import"./DialogBase-D4GQapUn.js";import"./Close-BJ6s2wCM.js";import"./HelpPopover-C0X4WLep.js";import"./MarkdownPopover-_xTcMfng.js";import"./LightTooltip-CUmNbwAf.js";import"./MarkdownSynapse-DvuTd3Rp.js";import"./SkeletonButton-Dw6WOzZd.js";import"./SkeletonInlineBlock-D6EloWLS.js";import"./SkeletonTable-BnBijUlJ.js";import"./SkeletonParagraph-kYwbggkc.js";import"./HelpOutlineTwoTone-jxOGgYPj.js";import"./DialogTitle-BaeoUrZ7.js";import"./DialogContent-BgNsWW5s.js";import"./Dialog-DkyOkRTW.js";import"./Modal-DFsrCbxU.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-CQCXNLiq.js";import"./WarningDialog-BJFutI__.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
