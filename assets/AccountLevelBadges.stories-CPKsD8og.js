import{g as f}from"./userProfileHandlers-h0Wz2A9o.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-Cg_eAUDA.js";import{A}from"./AccountLevelBadges-CIM0nqYb.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-8up6gZcc.js";import"./iframe-DQjbfcQ9.js";import"./mockEntity-WpxUS7bt.js";import"./mockFileEntity-Bkf_R2mc.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-l_xYqry-.js";import"./mockTeam-BCAZa1eZ.js";import"./SynapseConstants-BaFW-Hk1.js";import"./OrientationBanner-7A6I2Sts.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-DrKws1ZS.js";import"./index-ByFgbSi1.js";import"./spreadSx-CwcO6WA9.js";import"./react-4DRvf2RG.js";import"./FullWidthAlert-BmX-nqa8.js";import"./Alert-cq0Vou2L.js";import"./createTheme-i8RyPaYL.js";import"./DefaultPropsProvider-6pJ8FZcR.js";import"./useSlot-C0bdZSh0.js";import"./useForkRef-23rwbX6-.js";import"./createSimplePaletteValueFilter-Bc_Jnzdb.js";import"./createSvgIcon-Dx2LBnYP.js";import"./Close-D3BjbVZl.js";import"./IconButton-DxywuGM_.js";import"./useTimeout-CSjKXMwL.js";import"./ButtonBase-CTwLXAXZ.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DEGgbvx4.js";import"./Paper-QA66fCso.js";import"./useTheme-BSYxzT2u.js";import"./useTheme-d8TpmLbK.js";import"./Stack-DWAVfk6y.js";import"./extendSxProp-Dtt1Z7Rz.js";import"./getThemeProps-B9cF21qQ.js";import"./Box-CZ8nomX1.js";import"./AlertTitle-Dpusuo1a.js";import"./Typography-CY333YIv.js";import"./index-OanGvPr5.js";import"./ClickAwayListener-DiPtj9kP.js";import"./getReactElementRef-DnnqkrYN.js";import"./index-DXPb9-O7.js";import"./index-D164aDtB.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-B4czxb_I.js";import"./Tooltip-Z97fGrMz.js";import"./index-Dmk_WNz3.js";import"./useControlled-CEl4StEV.js";import"./Popper-Dj-99SyI.js";import"./Button-CYldgbV6.js";import"./uniqueId-BSuY5neH.js";import"./toString-z8vEG3W4.js";import"./isArray-slhQyjYX.js";import"./isSymbol-j4e5Mk_1.js";import"./times-DrYQZAZT.js";import"./_Uint8Array-CpLANe0M.js";import"./identity-DKeuBCMA.js";import"./toInteger-DC8bWbZD.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-DKynZEci.js";import"./QueryClientProvider--7WDvxPi.js";import"./Link-CtNtuiDF.js";import"./Collapse-CjU9t1fz.js";import"./_baseUniq-B5okjzLX.js";import"./_getTag-EGniEwS5.js";import"./isEqual-CZZqW4AH.js";import"./merge-UMFakapv.js";import"./_initCloneObject-wkm3rYXe.js";import"./tinycolor-Begke6kS.js";import"./Fade-55a661Ax.js";import"./inputBaseClasses-QMrXpAyg.js";import"./calculateFriendlyFileSize-CWPY0s9D.js";import"./CheckCircleTwoTone-UKzD70d6.js";import"./InfoTwoTone-D2qSN7nc.js";import"./useMutation-BXPMCqV1.js";import"./dayjs.min-BfZA8BkT.js";import"./chunk-AYJ5UCUI-OavDP728.js";import"./cloneDeep-QdVPM6qo.js";import"./Skeleton-DdQ3uvfq.js";import"./AccountLevelBadge-C3fgw8_E.js";import"./Card-BPzN12jC.js";import"./ConfirmationDialog-CHxQqh0B.js";import"./DialogBase-DFDZq-w2.js";import"./Close-DYZ5J8ne.js";import"./HelpPopover-ChS2xXol.js";import"./MarkdownPopover-DGUZqa7C.js";import"./LightTooltip-CO0sW636.js";import"./MarkdownSynapse-CeBhDznu.js";import"./SkeletonButton-vhmms5hD.js";import"./SkeletonInlineBlock-CwWUxANM.js";import"./SkeletonTable-B2O8d0ro.js";import"./SkeletonParagraph-Mm1FQiPz.js";import"./HelpOutlineTwoTone-B09gkyJr.js";import"./DialogTitle-BHBJPl0K.js";import"./DialogContent-C28OBMXN.js";import"./DialogActions-DLlY9a0T.js";import"./Dialog-BzCEvv_m.js";import"./Modal-BdUP9ilF.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-BDkMiSAk.js";import"./LoadingScreen-CiHarq7U.js";import"./LinearProgress-COXg6p9N.js";import"./ToastMessage-BLQ30_zb.js";import"./CSSTransition-BBV0aXLU.js";const St={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Et=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Et as __namedExportsOrder,St as default};
