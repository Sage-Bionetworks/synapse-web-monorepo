import{j as i}from"./jsx-runtime-D_zvdyIk.js";import{W as m,a as t}from"./WizardChoiceButton-WK8MJL1i.js";import{I as l}from"./LayersTwoTone-DQI26pDL.js";import{F as d}from"./IconSvg-zDef4RQA.js";import"./Box-fCUvLKal.js";import"./createTheme-xVdgCG2Z.js";import"./index-1NdgpKeG.js";import"./iframe-BVCs4XIv.js";import"./useTheme-xJG0eZgW.js";import"./extendSxProp-IK5aZbjn.js";import"./spreadSx-CwcO6WA9.js";import"./Typography-Bfwzdonu.js";import"./index-Cw5x1M4E.js";import"./DefaultPropsProvider-DtDVHnHW.js";import"./createSimplePaletteValueFilter-B-K6kzC2.js";import"./createSvgIcon-CoM42d11.js";import"./useTheme-Cqv6EVU7.js";import"./Tooltip-Baq19PiH.js";import"./index-f4EwjVcV.js";import"./useSlot-19A78PIb.js";import"./useForkRef-CwsXTZjB.js";import"./useTimeout--1Vup-x4.js";import"./useControlled-B_AhfMUd.js";import"./getReactElementRef-IrCKeVVF.js";import"./index-Cv_k6Nmf.js";import"./index-D9_WP2Ac.js";import"./Grow-B-J8hTfc.js";import"./Popper-Bly56UTy.js";import"./ownerDocument-DW-IO8s5.js";import"./isFocusVisible-B8k4qzLc.js";import"./ContentCopyTwoTone-l244Qq_y.js";import"./HelpOutlineTwoTone-BF7AT2U-.js";import"./ErrorOutlined-CAbBIIda.js";import"./GetAppTwoTone-B6xmMiee.js";import"./InfoOutlined-ClWMC_PA.js";import"./PhoneTwoTone-nbcUAbGt.js";import"./DeleteTwoTone-DbCyYUAo.js";import"./CheckCircleTwoTone-RZp-vcbP.js";const Y={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},e={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),i.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:i.jsx(l,{fontSize:"large"})}),i.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:i.jsx(d,{fontSize:"large"})})]})}};var r,s,n;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const Z=["Basic","WithIcons"];export{e as Basic,o as WithIcons,Z as __namedExportsOrder,Y as default};
