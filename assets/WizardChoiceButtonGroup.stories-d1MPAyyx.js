import{j as i}from"./jsx-runtime-D_zvdyIk.js";import{W as m,a as t}from"./WizardChoiceButton-B2XIl5Gi.js";import{I as l}from"./LayersTwoTone-BuN0NbYv.js";import{F as d}from"./IconSvg-Bv-J0W-U.js";import"./Box-CR3xkiF7.js";import"./createTheme-D7EPNL7b.js";import"./index-De1Zq6J_.js";import"./iframe-E8oGcv1j.js";import"./useTheme-BR8tto29.js";import"./extendSxProp-CRDkfaxY.js";import"./spreadSx-CwcO6WA9.js";import"./Typography-Dqy4KUKl.js";import"./index-vnh1qUaf.js";import"./DefaultPropsProvider-CcfTARJV.js";import"./createSimplePaletteValueFilter-BqHZsxiX.js";import"./createSvgIcon-BFK5bQ8n.js";import"./useTheme-xNbW70z-.js";import"./Tooltip-DU9LrmZk.js";import"./index-E7O__Phm.js";import"./useSlot-3tuE-c2M.js";import"./useForkRef-C6KDMbou.js";import"./useTimeout-Dv9ZmSsd.js";import"./useControlled-DMRUVe0w.js";import"./getReactElementRef-z7kCRJG8.js";import"./index-DYa4EW63.js";import"./index-C8LquKll.js";import"./Grow-eiV7889k.js";import"./Popper-CcioxHhD.js";import"./ownerDocument-DW-IO8s5.js";import"./isFocusVisible-B8k4qzLc.js";import"./ContentCopyTwoTone-BjjCYZUG.js";import"./HelpOutlineTwoTone-Dj5qBrEg.js";import"./ErrorOutlined-Be02xqb7.js";import"./GetAppTwoTone-sUN0vf7k.js";import"./InfoOutlined-DQXEYkYn.js";import"./PhoneTwoTone-D3c7i2m3.js";import"./DeleteTwoTone-CuQyBbba.js";import"./CheckCircleTwoTone-D_cE2H8y.js";const Y={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},e={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),i.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:i.jsx(l,{fontSize:"large"})}),i.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:i.jsx(d,{fontSize:"large"})})]})}};var r,s,n;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const Z=["Basic","WithIcons"];export{e as Basic,o as WithIcons,Z as __namedExportsOrder,Y as default};
