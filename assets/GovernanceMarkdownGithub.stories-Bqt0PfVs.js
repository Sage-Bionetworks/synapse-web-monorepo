import{v as o}from"./VerificationSubmission-CDh9xETu.js";import{g as u,be as d,bf as l,B as f,bg as S,M as O}from"./useFiles-D02evhEe.js";import"./StringUtils-CsrYFBZo.js";import{h as i,H as n}from"./index-BL10aT2k.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-DPQK7fGl.js";import"./SynapseConstants-DYII5bnk.js";import"./OrientationBanner-m5y_RC38.js";import"./index-DC_9J_1p.js";import"./index-DF7lk3Yl.js";import"./iframe-C_AUxWZn.js";import"./spreadSx-CwcO6WA9.js";import"./react-DvrjyBqV.js";import"./FullWidthAlert-DriynDve.js";import"./Alert-BRf044np.js";import"./createTheme-BCP9qvjK.js";import"./DefaultPropsProvider-CxJAbJPQ.js";import"./useSlot-CMxSN5Bn.js";import"./useForkRef-1mKUaoDZ.js";import"./createSimplePaletteValueFilter-CnNLxdoE.js";import"./createSvgIcon-CrJstOSp.js";import"./Close-BONs9ZBx.js";import"./IconButton-B2Nn3-Mn.js";import"./useTimeout-B0lT4z1u.js";import"./ButtonBase-Bw4PF_aW.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-CX1nzmWd.js";import"./Paper-CO4yL9sw.js";import"./useTheme-ChuUKpJp.js";import"./useTheme-DO7hrzbR.js";import"./Stack-Dd0taEvK.js";import"./extendSxProp-SS-hjWkf.js";import"./getThemeProps-CTDhhYmo.js";import"./Box-CkXfPhrv.js";import"./AlertTitle-nSydvO7Q.js";import"./Typography-CyAicYx7.js";import"./index-Co94yF7T.js";import"./ClickAwayListener-CbbHW0hy.js";import"./getReactElementRef-DLB_inmL.js";import"./index-C3mlNnCy.js";import"./index-BtpDFBPo.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-oRqweoyj.js";import"./Tooltip-D1DqUxpw.js";import"./index-DViHecYa.js";import"./useControlled-CsHT0ykU.js";import"./Popper-DigATxW6.js";import"./Button-BwtQDMEd.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-DGY7BQDS.js";import"./QueryClientProvider-C10E43BM.js";import"./Link-DGDizL6J.js";import"./Collapse-BKJvd63-.js";import"./_baseUniq-BBUqvk3x.js";import"./_Uint8Array-4qu2iXy-.js";import"./isArray-DN8gbOlb.js";import"./_getTag-N-Fkp5RY.js";import"./isEqual-DLzrhfAb.js";import"./merge-Btpvv75M.js";import"./_initCloneObject-CAVenSk4.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-COicTICi.js";import"./inputBaseClasses-C3sSt4lC.js";import"./calculateFriendlyFileSize-BXAHpDS2.js";import"./CheckCircleTwoTone-DXold5XT.js";import"./InfoTwoTone-B1NTw75b.js";import"./useMutation-DY8-ifgv.js";import"./dayjs.min-Buta2DO-.js";import"./chunk-AYJ5UCUI-CS7CcU8n.js";import"./cloneDeep-8ISftUsd.js";import"./Skeleton-DhQvFQgP.js";import"./SkeletonButton-BuSMHheE.js";import"./SkeletonInlineBlock-qajRCt6J.js";import"./SkeletonTable-DDTvAZBm.js";import"./times-DLG8imqf.js";import"./toInteger-9tbkPCBK.js";import"./isSymbol-DCkmBRwj.js";import"./SkeletonParagraph-BFWMvjFH.js";import"./MarkdownSynapse-L9Lxom-_.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
