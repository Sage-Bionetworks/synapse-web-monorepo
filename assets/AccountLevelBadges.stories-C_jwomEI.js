import{g as f}from"./userProfileHandlers--rVVctoh.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-nz_G27ZD.js";import{A}from"./AccountLevelBadges-Ch2XL5UJ.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-DjADdAyU.js";import"./iframe-BZuF5Rk5.js";import"./mockEntity-BCJhWnUv.js";import"./mockFileEntity-D15ZEflG.js";import"./StringUtils-C95LMFI-.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-gZnzi-Kz.js";import"./mockTeam-Dd9xWFzl.js";import"./SynapseConstants-QIqdlNPs.js";import"./OrientationBanner-CPj0PuP9.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-BMYyeuyr.js";import"./index-B3YonXtA.js";import"./spreadSx-CwcO6WA9.js";import"./react-BuDUhSyG.js";import"./FullWidthAlert-BAt_LGWT.js";import"./Alert-DxUMyYvX.js";import"./createTheme-BJKfy1iC.js";import"./DefaultPropsProvider-DuSIaWNU.js";import"./useSlot-BXLighSu.js";import"./useForkRef-BtqTZArO.js";import"./createSimplePaletteValueFilter-CxzoQfv0.js";import"./createSvgIcon-Bs0uwjDd.js";import"./Close-Cpf8yWN0.js";import"./IconButton-DnWxZwUa.js";import"./useTimeout-N1XqQ7Tv.js";import"./ButtonBase-B7_bMh0J.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-Ce4Ta4eA.js";import"./Paper-DqrrvOAH.js";import"./useTheme-Bb3tF0fY.js";import"./useTheme-BqUAtbKs.js";import"./Stack-Cij852nX.js";import"./useThemeProps-CnowrksF.js";import"./getThemeProps-B0O8BOmA.js";import"./extendSxProp-D1NEKyNb.js";import"./Box-PoNijjGW.js";import"./AlertTitle-rtt8k-JU.js";import"./Typography-BlpiGXay.js";import"./index-SV-CQluw.js";import"./ClickAwayListener-CPlRAx9Y.js";import"./getReactElementRef-uQKecpNl.js";import"./index-B7I8xQtn.js";import"./index-Dmzd7xWV.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BGI5WGEZ.js";import"./Tooltip-BStWPht6.js";import"./index-BvINnhAG.js";import"./useControlled-C_6BPMUf.js";import"./Popper-BfvQl467.js";import"./Button-Ch1wz1oD.js";import"./uniqueId-DmupjK_F.js";import"./toString-DgG0SSWT.js";import"./isArray-D7cLY-Ue.js";import"./isSymbol-CpU8lUWz.js";import"./times-Bjyl5IyC.js";import"./_Uint8Array-szfHHksL.js";import"./identity-DKeuBCMA.js";import"./toInteger-DRY3A2Wi.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-BsSbosha.js";import"./QueryClientProvider-BRz6sphI.js";import"./Link-Bpl0ygdi.js";import"./Collapse-COA2sox0.js";import"./_baseUniq-BuOmYGlr.js";import"./_getTag-BZgbHbgT.js";import"./isEqual-BQl5jUFq.js";import"./noop-DX6rZLP_.js";import"./merge-BLtkJLx6.js";import"./_initCloneObject-IL6c6Kxn.js";import"./tinycolor-Begke6kS.js";import"./Fade-hXWdH60e.js";import"./inputBaseClasses-CTMFoWXf.js";import"./calculateFriendlyFileSize-D7pBFWpU.js";import"./CheckCircleTwoTone-DGwA4b8a.js";import"./InfoTwoTone-LXUWHOi0.js";import"./useMutation-DYD3J3xj.js";import"./dayjs.min-CGFBeRSw.js";import"./chunk-AYJ5UCUI-BiQJU0O1.js";import"./cloneDeep-BGmY4GVF.js";import"./Skeleton-ClHaAhyN.js";import"./AccountLevelBadge-BasLgfhq.js";import"./Card-RNWdC-hS.js";import"./ConfirmationDialog-B3dK3VT2.js";import"./DialogBase-BJGON8gg.js";import"./Close-BTm2kQVt.js";import"./HelpPopover-B9ISk2As.js";import"./MarkdownPopover-DKTRXW49.js";import"./LightTooltip-DL5JsW9k.js";import"./MarkdownSynapse-BF7WHtTr.js";import"./SkeletonButton-CMtka5Ag.js";import"./SkeletonInlineBlock-CzXc2U9L.js";import"./SkeletonTable-C68Wlp19.js";import"./SkeletonParagraph-BSkKGl-r.js";import"./HelpOutlineTwoTone-DwNIvFIH.js";import"./Dialog-CcrtATZ0.js";import"./DialogActions-DeRITaB_.js";import"./Modal-CRhSq1y2.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-DYvnx2NP.js";import"./DialogContent-BvKoxfl1.js";import"./DialogTitle-D9ICljLE.js";import"./LoadingScreen-B-udeDjp.js";import"./LinearProgress-BsHkNozY.js";import"./ToastMessage-DAq5xRO7.js";import"./CSSTransition-CJceyd-6.js";const kt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Ut=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Ut as __namedExportsOrder,kt as default};
