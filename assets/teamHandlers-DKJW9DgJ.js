import{h as a,H as r}from"./index-CUHBL18U.js";import{M as c}from"./mock_user_profile-CCzWeUML.js";import{a as b,b as M,c as v,d as y,e as R,f as w,g as C,h as j}from"./mockTeam-BstVftEb.js";import{B as g}from"./BasicMockedCrudService-BEN_BzAi.js";import{az as q}from"./useFiles-BQlRdK2p.js";import{u as f}from"./uniqueId-BV-iB2cb.js";const i="1234",H="f1b29c62-e987-4e69-9cec-198bf017a586",h=e=>{const t=Math.pow(10,e-1);return Math.floor(Math.random()*9*t+t)},W={id:i},p=e=>{const t=h(6).toString(),s=h(6).toString();return{id:t,etag:H,challengeId:i,teamId:s,message:`Message for team ${s}`,...e}},O=[p({teamId:String(b),challengeId:i}),p({teamId:String(M),challengeId:i}),p({teamId:String(v),challengeId:i}),p({teamId:String(y),challengeId:i})],T=new g({initialData:O,idField:"id",autoGenerateId:!0});function _(e){return a.get(`${e}/repo/v1/entity/:id/challenge`,({params:t})=>{const s={id:i,etag:"f5e9df54-360b-4ede-9a17-f7f5680c8dd4",projectId:t.id,participantTeamId:String(R)};return r.json(s,{status:200})})}function B(e){return a.get(`${e}/repo/v1/challenge/:challengeId/challengeTeam`,()=>{const t=T.getAll(),s={results:t,totalNumberOfResults:t.length};return r.json(s,{status:200})})}function A(e){return a.post(`${e}/repo/v1/challenge/:challengeId/challengeTeam`,async({request:t})=>{const s=await t.json(),n=T.create({...s,etag:"abcdef0987654321"});return r.json(n,{status:200})})}function E(e){return a.get(`${e}/repo/v1/challenge/:challengeId/submissionTeams`,()=>{const t={results:[],totalNumberOfResults:0};return r.json(t,{status:200})})}function X(e){return[_(e),E(e),A(e),B(e)]}const u=new g({initialData:C,idField:"id",autoGenerateId:!0}),I=new g({initialData:j});function $(e,t){return I.getOneByPredicate(s=>s.teamId===e&&s.userId===t)}const S=[...w];function D(e){return a.get(`${e}/repo/v1/team/:teamId`,({params:t})=>{const s=u.getOneById(t.teamId);if(s)return r.json(s,{status:200});const n={concreteType:"org.sagebionetworks.repo.model.ErrorResponse",reason:`Team id: '${t.teamId}' does not exist`};return r.json(n,{status:404})})}function K(e){return a.post(`${e}/repo/v1/teamList`,async({request:t})=>{const s=await t.json(),n=[];for(const m of s.list){const d=u.getOneById(m.toString());if(!d){const l={concreteType:"org.sagebionetworks.repo.model.ErrorResponse",reason:`Team with id ${m} not found`};return r.json(l,{status:404})}n.push(d)}const o={concreteType:"org.sagebionetworks.repo.model.Team",list:n};return r.json(o,{status:200})})}function L(e){return a.post(`${e}/repo/v1/team`,async({request:t})=>{const s=await t.json(),n=u.create({...s,createdBy:String(c),createdOn:new Date().toISOString(),etag:"etag",modifiedBy:String(c),modifiedOn:new Date().toISOString()});return I.create({teamId:n.id,userId:String(c),isMember:!0,hasOpenInvitation:!1,hasOpenRequest:!1,canJoin:!1,membershipApprovalRequired:!1,hasUnmetAccessRequirement:!1,canSendEmail:!0}),await q(250),r.json(n,{status:201})})}function N(e){return a.get(`${e}/repo/v1/team/:teamId/member/:memberId/membershipStatus`,({params:t})=>{const s=t.teamId,n=t.memberId;let o,m;return u.getOneById(s)?(o=$(s,n)??{teamId:s,userId:n,isMember:!1,hasOpenInvitation:!1,hasOpenRequest:!1,canJoin:!0,membershipApprovalRequired:!1,hasUnmetAccessRequirement:!1,canSendEmail:!1},m=200):(o={concreteType:"org.sagebionetworks.repo.model.ErrorResponse",reason:`getTeamMembershipStatusHandler could not locate a team with ID ${s}`},m=404),r.json(o,{status:m})})}function U(e){return a.put(`${e}/repo/v1/team/:teamId/member/:memberId`,({params:t})=>{const s=t.teamId,n=t.memberId;let o,m;if(!u.getOneById(s))o={concreteType:"org.sagebionetworks.repo.model.ErrorResponse",reason:`getTeamMembershipStatusHandler could not locate a team with ID ${s}`},m=404;else{const l={teamId:s,userId:n,isMember:!0,hasOpenInvitation:!1,hasOpenRequest:!1,canJoin:!0,membershipApprovalRequired:!1,hasUnmetAccessRequirement:!1,canSendEmail:!1};I.create(l),o="",m=201}return r.json(o,{status:m})})}function k(e){return a.post(`${e}/repo/v1/membershipRequest`,async({request:t})=>{const n={...await t.json(),id:f(),createdOn:new Date().toISOString(),createdBy:String(c)};return r.json(n,{status:201})})}function G(e){return a.post(`${e}/repo/v1/membershipInvitation`,async({request:t})=>{const n={...await t.json(),id:f(),createdOn:new Date().toISOString(),createdBy:String(c)};return S.push(n),r.json(n,{status:201})})}function x(e){return a.get(`${e}/repo/v1/user/:userId/openInvitation`,({params:t})=>{const s=S.filter(o=>String(o.inviteeId)===String(t.userId)),n={results:s,totalNumberOfResults:s.length};return r.json(n,{status:200})})}function Y(e){return[D(e),K(e),L(e),N(e),U(e),k(e),G(e),x(e)]}export{X as a,Y as g,W as m};
