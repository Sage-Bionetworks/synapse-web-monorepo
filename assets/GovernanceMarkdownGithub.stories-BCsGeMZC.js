import{u as o}from"./VerificationSubmission-CNoSrCdk.js";import{g as u,bb as d,bc as l,B as S,bd as f,M as O}from"./useFiles-CiH3RjAX.js";import"./StringUtils-CwQ1lgbR.js";import{h as i,H as n}from"./index-CHd4HN5m.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-BeEMuJER.js";import"./SynapseConstants-Dgm-hl2F.js";import"./OrientationBanner-C5RkxOxO.js";import"./index-CYkyUI0D.js";import"./index-Cwo7W8Q3.js";import"./iframe-BtEoy5Pi.js";import"./spreadSx-CwcO6WA9.js";import"./react-DINmqar4.js";import"./FullWidthAlert-VQ26Wohr.js";import"./Alert-CgZUdEqv.js";import"./createTheme-B3oloupt.js";import"./DefaultPropsProvider-DpCpUutu.js";import"./useSlot-mvKG6Wgh.js";import"./useForkRef-Bpui_Rog.js";import"./createSimplePaletteValueFilter-BdVFfA6R.js";import"./createSvgIcon-rlX8m3bd.js";import"./Close-COYMWJeW.js";import"./IconButton-Dtr_Byk4.js";import"./useTimeout-CubXWxzm.js";import"./ButtonBase-zX45zIy8.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DpVN9MSn.js";import"./Paper-CFj-iwzR.js";import"./useTheme-BplOPChe.js";import"./useTheme-QJ-q2rrh.js";import"./Stack-DxloL_Pr.js";import"./extendSxProp-CnnbPdZl.js";import"./getThemeProps-Cq16S1xU.js";import"./Box-DidoKigV.js";import"./AlertTitle-DUAUDP9r.js";import"./Typography-iLYEzmu9.js";import"./index-BmkogvA6.js";import"./ClickAwayListener-KmNvIbDM.js";import"./getReactElementRef-ButuhwgZ.js";import"./index-v-nvGdj1.js";import"./index-BN3chRwR.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-Dl0KNxbG.js";import"./Tooltip-CKZvCezQ.js";import"./index-Bd9SP0or.js";import"./useControlled-z9k1lOAa.js";import"./Popper-DcSxBs27.js";import"./Button-CEhhBQoQ.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-BCuPd4te.js";import"./QueryClientProvider-Di2vdjqh.js";import"./Link--7vwFeSR.js";import"./Collapse-Cw63Bxtw.js";import"./_baseUniq-lS6Hau16.js";import"./_Uint8Array-CmcRwmUk.js";import"./isArray-CnKdinKf.js";import"./_getTag-azHmxwvU.js";import"./isEqual-BDen11ft.js";import"./merge-Bz19LOV8.js";import"./_initCloneObject-BMJ-50ps.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-C9sFZx16.js";import"./inputBaseClasses-CQzdIqXJ.js";import"./calculateFriendlyFileSize-CgweHd8h.js";import"./CheckCircleTwoTone-DqiaR3hR.js";import"./InfoTwoTone-sx2IvFci.js";import"./useMutation-7jNvOIUs.js";import"./dayjs.min-C4CfR9Mw.js";import"./chunk-AYJ5UCUI-DAxvSOK2.js";import"./cloneDeep-h4gs_ZpB.js";import"./Skeleton-CCoTHJKu.js";import"./SkeletonButton--Z2pTtcK.js";import"./SkeletonInlineBlock-C2UkkSQu.js";import"./SkeletonTable-Ctka8zso.js";import"./times-BFLagf9l.js";import"./toInteger-D9StSSXw.js";import"./isSymbol-Cg20Bfxn.js";import"./SkeletonParagraph-BY8ebSZu.js";import"./MarkdownSynapse-BNY04ARQ.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
