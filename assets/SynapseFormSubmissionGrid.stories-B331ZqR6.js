import{j as l}from"./jsx-runtime-BgCq8gwN.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-U-Sjl4y5.js";import{aF as S,M as a}from"./useFiles-DPLNIGPK.js";import"./OrientationBanner-CdVTuGgb.js";import"./index-C_gnWP_t.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-DL9olAIl.js";import{S as E}from"./SynapseFormSubmissionGrid--t8HXKdP.js";import"./mockSchema-ClTv9gFF.js";import"./mockFileEntity-DfZSNhuM.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-efmESD5I.js";import"./mockTeam-CLU7kcDM.js";import"./SynapseConstants-DIGbeuIK.js";import"./uniqueId-DiyADoIH.js";import"./toString-Biz4hhkS.js";import"./isObjectLike-ArQpH04e.js";import"./iframe-CbIreDb2.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-CxiAXWXi.js";import"./times-CrsZLMtN.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-BZb7mfZx.js";import"./asyncJobHandlers-BXQkQkEd.js";import"./BasicMockedCrudService-DhS4r1Ms.js";import"./cloneDeep-w86UdGPr.js";import"./_Uint8Array-BfzcZJqI.js";import"./_initCloneObject-C1jMuqUN.js";import"./_getTag-RwKhRrOD.js";import"./isEqual-Cs40Ekkd.js";import"./_baseIsEqual-BsH3YbMu.js";import"./mockAnnotationColumns-C8ri3I6u.js";import"./tableQueryHandlers-C-cGA_An.js";import"./omit-Dkh7voaJ.js";import"./_baseGet-CMgXeUAR.js";import"./isNil-KHj6LWxN.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-CGttcKyQ.js";import"./_baseFlatten-DfQNR43a.js";import"./pick-TOlCdtOZ.js";import"./_baseSet-CetWAzMq.js";import"./hasIn-CKxI--hu.js";import"./accessRequirementAclHandlers-D8C07TlX.js";import"./mockAccessRequirementAcls-CvkHeAsU.js";import"./mockAccessRequirements-DbGbfNRn.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-CAr833ZF.js";import"./wikiHandlers-CTXLTN9z.js";import"./mockWikiPageKey-IVmbYXFD.js";import"./teamHandlers-BSR6mYmt.js";import"./dataAccessRequestHandlers-H_0ayEM6.js";import"./MockResearchProject-CwT0qZh_.js";import"./mock_discussion-CLRUdaZQ.js";import"./fakerUtils-V1ld65Mt.js";import"./index-Da-w_yiB.js";import"./mockTableEntity-lE0a4iEr.js";import"./mockFileEntityACLVariants-DLz9jCg-.js";import"./entityHandlers-FJ0JvyIK.js";import"./mockEntity-BcMboOPq.js";import"./mockEvaluationQueue-CepIKyrR.js";import"./featureFlagHandlers-A5zOqbJy.js";import"./fileHandlers-DNo0BD5X.js";import"./personalAccessTokenHandlers-BCxX8PNg.js";import"./researchProjectHandlers-DRZlMSRk.js";import"./resetTwoFactorAuthHandlers-DHtCYo9l.js";import"./userProfileHandlers-2rK65ygg.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-CS2phJ3S.js";import"./FullWidthAlert-BWkqCL07.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-zI21t_ct.js";import"./createTheme-OkraJ5eJ.js";import"./resolveComponentProps-CePEpoP1.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-dNLbFQVo.js";import"./createSvgIcon-BHiZORw5.js";import"./DefaultPropsProvider-BseDZ5eB.js";import"./Close-CDYC--wl.js";import"./IconButton-DAaKFUzV.js";import"./ButtonBase-IB6_m_jw.js";import"./useTimeout-Cye8bwlJ.js";import"./useIsFocusVisible-pfxCMmj4.js";import"./useEventCallback-Bck77aoL.js";import"./Paper-CRf9WCXu.js";import"./Stack-CtKa76FJ.js";import"./getThemeProps-CZUDRWGj.js";import"./useTheme-D5uDEtFj.js";import"./Box-SbfP01m2.js";import"./AlertTitle-YuhibS0Q.js";import"./Typography-ooch0MpL.js";import"./useTheme-BxZhO2mg.js";import"./Grow-BRU2ZIec.js";import"./index-BLcRfihU.js";import"./utils-BOrTgFDN.js";import"./ClickAwayListener-0jLBZ_NF.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-CnSmt6JP.js";import"./index-C8hSn997.js";import"./useControlled-B5xsJp7-.js";import"./useId-B3qv0Fqa.js";import"./Popper-BJu7XYtc.js";import"./Button-BoTYrHNG.js";import"./useQuery-D2x4aW1T.js";import"./utils-BhHY6IUZ.js";import"./Link-CUHo7LkR.js";import"./Collapse-CcAZYdGa.js";import"./tinycolor-Begke6kS.js";import"./Fade-DHaVGwVo.js";import"./Skeleton-aBWFkCqk.js";import"./inputBaseClasses-CUxDQaHH.js";import"./calculateFriendlyFileSize-D8IbqDIv.js";import"./CheckCircleTwoTone-WEcEfruf.js";import"./InfoTwoTone-CVKap42G.js";import"./useMutation-Bc_DK1q5.js";import"./dayjs.min-DrfyowjI.js";import"./chunk-AYJ5UCUI-CbqUZpCT.js";import"./index-DsPoo2Ro.js";import"./react-D4nFN3Ah.js";import"./util-BoMHqXhP.js";import"./WideButton-WBe0R7e1.js";import"./DeleteTwoTone-BuU7Aku0.js";import"./createSvgIcon-Ca-bQDVY.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-C9tXRdHN.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-CBR1a0cj.js";import"./DialogBase-CBjPw_gl.js";import"./Close-CnJglT61.js";import"./HelpPopover-B0JipalD.js";import"./MarkdownPopover-K71dM2xQ.js";import"./LightTooltip-C8VLf5gk.js";import"./MarkdownSynapse-BOx_HMyj.js";import"./SkeletonButton-ZBJNvmzv.js";import"./SkeletonInlineBlock-D8bpaet_.js";import"./SkeletonTable-BGizizmn.js";import"./SkeletonParagraph-C12HqlQq.js";import"./HelpOutlineTwoTone-DDf0-Rdu.js";import"./DialogTitle-wmd0iOTN.js";import"./DialogContent-BYmstn6d.js";import"./Dialog-VMtcCiCt.js";import"./Modal-BROo7QpI.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-CBiUf-TH.js";import"./WarningDialog-Dbu6HGiM.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
