import{g as f}from"./userProfileHandlers-A-rLlChp.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-BM92AjlG.js";import{A}from"./AccountLevelBadges-DXP1XkBp.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-BarfV7Mg.js";import"./iframe-DsTvFT6Q.js";import"./mockEntity-DKnF7Dmg.js";import"./mockFileEntity-CLeaCwqX.js";import"./StringUtils-C95LMFI-.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-BbCeqJNa.js";import"./mockTeam-BuSdv9oh.js";import"./SynapseConstants-CSQZ8LdY.js";import"./OrientationBanner-B9vK_fOZ.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-D-UvISqL.js";import"./index-Df_FdJl-.js";import"./spreadSx-CwcO6WA9.js";import"./react-C6TP9ok4.js";import"./FullWidthAlert-Bu31KEHU.js";import"./Alert-BfEFHSpf.js";import"./createTheme-B4cUhGob.js";import"./DefaultPropsProvider-9yDVx9dT.js";import"./useSlot-DHoMpVG_.js";import"./useForkRef-C37ywrok.js";import"./createSimplePaletteValueFilter-CmcCRKj9.js";import"./createSvgIcon-Bx2dCIbF.js";import"./Close-DNuwum3q.js";import"./IconButton-BXTZx6ON.js";import"./useTimeout-B-uQAk7X.js";import"./ButtonBase-COtAfe0-.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-D859Rgox.js";import"./Paper-Cf1kvPYs.js";import"./useTheme-BCgVrM8U.js";import"./useTheme-BNWJT91L.js";import"./Stack-BnE5AZPR.js";import"./useThemeProps-Di9ozye9.js";import"./getThemeProps-DDS8aWDb.js";import"./extendSxProp-DGFMAjvY.js";import"./Box-CWKxjGZN.js";import"./AlertTitle-BrquGJFX.js";import"./Typography-DzNtFqki.js";import"./index-DvmyVfCT.js";import"./ClickAwayListener-CFjnMEqm.js";import"./getReactElementRef-q6KXtwDj.js";import"./index-LtSKZm9d.js";import"./index-Bj500_V6.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-CSPbf5zw.js";import"./Tooltip-CIfcREkL.js";import"./index-Bc5ECFUa.js";import"./useControlled-47FWtaLW.js";import"./Popper-DFTLUIEO.js";import"./Button-UK5ni8CN.js";import"./uniqueId-B-X-Pcad.js";import"./toString-C5D_JqWD.js";import"./isArray-CCt3-GU-.js";import"./isSymbol-BaBXEl4F.js";import"./times-AS42JGk1.js";import"./_Uint8Array-Tgc0IKEL.js";import"./identity-DKeuBCMA.js";import"./toInteger-TYVSzmyI.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-BWAW2VGJ.js";import"./QueryClientProvider-OtgzlTZ3.js";import"./Link-DFZaBwQ-.js";import"./Collapse-BS71YIGZ.js";import"./_baseUniq-CmLy7hQ9.js";import"./_getTag-DDx0ez5Y.js";import"./isEqual-BrMooGWr.js";import"./noop-DX6rZLP_.js";import"./merge-DiyJyzhC.js";import"./_initCloneObject-CwDTQz61.js";import"./tinycolor-Begke6kS.js";import"./Fade-BnQ6e4Q4.js";import"./inputBaseClasses-C0c-AyIl.js";import"./calculateFriendlyFileSize-CvjtSy_b.js";import"./CheckCircleTwoTone-gDseQqaM.js";import"./InfoTwoTone-DfKGI0-a.js";import"./useMutation-Busowt2v.js";import"./dayjs.min-DK0WmqxW.js";import"./chunk-AYJ5UCUI-CSRoxWwe.js";import"./cloneDeep-CNI9lROB.js";import"./Skeleton-Da4ynUFT.js";import"./AccountLevelBadge-SE3zig8Z.js";import"./Card-DW8dMbEi.js";import"./ConfirmationDialog-7YkhSS_p.js";import"./DialogBase-DM-5my7w.js";import"./Close-DTrvFG6a.js";import"./HelpPopover-4RlK0epy.js";import"./MarkdownPopover-B0nQa6el.js";import"./LightTooltip-DJymrmVG.js";import"./MarkdownSynapse-BXS9wRRN.js";import"./SkeletonButton-B6SlV21H.js";import"./SkeletonInlineBlock-CIzVl0ZL.js";import"./SkeletonTable-B3Zj-4ZO.js";import"./SkeletonParagraph-CM-XT7Cq.js";import"./HelpOutlineTwoTone-_LYu5zpY.js";import"./Dialog-CpBNV57D.js";import"./DialogActions-DGLc5U5p.js";import"./Modal-CYmwaiuV.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-DBuoQaOJ.js";import"./DialogContent-DoTwoopa.js";import"./DialogTitle-Cx4_6Z15.js";import"./LoadingScreen-BGVFcTJN.js";import"./LinearProgress-VIEKJBjr.js";import"./ToastMessage-W-Pdwq34.js";import"./CSSTransition-Bkd7AFZl.js";const kt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Ut=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Ut as __namedExportsOrder,kt as default};
