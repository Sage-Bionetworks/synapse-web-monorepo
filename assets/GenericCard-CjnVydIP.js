import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{L as q}from"./Link-DOHlnlBk.js";import{r as I}from"./index-DqdBbDO8.js";import{H as L}from"./HeaderCard-DiT-BaGE.js";import{C as N}from"./index-CN4712tm.js";import{F as A}from"./FileHandleLink-Da7SYObS.js";import{C as w}from"./HeaderCardV2-IPrkKIIC.js";import{B as V}from"./Box-BM9usSYA.js";import{S as F}from"./Stack-kCm0vDNS.js";function f(n){const{target:o,title:r,href:i}=n;return i?e.jsx(q,{target:o,href:i,children:r}):e.jsx("span",{children:r})}try{f.displayName="GenericCardTitle",f.__docgenInfo={description:"",displayName:"GenericCardTitle",props:{title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},target:{defaultValue:null,description:"",name:"target",required:!1,type:{name:"string"}},href:{defaultValue:null,description:"",name:"href",required:!1,type:{name:"string"}}}}}catch{}const D=[],T=I.forwardRef(function(o,r){const{icon:i,type:m,title:d,titleLinkConfiguration:a,titleAsFileHandleLinkConfiguration:l,subtitle:s,description:h,descriptionSubTitle:S="",descriptionConfig:y,cardTopContent:g,cardTopButtons:c,isHeader:p=!1,headerCardVariant:R,useStylesForDisplayedImage:b=!1,labels:u=D,secondaryLabelLimit:C,columnIconOptions:j,ctaLinkConfig:t,renderedIconList:v,sustainabilityScorecard:H}=o,x=u.length>0,_={marginTop:p?"0px":void 0,marginBottom:p?"0px":void 0,paddingBottom:x||b?void 0:"15px"};return p?e.jsx(L,{ref:r,headerCardVariant:R,descriptionConfig:y,title:d,subTitle:s,description:h,type:m,icon:i,values:u,href:a==null?void 0:a.href,target:a==null?void 0:a.target,ctaLinkConfig:t,isAlignToLeftNav:!0,secondaryLabelLimit:C,cardTopButtons:c,cardTopContent:g,sustainabilityScorecard:H}):e.jsxs("div",{style:_,ref:r,className:"SRC-portalCard",children:[e.jsxs("div",{className:"SRC-portalCardMain",children:[i,e.jsxs("div",{className:"SRC-cardContent",children:[c&&e.jsx(V,{sx:{position:"absolute",right:"24px",display:"flex",float:"right",flexDirection:"row",gap:"10px"},children:c}),e.jsx(F,{sx:{flexDirection:"row"},children:e.jsx("div",{className:"SRC-type",children:m})}),v,e.jsx("div",{children:e.jsxs("h3",{className:"SRC-boldText SRC-blackText",style:{margin:"none"},children:[!l&&e.jsx(f,{title:d,href:a==null?void 0:a.href,target:a==null?void 0:a.target}),l&&e.jsx(A,{fileHandleAssociation:l.fileHandleAssociation,showDownloadIcon:l.showDownloadIcon,displayValue:d})]})}),s&&e.jsx("div",{className:"SRC-author",children:s}),e.jsx(w,{description:h,descriptionSubTitle:S,descriptionConfig:y}),t&&t.text&&t.href&&e.jsx(V,{sx:{mt:"20px"},children:e.jsx(q,{target:t.target,rel:"noopener noreferrer",href:t.href,children:t.text})})]})]}),x&&e.jsx(N,{isHeader:!1,secondaryLabelLimit:C,values:u,columnIconOptions:j,className:b?void 0:"hasIcon",cardTopContent:g})]})});try{T.displayName="GenericCard",T.__docgenInfo={description:"Generic portal card UI component with a predefined layout",displayName:"GenericCard",props:{type:{defaultValue:null,description:"String representing the 'type' of object. This is displayed as a label on the card.",name:"type",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"The title displayed on the card.",name:"title",required:!0,type:{name:"string"}},titleLinkConfiguration:{defaultValue:null,description:"Optionally provide href/target if the title should be a link",name:"titleLinkConfiguration",required:!1,type:{name:"{ href: string; target: string; }"}},titleAsFileHandleLinkConfiguration:{defaultValue:null,description:"Optionally provide configuration if the title should be a link to a Synapse FileHandle",name:"titleAsFileHandleLinkConfiguration",required:!1,type:{name:"{ fileHandleAssociation: FileHandleAssociation; showDownloadIcon: boolean; }"}},subtitle:{defaultValue:null,description:"An optional subtitle to be displayed on the card",name:"subtitle",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"An description to be displayed on the card",name:"description",required:!0,type:{name:"string"}},descriptionSubTitle:{defaultValue:null,description:"An optional description subtitle to be displayed on the card",name:"descriptionSubTitle",required:!1,type:{name:"string"}},descriptionConfig:{defaultValue:null,description:"Configuration for altering the display of the description prop",name:"descriptionConfig",required:!1,type:{name:"DescriptionConfig"}},cardTopContent:{defaultValue:null,description:"Optional slot for adding content to the top of the card",name:"cardTopContent",required:!1,type:{name:"React.ReactNode"}},cardTopButtons:{defaultValue:null,description:"Optional slot for adding action buttons to the top of the card",name:"cardTopButtons",required:!1,type:{name:"React.ReactNode"}},isHeader:{defaultValue:null,description:"If true, a HeaderCard component will be rendered",name:"isHeader",required:!1,type:{name:"boolean"}},headerCardVariant:{defaultValue:null,description:"The variant of HeaderCard to render if `isHeader` is true",name:"headerCardVariant",required:!1,type:{name:"enum",value:[{value:'"HeaderCard"'},{value:'"HeaderCardV2"'}]}},useStylesForDisplayedImage:{defaultValue:{value:"false"},description:"Set to true if the icon is an arbitrary image. The card styles will be updated to accommodate the image",name:"useStylesForDisplayedImage",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"The rendered icon on the card",name:"icon",required:!0,type:{name:"React.ReactNode"}},labels:{defaultValue:null,description:"The card labels to be displayed in the footer of the card",name:"labels",required:!1,type:{name:"CardLabel[]"}},secondaryLabelLimit:{defaultValue:null,description:"The initial number of labels to display in the footer of the card",name:"secondaryLabelLimit",required:!1,type:{name:"number"}},columnIconOptions:{defaultValue:null,description:"Options for displaying icons with the labels in the card footer",name:"columnIconOptions",required:!1,type:{name:"ColumnIconConfigs"}},ctaLinkConfig:{defaultValue:null,description:"Optional configuration for displaying a CTA button on the card",name:"ctaLinkConfig",required:!1,type:{name:"{ text: React.ReactNode; href?: string; target?: string; }"}},renderedIconList:{defaultValue:null,description:"The rendered icon list on the card",name:"renderedIconList",required:!1,type:{name:"React.ReactNode"}},sustainabilityScorecard:{defaultValue:null,description:"Optional sustainability scorecard to be displayed on the header card",name:"sustainabilityScorecard",required:!1,type:{name:"SustainabilityScorecardProps"}}}}}catch{}export{T as G};
