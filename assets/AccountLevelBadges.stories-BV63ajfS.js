import{g as f}from"./userProfileHandlers-DpDlwVp9.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-C8pQ42sC.js";import{A}from"./AccountLevelBadges-Dz__EpPs.js";import"./VerificationSubmission-DHtRxRPZ.js";import"./index-Ce3dFBkz.js";import"./iframe-ClNwV9PY.js";import"./mockEntity-tsknmT_g.js";import"./mockFileEntity-Cro8pF4R.js";import"./StringUtils-DP1EOPFU.js";import"./mock_file_handle-BIJh-7D7.js";import"./mockProject-5Rp1Ji1f.js";import"./mockTeam-DXVAsjas.js";import"./SynapseConstants-BWEIGnwu.js";import"./OrientationBanner-CCfEbiwH.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-CpmJTZ4x.js";import"./index-d3rqgMCN.js";import"./spreadSx-CwcO6WA9.js";import"./react-Bg_7O6IH.js";import"./FullWidthAlert-DnoeA5M1.js";import"./Alert-BzUj_4eQ.js";import"./createTheme-DvxOXisY.js";import"./DefaultPropsProvider-DbzGYC6R.js";import"./useSlot-B3TfMazm.js";import"./useForkRef-D3CdTM63.js";import"./createSimplePaletteValueFilter-BGU1NRjf.js";import"./createSvgIcon-877S8SfZ.js";import"./Close-DCJBwk8x.js";import"./IconButton-Cyq5--N7.js";import"./useTimeout-Ba8UwYs3.js";import"./ButtonBase-DY__CRx9.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BIWxjXOd.js";import"./Paper-CSLfVwPp.js";import"./useTheme-qO_LFzDa.js";import"./useTheme-CIBZr94v.js";import"./Stack-D_7wB_A8.js";import"./extendSxProp-FnuzVdsZ.js";import"./getThemeProps-CIY2LghJ.js";import"./Box-DpHzd5pI.js";import"./AlertTitle-C9nDlQ1G.js";import"./Typography-CCVx77H_.js";import"./index-g0GcxGYP.js";import"./ClickAwayListener-DuB1ADIA.js";import"./getReactElementRef-CEbG-EIy.js";import"./index-BhU5E2yG.js";import"./index--vTnsLgE.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DIVOJwgj.js";import"./Tooltip-CPb4seuM.js";import"./index-SecRffPd.js";import"./useControlled-LqlwTi-d.js";import"./Popper-RXngH7Nw.js";import"./Button-CrXDoJqf.js";import"./uniqueId-1L9sLKnz.js";import"./toString-CpgPQIWO.js";import"./isArray-yr-f1zea.js";import"./isSymbol-n1cEv3Ae.js";import"./times-uhXOCnO2.js";import"./_Uint8Array-1H9Im2BA.js";import"./identity-DKeuBCMA.js";import"./toInteger-D9Fg3WJG.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-DYyOnCTL.js";import"./QueryClientProvider-BFF2BFJZ.js";import"./Link-DEQR3Bj0.js";import"./Collapse-IVJU_aLj.js";import"./_baseUniq-DbqMLa1W.js";import"./_getTag-CJ6sfUGW.js";import"./isEqual-BafHoWgl.js";import"./merge-DGYilYtD.js";import"./_initCloneObject-DxuZsF47.js";import"./tinycolor-Begke6kS.js";import"./Fade-D4LvABf9.js";import"./inputBaseClasses-CUQGo_ih.js";import"./calculateFriendlyFileSize-BwWE2ebF.js";import"./CheckCircleTwoTone-CHuMDpy1.js";import"./InfoTwoTone-BINpw3Ae.js";import"./useMutation-DZbu7UUC.js";import"./dayjs.min-DjKPkMPs.js";import"./chunk-AYJ5UCUI-2UEh2evp.js";import"./cloneDeep-C2sTo4gJ.js";import"./Skeleton-D1wacr3-.js";import"./AccountLevelBadge-gmVd_uMW.js";import"./Card-C2RiJfkD.js";import"./ConfirmationDialog-DURiw3eG.js";import"./DialogBase-BFdrKNaU.js";import"./Close-DgODQfI0.js";import"./HelpPopover-CMDFYvAD.js";import"./MarkdownPopover-CAw0-oJ5.js";import"./LightTooltip-DAMyzSkr.js";import"./MarkdownSynapse-C1NYhXcB.js";import"./SkeletonButton-D2IHMibg.js";import"./SkeletonInlineBlock-B11ddKWv.js";import"./SkeletonTable-DZt1isCd.js";import"./SkeletonParagraph-BSF6tPot.js";import"./HelpOutlineTwoTone-BS_Gnu0k.js";import"./DialogTitle-DcYVo6T5.js";import"./DialogContent-DRcW8Viy.js";import"./Dialog-VcuLlsve.js";import"./Modal-BlntHulH.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-B0kf8RBZ.js";import"./LoadingScreen-h4s4Rnbo.js";import"./LinearProgress-B7fZxoFL.js";import"./ToastMessage-CkFQzo64.js";import"./CSSTransition-CymebWUW.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
