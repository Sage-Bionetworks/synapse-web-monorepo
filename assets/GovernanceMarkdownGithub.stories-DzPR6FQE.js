import{u as o}from"./VerificationSubmission-BDh1zA9f.js";import{g as u,bd as d,be as l,B as f,bf as S,M as O}from"./useFiles-zOESdhzI.js";import"./StringUtils-C95LMFI-.js";import{h as i,H as n}from"./index-ByrXn3AG.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-S1-nRWlF.js";import"./SynapseConstants-hreeKAiu.js";import"./OrientationBanner-CYdEM79E.js";import"./index-DznES9q-.js";import"./index-Z_niMZcI.js";import"./iframe-9d_xT48Y.js";import"./spreadSx-CwcO6WA9.js";import"./react-CYczaA45.js";import"./FullWidthAlert-CAXTHdyF.js";import"./Alert-fhf9ZcTF.js";import"./createTheme-Ckpp2aJZ.js";import"./DefaultPropsProvider-DNj85cPU.js";import"./useSlot-CGhf7FeQ.js";import"./useForkRef-RZxkIAYG.js";import"./createSimplePaletteValueFilter-DgrzAZvi.js";import"./createSvgIcon-CyMI1MCl.js";import"./Close-DKqsZ7f0.js";import"./IconButton-D8dvWPnB.js";import"./useTimeout-Lo-a2r10.js";import"./ButtonBase-D3TfkVgz.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-Bk44l8uz.js";import"./Paper-DB8P-rkI.js";import"./useTheme-De4w3W1h.js";import"./useTheme-BTCL84tt.js";import"./Stack-D6h9mjEk.js";import"./useThemeProps-DwadHsRm.js";import"./getThemeProps-C_wawT9I.js";import"./extendSxProp-D-Q_-68W.js";import"./Box-B0N2xX3m.js";import"./AlertTitle-DRXY24RG.js";import"./Typography-CO7fscfq.js";import"./index-BmRs8eVL.js";import"./ClickAwayListener-CuOvNdFo.js";import"./getReactElementRef-DjY0RuEK.js";import"./index-qAeAYKDl.js";import"./index-pthXlbu6.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-B5ZRnJdx.js";import"./Tooltip-DkoGxs3D.js";import"./index-4CrF3sPv.js";import"./useControlled-BO3AYCap.js";import"./Popper-D7dI-vcX.js";import"./Button-CE2q8GZa.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-D7eNVn05.js";import"./QueryClientProvider-wm4deiul.js";import"./Link-CkNjpNVk.js";import"./Collapse-B3lfXU47.js";import"./_baseUniq-BfPE21S4.js";import"./_Uint8Array-CxEDNqDG.js";import"./isArray-DEVg6Y6f.js";import"./_getTag-CyB7UJq2.js";import"./isEqual-CjQ0xsUP.js";import"./noop-DX6rZLP_.js";import"./merge-w5SVnV7S.js";import"./_initCloneObject-BXD3EUEW.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-BTsGKFOx.js";import"./inputBaseClasses-BquiKfq4.js";import"./calculateFriendlyFileSize-CV2UvVgj.js";import"./CheckCircleTwoTone-DsSnAxaE.js";import"./InfoTwoTone-OsnIp2rF.js";import"./useMutation-CwPhuXlo.js";import"./dayjs.min-BstykqR9.js";import"./chunk-AYJ5UCUI-CpTQ0xdT.js";import"./cloneDeep-Ba0G_3Y-.js";import"./Skeleton-DaUiC_M2.js";import"./SkeletonButton-Ds2Q6XmI.js";import"./SkeletonInlineBlock-CnqdYumQ.js";import"./SkeletonTable-7rz2uNeX.js";import"./times-7k16maVn.js";import"./toInteger-MqhnAcu0.js";import"./isSymbol-Ctb34mAm.js";import"./SkeletonParagraph--rzBUvwb.js";import"./MarkdownSynapse-CW0fmQ3Q.js";import"./Container-CY5REZop.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Qr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Xr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Xr as __namedExportsOrder,Qr as default};
