var h=Object.defineProperty;var p=(t,e,s)=>e in t?h(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var a=(t,e,s)=>p(t,typeof e!="symbol"?e+"":e,s);class l extends Error{constructor(s,n,r,i){super(n);a(this,"status");a(this,"reason");a(this,"errorResponse");a(this,"url");this.status=s,this.reason=n,this.url=r,this.errorResponse=i,Object.setPrototypeOf(this,new.target.prototype)}}const w="This site cannot be reached. Either a connection is unavailable, or your network administrator has blocked you from accessing this site.";function y(t){return new Promise(e=>{setTimeout(e.bind(null,{}),t)})}const T=[0,429,502,503,504],E=[502,503],f=3,S=async(t,e,s=1e3)=>{let n=await fetch(t,e),r=1;for(;n.status&&T.includes(n.status)&&(await y(s),s=s*2,n=await fetch(t,e),!(E.includes(n.status)&&(r++,r==f))););return n},O=async(t,e,s=1e3)=>{const n=typeof t=="string"?t:t.url;let r;try{r=await S(t,e,s)}catch(u){throw console.error(u),new l(0,w,n)}const i=r.headers.get("Content-Type"),c=await r.text();let o=c;try{i&&i.includes("application/json")&&(o=JSON.parse(c))}catch{console.warn("Failed to parse response as JSON",c)}if(r.ok)return o;throw o!==null&&typeof o=="object"&&"reason"in o?new l(r.status,o.reason,n,o):new l(r.status,JSON.stringify(o),n)};export{w as N,l as S,S as a,y as d,O as f};
