import{g as f}from"./userProfileHandlers-wTT2Qu63.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-B0U4gzY5.js";import{A}from"./AccountLevelBadges-Cs_9uMXo.js";import"./VerificationSubmission-DHtRxRPZ.js";import"./index-D9NI1WBL.js";import"./iframe-CNTF6X_t.js";import"./mockEntity-yz7duRl6.js";import"./mockFileEntity-Dn3VK7xB.js";import"./StringUtils-DP1EOPFU.js";import"./mock_file_handle-BIJh-7D7.js";import"./mockProject-BV_hCYJr.js";import"./mockTeam-Cj452QUC.js";import"./SynapseConstants-Dtw8JT9K.js";import"./OrientationBanner-BFfM4kQK.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-o3mbyDJ_.js";import"./index-C2PZBrLv.js";import"./spreadSx-CwcO6WA9.js";import"./react-C1E0WWj9.js";import"./FullWidthAlert-C_J5Noie.js";import"./Alert-DNb5zPwV.js";import"./createTheme-D-kospWj.js";import"./DefaultPropsProvider-CC2ZtPmq.js";import"./useSlot-BoukHlmH.js";import"./useForkRef-CUmErhp7.js";import"./createSimplePaletteValueFilter-D08C6jui.js";import"./createSvgIcon-CZi17tUa.js";import"./Close-raPQlKpe.js";import"./IconButton-DL9Auw19.js";import"./useTimeout-BUOTtkI_.js";import"./ButtonBase-ClEqCu4q.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-Ce_-6k31.js";import"./Paper-DlQITwJL.js";import"./useTheme-CWrjHpSC.js";import"./useTheme-CnkkHqH9.js";import"./Stack-Dy4-WgM_.js";import"./extendSxProp-DCZvLCZ1.js";import"./getThemeProps-BghImWoL.js";import"./Box-YD4QvbDf.js";import"./AlertTitle-CJceuYZo.js";import"./Typography-5nQ2YQd7.js";import"./index-D39n2xwi.js";import"./ClickAwayListener-C_f-0IT0.js";import"./getReactElementRef-QZCM3h1T.js";import"./index-BkdGZOWW.js";import"./index-D7wXRBOq.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-D045avyu.js";import"./Tooltip-BP3wuRWq.js";import"./index-DgnACGHd.js";import"./useControlled-Chb41gWY.js";import"./Popper-DFXRF7a3.js";import"./Button-c0UHW0MR.js";import"./uniqueId-C1XzCJDS.js";import"./toString-CIV4V4cB.js";import"./isArray-42N_5E-2.js";import"./isSymbol-BlIXNtev.js";import"./times-e_ekP7_6.js";import"./_Uint8Array-B4xmgUBf.js";import"./identity-DKeuBCMA.js";import"./toInteger-C3HrJcJD.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-DZqyF7W4.js";import"./QueryClientProvider-CTUgZ56q.js";import"./Link-S3cKxk76.js";import"./Collapse-B3YoQXgf.js";import"./_baseUniq-BRoY8VEw.js";import"./_getTag-LSp1chIl.js";import"./isEqual-CMiPFqsp.js";import"./merge-FniWYtdi.js";import"./_initCloneObject-R9J6iBsV.js";import"./tinycolor-Begke6kS.js";import"./Fade-CUlhCYG9.js";import"./inputBaseClasses-DHiWbVro.js";import"./calculateFriendlyFileSize-B_omjKN-.js";import"./CheckCircleTwoTone-CiIEkiU2.js";import"./InfoTwoTone-60mfq9v0.js";import"./useMutation-CBu7Udma.js";import"./dayjs.min-CHEXfb8p.js";import"./chunk-AYJ5UCUI-Cxe4yrTd.js";import"./cloneDeep-DabqN8bB.js";import"./Skeleton-L-wdtKFv.js";import"./AccountLevelBadge-eM6uN4BS.js";import"./Card-DKCBJ6e_.js";import"./ConfirmationDialog-DN6pQZHG.js";import"./DialogBase-C-H1h0Qt.js";import"./Close-CIXfN3sK.js";import"./HelpPopover-DygNChNq.js";import"./MarkdownPopover-Bi-HR_4u.js";import"./LightTooltip-DvEOFUYP.js";import"./MarkdownSynapse-C-2zgFaM.js";import"./SkeletonButton-B9pJHKOb.js";import"./SkeletonInlineBlock-BV0-yJxG.js";import"./SkeletonTable-BYzdqBTE.js";import"./SkeletonParagraph-DngpqyaY.js";import"./HelpOutlineTwoTone-DKGLDv2E.js";import"./DialogTitle-C0rXMkf5.js";import"./DialogContent-CqAmG6ha.js";import"./Dialog-DiKkYDs9.js";import"./Modal-CqcJ1osb.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-87_nV6vj.js";import"./LoadingScreen-ZoufKF0h.js";import"./LinearProgress-BK1ry841.js";import"./ToastMessage-BNK30Hyw.js";import"./CSSTransition-DWqbDEh4.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
