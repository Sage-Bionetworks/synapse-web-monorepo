import{M as E,f as _}from"./useFiles-08ax02E-.js";import{l as h}from"./index-CPogZFRs.js";import{j as r}from"./jsx-runtime-BFXWMKZc.js";import"./VerificationSubmission-CMrrYimb.js";import"./StringUtils-Bdqa-HwM.js";import"./OrientationBanner-CkWPScZc.js";import"./index-D_pyoJeF.js";import{n as x}from"./useAccessRequirements-JQrulEbY.js";import{p as T}from"./pluralize-DH-nfBU4.js";import{E as O}from"./EntityLink-Btt0SAqH.js";import{T as M}from"./Typography-Em3plqb-.js";import{L as S}from"./List-C0jc1z6Q.js";import{L as k}from"./ListItem-DmzRwC2s.js";import{A as C}from"./Alert-BNmvEUEK.js";import"./SynapseConstants-DmRaMcRv.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useTimeout-B7IP0G6T.js";import"./FullWidthAlert-D2RPxRYK.js";import"./spreadSx-CwcO6WA9.js";import"./Stack-DiWOtagw.js";import"./DefaultPropsProvider-BahuCuBQ.js";import"./createTheme-1xr-80h-.js";import"./extendSxProp-B_QRsu6b.js";import"./getThemeProps-CF3hQaQh.js";import"./useTheme-DpkrdbtW.js";import"./Box-D9EI7yvi.js";import"./AlertTitle-Z9VHju2U.js";import"./useForkRef-CDFucD7y.js";import"./useSlot-D8PJQatE.js";import"./useTheme-CkaB82ut.js";import"./ClickAwayListener-CR_a0-_E.js";import"./getReactElementRef-Cb6_WgiO.js";import"./index-BErIIWRC.js";import"./iframe-D_yBs-4r.js";import"./index-ij4xiAr7.js";import"./ownerDocument-DW-IO8s5.js";import"./Paper-CP60vdL5.js";import"./Grow-CisvWGr-.js";import"./Tooltip-DavDF6Dc.js";import"./index-CC01-gZ0.js";import"./useControlled-Ca7fQw0M.js";import"./Popper-CP6xWkKC.js";import"./isFocusVisible-B8k4qzLc.js";import"./Button-DRPAyHS3.js";import"./createSimplePaletteValueFilter-7em8lTd1.js";import"./ButtonBase-CK5wBRG4.js";import"./CircularProgress-CvONy6WE.js";import"./useQuery-DpIURBis.js";import"./utils-C2JOEKA9.js";import"./Link-C_ucfB6H.js";import"./Collapse-BopMEsFI.js";import"./_baseUniq-D2-SJ7dF.js";import"./_Uint8Array-wjvJVDIM.js";import"./_baseTimes-36S_kd0L.js";import"./isObjectLike-ClIIHxnV.js";import"./isArray-Dxzbedgu.js";import"./_getTag-_WPpb9Lx.js";import"./isEqual-DKQ9N4pb.js";import"./merge-Dfr9bJau.js";import"./_initCloneObject-DeXLGZO2.js";import"./identity-DKeuBCMA.js";import"./createSvgIcon-C5lrm-bN.js";import"./tinycolor-Begke6kS.js";import"./Fade-Byv_i-Tg.js";import"./inputBaseClasses-DIE4lhwo.js";import"./calculateFriendlyFileSize-ECzjj6_0.js";import"./CheckCircleTwoTone-BCj2_bWN.js";import"./InfoTwoTone-DuRbV58N.js";import"./index-CjrxtM-b.js";import"./useMutation-CUDBwAFY.js";import"./dayjs.min-DIT4lERO.js";import"./chunk-AYJ5UCUI-CSQaHYsW.js";import"./cloneDeep-mbs_mYf7.js";import"./Skeleton-CKRGRrIM.js";import"./util-DVOjva-e.js";import"./index-LN9B4DhW.js";import"./react-CCDHJzMi.js";import"./index-CniHlxWs.js";import"./_baseOrderBy-I8k-i_Ek.js";import"./toString-DH9vHBtp.js";import"./isSymbol-CzsRZC_D.js";import"./_baseGet-Cfhxd_uj.js";import"./_baseIteratee-nNQn_9pv.js";import"./hasIn-CsUrHt0S.js";import"./_baseMap-DbhUYJuH.js";import"./_baseEach-C4lUP8aF.js";import"./useQueries-BPqu6Bzk.js";import"./useInfiniteQuery-C-AZEHaz.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./useEntity-BhaYqTxh.js";import"./pickBy-B-aXbql6.js";import"./isString-CKjkcUXU.js";import"./toInteger-BGY0IPQq.js";import"./pick-CYNJG8H4.js";import"./_baseSet-qqgNuoAS.js";import"./omit-DMFeLOtw.js";import"./_baseSlice-F8doVSIJ.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntityBundle-DygJm3z1.js";import"./useGetEntityHeaders-BwfOkwxq.js";import"./EntityIcon-BLOuOXP1.js";import"./IconSvg-Fi1LFZvX.js";import"./LayersTwoTone-DZBk3k68.js";import"./ContentCopyTwoTone-Bn0ZmRKP.js";import"./HelpOutlineTwoTone-DdxbeTGM.js";import"./ErrorOutlined-BZ7MNGry.js";import"./GetAppTwoTone-ByuV4XPt.js";import"./InfoOutlined-CqH9Opgh.js";import"./PhoneTwoTone-CNxAWvuY.js";import"./DeleteTwoTone-CX1-oD43.js";import"./ErrorChip-Cj0-WQOt.js";import"./Chip-CAwzhj2J.js";import"./Avatar-FVf6E6np.js";import"./isHostComponent-DVu5iVWx.js";import"./isMuiElement-DdFjtSV8.js";import"./listItemButtonClasses-ROkhTnSc.js";import"./Close-D_3dkcMR.js";import"./IconButton-By-wRGIS.js";const c=p=>{const n={ids:[p.accessRequirementId]},{data:e,isError:a,error:f}=x(n),t=(e==null?void 0:e.pages.flatMap(o=>o.results)[0])??void 0,d=(t==null?void 0:t.relatedProjectIds.length)||0,A=`${T("project",d,!0)}${d>0?":":""}`;return r.jsxs(r.Fragment,{children:[t&&r.jsxs(r.Fragment,{children:[r.jsx(M,{variant:"body1",children:A}),r.jsx(S,{sx:{listStyleType:"disc",pl:4},children:t.relatedProjectIds.map(o=>r.jsx(k,{sx:{display:"list-item",py:"4px",".no-margin-y":{my:0}},children:r.jsx(O,{entity:o,link:!1,showIcon:!1,className:"no-margin-y"})},o))})]}),a&&r.jsx(C,{severity:"error",children:f.message})]})};try{c.displayName="AccessRequirementRelatedProjectsList",c.__docgenInfo={description:"",displayName:"AccessRequirementRelatedProjectsList",props:{accessRequirementId:{defaultValue:null,description:"",name:"accessRequirementId",required:!0,type:{name:"number"}}}}}catch{}const He={title:"Governance/AccessRequirementRelatedProjectsList",component:c},i={args:{accessRequirementId:9603055}},s={args:{accessRequirementId:9605913}},m={args:{accessRequirementId:1234567},parameters:{stack:"mock",msw:{handlers:[h.rest.post(`${E}${_}`,async(p,n,e)=>{const a={results:[{id:"1234567",type:"org.sagebionetworks.repo.model.ManagedACTAccessRequirement",createdOn:"2017-08-23T18:48:20.892Z",modifiedOn:"2023-12-14T00:43:41.315Z",name:"Team AR without Related Projects",version:"1",relatedProjectIds:[],reviewerIds:[]}]};return n(e.status(200),e.json(a))})]}}};var l,u,R;i.parameters={...i.parameters,docs:{...(l=i.parameters)==null?void 0:l.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 9603055
  }
}`,...(R=(u=i.parameters)==null?void 0:u.docs)==null?void 0:R.source}}};var j,g,y;s.parameters={...s.parameters,docs:{...(j=s.parameters)==null?void 0:j.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 9605913
  }
}`,...(y=(g=s.parameters)==null?void 0:g.docs)==null?void 0:y.source}}};var I,P,q;m.parameters={...m.parameters,docs:{...(I=m.parameters)==null?void 0:I.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 1234567
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [
      // searchAccessRequirements
      rest.post(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_SEARCH}\`, async (req, res, ctx) => {
        const zeroRelatedProjects = {
          results: [{
            id: '1234567',
            type: 'org.sagebionetworks.repo.model.ManagedACTAccessRequirement',
            createdOn: '2017-08-23T18:48:20.892Z',
            modifiedOn: '2023-12-14T00:43:41.315Z',
            name: 'Team AR without Related Projects',
            version: '1',
            relatedProjectIds: [],
            reviewerIds: []
          }]
        };
        return res(ctx.status(200), ctx.json(zeroRelatedProjects));
      })]
    }
  }
}`,...(q=(P=m.parameters)==null?void 0:P.docs)==null?void 0:q.source}}};const Ke=["ManyProjects","OneProject","ZeroProjectsMock"];export{i as ManyProjects,s as OneProject,m as ZeroProjectsMock,Ke as __namedExportsOrder,He as default};
