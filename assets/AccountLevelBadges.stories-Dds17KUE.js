import{g as f}from"./userProfileHandlers-EVTSSrH-.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-DqOED7Vm.js";import{A}from"./AccountLevelBadges-GvnNoiAY.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-B3E298OA.js";import"./iframe-DM38aeMQ.js";import"./mockEntity-Bgx5Ly05.js";import"./mockFileEntity-B1py2hF3.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-6Lhp-M75.js";import"./mockTeam-Deu_owND.js";import"./SynapseConstants-BthOpQLB.js";import"./OrientationBanner-xWDnb_8x.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-CiGjdKGK.js";import"./index-0FUO4iVK.js";import"./spreadSx-CwcO6WA9.js";import"./react-C2d4DyXu.js";import"./FullWidthAlert-Cx03XuvY.js";import"./Alert-udWcAUQY.js";import"./createTheme-BHAg5tEe.js";import"./DefaultPropsProvider-DR7_-YAs.js";import"./useSlot-DZfTNSFS.js";import"./useForkRef-DxePPmVc.js";import"./createSimplePaletteValueFilter-DERnL5M9.js";import"./createSvgIcon-CfvJ11Oa.js";import"./Close-Cg62tY8L.js";import"./IconButton-_bwpt4ca.js";import"./useTimeout-ByWjq-eU.js";import"./ButtonBase-CcjRDjmt.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-ByfLseIu.js";import"./Paper-lAHe8OpX.js";import"./useTheme-NzQR0i01.js";import"./useTheme-Bnf3h8G0.js";import"./Stack-CsZGKSJy.js";import"./extendSxProp-DoeCfCx7.js";import"./getThemeProps-CmMpLADq.js";import"./Box-DPFXD5kJ.js";import"./AlertTitle-BBIZ10VR.js";import"./Typography-B8zdMFE9.js";import"./index-Ozhlb9U6.js";import"./ClickAwayListener-BXtl8q7p.js";import"./getReactElementRef-DH0foITJ.js";import"./index-qN2NPw-a.js";import"./index-CGaPGV5L.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-CYZ1JjRs.js";import"./Tooltip-CJb_CvWe.js";import"./index-BNBf6lAj.js";import"./useControlled-B6dAQYhR.js";import"./Popper-DOrV1LRN.js";import"./Button-DwRl1m3f.js";import"./uniqueId-DEpDD581.js";import"./toString-DlFGItZY.js";import"./isArray-DV5BwaHp.js";import"./isSymbol-Ct9O8yqX.js";import"./times-B9fnaU8O.js";import"./_Uint8Array-DEUqcpre.js";import"./identity-DKeuBCMA.js";import"./toInteger-BvPielbY.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-DEzStqmt.js";import"./QueryClientProvider-BV8zLBvL.js";import"./Link-NI2pPKYc.js";import"./Collapse-BbakI7R6.js";import"./_baseUniq-CwnmLVm2.js";import"./_getTag-BlOI61fG.js";import"./isEqual-CoMwnfdJ.js";import"./merge-_TaKl8B5.js";import"./_initCloneObject-C2F5HBS3.js";import"./tinycolor-Begke6kS.js";import"./Fade-C9uEJt8L.js";import"./inputBaseClasses-B4Lv6z-u.js";import"./calculateFriendlyFileSize-t9JGByLX.js";import"./CheckCircleTwoTone-DD06cB11.js";import"./InfoTwoTone-Dew1zR_M.js";import"./useMutation-B_FbfBom.js";import"./dayjs.min-REswNT-I.js";import"./chunk-AYJ5UCUI-QqhSiyQh.js";import"./cloneDeep-Ba2vXAv3.js";import"./Skeleton-D1xnNsuB.js";import"./AccountLevelBadge-4cevUAlD.js";import"./Card-CKl39nMB.js";import"./ConfirmationDialog-DJgeIc2i.js";import"./DialogBase-BaOPTbBZ.js";import"./Close-DTX9bL9G.js";import"./HelpPopover-DubAcUzL.js";import"./MarkdownPopover-ChP0R-Ig.js";import"./LightTooltip-Dyt9f4yz.js";import"./MarkdownSynapse-JFYiILkj.js";import"./SkeletonButton-DhWzkjOA.js";import"./SkeletonInlineBlock-0nc8C8w4.js";import"./SkeletonTable-CYoBgceZ.js";import"./SkeletonParagraph-BQ-FZqNR.js";import"./HelpOutlineTwoTone-BfBktqiU.js";import"./DialogTitle-Cwiwqlgl.js";import"./DialogContent-7p3V3qTZ.js";import"./DialogActions-B3oUlH-C.js";import"./Dialog-BkdfvV2k.js";import"./Modal-BSe03gVY.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-CGE6dyG4.js";import"./LoadingScreen-FKPaVxAH.js";import"./LinearProgress-cLbmiIoY.js";import"./ToastMessage-D31aSShP.js";import"./CSSTransition-oy00Tw2x.js";const St={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Et=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Et as __namedExportsOrder,St as default};
