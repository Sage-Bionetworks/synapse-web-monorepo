import{j as i}from"./jsx-runtime-DzZnOzqg.js";import{W as m,a as t}from"./WizardChoiceButton-DSfHwBsU.js";import{I as l}from"./LayersTwoTone-BaiBqErw.js";import{F as d}from"./IconSvg-Bb8E9AAj.js";import"./index-C60fwWGm.js";import"./iframe-BCxQYagR.js";import"./Box-FDIqTSOb.js";import"./createTheme-CYWnjTil.js";import"./useTheme-D6IuG_uC.js";import"./Typography-BmZ7G-Jn.js";import"./DefaultPropsProvider-BuN52GuK.js";import"./createSvgIcon-m9fHyGyS.js";import"./spreadSx-CwcO6WA9.js";import"./useTheme-CypcUUjZ.js";import"./Tooltip-xln8x51v.js";import"./index-Cz5g-qWT.js";import"./Grow-DhFF0lAh.js";import"./resolveComponentProps-B2e4_KER.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-C3QGtmSj.js";import"./index-CSh4ftr3.js";import"./utils-CRAVGkRr.js";import"./TransitionGroupContext-B9UPuYLo.js";import"./useEventCallback-BHMz769w.js";import"./useTimeout-BPh3bJVB.js";import"./useControlled-BMCukgAB.js";import"./useId-DjK6D95n.js";import"./useIsFocusVisible-Bukda0BQ.js";import"./Popper-DTiq_qV1.js";import"./ownerDocument-DW-IO8s5.js";import"./ContentCopyTwoTone-D0A92z7z.js";import"./HelpOutlineTwoTone-DPW3q9aG.js";import"./ErrorOutlined-tnotqE3j.js";import"./GetAppTwoTone-dOctXNn2.js";import"./InfoOutlined-CsuYIXlG.js";import"./DeleteTwoTone-DDDS6Ity.js";import"./CheckCircleTwoTone-Bmp6VC1Z.js";const V={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},e={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),i.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:i.jsx(l,{fontSize:"large"})}),i.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:i.jsx(d,{fontSize:"large"})})]})}};var r,s,n;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const Y=["Basic","WithIcons"];export{e as Basic,o as WithIcons,Y as __namedExportsOrder,V as default};
