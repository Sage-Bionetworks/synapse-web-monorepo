import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-2TyPXxt4.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-Bm_VZH8Z.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-TILA_w6o.js";import"./SynapseConstants-psamMqWq.js";import"./OrientationBanner-BFYFv59n.js";import"./index-xjd9PeKK.js";import"./index-CNMTJ46z.js";import"./iframe-BJviWTqp.js";import"./spreadSx-CwcO6WA9.js";import"./react-CT8wgIwV.js";import"./FullWidthAlert-Bpuvfh1_.js";import"./Alert-ITpKP4sT.js";import"./createTheme-zhaCRmkM.js";import"./DefaultPropsProvider-DPtW3vxh.js";import"./useSlot-spgws4xY.js";import"./useForkRef-qN9Lg4wt.js";import"./createSimplePaletteValueFilter-BeNeyznZ.js";import"./createSvgIcon-D8PnHcXI.js";import"./Close-C7dYT7w0.js";import"./IconButton-C7Nw5lJf.js";import"./useTimeout-D5CpEaw_.js";import"./ButtonBase-BLePZJCP.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BIKFNcu_.js";import"./Paper-Dik6GTog.js";import"./useTheme-ICdOAtbl.js";import"./useTheme-aLami-tv.js";import"./Stack-BGpq_-To.js";import"./extendSxProp-wdNZDvym.js";import"./getThemeProps-Ccd5Mcjt.js";import"./Box-BcE9yvph.js";import"./AlertTitle-BKpJvv99.js";import"./Typography-DtntXaKd.js";import"./index-CJ1gOIxh.js";import"./ClickAwayListener-CVd4muIH.js";import"./getReactElementRef-C3gFMLhu.js";import"./index-BCwsOVmd.js";import"./index-By9oCF5Q.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-CxbUMiqI.js";import"./Tooltip-DxSAO_PP.js";import"./index-Dgkqn9pp.js";import"./useControlled-KwZho2LT.js";import"./Popper-DFlTrhfk.js";import"./Button-BNOHA6TW.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-BrsdH-SX.js";import"./QueryClientProvider-C16TczSl.js";import"./Link-gmr1YpL6.js";import"./Collapse-Ccqe5DI2.js";import"./_baseUniq-D_rYiE-m.js";import"./_Uint8Array-BBrlSxhv.js";import"./isArray-CSGooqXb.js";import"./_getTag-hHn1v1FD.js";import"./isEqual-gq7oDh_t.js";import"./merge-BhfWzDjT.js";import"./_initCloneObject-sDs-YUjP.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-CulMwIXg.js";import"./inputBaseClasses-Cc_4do0e.js";import"./calculateFriendlyFileSize-Ccucj4mI.js";import"./CheckCircleTwoTone-B5WN67QL.js";import"./InfoTwoTone-D8kHcvjo.js";import"./useMutation-BLmWgYC_.js";import"./dayjs.min-CLjfTRTa.js";import"./chunk-AYJ5UCUI-C3d9T5HW.js";import"./cloneDeep-D2b6hgrH.js";import"./Skeleton-D2BAnm5-.js";import"./SkeletonButton-CInNVeOd.js";import"./SkeletonInlineBlock-Dmq4yw5R.js";import"./SkeletonTable-BiMI13wD.js";import"./times-BZh3QtlN.js";import"./toInteger-4gdszNNA.js";import"./isSymbol-CuEkol2g.js";import"./SkeletonParagraph-Cg4KuJje.js";import"./MarkdownSynapse-CFoWdFUM.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
