import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-KMy9YqPL.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-BdrK3zCa.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-D85MsLMM.js";import"./SynapseConstants-BgYtpW4k.js";import"./OrientationBanner-7upF-hoQ.js";import"./index-TbvRGm8v.js";import"./index-BhoLOz1H.js";import"./iframe-B-L9UC8S.js";import"./spreadSx-CwcO6WA9.js";import"./react-Bign9K4W.js";import"./FullWidthAlert-Djn7ZtR5.js";import"./Alert-nw7YVywL.js";import"./createTheme-uSqP-y16.js";import"./DefaultPropsProvider-JciSacAe.js";import"./useSlot-CxrlCIUv.js";import"./useForkRef-DYuMtypn.js";import"./createSimplePaletteValueFilter-DK6_d1Ss.js";import"./createSvgIcon-COdRNMCK.js";import"./Close-DIM5GSvr.js";import"./IconButton-B1rYF2mA.js";import"./useTimeout-C-8UHDQb.js";import"./ButtonBase-DQo73RHU.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-CY6nvIDK.js";import"./Paper-DFU7rbcO.js";import"./useTheme-Dzar86kc.js";import"./useTheme-IOcY49Vw.js";import"./Stack-DxavnVeo.js";import"./extendSxProp-Bky6oZpU.js";import"./getThemeProps-1OZ0r_fo.js";import"./Box-YHUhwqyo.js";import"./AlertTitle-Bu5lgKMW.js";import"./Typography-DtJqdX6z.js";import"./index-0WGr6q2T.js";import"./ClickAwayListener-CxHe6jg0.js";import"./getReactElementRef-Bwg-tl0o.js";import"./index-DkDu69A9.js";import"./index-D7gNMrVA.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BHUIcvLI.js";import"./Tooltip-BCfoCJ3N.js";import"./index-O2jcSvk0.js";import"./useControlled-DAZ0ami4.js";import"./Popper-DFM4tJbE.js";import"./Button-CS10Dyhh.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-asVn40sM.js";import"./QueryClientProvider-BKyAf0tB.js";import"./Link-CW9915Wz.js";import"./Collapse-CAJ9rrC3.js";import"./_baseUniq-CWmT4RJi.js";import"./_Uint8Array-CtkICx9Q.js";import"./isArray-DuW2GSwC.js";import"./_getTag-CAf2_jcI.js";import"./isEqual-C6FBY3EC.js";import"./merge-BxJp-ABZ.js";import"./_initCloneObject-ChSHVE82.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-VmFZ3hHI.js";import"./inputBaseClasses-C3GEILXL.js";import"./calculateFriendlyFileSize-DIzU-93O.js";import"./CheckCircleTwoTone-BYuWZBzO.js";import"./InfoTwoTone-DEsyfpaf.js";import"./useMutation-SVgm8zyG.js";import"./dayjs.min-hV4VZGRn.js";import"./chunk-AYJ5UCUI-CMn21yAC.js";import"./cloneDeep-DjK-kExa.js";import"./Skeleton-DPHcOcIo.js";import"./SkeletonButton-ChAXZehX.js";import"./SkeletonInlineBlock-BLwAhWS1.js";import"./SkeletonTable-z_8UDWH0.js";import"./times-2zdpWNkZ.js";import"./toInteger-CaIb17-K.js";import"./isSymbol-BHVEBhal.js";import"./SkeletonParagraph-f8YmYHFh.js";import"./MarkdownSynapse-DJEOnPTw.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
