import{j as i}from"./jsx-runtime-D_zvdyIk.js";import{W as m,a as t}from"./WizardChoiceButton-Bh7PdcDW.js";import{I as l}from"./LayersTwoTone-BYZU2mOt.js";import{F as d}from"./IconSvg-D5-d0Q_g.js";import"./Box-B-z2Wn3T.js";import"./createTheme-Bm_LWWer.js";import"./index-4rQWsg7w.js";import"./iframe-CcbFInBH.js";import"./useTheme-BaHpITS4.js";import"./extendSxProp-D4U4cllC.js";import"./spreadSx-CwcO6WA9.js";import"./Typography-zf9xiWio.js";import"./index-DL_3F7fc.js";import"./DefaultPropsProvider-Cc0Pr5n3.js";import"./createSimplePaletteValueFilter-DE9cDTR6.js";import"./createSvgIcon-CvtTfXSY.js";import"./useTheme-BKqn0RbP.js";import"./Tooltip-BTFCh_bD.js";import"./index-Bg_aIjO4.js";import"./useSlot-DbLKugs_.js";import"./useForkRef-BwCYdf5Y.js";import"./useTimeout-B7hTnc20.js";import"./useControlled-DYO_k7w0.js";import"./getReactElementRef-BaFO5tC3.js";import"./index-BMgcitHH.js";import"./index-CzdvnrNd.js";import"./Grow-CdIC-B9C.js";import"./Popper-DG6dlf9c.js";import"./ownerDocument-DW-IO8s5.js";import"./isFocusVisible-B8k4qzLc.js";import"./ContentCopyTwoTone-BKXd2MnU.js";import"./HelpOutlineTwoTone-B3H-KaQk.js";import"./ErrorOutlined-CFhW5FB7.js";import"./GetAppTwoTone-Bj_m7iYf.js";import"./InfoOutlined-BLQ6eWge.js";import"./PhoneTwoTone-BkQ5ODHN.js";import"./DeleteTwoTone-BV7BWAqf.js";import"./CheckCircleTwoTone-CylHzlFL.js";const Y={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},e={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),i.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:i.jsx(l,{fontSize:"large"})}),i.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:i.jsx(d,{fontSize:"large"})})]})}};var r,s,n;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const Z=["Basic","WithIcons"];export{e as Basic,o as WithIcons,Z as __namedExportsOrder,Y as default};
