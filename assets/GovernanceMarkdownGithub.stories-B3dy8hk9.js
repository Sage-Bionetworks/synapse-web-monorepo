import{u as o}from"./VerificationSubmission-BDh1zA9f.js";import{g as u,bd as d,be as l,B as f,bf as S,M as O}from"./useFiles-BM92AjlG.js";import"./StringUtils-C95LMFI-.js";import{h as i,H as n}from"./index-BarfV7Mg.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-NAi34YRA.js";import"./SynapseConstants-CSQZ8LdY.js";import"./OrientationBanner-B9vK_fOZ.js";import"./index-D-UvISqL.js";import"./index-Df_FdJl-.js";import"./iframe-DsTvFT6Q.js";import"./spreadSx-CwcO6WA9.js";import"./react-C6TP9ok4.js";import"./FullWidthAlert-Bu31KEHU.js";import"./Alert-BfEFHSpf.js";import"./createTheme-B4cUhGob.js";import"./DefaultPropsProvider-9yDVx9dT.js";import"./useSlot-DHoMpVG_.js";import"./useForkRef-C37ywrok.js";import"./createSimplePaletteValueFilter-CmcCRKj9.js";import"./createSvgIcon-Bx2dCIbF.js";import"./Close-DNuwum3q.js";import"./IconButton-BXTZx6ON.js";import"./useTimeout-B-uQAk7X.js";import"./ButtonBase-COtAfe0-.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-D859Rgox.js";import"./Paper-Cf1kvPYs.js";import"./useTheme-BCgVrM8U.js";import"./useTheme-BNWJT91L.js";import"./Stack-BnE5AZPR.js";import"./useThemeProps-Di9ozye9.js";import"./getThemeProps-DDS8aWDb.js";import"./extendSxProp-DGFMAjvY.js";import"./Box-CWKxjGZN.js";import"./AlertTitle-BrquGJFX.js";import"./Typography-DzNtFqki.js";import"./index-DvmyVfCT.js";import"./ClickAwayListener-CFjnMEqm.js";import"./getReactElementRef-q6KXtwDj.js";import"./index-LtSKZm9d.js";import"./index-Bj500_V6.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-CSPbf5zw.js";import"./Tooltip-CIfcREkL.js";import"./index-Bc5ECFUa.js";import"./useControlled-47FWtaLW.js";import"./Popper-DFTLUIEO.js";import"./Button-UK5ni8CN.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-BWAW2VGJ.js";import"./QueryClientProvider-OtgzlTZ3.js";import"./Link-DFZaBwQ-.js";import"./Collapse-BS71YIGZ.js";import"./_baseUniq-CmLy7hQ9.js";import"./_Uint8Array-Tgc0IKEL.js";import"./isArray-CCt3-GU-.js";import"./_getTag-DDx0ez5Y.js";import"./isEqual-BrMooGWr.js";import"./noop-DX6rZLP_.js";import"./merge-DiyJyzhC.js";import"./_initCloneObject-CwDTQz61.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-BnQ6e4Q4.js";import"./inputBaseClasses-C0c-AyIl.js";import"./calculateFriendlyFileSize-CvjtSy_b.js";import"./CheckCircleTwoTone-gDseQqaM.js";import"./InfoTwoTone-DfKGI0-a.js";import"./useMutation-Busowt2v.js";import"./dayjs.min-DK0WmqxW.js";import"./chunk-AYJ5UCUI-CSRoxWwe.js";import"./cloneDeep-CNI9lROB.js";import"./Skeleton-Da4ynUFT.js";import"./SkeletonButton-B6SlV21H.js";import"./SkeletonInlineBlock-CIzVl0ZL.js";import"./SkeletonTable-B3Zj-4ZO.js";import"./times-AS42JGk1.js";import"./toInteger-TYVSzmyI.js";import"./isSymbol-BaBXEl4F.js";import"./SkeletonParagraph-CM-XT7Cq.js";import"./MarkdownSynapse-BXS9wRRN.js";import"./Container-CfW1pkt0.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Qr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Xr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Xr as __namedExportsOrder,Qr as default};
