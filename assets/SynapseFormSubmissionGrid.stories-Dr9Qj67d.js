import{j as l}from"./jsx-runtime-C5NxHwQJ.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-D89_G4Sx.js";import{aF as S,M as a}from"./useFiles-D-tEf01x.js";import"./OrientationBanner-Zj6GYtpt.js";import"./index-BUyK93rt.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-DfcU1Z6Q.js";import{S as E}from"./SynapseFormSubmissionGrid-Dv9lqCAk.js";import"./mockSchema-COBxdwiP.js";import"./mockFileEntity-BGqN4CI1.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-Sf9IpXXS.js";import"./mockTeam-DCdj6i_V.js";import"./SynapseConstants-C_bGYTo-.js";import"./uniqueId-C16617v_.js";import"./toString-CBq9Xfpt.js";import"./isObjectLike-DDkRrBm5.js";import"./iframe-DoZ_YKgg.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BuSMiGT1.js";import"./times-Ct11bBHV.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-fyBvN-v7.js";import"./asyncJobHandlers-D4Kh_DiZ.js";import"./BasicMockedCrudService-DxCP-xDv.js";import"./cloneDeep-Da0gCOXW.js";import"./_Uint8Array-wiAQVV7X.js";import"./_initCloneObject-DiKtCs9l.js";import"./_getTag-DLjbrX0g.js";import"./isEqual-Wn9P4mtf.js";import"./_baseIsEqual-4d5Gfa3E.js";import"./mockAnnotationColumns-BkY82Ati.js";import"./tableQueryHandlers-Alty6E2o.js";import"./omit-BHzP3fQ9.js";import"./_baseGet-C9UlpXkI.js";import"./isNil-BApmFmY-.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BLrCfc5g.js";import"./_baseFlatten-yv68YIFP.js";import"./pick-cKIfmTDy.js";import"./_baseSet-BCfAql6R.js";import"./hasIn-BT7hpyqg.js";import"./accessRequirementAclHandlers-BjFGdSME.js";import"./mockAccessRequirementAcls-JE_sJgM9.js";import"./mockAccessRequirements-BDLUV4gC.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-7_Kq4FMT.js";import"./wikiHandlers-xIIEVQDq.js";import"./mockWikiPageKey-BG4esDsG.js";import"./teamHandlers-C8XMcDnP.js";import"./dataAccessRequestHandlers-r45EV4Bp.js";import"./MockResearchProject-DICQMbBW.js";import"./mock_discussion-CyD8Gf9B.js";import"./fakerUtils-umcWT4Kc.js";import"./index-BMSd9Jwx.js";import"./mockTableEntity-CcsOS_xS.js";import"./mockFileEntityACLVariants-7tSt8jfg.js";import"./entityHandlers-Dt9TvD1K.js";import"./mockEntity-bISPvJ9h.js";import"./mockEvaluationQueue-kuiE4ytj.js";import"./featureFlagHandlers-Cr54lEGE.js";import"./fileHandlers-C8UiPzal.js";import"./personalAccessTokenHandlers-Cnq9wlJu.js";import"./researchProjectHandlers-B2AImC4Q.js";import"./resetTwoFactorAuthHandlers-pQ19RRyF.js";import"./userProfileHandlers-DYtgR6-u.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-7a61cq35.js";import"./FullWidthAlert-BLDoSU5L.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-5tSKDGIe.js";import"./createTheme-BstmEjP7.js";import"./resolveComponentProps-DH6tbKzS.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-Smo6uH9y.js";import"./createSvgIcon-D1O3_eeJ.js";import"./DefaultPropsProvider-hOkQc_mp.js";import"./Close-Dt1xiFQr.js";import"./IconButton-BqTcpupZ.js";import"./ButtonBase-DctD_-B6.js";import"./useTimeout-BNReSQPt.js";import"./useIsFocusVisible-Dstz45Fm.js";import"./useEventCallback-BLz-FZAQ.js";import"./Paper-EWl2C2Zt.js";import"./Stack-_cgazAZA.js";import"./getThemeProps-C7PoPghj.js";import"./useTheme-DK5UNgIg.js";import"./Box-C7L6jE12.js";import"./AlertTitle-CcHfDa-c.js";import"./Typography-DIK0enh5.js";import"./useTheme--0iZh6DT.js";import"./Grow-zr8OcKR_.js";import"./index-CC0zv1VF.js";import"./utils-Br22oxv3.js";import"./ClickAwayListener-D7jkdGQl.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-AnolE66l.js";import"./index-BqVfUhDp.js";import"./useControlled-D2kQt8S5.js";import"./useId-v1fSL2EP.js";import"./Popper-BDuOEhJZ.js";import"./Button-DTYZ_D3f.js";import"./useQuery-B6tctlGJ.js";import"./utils-7QzzGIiA.js";import"./Link-DXfrR-Pc.js";import"./Collapse-DPQM8v_6.js";import"./tinycolor-Begke6kS.js";import"./Fade-BqacDeSR.js";import"./Skeleton-Dw41BVrt.js";import"./inputBaseClasses-CKfM9y8S.js";import"./calculateFriendlyFileSize-CPwr_L4J.js";import"./CheckCircleTwoTone-B7PYorgw.js";import"./InfoTwoTone-CeEpykZw.js";import"./useMutation-BCa3Utcu.js";import"./dayjs.min-BLC6IB2g.js";import"./chunk-AYJ5UCUI-DNC6mvIs.js";import"./index-BVwZc75m.js";import"./react-CACuwhgC.js";import"./util-Ch8DlAra.js";import"./WideButton-CBoRa_py.js";import"./DeleteTwoTone-DqkGnQNF.js";import"./createSvgIcon-CpwI-R1F.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-BFQKeAZf.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-Bn-iaAnr.js";import"./DialogBase-CBwYh31X.js";import"./Close-Cu34o_rj.js";import"./HelpPopover-CP2EiHnM.js";import"./MarkdownPopover-kOz3s_-E.js";import"./LightTooltip-jtqdxQLn.js";import"./MarkdownSynapse-DufiYEt9.js";import"./SkeletonButton-DHwyCCnM.js";import"./SkeletonInlineBlock-PxE0qGs3.js";import"./SkeletonTable-BOWzMBTc.js";import"./SkeletonParagraph-GJkHu-UZ.js";import"./HelpOutlineTwoTone-Ir9QTyWy.js";import"./DialogTitle-DErl80XG.js";import"./DialogContent-Bd1Yyhba.js";import"./Dialog-CkGumPIm.js";import"./Modal-Baq_TtA9.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-CvTAHWnw.js";import"./WarningDialog-igPskE2M.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
