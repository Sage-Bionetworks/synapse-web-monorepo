import{g as f}from"./userProfileHandlers-Dj1s_RMZ.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-iVsE9X0U.js";import{A}from"./AccountLevelBadges-otrCOjV_.js";import"./VerificationSubmission-16RBrwfH.js";import"./index-Dar_Knfz.js";import"./iframe-t2wJdwGi.js";import"./mockEntity-QSdrAjO2.js";import"./mockFileEntity-ZW2vF9sa.js";import"./StringUtils-B_EIkN_W.js";import"./mock_file_handle-t2fDWYxy.js";import"./mockProject-CCPnH3Iy.js";import"./mockTeam-BkTkorlr.js";import"./SynapseConstants-BAmU4k0g.js";import"./OrientationBanner-B6xN5fSu.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-B5Mtlgxp.js";import"./index-CLCXOIcb.js";import"./spreadSx-CwcO6WA9.js";import"./react-BjskdS-M.js";import"./FullWidthAlert-Dp0jOaAM.js";import"./Alert-CozJnD--.js";import"./createTheme-DWyGdLde.js";import"./DefaultPropsProvider-BVUiVDJJ.js";import"./useSlot-8Tg8yxZz.js";import"./useForkRef-C5Kxhg9M.js";import"./createSimplePaletteValueFilter-Bu6Rmtji.js";import"./createSvgIcon-BCKLSsq2.js";import"./Close-LtSBt6wu.js";import"./IconButton-BfYR4OmI.js";import"./useTimeout-HoSzxHZJ.js";import"./ButtonBase-DRt0AA36.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-fNOaoY57.js";import"./Paper-COBJrFNP.js";import"./useTheme-gTAEZSvX.js";import"./useTheme-KE0mEYul.js";import"./Stack-dOR7TZbk.js";import"./extendSxProp-uQt30Vh3.js";import"./getThemeProps-CevicY1j.js";import"./Box-B5UNecaX.js";import"./AlertTitle-C1Vcfseh.js";import"./Typography-Blc4WWJ7.js";import"./index-SzTH32SF.js";import"./ClickAwayListener-0MTpQFe5.js";import"./getReactElementRef-DkYC1Yp6.js";import"./index-CMtfxCZX.js";import"./index-BEXi3mBJ.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-4kvSm4pD.js";import"./Tooltip-Byzt_xyJ.js";import"./index-CGXlNM3G.js";import"./useControlled-IASeHKHZ.js";import"./Popper-B3d9BW8L.js";import"./Button-wLcILYxh.js";import"./uniqueId-C3BccmJG.js";import"./toString-oLRccSQr.js";import"./isArray-DwZDKjpx.js";import"./isSymbol-D1Bo8OiP.js";import"./times-DsswOknr.js";import"./_Uint8Array-ChkAt42x.js";import"./identity-DKeuBCMA.js";import"./toInteger-Y38Eiyfl.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-CM4VhkzW.js";import"./QueryClientProvider-B-3FWRUH.js";import"./Link-D_PJAlIU.js";import"./Collapse-3PYCLEiX.js";import"./_baseUniq-CZpoU5rd.js";import"./_getTag-BPYr6ToM.js";import"./isEqual-CBEqrATC.js";import"./merge-D_lQC9Yt.js";import"./_initCloneObject-Cm5ry7Op.js";import"./tinycolor-Begke6kS.js";import"./Fade-CtBIba13.js";import"./inputBaseClasses-jpAddTzP.js";import"./calculateFriendlyFileSize-Ca97T7pk.js";import"./CheckCircleTwoTone-C7LPXUoS.js";import"./InfoTwoTone-CRl0Z4Gv.js";import"./useMutation-C3utT0DK.js";import"./dayjs.min-C_DSNH2k.js";import"./chunk-AYJ5UCUI-CZZfxgfF.js";import"./cloneDeep-KwGSFuPV.js";import"./Skeleton-CN3n86wp.js";import"./AccountLevelBadge-BrphD6iZ.js";import"./Card-D7hFMSrF.js";import"./ConfirmationDialog-Bsb3PUbB.js";import"./DialogBase-CTBpY7n3.js";import"./Close-CFtJsjwA.js";import"./HelpPopover-dN-kfkzB.js";import"./MarkdownPopover-E7tlE14x.js";import"./LightTooltip-DjlCwnsO.js";import"./MarkdownSynapse-Bwt4uhRc.js";import"./SkeletonButton-D8bUmaQm.js";import"./SkeletonInlineBlock-CtPRolRR.js";import"./SkeletonTable-BvxJFe4A.js";import"./SkeletonParagraph-DhyOZp5y.js";import"./HelpOutlineTwoTone-TO5aOLpF.js";import"./DialogTitle-C2O1lZ6g.js";import"./DialogContent-D3AbiaGZ.js";import"./Dialog-CjCNOEJN.js";import"./Modal-GgoNUS8S.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-Ccf2ayc2.js";import"./LoadingScreen-jSH06YNk.js";import"./LinearProgress-DaGCoGu7.js";import"./ToastMessage-BL2WN_TC.js";import"./CSSTransition-UMdUorsW.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
