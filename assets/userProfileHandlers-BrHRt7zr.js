import{ad as U,ae as m,af as E,ag as $,ah as S,ai as _,aj as L,ak as N,al as g}from"./useFiles-D-hdekB1.js";import{T as p}from"./VerificationSubmission-BnFne12N.js";import{l as i}from"./index-1859C49g.js";import{b as R}from"./mockEntity-CVmwIR4t.js";import{m as A,c as y,d as D,e as l,f as d,g as G}from"./mock_user_profile-CyZOyNQ0.js";import{P as f,a as c,j as I}from"./SynapseConstants-dY7DQPl6.js";import{m as H}from"./mockTeam-Bk-2ByHV.js";const h={id:f,userProfile:null,userBundle:null,userGroupHeader:{ownerId:f.toString(),userName:"PUBLIC",isIndividual:!1}},C={id:c,userProfile:null,userBundle:null,userGroupHeader:{ownerId:c.toString(),userName:"AUTHENTICATED_USERS",isIndividual:!1}},j={id:I,userProfile:null,userBundle:null,userGroupHeader:{ownerId:String(I),firstName:"Anonymous",lastName:"",userName:"anonymous",isIndividual:!0}},P=[A,y,D,...H,C,h,j],M=n=>[i.rest.get(`${n}${U(":id")}`,async(t,r,s)=>{let e=404,o={reason:`Mock Service worker could not find a user profile with ID ${t.params.id}`};const a=l.find(u=>u.id.toString()===t.params.id);return a&&a.userProfile&&(o=a.userProfile,e=200),r(s.status(e),s.json(o))}),i.rest.get(`${n}${m}`,async(t,r,s)=>{const e=G;return r(s.status(200),s.json(e))}),i.rest.get(`${n}${E}`,async(t,r,s)=>{const e=d;return r(s.status(200),s.json(e))}),i.rest.get(`${n}${$(":id")}`,async(t,r,s)=>{let e=404,o={reason:`Mock Service worker could not find a user bundle with ID ${t.params.id}`};const a=l.find(u=>u.id.toString()===t.params.id);return a&&a.userBundle&&(o=a.userBundle,e=200),r(s.status(e),s.json(o))}),i.rest.get(`${n}${S}`,async(t,r,s)=>r(s.status(200),s.json(R))),i.rest.get(`${n}${_}`,async(t,r,s)=>{const e=t.url.searchParams.get("ids").split(","),o={children:P.filter(a=>e.includes(a.id.toString())).map(a=>a.userGroupHeader)};return r(s.status(200),s.json(o))}),i.rest.post(`${n}${m}`,async(t,r,s)=>{const e=(await t.json()).list,o={list:l.filter(a=>e.includes(a.id.toString())).map(a=>a.userProfile).filter(a=>a!=null)};return r(s.status(200),s.json(o))}),i.rest.get(`${n}${L}`,async(t,r,s)=>{const e=(t.url.searchParams.get("prefix")??"").toLowerCase(),o=t.url.searchParams.get("typeFilter"),a={children:P.filter(u=>!o||o===p.ALL?!0:o===p.USERS_ONLY?u.userGroupHeader.isIndividual:!u.userGroupHeader.isIndividual).filter(u=>u.userGroupHeader.userName.toLowerCase().startsWith(e)||(u.userGroupHeader.firstName||"").toLowerCase().startsWith(e)||(u.userGroupHeader.displayName||"").toLowerCase().startsWith(e)||(u.userGroupHeader.lastName||"").toLowerCase().startsWith(e)).map(u=>u.userGroupHeader)};return r(s.status(200),s.json(a))}),i.rest.get(`${n}${N(":userId")}`,async(t,r,s)=>r(s.status(404),s.json({reason:"user has no profile image"}))),i.rest.get(`${n}${g}`,async(t,r,s)=>{var e;return r(s.status(200),s.json({email:(e=d.userProfile)==null?void 0:e.email}))}),i.rest.get(`${n}/auth/v1/2fa`,async(t,r,s)=>{const e={status:"ENABLED"};return r(s.status(200),s.json(e))})];function W(n,t,r){return i.rest.get(`${n}${E}`,async(s,e,o)=>{const u={...d,isCertified:t,isVerified:r};return e(o.status(200),o.json(u))})}export{W as a,M as g};
