import{v as o}from"./VerificationSubmission-CDh9xETu.js";import{g as u,be as d,bf as l,B as f,bg as S,M as O}from"./useFiles-LypvG-sj.js";import"./StringUtils-CsrYFBZo.js";import{h as i,H as n}from"./index-Ba0Ez_aF.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-xtD4sH3W.js";import"./SynapseConstants-CScskaqw.js";import"./OrientationBanner-BMZuIlKD.js";import"./index-B4Tfv9JA.js";import"./index-DrlcO71a.js";import"./iframe-BS54MGHI.js";import"./spreadSx-CwcO6WA9.js";import"./react-yogpPmFf.js";import"./FullWidthAlert-CH-cCpej.js";import"./Alert-CekN_gAj.js";import"./createTheme-CQKuB-_w.js";import"./DefaultPropsProvider-BHDhaDyJ.js";import"./useSlot-C0OwMX66.js";import"./useForkRef-B8jEnRHG.js";import"./createSimplePaletteValueFilter--mtY5h6t.js";import"./createSvgIcon-BE2wnaae.js";import"./Close-CitnM-9o.js";import"./IconButton-Cy1b-xZD.js";import"./useTimeout-BEy-pgWT.js";import"./ButtonBase-B3T3xak3.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-m8ZQtMFl.js";import"./Paper-B8xuQxDa.js";import"./useTheme-BZDRc6_Y.js";import"./useTheme-CC_pEuHP.js";import"./Stack-B9Gh8FGk.js";import"./extendSxProp-X6PGK1e5.js";import"./getThemeProps-DOng6F_8.js";import"./Box-CBr-jezS.js";import"./AlertTitle-Bpgzqi1b.js";import"./Typography-z3tfaaqZ.js";import"./index-Cxa_fUkM.js";import"./ClickAwayListener-CL0a72jO.js";import"./getReactElementRef-DIEgKyGp.js";import"./index-CqbrU4vx.js";import"./index-D1_q4pmj.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-nNbLLGck.js";import"./Tooltip-CV3o7Hpq.js";import"./index-DsI7_zIK.js";import"./useControlled-CH2X2Kjk.js";import"./Popper-DlOgYa4m.js";import"./Button-B3gyn6j9.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-BivmK9vh.js";import"./QueryClientProvider-CmwllrS-.js";import"./Link-BPw2xZaR.js";import"./Collapse-uBNTtc7v.js";import"./_baseUniq-CCe_IvzI.js";import"./_Uint8Array-2kJvgqyS.js";import"./isArray-ChU27Tqx.js";import"./_getTag-Dw9hviqI.js";import"./isEqual-DNLmBAqh.js";import"./merge-BalVbPlS.js";import"./_initCloneObject-Cw-AraIh.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-B1PMJSO0.js";import"./inputBaseClasses-Csi6HknA.js";import"./calculateFriendlyFileSize-cjExqW_T.js";import"./CheckCircleTwoTone-CElUS0wl.js";import"./InfoTwoTone-C66I5sSc.js";import"./useMutation-tX66Xwvj.js";import"./dayjs.min-DB2WO_9H.js";import"./chunk-AYJ5UCUI-BaGfju-u.js";import"./cloneDeep-ab1FlSuT.js";import"./Skeleton-C8MjlDZQ.js";import"./SkeletonButton-DgxzUQPq.js";import"./SkeletonInlineBlock-3sXfglcG.js";import"./SkeletonTable-Bqv3KxsX.js";import"./times-CSUnDT6N.js";import"./toInteger-D-4gdyLJ.js";import"./isSymbol-BfAfjnV0.js";import"./SkeletonParagraph-A6NKsw3v.js";import"./MarkdownSynapse-DIuNzvad.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
