import{j as l}from"./jsx-runtime-Zazi817E.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-BI5WaB2N.js";import{g as T}from"./handlers-HwwXdU__.js";import{aD as S,M as a}from"./useFiles-D6-60VlG.js";import"./OrientationBanner-Brj_6R5O.js";import"./index-D-a7w8th.js";import"./StringUtils-DN6u4g4A.js";import{l as _}from"./index-CQUlPutw.js";import{S as E}from"./SynapseFormSubmissionGrid-BoShBHjc.js";import"./mockSchema-CZX0UpV1.js";import"./mockFileEntity-CWapNEq8.js";import"./mock_file_handle-CFTRkxcS.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-CCwc49Q9.js";import"./mockTeam-NFVoV_OW.js";import"./SynapseConstants-D8_u4KCY.js";import"./uniqueId-DC0bf74h.js";import"./toString-M4CFdBjl.js";import"./isObjectLike-tE4xW328.js";import"./iframe-DqOO6GmJ.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-Am7Ne-JG.js";import"./times-CFGa3Lj9.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-FLMpp8CB.js";import"./asyncJobHandlers-CbZnqRT3.js";import"./BasicMockedCrudService-CrVXxCBX.js";import"./cloneDeep-BMoExRqW.js";import"./_Uint8Array-CDIqxLcW.js";import"./_initCloneObject-DXlJBdkp.js";import"./_getTag-BVzBaU_M.js";import"./isEqual-B5SJeZHH.js";import"./_baseIsEqual-BwEpiinV.js";import"./mockAnnotationColumns-iJHi-KPf.js";import"./tableQueryHandlers-DzVhstu2.js";import"./omit-_tJdy3Ts.js";import"./_baseGet-WsZRfWPu.js";import"./isNil-DNbb0ZTY.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-CAy_Mw7I.js";import"./_baseFlatten--fOunrfw.js";import"./pick-cn4_c3mZ.js";import"./_baseSet-BSFK6kSz.js";import"./hasIn-oB_bn4YE.js";import"./accessRequirementAclHandlers-D4vFtWoO.js";import"./mockAccessRequirementAcls-Bt7REfPB.js";import"./mockAccessRequirements-BuqvmT0Q.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CgjxDh2Q.js";import"./accessRequirementHandlers-CWsdn7cB.js";import"./wikiHandlers-BcbgzpRt.js";import"./mockWikiPageKey-CWbxUJWH.js";import"./teamHandlers-hNju5AvH.js";import"./dataAccessRequestHandlers-DtpW9qW-.js";import"./MockResearchProject-BsF3UkFS.js";import"./mock_discussion-CLf6v1Uu.js";import"./fakerUtils-DXhV4sYb.js";import"./index-CIWRHhIN.js";import"./mockTableEntity-D8wq8GNs.js";import"./mockFileEntityACLVariants-_iAnnYr2.js";import"./entityHandlers-BTRYvGDP.js";import"./mockEntity-DEJpMf96.js";import"./mockEvaluationQueue-DVD-2KZD.js";import"./featureFlagHandlers-Cz6rTl4c.js";import"./fileHandlers-Dqm09qOb.js";import"./personalAccessTokenHandlers-DQq9cZeF.js";import"./researchProjectHandlers-X8WnyTz2.js";import"./resetTwoFactorAuthHandlers-BAMILDBW.js";import"./userProfileHandlers-D5EHYnG6.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-KaYi-H8Q.js";import"./FullWidthAlert-DKf9_wpb.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-CMSBW_9_.js";import"./createTheme-BKO-I-SA.js";import"./resolveComponentProps-BCYM0ghF.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-BoKjB57t.js";import"./createSvgIcon-5Cw73NIJ.js";import"./DefaultPropsProvider-CMeWClB2.js";import"./Close-CKICGMRN.js";import"./IconButton-D7fD1kT1.js";import"./ButtonBase-BlnkqX4m.js";import"./useTimeout-NcCkJi-r.js";import"./useIsFocusVisible-BEvJgvyZ.js";import"./useEventCallback-CL3MT4n3.js";import"./Paper-DH45r-wy.js";import"./Stack-C28MH_Nj.js";import"./getThemeProps-RwE7Dgdk.js";import"./useTheme-BhctGpst.js";import"./Box-erjX2_Pn.js";import"./AlertTitle-DbbLAA4Q.js";import"./Typography-0amIDJ13.js";import"./useTheme-BRe1u070.js";import"./Grow-Cu1K5fdd.js";import"./index-D8Tj0NKP.js";import"./utils-CmeGA0Mj.js";import"./ClickAwayListener-susZPs9A.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BJj93p-l.js";import"./index-D-NA5Lgs.js";import"./useControlled-Cz3AFNPb.js";import"./useId-_0THTgRa.js";import"./Popper-Dwod_RPU.js";import"./Button-CxroDze3.js";import"./useQuery-B5EBPYQk.js";import"./utils-pBpmfRy2.js";import"./Link-C8A1juNu.js";import"./Collapse-B2ReICNn.js";import"./tinycolor-Begke6kS.js";import"./Fade-Do1oESZB.js";import"./Skeleton-QtVV7vBl.js";import"./inputBaseClasses-DvVPbDNa.js";import"./calculateFriendlyFileSize-DFT7G6pD.js";import"./CheckCircleTwoTone-CqmyG6lC.js";import"./InfoTwoTone-B-oZrgFl.js";import"./mutation-COF64AgK.js";import"./dayjs.min-DoL1Vt0J.js";import"./chunk-AYJ5UCUI-DFKlZx2o.js";import"./index-B9uCcEa8.js";import"./react-Drm6sDLN.js";import"./util-CetcjDgn.js";import"./WideButton-DGzC6_RO.js";import"./DeleteTwoTone-CtrY932-.js";import"./createSvgIcon-QJougqaI.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-DRGOqrBo.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-BF2GFdWi.js";import"./DialogBase-BhFmzTjV.js";import"./Close-B3d3-BqQ.js";import"./HelpPopover-DrvMu2fO.js";import"./MarkdownPopover-DnsKC0RT.js";import"./LightTooltip-CBUV6sAS.js";import"./MarkdownSynapse-Bnfmdi6a.js";import"./useMutation-DpxPDMS3.js";import"./SkeletonButton-jIdDjQ_c.js";import"./SkeletonInlineBlock-D-TogWgu.js";import"./SkeletonTable-CLuQFGKy.js";import"./SkeletonParagraph-Y3NkBtnG.js";import"./HelpOutlineTwoTone-DsyB9IBc.js";import"./DialogTitle-D17zNWFS.js";import"./DialogContent-BQRE0acY.js";import"./Dialog-DeB7Bp2b.js";import"./Modal-npDPCeSf.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-BcaxFsEn.js";import"./WarningDialog-CJUWolkb.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},To={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const _o=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,_o as __namedExportsOrder,To as default};
