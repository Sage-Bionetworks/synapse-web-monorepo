import{g as E}from"./handlers-BGrwRyym.js";import{g as j,B as I,M as N}from"./useFiles-DxC7nl3D.js";import{j as t}from"./jsx-runtime-O8TkLtV5.js";import{a as h,b as R}from"./useSubscription-CKWI3BFI.js";import{p as s,m as D}from"./VerificationSubmission-DKyendrM.js";import{r as b}from"./index-BdL7riv0.js";import{D as F}from"./DropdownSelect-BuZeRfLD.js";import"./StringUtils-BcSmk1fX.js";import"./OrientationBanner-BKv79mXg.js";import{u as v}from"./useEntity-S9M2kYZ6.js";import{c as M}from"./useForum-BFjVKmdt.js";import{T as P}from"./Topic-BfG79mFv.js";import{c as C}from"./useThread-DMyPBWoF.js";import{B as k}from"./Box-CT9i0kfz.js";import{T as A,a as T}from"./Tabs-C9Ft4kW6.js";import{S as B}from"./Stack-CDbBDHOE.js";import{B as $}from"./Button-wemfiAHD.js";import"./mockSchema-XHknAIpL.js";import"./mockFileEntity-BDM2_Iz-.js";import"./mock_file_handle-qAzg5fnb.js";import"./mock_user_profile-CCzWeUML.js";import"./mockProject-C3i3aWp7.js";import"./mockTeam-pJMe65Z8.js";import"./SynapseConstants-CXTFm1VN.js";import"./uniqueId-RZ_GTOkZ.js";import"./toString-BYgR7s65.js";import"./isObjectLike-BoiNzNpU.js";import"./iframe-DBj53tT_.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-Cn0ViDdg.js";import"./times-aaBD3S_o.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-C_YyRNT4.js";import"./asyncJobHandlers-DbnwoJb9.js";import"./index-CUc2wSZ3.js";import"./util-By0lvaLS.js";import"./BasicMockedCrudService-c-tdiWVW.js";import"./cloneDeep-DkNLZXx1.js";import"./_Uint8Array-BBVtwR3V.js";import"./_initCloneObject-B3MBXCb2.js";import"./_getTag-BlJpn61a.js";import"./isEqual-BFeuiteO.js";import"./mockAnnotationColumns-Cze8V_ms.js";import"./tableQueryHandlers-qWUKmR0e.js";import"./omit-CTZDvSH2.js";import"./_baseGet-C-gpHWNt.js";import"./isNil-D60xMXao.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BlmsI-Yg.js";import"./_baseFlatten-DD99D-pH.js";import"./pick-DTafkD-F.js";import"./_baseSet-vU7JnOjY.js";import"./hasIn-BmJYi-UC.js";import"./accessRequirementAclHandlers-DJIbxlvD.js";import"./mockAccessRequirementAcls-CjZU0lgM.js";import"./mockAccessRequirements-BkIoC1HG.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CfZ4orwO.js";import"./accessRequirementHandlers-1EjgP90S.js";import"./wikiHandlers-CaDesTM7.js";import"./mockWikiPageKey-BVAL1UpN.js";import"./teamHandlers-BcWXbm55.js";import"./dataAccessRequestHandlers-IUvoNc33.js";import"./MockResearchProject-BMdM8gSz.js";import"./mock_discussion-B-w8oxzW.js";import"./fakerUtils-Dmnl8Jry.js";import"./index-B6_0lac8.js";import"./mockTableEntity-BkE8RPD1.js";import"./mockFileEntityACLVariants-s1EY4ahq.js";import"./entityHandlers-J_BSVdnN.js";import"./mockEntity-C_s4KADy.js";import"./mockEvaluationQueue-CczmedSD.js";import"./featureFlagHandlers-8ZzS0I2Q.js";import"./fileHandlers-D_eYwX1-.js";import"./personalAccessTokenHandlers-C-n5Yb1j.js";import"./researchProjectHandlers-D0d8RwwP.js";import"./resetTwoFactorAuthHandlers-ZVWDhAsH.js";import"./userProfileHandlers-iawE2NtN.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useTimeout-CSNp5plk.js";import"./FullWidthAlert-BF1VMUNH.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-DM7UWADG.js";import"./createTheme-Bv5mYTu1.js";import"./DefaultPropsProvider-BEcU5m4O.js";import"./useSlot-DzGficUl.js";import"./useForkRef-edQmTpSu.js";import"./createSimplePaletteValueFilter-CsQijxTZ.js";import"./createSvgIcon-BvN6BTm-.js";import"./Close-BzD5K2sc.js";import"./IconButton-22JwbE8M.js";import"./ButtonBase-CxbkP8LH.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-D4ntz8sa.js";import"./Paper-D4hJvkH0.js";import"./useTheme-BkQG1Vvc.js";import"./useTheme-DY_86peL.js";import"./AlertTitle-G6vHreez.js";import"./Typography-BqmMHzok.js";import"./index-CsB3u6p3.js";import"./extendSxProp-DrqXgrYI.js";import"./ClickAwayListener-D1RUcE6c.js";import"./getReactElementRef-CWFCGlr1.js";import"./index-D_l0Au_c.js";import"./index-BWcaaVS5.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DzQd8rZb.js";import"./Tooltip-D_X6aErI.js";import"./index-DoS5ZV3O.js";import"./useControlled-BtOEwbLw.js";import"./Popper-nnkyRMWB.js";import"./useQuery-CkCu-w-q.js";import"./utils-Cs3LXMa6.js";import"./Link-Dng4sksw.js";import"./Collapse-BRjmE_en.js";import"./tinycolor-Begke6kS.js";import"./Fade-BtlJADv1.js";import"./inputBaseClasses-CAWV7teM.js";import"./calculateFriendlyFileSize-DhqizIil.js";import"./CheckCircleTwoTone-BjvZNhmr.js";import"./InfoTwoTone-DhOnXhJt.js";import"./useMutation-CweL2dWa.js";import"./dayjs.min-7Nt2QYG2.js";import"./chunk-AYJ5UCUI-Bhv9tQyJ.js";import"./Skeleton-DrSkd8hR.js";import"./useInfiniteQuery-DnQbTvHy.js";import"./IconSvg-Dwq7dIkM.js";import"./LayersTwoTone-BEADbweo.js";import"./ContentCopyTwoTone-M2L2vVK8.js";import"./HelpOutlineTwoTone-BpKH-ygS.js";import"./ErrorOutlined-DTLYYK7X.js";import"./GetAppTwoTone-CBup868U.js";import"./InfoOutlined-DLOwR7Dp.js";import"./PhoneTwoTone-BIn_IfbQ.js";import"./DeleteTwoTone-Ce9V7OlI.js";import"./getValidReactChildren-D-KcRa3v.js";import"./MenuList-CdIcBE6c.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./List-Cd8ezIty.js";import"./MenuItem-DDPSVnm1.js";import"./dividerClasses-CqNDtZvF.js";import"./index-CeY3lIrK.js";import"./react-CF5aTxTJ.js";import"./pickBy-BsLstacZ.js";import"./_baseIndexOf-rBnIfvEs.js";import"./isString-B1dDD4mG.js";import"./_baseIteratee-BMMCMcgk.js";import"./useQueries-Dt5v9p3I.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntityBundle-CFb6tQQ6.js";import"./ConditionalWrapper-CBRMzEd4.js";import"./debounce-Be36O1Ab.js";import"./KeyboardArrowRight-C3yO2o6U.js";import"./getThemeProps-BNlrmySa.js";function g(i){const{subscription:p}=i,{data:o}=M(p.objectId),{data:m}=v(o==null?void 0:o.projectId,void 0,{enabled:!!o}),{isSubscribed:a,isLoading:n,toggleSubscribed:e}=h(p.objectId,s.FORUM);let c;return o&&(c=`${j(I.PORTAL_ENDPOINT)}Synapse:${o.projectId}/discussion`),t.jsx(P,{isLoading:n,isSubscribed:a,icon:"dashboard",name:m==null?void 0:m.name,nameHref:c,onToggleSubscribe:e})}try{g.displayName="ForumTopic",g.__docgenInfo={description:"",displayName:"ForumTopic",props:{subscription:{defaultValue:null,description:"",name:"subscription",required:!0,type:{name:"Subscription"}}}}}catch{}function H(i){const{subscription:p}=i,{threadData:o}=C(p.objectId),{isSubscribed:m,isLoading:a,toggleSubscribed:n}=h(p.objectId,s.THREAD);let e;return o&&(e=`${j(I.PORTAL_ENDPOINT)}Synapse:${o.projectId}/discussion/threadId=${p.objectId}`),t.jsx(P,{isLoading:a,isSubscribed:m,icon:"discussion",name:o==null?void 0:o.title,nameHref:e,onToggleSubscribe:n})}try{ThreadTopic.displayName="ThreadTopic",ThreadTopic.__docgenInfo={description:"",displayName:"ThreadTopic",props:{subscription:{defaultValue:null,description:"",name:"subscription",required:!0,type:{name:"Subscription"}}}}}catch{}function S(i){const{subscription:p}=i;switch(p.objectType){case s.FORUM:return t.jsx(g,{subscription:p});case s.THREAD:return t.jsx(H,{subscription:p});default:return console.warn(`Subscription type ${i.subscription.objectType} not supported in UI`),t.jsx(t.Fragment,{})}}try{S.displayName="SubscriptionItem",S.__docgenInfo={description:`Simple discriminator component that maps a {@link Subscription} rendered on the {@link SubscriptionPage } to
a {@link Topic } component`,displayName:"SubscriptionItem",props:{subscription:{defaultValue:null,description:"",name:"subscription",required:!0,type:{name:"Subscription"}}}}}catch{}const d=[{value:"ASC",label:"Date Posted"},{value:"DESC",label:"Most Recent"}];function w(){const[i,p]=b.useState(s.FORUM),[o,m]=b.useState(d[0]),a=b.useId(),n={objectType:i,sortBy:D.CREATED_ON,sortDirection:o.value},{data:e,hasNextPage:c,isFetchingNextPage:f,fetchNextPage:O}=R(n,{staleTime:1/0,select:r=>({pages:r.pages.flatMap(l=>l.results),pageParams:r.pageParams})},[`subscriptionPageFetch_${a}`,n]);return t.jsxs(t.Fragment,{children:[t.jsx(k,{sx:{float:"right"},children:t.jsx(F,{variant:"outlined",options:d.map(r=>r.label),selectedIndex:d.findIndex(r=>r.value===o.value),setSelectedIndex:r=>m(d[r])})}),t.jsxs(A,{sx:{mb:3},value:i,onChange:(r,l)=>{r.stopPropagation(),p(l)},textColor:"secondary",indicatorColor:"secondary",children:[t.jsx(T,{value:s.FORUM,label:"Project Forums"}),t.jsx(T,{value:s.THREAD,label:"Threads"})]}),t.jsx(B,{sx:{gap:.5},children:e==null?void 0:e.pages.map(r=>t.jsx(S,{subscription:r},r.subscriptionId))}),c&&t.jsx($,{variant:"contained",onClick:()=>{O()},disabled:f,sx:{mt:6},children:f?"Loading...":"Load More"})]})}const Hr={title:"Synapse/Following/SubscriptionPage",component:w,parameters:{stack:"mock"}},u={name:"SubscriptionPage",args:{},parameters:{msw:{handlers:{...E(N)}}}};var _,y,x;u.parameters={...u.parameters,docs:{...(_=u.parameters)==null?void 0:_.docs,source:{originalSource:`{
  name: 'SubscriptionPage',
  args: {},
  parameters: {
    msw: {
      handlers: {
        ...getHandlers(MOCK_REPO_ORIGIN)
      }
    }
  }
}`,...(x=(y=u.parameters)==null?void 0:y.docs)==null?void 0:x.source}}};const wr=["Demo"];export{u as Demo,wr as __namedExportsOrder,Hr as default};
