import{g as f}from"./userProfileHandlers-3Xvfrxlm.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-DFd5b1XQ.js";import{A}from"./AccountLevelBadges-DENXR9AY.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-Cnfdntsn.js";import"./iframe-DR00MtQa.js";import"./mockEntity-NFMgylK7.js";import"./mockFileEntity-D626GYzV.js";import"./StringUtils-C95LMFI-.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-I4bl5giG.js";import"./mockTeam-Di1qKtlu.js";import"./SynapseConstants-DnnDD9S4.js";import"./OrientationBanner-BKD3mXs2.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-Bukyj4O5.js";import"./index-BETkQVTs.js";import"./spreadSx-CwcO6WA9.js";import"./react-COIuWRyg.js";import"./FullWidthAlert-lZwpVcfv.js";import"./Alert-PoDNxqsT.js";import"./createTheme-BH_THfxa.js";import"./DefaultPropsProvider-DGSUwyrZ.js";import"./useSlot-DO3YmjNd.js";import"./useForkRef-C4r6o0mS.js";import"./createSimplePaletteValueFilter-BKXYzHpo.js";import"./createSvgIcon-Uprnm4UY.js";import"./Close-BN20Ndtb.js";import"./IconButton-BMqupDK0.js";import"./useTimeout-C_0QQQPC.js";import"./ButtonBase-C8k3v_8l.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-C6LFjy3p.js";import"./Paper-DjjbmjWh.js";import"./useTheme-DFG--JId.js";import"./useTheme-m71gqaUa.js";import"./Stack-B_EGg9Xt.js";import"./useThemeProps-O0oaPQsO.js";import"./getThemeProps-4QQKnSwF.js";import"./extendSxProp-CpK08kBd.js";import"./Box-B9ThoOBq.js";import"./AlertTitle-CI7HLN44.js";import"./Typography-COE6duH8.js";import"./index-DBYQapkN.js";import"./ClickAwayListener-ImhnVk8c.js";import"./getReactElementRef-Bz4vM71q.js";import"./index-CmnwMZoC.js";import"./index-Cxyl9LGV.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DXq3JD5F.js";import"./Tooltip-Cy35VhK6.js";import"./index-DJuPeuUq.js";import"./useControlled-CHLGFfK2.js";import"./Popper-MqYOJopP.js";import"./Button-CpvAnFlJ.js";import"./uniqueId-BEq31VMM.js";import"./toString-C5fj-T_0.js";import"./isArray-D-j8zubJ.js";import"./isSymbol-BCpXns4G.js";import"./times-C1ULb67C.js";import"./_Uint8Array-Bgnh0Mur.js";import"./identity-DKeuBCMA.js";import"./toInteger-Bz4QGsEW.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-DS0RhEjV.js";import"./QueryClientProvider-CsYE3JnP.js";import"./Link-BvOhnWpV.js";import"./Collapse-jSswtkK8.js";import"./_baseUniq-DV1niuS7.js";import"./_getTag-K4XAuv8J.js";import"./isEqual-D2N_ZygK.js";import"./noop-DX6rZLP_.js";import"./merge-CdXNYD4z.js";import"./_initCloneObject-CiGbOdta.js";import"./tinycolor-Begke6kS.js";import"./Fade-CWljGQaI.js";import"./inputBaseClasses-7vLKzToA.js";import"./calculateFriendlyFileSize-BzDK5ry9.js";import"./CheckCircleTwoTone-DceYN4QX.js";import"./InfoTwoTone-DZlBy9ZW.js";import"./useMutation-B0TMRoqc.js";import"./dayjs.min-BoIqCcg2.js";import"./chunk-AYJ5UCUI-iVW4Bb0p.js";import"./cloneDeep-DyZAojRt.js";import"./Skeleton-BvWNufUl.js";import"./AccountLevelBadge-CCkvTHhn.js";import"./Card-B3w-acpz.js";import"./ConfirmationDialog-BiVwIW1Y.js";import"./DialogBase-MPNntfZy.js";import"./Close-J7Ehmw7d.js";import"./HelpPopover-DDBro93R.js";import"./MarkdownPopover-Du59RAOp.js";import"./LightTooltip-CUhYO_Gb.js";import"./MarkdownSynapse-CFfD1pQ6.js";import"./SkeletonButton-CUKSVA28.js";import"./SkeletonInlineBlock-D3NjzP2j.js";import"./SkeletonTable-4uOPdQdI.js";import"./SkeletonParagraph-DxxDU0Vv.js";import"./HelpOutlineTwoTone-BRrgbIUP.js";import"./Dialog-Bgr548vy.js";import"./DialogActions-BVtkeaLu.js";import"./Modal-DPLPmuKg.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-Dda0ouTM.js";import"./DialogContent-Do2rFHj_.js";import"./DialogTitle-BFIwaNuW.js";import"./LoadingScreen-B7WEe-nj.js";import"./LinearProgress-bjDYtjx2.js";import"./ToastMessage-D-9VPJYU.js";import"./CSSTransition-CSmNoywF.js";const kt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Ut=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Ut as __namedExportsOrder,kt as default};
