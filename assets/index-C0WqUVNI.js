import{j as n}from"./jsx-runtime-DoxjgJx5.js";import{r as h}from"./index-Cu9bd8lq.js";import{d as ae}from"./AddCircleTwoTone-DOPSLik9.js";import{D as L,w as B,E as K}from"./VerificationSubmission-DL9jxYsQ.js";import{N as F,V as R,A as le,g as re,m as ie,L as oe,n as se,o as S,p as de,T as ue,S as ce,M as pe,q as me,u as ye,r as fe}from"./useEntitySelection-Bbo13Mjf.js";import{l as G,bs as he}from"./useFiles-DURJDjZf.js";import{g as E,q as Q,d as be}from"./RegularExpressions-SKYrON-T.js";import"./OrientationBanner-6BqxDXOp.js";import{N as ge}from"./ConfirmationDialog-BBb8I14C.js";import{u as Ce}from"./utils-BECe8vEQ.js";import{B as Se}from"./LoadingScreen-Bc9rto4U.js";import{C as Ee}from"./Checkbox-BnrBea29.js";import{a as De}from"./useDownloadList-C_Awatl0.js";import{d as U}from"./ToastMessage-CPW-dqej.js";import{B as z}from"./Box-Bt_N9PQN.js";import{B as Ve}from"./Button-j3jTttn9.js";const $=1200,ve=46,P=({entities:l,isLoading:c,hasNextPage:d,fetchNextPage:i,isFetchingNextPage:b,versionSelection:p,selectColumnType:D,selected:r,visibleTypes:m,selectableTypes:o,toggleSelection:u,sort:y,setSort:V,noResultsPlaceholder:N,enableSelectAll:T,selectAllIsChecked:g=!1,getChildrenInfiniteRequestObject:w,totalEntities:v,setCurrentContainer:_})=>{const A=Ce(),{accessToken:W,keyFactory:j}=G(),J=D!=="none",[H,k]=h.useState(!1),[X,I]=h.useState(!1),Z=()=>{w&&A.cancelQueries({queryKey:j.getEntityChildrenQueryKey(w,!0)}),I(!1),k(!1)},Y=a=>m.includes(E(a))?o.includes(E(a))?r.has(a.id)?"selected":"default":"disabled":"hidden";h.useEffect(()=>{async function a(){H&&(d&&i?(I(!0),b||i()):(u(g?l.filter(e=>r.has(e.id)).map(e=>{const t=r.get(e.id);return{targetId:e.id,targetVersionNumber:t===F?void 0:t}}):await Promise.all(l.filter(e=>{const t=E(e);return!r.has(e.id)&&o.includes(t)&&m.includes(t)}).map(async e=>{var s;let t;if(p===R.REQUIRED&&Q(E(e))&&(Object.prototype.hasOwnProperty.call(e,"versionNumber")&&(t=e.versionNumber),!t)){I(!0);const f=1,C=0;t=(s=(await A.fetchQuery({queryKey:j.getPaginatedEntityVersionsQueryKey(e.id,f,C),queryFn:()=>he(e.id,W,C,f)})).results[0])==null?void 0:s.versionNumber}return{targetId:e.id,targetVersionNumber:t}}))),k(!1),I(!1)))}a()},[W,l,i,d,p,A,b,g,o,r,H,u,m,j]);const ee=l.reduce((a,e)=>{const t=Y(e);if(t!=="hidden"){const s=E(e),f=r.get(e.id);let C;"versionNumber"in e&&(f!=null&&f!==F?C=f:p===R.REQUIRED&&(C=e.versionNumber)),a.push({...e,entityId:e.id,versionNumber:C,entityType:s,isSelected:t==="selected",isDisabled:t==="disabled",isVersionableEntity:Q(s),currentSelectedVersion:f})}return a},[]),te=h.useMemo(()=>{const a=d||l.filter(e=>o.includes(E(e))&&m.includes(E(e))).length>0;return T&&n.jsx("div",{"data-testid":"Select All",style:a?{cursor:"pointer"}:{cursor:"not-allowed"},onClick:()=>{a&&k(!0)},children:n.jsx(Ee,{inputProps:{"aria-label":"Select All"},checked:g,disabled:!a,onChange:()=>{}})})},[T,l,d,g,o,m]),ne=h.useCallback(a=>_&&be(a.rowData.entityType)?n.jsx("span",{role:"link",className:"EntityFinderTableCellContainerLink",onClick:e=>{e.stopPropagation(),_(a.rowData.id)},children:a.rowData.name}):a.rowData.name,[_]),M={};return y&&(M[y.sortBy]=y.sortDirection.toLowerCase()),n.jsxs("div",{className:"EntityFinderDetailsView",children:[n.jsx(Se,{show:X,currentProgress:l.length,totalProgress:v,hintText:v?`${l.length.toLocaleString()} of ${v==null?void 0:v.toLocaleString()}`:`Fetching ${l.length.toLocaleString()}`,headlineText:"Fetching selected items",onCancel:Z}),n.jsx(le,{className:"DetailsViewAutosizer",children:({height:a,width:e})=>n.jsxs(re,{classPrefix:"DetailsViewTable",data:ee,height:a,width:e>$?e:$,rowHeight:ve,overscanRowCount:5,rowClassName:({rowIndex:t})=>{let s="EntityFinderDetailsViewRow";return t%2===0&&(s+=" isEven"),s},rowProps:({rowData:t})=>({"aria-selected":t.isSelected,"aria-disabled":t.isDisabled}),headerCellProps:{role:"columnheader"},sortState:M,components:{SortIndicator:ie},onColumnSort:({key:t,order:s})=>{y&&V&&V(t,s==="asc"?L.ASC:L.DESC)},rowEventHandlers:{onClick:({rowData:t})=>{const{id:s,isDisabled:f,isVersionableEntity:C}=t;let{currentSelectedVersion:q}=t;f||(C&&p===R.REQUIRED&&q==null&&Object.prototype.hasOwnProperty.call(t,"versionNumber")&&(q=t.versionNumber),u({targetId:s,targetVersionNumber:q===F?void 0:q}))}},onEndReached:()=>{d&&i&&!b&&i()},emptyRenderer:c?oe:()=>n.jsx(se,{noResultsPlaceholder:N}),children:[J&&n.jsx(S,{title:"",minWidth:50,maxWidth:50,width:50,dataKey:"isSelected",headerRenderer:te,cellRenderer:de},"isSelected"),n.jsx(S,{title:"",minWidth:45,maxWidth:45,width:45,dataKey:"entityType",align:"center",cellRenderer:ue},"type"),n.jsx(S,{title:"File Name",width:500,sortable:y!=null,resizable:!0,cellRenderer:ne},B.NAME),n.jsx(S,{title:"Size",width:200,sortable:!1,resizable:!0,cellRenderer:ce},"SIZE"),n.jsx(S,{title:"Modified On",width:220,minWidth:170,sortable:y!=null,cellRenderer:pe},B.MODIFIED_ON),n.jsx(S,{width:130,dataKey:"id",title:"ID",minWidth:130},"id"),n.jsx(S,{title:"Actions",minWidth:100,maxWidth:100,width:100,cellRenderer:me},"actions")]})})]})};try{P.displayName="ChallengeDataTable",P.__docgenInfo={description:'Displays a list of entities in a table.\n\nIf the list of entities is paginated, the `hasNextPage` prop can be set to indicate that there is more data to load.\nWhen the view is ready to load more data, the `fetchNextPage` callback will be invoked. The view is designed to handle\nan "infinite scroll" pattern, so entities should not be removed from the list when loading the next page.',displayName:"ChallengeDataTable",props:{versionSelection:{defaultValue:null,description:"",name:"versionSelection",required:!0,type:{name:"enum",value:[{value:'"DISALLOWED"'},{value:'"REQUIRED"'},{value:'"TRACKED"'},{value:'"UNTRACKED"'}]}},selectColumnType:{defaultValue:null,description:"",name:"selectColumnType",required:!0,type:{name:"enum",value:[{value:'"none"'},{value:'"checkbox"'}]}},enableSelectAll:{defaultValue:null,description:"",name:"enableSelectAll",required:!0,type:{name:"boolean"}},visibleTypes:{defaultValue:null,description:"",name:"visibleTypes",required:!0,type:{name:"EntityType[]"}},selected:{defaultValue:null,description:"",name:"selected",required:!0,type:{name:"Map<string, number>"}},selectableTypes:{defaultValue:null,description:"",name:"selectableTypes",required:!0,type:{name:"EntityType[]"}},isIdSelected:{defaultValue:null,description:"",name:"isIdSelected",required:!0,type:{name:"(header: EntityFinderHeader) => boolean"}},isSelectable:{defaultValue:null,description:"",name:"isSelectable",required:!0,type:{name:"(header: EntityFinderHeader) => boolean"}},toggleSelection:{defaultValue:null,description:"",name:"toggleSelection",required:!0,type:{name:"(entity: Reference | Reference[]) => void"}},setCurrentContainer:{defaultValue:null,description:"",name:"setCurrentContainer",required:!1,type:{name:"Dispatch<SetStateAction<EntityTreeContainer>>"}},entities:{defaultValue:null,description:"",name:"entities",required:!0,type:{name:"EntityFinderHeader[]"}},isLoading:{defaultValue:null,description:"",name:"isLoading",required:!0,type:{name:"boolean"}},hasNextPage:{defaultValue:null,description:"",name:"hasNextPage",required:!1,type:{name:"boolean"}},fetchNextPage:{defaultValue:null,description:"",name:"fetchNextPage",required:!1,type:{name:"(() => Promise<any>)"}},isFetchingNextPage:{defaultValue:null,description:"",name:"isFetchingNextPage",required:!1,type:{name:"boolean"}},sort:{defaultValue:null,description:"The current sort of the view. If the view cannot be sorted, set this to `undefined`",name:"sort",required:!1,type:{name:"{ sortBy: SortBy; sortDirection: Direction; }"}},setSort:{defaultValue:null,description:"If sortable, `setSort` will be invoked when the user tries to change the sort",name:"setSort",required:!1,type:{name:"((soryBy: SortBy, sortDirection: Direction) => void)"}},noResultsPlaceholder:{defaultValue:null,description:"",name:"noResultsPlaceholder",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},selectAllIsChecked:{defaultValue:{value:"false"},description:"We defer to the configuration component to determine this",name:"selectAllIsChecked",required:!1,type:{name:"boolean"}},getChildrenInfiniteRequestObject:{defaultValue:null,description:"This request object is only used to tell react-query to cancel fetching all children at once.",name:"getChildrenInfiniteRequestObject",required:!1,type:{name:"EntityChildrenRequest"}},totalEntities:{defaultValue:null,description:"The total number of entities that can be retrieved",name:"totalEntities",required:!1,type:{name:"number"}}}}}catch{}const O=({parentContainerId:l,...c})=>{const[d,i]=h.useState(B.NAME),[b,p]=h.useState(L.ASC),D={parentId:l,includeTotalChildCount:!0,includeTypes:c.visibleTypes,sortBy:d,sortDirection:b},{data:r,isLoading:m,isFetchingNextPage:o,hasNextPage:u,fetchNextPage:y}=ge(D,{throwOnError:!0}),V=(r==null?void 0:r.pages.flatMap(g=>g.page))??[],N=r==null?void 0:r.pages[0].totalChildCount,T=ye(V,c.selected.size,c.isIdSelected,c.isSelectable,u,y,o);return n.jsx(P,{entities:V,isLoading:m,hasNextPage:u,fetchNextPage:y,isFetchingNextPage:o,sort:{sortBy:d,sortDirection:b},setSort:(g,w)=>{i(g),p(w)},selectAllIsChecked:T,getChildrenInfiniteRequestObject:D,totalEntities:N,...c})};try{O.displayName="ChallengeEntityChildrenDetails",O.__docgenInfo={description:"",displayName:"ChallengeEntityChildrenDetails",props:{versionSelection:{defaultValue:null,description:"",name:"versionSelection",required:!0,type:{name:"enum",value:[{value:'"DISALLOWED"'},{value:'"REQUIRED"'},{value:'"TRACKED"'},{value:'"UNTRACKED"'}]}},selectColumnType:{defaultValue:null,description:"",name:"selectColumnType",required:!0,type:{name:"enum",value:[{value:'"none"'},{value:'"checkbox"'}]}},enableSelectAll:{defaultValue:null,description:"",name:"enableSelectAll",required:!0,type:{name:"boolean"}},visibleTypes:{defaultValue:null,description:"",name:"visibleTypes",required:!0,type:{name:"EntityType[]"}},selected:{defaultValue:null,description:"",name:"selected",required:!0,type:{name:"Map<string, number>"}},selectableTypes:{defaultValue:null,description:"",name:"selectableTypes",required:!0,type:{name:"EntityType[]"}},isIdSelected:{defaultValue:null,description:"",name:"isIdSelected",required:!0,type:{name:"(header: EntityFinderHeader) => boolean"}},isSelectable:{defaultValue:null,description:"",name:"isSelectable",required:!0,type:{name:"(header: EntityFinderHeader) => boolean"}},toggleSelection:{defaultValue:null,description:"",name:"toggleSelection",required:!0,type:{name:"(entity: Reference | Reference[]) => void"}},setCurrentContainer:{defaultValue:null,description:"",name:"setCurrentContainer",required:!1,type:{name:"Dispatch<SetStateAction<EntityTreeContainer>>"}},parentContainerId:{defaultValue:null,description:"",name:"parentContainerId",required:!0,type:{name:"string"}}}}}catch{}function x({parentContainerId:l}){const{downloadCartPageUrl:c}=G(),d=!0,[i,b]=fe(d),{mutate:p}=De({onSuccess:()=>{U("File(s) were successfully added to your Download Cart.","success",{primaryButtonConfig:{text:"View Download Cart",onClick:()=>window.location.href=c}})},onError:o=>{U(`Unable to add the file to your Download Cart. ${o.reason}`,"danger")}}),D=h.useCallback(o=>i.has(o.id),[i]),r=h.useCallback(()=>{const o=i.toArray().map(u=>({fileEntityId:u[0],versionNumber:u[1]}));p(o)},[i,p]),m={versionSelection:R.REQUIRED,selectColumnType:"checkbox",enableSelectAll:!0,visibleTypes:[K.FILE],selected:i,selectableTypes:[K.FILE],isIdSelected:D,isSelectable:()=>!0,toggleSelection:b};return n.jsxs(n.Fragment,{children:[n.jsx(z,{children:n.jsx(O,{parentContainerId:l,...m})}),n.jsx(z,{mt:4,children:n.jsx(Ve,{endIcon:n.jsx(ae,{}),variant:"outlined",sx:{alignSelf:"flex-end",height:"47px"},onClick:r,disabled:!i.toArray().length,children:"Add to Download Cart"})})]})}try{x.displayName="ChallengeDataDownload",x.__docgenInfo={description:"",displayName:"ChallengeDataDownload",props:{parentContainerId:{defaultValue:null,description:"",name:"parentContainerId",required:!0,type:{name:"string"}}}}}catch{}try{x.displayName="ChallengeDataDownload",x.__docgenInfo={description:"",displayName:"ChallengeDataDownload",props:{parentContainerId:{defaultValue:null,description:"",name:"parentContainerId",required:!0,type:{name:"string"}}}}}catch{}try{ChallengeDataTable.displayName="ChallengeDataTable",ChallengeDataTable.__docgenInfo={description:'Displays a list of entities in a table.\n\nIf the list of entities is paginated, the `hasNextPage` prop can be set to indicate that there is more data to load.\nWhen the view is ready to load more data, the `fetchNextPage` callback will be invoked. The view is designed to handle\nan "infinite scroll" pattern, so entities should not be removed from the list when loading the next page.',displayName:"ChallengeDataTable",props:{versionSelection:{defaultValue:null,description:"",name:"versionSelection",required:!0,type:{name:"enum",value:[{value:'"DISALLOWED"'},{value:'"REQUIRED"'},{value:'"TRACKED"'},{value:'"UNTRACKED"'}]}},selectColumnType:{defaultValue:null,description:"",name:"selectColumnType",required:!0,type:{name:"enum",value:[{value:'"none"'},{value:'"checkbox"'}]}},enableSelectAll:{defaultValue:null,description:"",name:"enableSelectAll",required:!0,type:{name:"boolean"}},visibleTypes:{defaultValue:null,description:"",name:"visibleTypes",required:!0,type:{name:"EntityType[]"}},selected:{defaultValue:null,description:"",name:"selected",required:!0,type:{name:"Map<string, number>"}},selectableTypes:{defaultValue:null,description:"",name:"selectableTypes",required:!0,type:{name:"EntityType[]"}},isIdSelected:{defaultValue:null,description:"",name:"isIdSelected",required:!0,type:{name:"(header: EntityFinderHeader) => boolean"}},isSelectable:{defaultValue:null,description:"",name:"isSelectable",required:!0,type:{name:"(header: EntityFinderHeader) => boolean"}},toggleSelection:{defaultValue:null,description:"",name:"toggleSelection",required:!0,type:{name:"(entity: Reference | Reference[]) => void"}},setCurrentContainer:{defaultValue:null,description:"",name:"setCurrentContainer",required:!1,type:{name:"Dispatch<SetStateAction<EntityTreeContainer>>"}},entities:{defaultValue:null,description:"",name:"entities",required:!0,type:{name:"EntityFinderHeader[]"}},isLoading:{defaultValue:null,description:"",name:"isLoading",required:!0,type:{name:"boolean"}},hasNextPage:{defaultValue:null,description:"",name:"hasNextPage",required:!1,type:{name:"boolean"}},fetchNextPage:{defaultValue:null,description:"",name:"fetchNextPage",required:!1,type:{name:"(() => Promise<any>)"}},isFetchingNextPage:{defaultValue:null,description:"",name:"isFetchingNextPage",required:!1,type:{name:"boolean"}},sort:{defaultValue:null,description:"The current sort of the view. If the view cannot be sorted, set this to `undefined`",name:"sort",required:!1,type:{name:"{ sortBy: SortBy; sortDirection: Direction; }"}},setSort:{defaultValue:null,description:"If sortable, `setSort` will be invoked when the user tries to change the sort",name:"setSort",required:!1,type:{name:"((soryBy: SortBy, sortDirection: Direction) => void)"}},noResultsPlaceholder:{defaultValue:null,description:"",name:"noResultsPlaceholder",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},selectAllIsChecked:{defaultValue:{value:"false"},description:"We defer to the configuration component to determine this",name:"selectAllIsChecked",required:!1,type:{name:"boolean"}},getChildrenInfiniteRequestObject:{defaultValue:null,description:"This request object is only used to tell react-query to cancel fetching all children at once.",name:"getChildrenInfiniteRequestObject",required:!1,type:{name:"EntityChildrenRequest"}},totalEntities:{defaultValue:null,description:"The total number of entities that can be retrieved",name:"totalEntities",required:!1,type:{name:"number"}}}}}catch{}export{x as C};
