import{j as e,e7 as le,r as d,J as de,b_ as ce,B as ue,c5 as me,c8 as pe,da as fe,e5 as he,c3 as N,_ as ye,cs as ge,ct as be,V as $,X as M,cw as Se}from"./iframe-Ci1lmE8g.js";import{g as je,i as ve,o as Te}from"./useEntity-vafuLvak.js";import{u as xe,b as U}from"./useSchema-D-Qbz9Jb.js";import{i as Ve,g as G,j as Ae,v as we}from"./index-Cy9X1tra.js";import{a as Fe,C as qe}from"./ConfirmationDialog-C00Ejex4.js";import{g as X,c as _e,a as Ee,b as Ie,d as Oe,s as Ce,J as Ne,t as De,e as Re,h as Pe,i as ke,j as Le}from"./JsonSchemaForm-eW00ofVJ.js";import{A as k,d as Be,g as Je,T as He}from"./enums-DHUNt8f7.js";import"./index-r8ZA1smB.js";import{b as $e}from"./use-deep-compare-effect.esm-CoZjJuVi.js";import{G as W}from"./GridLegacy-DUg-By5k.js";import{T as Me}from"./TextWidget-DqUrQSB2.js";const O=n=>e.jsx(le,{...n,width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:e.jsx("path",{d:"M14 10H2V12H14V10ZM14 6H2V8H14V6ZM18 14V10H16V14H12V16H16V20H18V16H22V14H18ZM2 16H10V14H2V16Z"})});try{O.displayName="AddToList",O.__docgenInfo={description:"",displayName:"AddToList",props:{component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}}}}}catch{}function D(n){const{schema:a,formData:i,onChange:l}=n,{fields:{ObjectField:h}}=Ve();return d.useEffect(()=>{const c={...i},u=X(a);u&&(Object.entries(u).forEach(([y,s])=>{const m=c[y];s[k]?Array.isArray(m)||(c[y]=_e(m)):typeof s=="object"&&"type"in s&&s.type!=="array"&&Array.isArray(m)&&(c[y]=m.map(r=>`${r}`).join(", "))}),Be(i,c)||l(c))},[a,i,l]),e.jsx(h,{...n})}try{D.displayName="SynapseAnnotationsRJSFObjectField",D.__docgenInfo={description:"Extends the",displayName:"SynapseAnnotationsRJSFObjectField",props:{schema:{defaultValue:null,description:"The schema object for the field being described",name:"schema",required:!0,type:{name:"JSONSchema7"}},uiSchema:{defaultValue:null,description:"The uiSchema object for this base component",name:"uiSchema",required:!1,type:{name:"UiSchema<T, S, F>"}},registry:{defaultValue:null,description:"The `registry` object",name:"registry",required:!0,type:{name:"Registry<T, S, F>"}}}}}catch{}function R(n){const{description:a,disabled:i,formData:l,idSchema:h,onAddClick:c,properties:u,readonly:y,registry:s,required:m,schema:r,title:v,uiSchema:g}=n,p=Je(g),T=G("TitleFieldTemplate",s,p),x=G("DescriptionFieldTemplate",s,p),A=d.useRef(new Set);return $e(()=>{if("properties"in r&&r.properties){const V=Object.keys(r.properties),F=new Set(V.filter(b=>!r.properties[b][k]));if(A.current!=null){const b=Array.from(A.current).filter(t=>!F.has(t)&&!!l&&l[t]!=null&&Array.isArray(l[t])&&l[t].filter(f=>f!=null).length>0);b.length>0&&de(`The following annotations are no longer specified by the schema and have been converted to custom fields: ${b.join(", ")}.`,"warning",{title:"Fields No Longer Specified By Schema"})}A.current=F}},[r.properties]),e.jsxs("fieldset",{id:h.$id,children:[(p.title||v)&&e.jsx(T,{id:`${h.$id}__title`,schema:r,title:p.title||v,required:m,uiSchema:g,registry:s}),(p.description||a)&&e.jsx(x,{id:`${h.$id}__description`,description:p.description||a,registry:s,schema:r}),u.map(V=>V.content),Ae(r,g,l)&&e.jsx(ce,{title:"Add a new custom field",placement:"top",children:e.jsx(ue,{sx:{my:2},variant:"contained",className:"rjsf-object-property-expand",onClick:c(r),disabled:i||y,"aria-label":"Add Custom Field",children:e.jsx(O,{})})})]})}try{R.displayName="ObjectFieldTemplate",R.__docgenInfo={description:`Derived from the base ObjectFieldTemplate with annotations-editor-specific changes
- Custom button for adding additional properties
- Tracks properties to show a toast message if a property is converted to an additionalProperty because it was
  dropped from the schema (e.g. in a conditional schema)

See https://github.com/rjsf-team/react-jsonschema-form/blob/main/packages/mui/src/ObjectFieldTemplate/ObjectFieldTemplate.tsx`,displayName:"ObjectFieldTemplate",props:{schema:{defaultValue:null,description:"The schema object for the field being described",name:"schema",required:!0,type:{name:"JSONSchema7"}},uiSchema:{defaultValue:null,description:"The uiSchema object for this base component",name:"uiSchema",required:!1,type:{name:"UiSchema<T, S, F>"}},registry:{defaultValue:null,description:"The `registry` object",name:"registry",required:!0,type:{name:"Registry<T, S, F>"}},title:{defaultValue:null,description:"A string value containing the title for the object",name:"title",required:!0,type:{name:"string"}},description:{defaultValue:null,description:"A string value containing the description for the object",name:"description",required:!1,type:{name:"string | ReactElement<unknown, string | JSXElementConstructor<any>>"}},disabled:{defaultValue:null,description:"A boolean value stating if the object is disabled",name:"disabled",required:!1,type:{name:"boolean"}},properties:{defaultValue:null,description:"An array of objects representing the properties in the object",name:"properties",required:!0,type:{name:"ObjectFieldTemplatePropertyType[]"}},onAddClick:{defaultValue:null,description:"Returns a function that adds a new property to the object (to be used with additionalProperties)",name:"onAddClick",required:!0,type:{name:"(schema: S) => () => void"}},readonly:{defaultValue:null,description:"A boolean value stating if the object is read-only",name:"readonly",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"A boolean value stating if the object is required",name:"required",required:!1,type:{name:"boolean"}},hideError:{defaultValue:null,description:"A boolean value stating if the field is hiding its errors",name:"hideError",required:!1,type:{name:"boolean"}},idSchema:{defaultValue:null,description:"An object containing the id for this object & ids for its properties",name:"idSchema",required:!0,type:{name:"FieldId & { [x: string]: FieldId | (FieldId & { [x: string]: FieldId | (FieldId & ...); }); }"}},errorSchema:{defaultValue:null,description:"The optional validation errors in the form of an `ErrorSchema`",name:"errorSchema",required:!1,type:{name:"ErrorSchema<T>"}},formData:{defaultValue:null,description:"The form data for the object",name:"formData",required:!1,type:{name:"Record<string, any>"}},formContext:{defaultValue:null,description:"The `formContext` object that was passed to Form",name:"formContext",required:!1,type:{name:"GenericObjectType"}}}}}catch{}function P(n){const{id:a,classNames:i,disabled:l,label:h,onKeyChange:c,readonly:u,required:y,schema:s,children:m,registry:r}=n,{translateString:v}=r,g=v(He.KeyLabel,[""]);if(!(k in s))return e.jsx("div",{className:i,children:m});const T=({target:x})=>{x&&c(x.value)};return e.jsx("div",{className:i,children:e.jsxs(W,{container:!0,columnSpacing:2,rowSpacing:0,sx:{my:1},children:[e.jsx(W,{item:!0,xs:3,children:e.jsx(me,{fullWidth:!0,required:y,label:g,defaultValue:h,disabled:l||u,id:`${a}-key`,name:`${a}-key`,onBlur:u?void 0:T,type:"text"})}),m]})})}try{P.displayName="SynapseAnnotationsWrapIfAdditionalTemplate",P.__docgenInfo={description:"The `WrapIfAdditional` component is used by the `FieldTemplate` to rename, or remove properties that are\npart of an `additionalProperties` part of a schema.",displayName:"SynapseAnnotationsWrapIfAdditionalTemplate",props:{schema:{defaultValue:null,description:"The schema object for the field being described",name:"schema",required:!0,type:{name:"JSONSchema7"}},uiSchema:{defaultValue:null,description:"The uiSchema object for this base component",name:"uiSchema",required:!1,type:{name:"GenericObjectType & MakeUIType<UIOptionsBaseType<T, S, F>> & { 'ui:globalOptions'?: GlobalUISchemaOptions; 'ui:rootFieldId'?: string; 'ui:fieldReplacesAnyOrOneOf'?: boolean; 'ui:options'?: UIOptionsType<...>; }"}},registry:{defaultValue:null,description:"The `registry` object",name:"registry",required:!0,type:{name:"Registry<T, S, F>"}},children:{defaultValue:null,description:"The field or widget component instance for this field row",name:"children",required:!0,type:{name:"ReactNode"}},style:{defaultValue:null,description:"An object containing the style as defined in the `uiSchema`",name:"style",required:!1,type:{name:"StyleHTMLAttributes<any>"}},disabled:{defaultValue:null,description:"A boolean value stating if the field is disabled",name:"disabled",required:!0,type:{name:"boolean"}},label:{defaultValue:null,description:"The computed label for this field, as a string",name:"label",required:!0,type:{name:"string"}},id:{defaultValue:null,description:"The id of the field in the hierarchy. You can use it to render a label targeting the wrapped widget",name:"id",required:!0,type:{name:"string"}},required:{defaultValue:null,description:"A boolean value stating if the field is required",name:"required",required:!1,type:{name:"boolean"}},classNames:{defaultValue:null,description:"A string containing the base CSS classes, merged with any custom ones defined in your uiSchema",name:"classNames",required:!1,type:{name:"string"}},hideError:{defaultValue:null,description:"A boolean value stating if the field is hiding its errors",name:"hideError",required:!1,type:{name:"boolean"}},readonly:{defaultValue:null,description:"A boolean value stating if the field is read-only",name:"readonly",required:!0,type:{name:"boolean"}},rawErrors:{defaultValue:null,description:"An array of strings listing all generated error messages from encountered errors for this field",name:"rawErrors",required:!1,type:{name:"string[]"}},onKeyChange:{defaultValue:null,description:"The key change event handler; Called when the key associated with a field is changed for an additionalProperty",name:"onKeyChange",required:!0,type:{name:"(value: string) => () => void"}},onDropPropertyClick:{defaultValue:null,description:"The property drop/removal event handler; Called when a field is removed in an additionalProperty context",name:"onDropPropertyClick",required:!0,type:{name:"(value: string) => () => void"}}}}}catch{}function K(n,a){let i=ke(n);return a&&(i=Le(i)),i}function Z(n){const{entityId:a,schemaId:i,validationSchema:l,liveValidate:h,onSuccess:c=()=>{},onCancel:u,formRef:y,onChange:s=pe,hideActions:m=!1}=n,r=d.useRef(null),v=y??r,[g,p]=d.useState(void 0),[T,x]=d.useState(void 0),[A,V]=d.useState(!1),[F,b]=d.useState(!1),{data:t}=je(a,void 0,!1,{staleTime:1/0,enabled:!!a,throwOnError:!0}),f=t==null?void 0:t.entityMetadata,q=t==null?void 0:t.annotations,[_,E]=d.useState(void 0);d.useEffect(()=>{if(t!=null&&t.entity){const o=t.entity,w=q&&Object.keys(q).length>0?o:{...o,newKey:[""]};E(w)}},[t==null?void 0:t.entity,q]);const{data:S,isLoading:Y}=xe(a,{enabled:!!a,refetchOnWindowFocus:!1,throwOnError:!0}),{data:z,isLoading:Q}=U(i??(S==null?void 0:S.jsonSchemaVersionInfo.$id)??"",{enabled:!!i||!!S,throwOnError:!0}),C=l||z,L=Ee((f==null?void 0:f.concreteType)??""),{data:I,isLoading:ee}=U(L??"",{enabled:!!L,throwOnError:!0}),B=d.useMemo(()=>X(I??{}),[I]),te=d.useMemo(()=>Ie(C,I),[C,I]),ne=d.useMemo(()=>Oe(B),[B]),ae=Y||Q||ee,{mutate:ie,isPending:re}=ve({onSuccess:()=>{c()},onError:o=>{x(o),V(!0)}});function J(){ie({...K(_,!0),...f})}const H=h??Ce(q,C),oe=f&&fe(Te(_,(o,j)=>Object.keys(f).find(w=>w===j))),se=S===null&&oe;return e.jsx("div",{className:"JsonSchemaFormContainer",children:ae?e.jsx("div",{className:"LoadingPlaceholder",children:e.jsx(he,{size:30})}):e.jsxs(e.Fragment,{children:[f&&S&&e.jsxs(N,{severity:"info",sx:{mb:2},children:[e.jsx("b",{children:f.name})," requires scientific annotations specified by ",e.jsx("b",{children:S.jsonSchemaVersionInfo.$id}),". ",e.jsx("b",{children:e.jsx(ye,{href:`${ge(be.REPO_ENDPOINT)}/repo/v1/schema/type/registered/${S.jsonSchemaVersionInfo.$id}`,target:"_blank",rel:"noopener noreferrer",children:"View required schema (JSON)"})})]}),se&&e.jsx(N,{severity:"info",children:e.jsxs($,{sx:{display:"flex",alignItems:"center",gap:.5},children:[e.jsxs(M,{variant:"smallText1",children:[e.jsx("b",{children:f.name})," has no annotations. Click the"," "]}),e.jsx(O,{}),e.jsx(M,{variant:"smallText1",children:"button to annotate."})]})}),e.jsxs(Ne,{validator:we,liveValidate:H,noHtml5Validate:!0,formRef:v,disabled:re,translateString:Re,formContext:{showDerivedAnnotationPlaceholder:!0,descriptionVariant:"expand",descriptionFormat:"table",allowFreeSoloEnum:!0},experimental_defaultFormStateBehavior:{emptyObjectFields:"skipDefaults"},fields:{ObjectField:D},templates:{ObjectFieldTemplate:R,WrapIfAdditionalTemplate:P},widgets:{TextWidget:Me},schema:te,uiSchema:ne,transformErrors:De,formData:_,onChange:({formData:o})=>{s(o),E(o),p(void 0)},onBlur:()=>{E(K(_,!1))},onSubmit:({formData:o,errors:j},w)=>{w.preventDefault(),j&&j.length>0&&p(j),V(!1),E(o),J()},onError:o=>{p(o),(g||H)&&a&&b(!0)},children:[T&&A&&e.jsxs(N,{severity:"error",sx:{my:2},children:["Annotations could not be updated: ",T.reason]}),!m&&e.jsxs(e.Fragment,{children:[e.jsx(Se,{sx:{my:2}}),e.jsx($,{sx:{display:"flex",justifyContent:"space-between",gridRowStart:5},children:e.jsx(Fe,{hasCancelButton:u!==void 0,onCancel:()=>{u&&u()},onConfirm:()=>{v.current.formElement.current.requestSubmit()},confirmButtonProps:{children:a?"Save":"Validate"}})})]})]}),F&&e.jsx(qe,{open:!0,onConfirm:()=>{J(),b(!1)},onCancel:()=>{b(!1)},title:"Update Annotations",content:e.jsxs(e.Fragment,{children:[e.jsx("div",{children:"The following errors exist with the annotations you entered:"}),e.jsx("div",{children:e.jsx("ul",{children:(g??[]).map((o,j)=>e.jsxs("li",{children:[e.jsx("b",{children:`${Pe(o)}: `})," ",`${o.message}`]},j))})}),e.jsx("div",{children:"Are you sure you want to save the invalid annotations?"})]}),confirmButtonProps:{children:"Save"}})]})})}try{Z.displayName="SchemaDrivenAnnotationEditor",Z.__docgenInfo={description:`Renders a form for editing an entity's annotations. The component also supports supplying just a schema ID,
but work to support annotation flows without an entity (i.e. before creating entities) is not yet complete.`,displayName:"SchemaDrivenAnnotationEditor",props:{entityId:{defaultValue:null,description:"The entity whose annotations should be edited with the form",name:"entityId",required:!1,type:{name:"string"}},schemaId:{defaultValue:null,description:"If no entity ID is supplied, the schema to use for the form",name:"schemaId",required:!1,type:{name:"string"}},validationSchema:{defaultValue:null,description:"May be used to directly provide a JSON Schema to use for the form",name:"validationSchema",required:!1,type:{name:"JSONSchema7"}},formRef:{defaultValue:null,description:"Optionally supply a ref to the form to handle submission externally with `formRef.current.submit()`.",name:"formRef",required:!1,type:{name:"RefObject<Form<any, RJSFSchema, any>>"}},liveValidate:{defaultValue:null,description:"Provide live input validation. This can cause performance degradation. By default, liveValidate will be true if an entity with a schema and existing annotations is being edited",name:"liveValidate",required:!1,type:{name:"boolean"}},onSuccess:{defaultValue:null,description:"Invoked after a successful form submission",name:"onSuccess",required:!1,type:{name:"() => void"}},onCancel:{defaultValue:null,description:"If defined and formRef is not supplied, shows a 'Cancel' button and runs this effect on click",name:"onCancel",required:!1,type:{name:"() => void"}},onChange:{defaultValue:null,description:"Passes new form data upon each change to the form",name:"onChange",required:!1,type:{name:"(annotations: Record<string, unknown>) => void"}},hideActions:{defaultValue:null,description:"If true, the editor will not render its own submit UI.",name:"hideActions",required:!1,type:{name:"boolean"}}}}}catch{}export{O as A,Z as S};
