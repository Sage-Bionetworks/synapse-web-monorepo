import{g as f}from"./userProfileHandlers-Dk8Letwr.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-D9eBDzux.js";import{A}from"./AccountLevelBadges-BZGqV1i-.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-DQHSwxex.js";import"./iframe-CEgLHbLB.js";import"./mockEntity-DsADbgwm.js";import"./mockFileEntity-DPgruogS.js";import"./StringUtils-C95LMFI-.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-BMu77dYr.js";import"./mockTeam-BdxrQ-pX.js";import"./SynapseConstants-BzHhhFhS.js";import"./OrientationBanner-D3KAsP4w.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-Ceq_OOHv.js";import"./index-BAUB8VxZ.js";import"./spreadSx-CwcO6WA9.js";import"./react-YFCJrhYh.js";import"./FullWidthAlert-T2yM82RP.js";import"./Alert-CXVLc8vo.js";import"./createTheme-QOrAiC8v.js";import"./DefaultPropsProvider-BNmp3YDg.js";import"./useSlot-DvaOHrx3.js";import"./useForkRef-BOC0myPy.js";import"./createSimplePaletteValueFilter-Dk8LfQw2.js";import"./createSvgIcon-cYtzdOwk.js";import"./Close-NLvB7XHm.js";import"./IconButton-BFqyrDq4.js";import"./useTimeout-YGtm5ulj.js";import"./ButtonBase-Xz_eRae2.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-ePAruf6a.js";import"./Paper-B6p4m8Ct.js";import"./useTheme-DC3v4V5z.js";import"./useTheme-CE_afK7b.js";import"./Stack-CAodq4L2.js";import"./useThemeProps-Q4q-imGj.js";import"./getThemeProps-CB6wP6r1.js";import"./extendSxProp-68QBnwPw.js";import"./Box-CJ_mc_KC.js";import"./AlertTitle-ysdi09bF.js";import"./Typography-DBeu9HJZ.js";import"./index-Byhwwvse.js";import"./ClickAwayListener-DHpiF-gd.js";import"./getReactElementRef-o5Cru5cj.js";import"./index-dVVgrbsH.js";import"./index-DZrE4oxZ.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-OlzdlbwJ.js";import"./Tooltip-D5KeB_wU.js";import"./index-BTEM2iTZ.js";import"./useControlled-CI2yt4-5.js";import"./Popper-DIHHlKWR.js";import"./Button-C6MKCi2u.js";import"./uniqueId-CZXu24eu.js";import"./toString-c2hWB_jG.js";import"./isArray-fTt9doPm.js";import"./isSymbol-BaLaqVNf.js";import"./times-Bj8erGIf.js";import"./_Uint8Array-CY2fm9S_.js";import"./identity-DKeuBCMA.js";import"./toInteger-Dz1HtPbN.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-DUgtzxZD.js";import"./QueryClientProvider-Db2j_WHz.js";import"./Link-Cez3cIoy.js";import"./Collapse-DrBAZrf0.js";import"./_baseUniq-C6s3Loyy.js";import"./_getTag-wZmIsRPD.js";import"./isEqual-CSeg9Uiq.js";import"./noop-DX6rZLP_.js";import"./merge-D2adZoeu.js";import"./_initCloneObject-BfCQnLPN.js";import"./tinycolor-Begke6kS.js";import"./Fade-D7n7NZNC.js";import"./inputBaseClasses-CVINOxDr.js";import"./calculateFriendlyFileSize-BvXrAxXk.js";import"./CheckCircleTwoTone-D4WLn7r6.js";import"./InfoTwoTone-Cd8riuW_.js";import"./useMutation-DbSD0zUI.js";import"./dayjs.min-Bq55Fdj0.js";import"./chunk-AYJ5UCUI-C9vLqfh1.js";import"./cloneDeep-D1-JOxW9.js";import"./Skeleton-C0B6B6Td.js";import"./AccountLevelBadge-fOgsmk8t.js";import"./Card-D1YioRop.js";import"./ConfirmationDialog-GQD_o8Bw.js";import"./DialogBase-BEBKH1Q4.js";import"./Close-DaJfEI02.js";import"./HelpPopover-R79mRVb5.js";import"./MarkdownPopover-DmG-PuWd.js";import"./LightTooltip-D_pJ7RDv.js";import"./MarkdownSynapse-CqSHDIow.js";import"./SkeletonButton-CraWa5E9.js";import"./SkeletonInlineBlock-ChqDOmvw.js";import"./SkeletonTable-CgpiacY2.js";import"./SkeletonParagraph-DSnwyRng.js";import"./HelpOutlineTwoTone-XGcNpEm7.js";import"./Dialog-C-nhYQ9N.js";import"./DialogActions-B6DC0gkC.js";import"./Modal-al2Bao74.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-D1kaju81.js";import"./DialogContent-9i17Q2Cg.js";import"./DialogTitle-GfuR6Y15.js";import"./LoadingScreen-8xr-s-oZ.js";import"./LinearProgress-DPDAOGeP.js";import"./ToastMessage-DnGjsI-E.js";import"./CSSTransition-9PNegUcz.js";const kt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Ut=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Ut as __namedExportsOrder,kt as default};
