import{f3 as A,a0 as B,j as s,c0 as D}from"./iframe-Ci1lmE8g.js";import{p as I}from"./SqlFunctions-DhkJEscO.js";import{P as L}from"./Plot-C6DKUYa_.js";const q=r=>{var g,h;const{query:c}=r.synapsePlotWidgetParams,{selectedFacets:S,additionalFilters:R,onCustomPlotClick:y,queryContext:d}=r.customPlotParams??{},_={concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",partMask:B,entityId:I(c),query:{sql:c,selectedFacets:S,additionalFilters:R}},{data:l,isLoading:w}=A(_);if(w)return s.jsx(D,{width:"100%",height:"200px"});if(!l)return s.jsx(s.Fragment,{});const{title:j,xtitle:m,ytitle:p,type:k,xaxistype:P,showlegend:C,barmode:F,horizontal:i,displayModeBar:N}=r.synapsePlotWidgetParams,W={displayModeBar:N},a={showlegend:C,title:j,barmode:F};m&&(a.xaxis={title:m}),P&&(a.xaxis={...a.xaxis,type:P}),p&&(a.yaxis={title:p});const o=[],E=i?"h":"v",u=((g=l.queryResult)==null?void 0:g.queryResults.headers)??[],x=((h=l.queryResult)==null?void 0:h.queryResults.rows)??[];if(u.length==0||x.length==0)return s.jsx(s.Fragment,{});for(let t=0;t<u.length-1;t+=1)o[t]={orientation:E,name:u[t+1].name,type:k,x:[],y:[],customdata:[]};for(const t of x)for(let e=1;e<t.values.length;e+=1){const n=t.values,b=o[e-1].x,v=o[e-1].y,Q=o[e-1].customdata;b.push(i?n[e]:n[0]),v.push(i?n[0]:n[e]),Q.push(JSON.stringify(t))}let f;return y&&d&&(f=t=>{const e=JSON.parse(t.points[0].customdata);y({row:e,queryContext:d})}),s.jsx(L,{style:{width:"100%",height:"450px"},layout:a,data:o,config:W,onClick:f})};try{q.displayName="SynapsePlot",q.__docgenInfo={description:"",displayName:"SynapsePlot",props:{synapsePlotWidgetParams:{defaultValue:null,description:"",name:"synapsePlotWidgetParams",required:!0,type:{name:"SynapsePlotWidgetParams"}},customPlotParams:{defaultValue:null,description:"",name:"customPlotParams",required:!1,type:{name:"QueryWrapperPlotNavCustomPlotParams"}}}}}catch{}export{q as S};
