import{j as l}from"./jsx-runtime-Ba9fMlvA.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DsgC4t7y.js";import{g as T}from"./handlers-B8f9X9tJ.js";import{aD as S,M as a}from"./useFiles-Ct8yHZV5.js";import"./OrientationBanner-DJri4Kzp.js";import"./index-Dt8RCK4S.js";import"./StringUtils-tNCAfVhp.js";import{l as _}from"./index-DKUUlkag.js";import{S as E}from"./SynapseFormSubmissionGrid-C_u08nin.js";import"./mockSchema-C1UqCNlZ.js";import"./mockFileEntity-DYno0U1r.js";import"./mock_file_handle-DS_yjaGE.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-uY0poS_U.js";import"./mockTeam-BnOUaZZC.js";import"./SynapseConstants-udfJhW5T.js";import"./uniqueId-Dh8Eo-F7.js";import"./toString-nwJ1m07f.js";import"./isObjectLike-DNalVVPe.js";import"./iframe-JOL0DIag.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-D-tqd1gC.js";import"./times-CKMRw9f7.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger--fdXjpa-.js";import"./asyncJobHandlers-Cgx0S83Z.js";import"./BasicMockedCrudService-B70bh5hl.js";import"./cloneDeep-CKKH_joM.js";import"./_Uint8Array-BkBwBmmf.js";import"./_initCloneObject-B09Yb8G1.js";import"./_getTag-Dz-F_7de.js";import"./isEqual-BRN3P_WC.js";import"./_baseIsEqual-D7Le_Dhe.js";import"./mockAnnotationColumns-DG6o7r-9.js";import"./tableQueryHandlers-y0q-2i9y.js";import"./omit-rMBWrr5b.js";import"./_baseGet-r4txJ35_.js";import"./isNil-DfPOP6hp.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-CO9M1S60.js";import"./_baseFlatten-CyApbEGa.js";import"./pick-CQIJ68yB.js";import"./_baseSet-Ddz39EUD.js";import"./hasIn-CGQuTI3z.js";import"./accessRequirementAclHandlers-DV3C7elw.js";import"./mockAccessRequirementAcls-CRGadmUC.js";import"./mockAccessRequirements-g1HGMnCE.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DHj13qiO.js";import"./accessRequirementHandlers-By68Nl1C.js";import"./wikiHandlers-CJ-gZRFW.js";import"./mockWikiPageKey-CtlUE-Zz.js";import"./teamHandlers-BMcjOPAs.js";import"./dataAccessRequestHandlers-CUoIZIvJ.js";import"./MockResearchProject-ZZccXF3o.js";import"./mock_discussion-DZ4hIbV5.js";import"./fakerUtils-Da0PH_zc.js";import"./index-BRU84yEH.js";import"./mockTableEntity-B13RmRee.js";import"./mockFileEntityACLVariants-BWS_c6Lw.js";import"./entityHandlers-C2p6NYPV.js";import"./mockEntity--AfzzAgP.js";import"./mockEvaluationQueue-DFoHuvVi.js";import"./featureFlagHandlers-fI9KvEox.js";import"./fileHandlers-B5ZYUO0K.js";import"./personalAccessTokenHandlers-CoREt7qk.js";import"./researchProjectHandlers-DtK81PoG.js";import"./resetTwoFactorAuthHandlers-DdZAhK4k.js";import"./userProfileHandlers-CWjS88hX.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-DCPGH_5I.js";import"./FullWidthAlert-Db4YYATT.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-C19m3Cgy.js";import"./createTheme-DJv4KxAa.js";import"./resolveComponentProps-BzkYWVeC.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-DpIKFJcv.js";import"./createSvgIcon-BXRachk3.js";import"./DefaultPropsProvider-CC3RmJFF.js";import"./Close-DK3CWPJx.js";import"./IconButton-QPgr3jad.js";import"./ButtonBase-BzBJSv7k.js";import"./useTimeout-Cb7XUfzj.js";import"./useIsFocusVisible-DJ0VMGRG.js";import"./useEventCallback-nA6SeeXV.js";import"./Paper-C8bYjZ05.js";import"./Stack-DYgZuVBh.js";import"./getThemeProps-FNrSmzJU.js";import"./useTheme-RaTCH1LG.js";import"./Box-C2U2Cla2.js";import"./AlertTitle-DnEBj5ck.js";import"./Typography-DW07qzJw.js";import"./useTheme-Dx1-xZeI.js";import"./Grow-BjBn3HwU.js";import"./index-zJECZUC7.js";import"./utils-DOUzCTI2.js";import"./ClickAwayListener-C_4AhYce.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-D90On-M6.js";import"./index-BAcXyNSJ.js";import"./useControlled-ZTZ0Etwt.js";import"./useId-D7asr5CX.js";import"./Popper-Dig447md.js";import"./Button-DQx1S7a-.js";import"./useQuery-CwaWMnsJ.js";import"./utils-DM63yWLX.js";import"./Link-uk-18KNT.js";import"./Collapse-jddULD66.js";import"./tinycolor-Begke6kS.js";import"./Fade-CILW4bK-.js";import"./Skeleton-DT9L0_5S.js";import"./inputBaseClasses-DtdDEN5W.js";import"./calculateFriendlyFileSize-DkjKyaJA.js";import"./CheckCircleTwoTone-C5t_bAXs.js";import"./InfoTwoTone-B0Nnp4Au.js";import"./mutation-CUQob5G8.js";import"./dayjs.min-tmZNEDTt.js";import"./chunk-AYJ5UCUI-D-lxXuxw.js";import"./index-BEgggBqy.js";import"./react-D_Md03mS.js";import"./util-B5s4jM1D.js";import"./WideButton-BSZeWOpB.js";import"./DeleteTwoTone-BMovBoVO.js";import"./createSvgIcon-A_8_96vT.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-BoZdCkcx.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-BTVef2Ah.js";import"./DialogBase-3JO874xA.js";import"./Close-B7wGHovx.js";import"./HelpPopover-DXQrLbng.js";import"./MarkdownPopover-DrdM6Zx8.js";import"./LightTooltip-Cl8FJVq9.js";import"./MarkdownSynapse-Dx3KK2L6.js";import"./useMutation-C_Cy9bj7.js";import"./SkeletonButton-C9j-UIVc.js";import"./SkeletonInlineBlock-BCH-gab1.js";import"./SkeletonTable-ucykrqSH.js";import"./SkeletonParagraph-B4TCPpu7.js";import"./HelpOutlineTwoTone-0s6MD2QR.js";import"./DialogTitle-DbHol6Nz.js";import"./DialogContent-DH5jqogy.js";import"./Dialog-DWs6_Sk7.js";import"./Modal-fjj2p6BS.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-oAJ03AJh.js";import"./WarningDialog-C2_L37_C.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},To={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const _o=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,_o as __namedExportsOrder,To as default};
