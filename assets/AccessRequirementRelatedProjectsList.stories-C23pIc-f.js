import{M as E,f as _}from"./useFiles-C2-6Q0yh.js";import{l as h}from"./index-DK-So_Z-.js";import{j as r}from"./jsx-runtime-fkddYsRa.js";import"./VerificationSubmission-DKyendrM.js";import"./StringUtils-BcSmk1fX.js";import"./OrientationBanner-B6u9ADNN.js";import"./index-Cv6nX037.js";import{n as x}from"./useAccessRequirements-Bpqektm8.js";import{p as T}from"./pluralize-Dwrd1TRb.js";import{E as O}from"./EntityLink-darwwg9H.js";import{T as M}from"./Typography-Cned48Hn.js";import{L as S}from"./List-BLAw0CPp.js";import{L as k}from"./ListItem-Cp0Az9GM.js";import{A as C}from"./Alert-DDBgpbQe.js";import"./SynapseConstants-B6O6HlOX.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useTimeout-CWy7v3j4.js";import"./FullWidthAlert-ps7c1lte.js";import"./spreadSx-CwcO6WA9.js";import"./Stack-53rHix6w.js";import"./DefaultPropsProvider-MkP_nBB1.js";import"./createTheme-D0G-YdBM.js";import"./extendSxProp-DwLH-5iL.js";import"./getThemeProps-D-_clwMN.js";import"./useTheme-5BzmGwuh.js";import"./Box-BhadhPsK.js";import"./AlertTitle-rtM38Mk8.js";import"./useForkRef-BhjVp7Fj.js";import"./useSlot-D9bUdOMX.js";import"./useTheme-ew_Nfzhg.js";import"./ClickAwayListener-CZsKMghQ.js";import"./getReactElementRef-C8j0xIA6.js";import"./index-yKH7ayG0.js";import"./iframe-DgCb13ZA.js";import"./index-5fD7g6aK.js";import"./ownerDocument-DW-IO8s5.js";import"./Paper-CRdKJZEk.js";import"./Grow-vhaNN5gj.js";import"./Tooltip-B4z_2CfG.js";import"./index-A5Xj5tp_.js";import"./useControlled-C9uiSwtu.js";import"./Popper-CzOnVF7V.js";import"./isFocusVisible-B8k4qzLc.js";import"./Button-CmrMbQmW.js";import"./createSimplePaletteValueFilter-CetX1-So.js";import"./ButtonBase-LNl8xRHv.js";import"./CircularProgress-Ci1F78nB.js";import"./useQuery-B8tUDD-z.js";import"./utils-DLIvMn1C.js";import"./Link-Cc7_4k2q.js";import"./Collapse-DpBQClav.js";import"./_baseUniq-Bj3tTBPP.js";import"./_Uint8Array-DSvqUWPA.js";import"./_baseTimes-36S_kd0L.js";import"./isObjectLike-pddUo-wZ.js";import"./isArray-Dxzbedgu.js";import"./_getTag-e_ukLjVm.js";import"./isEqual-CfffNHyk.js";import"./merge-CF373bos.js";import"./_initCloneObject-CBrcGSWB.js";import"./identity-DKeuBCMA.js";import"./createSvgIcon-BOkPVFng.js";import"./tinycolor-Begke6kS.js";import"./Fade-BqFRP1kA.js";import"./inputBaseClasses-cUXSQoU1.js";import"./calculateFriendlyFileSize-CMzKI-kY.js";import"./CheckCircleTwoTone-BgfHa_Vb.js";import"./InfoTwoTone-Csrt26-i.js";import"./index-DoLSYN_E.js";import"./useMutation-DytpqhvV.js";import"./dayjs.min-_KuDUFdc.js";import"./chunk-AYJ5UCUI-P89pSlIj.js";import"./cloneDeep-CwdKXb1h.js";import"./Skeleton-wOC2k2PG.js";import"./util-CeVaPnCP.js";import"./index-Vb_Vm6Or.js";import"./react-Dmo1sR7O.js";import"./index-wkg1D99J.js";import"./_baseOrderBy-G3zJl2X4.js";import"./toString-DvuKfUEq.js";import"./isSymbol-CHhO1Bz5.js";import"./_baseGet-CVCdV1Ju.js";import"./_baseIteratee-BKdGc3ZN.js";import"./hasIn-B0ftZtDc.js";import"./_baseMap-l7Yvyz-A.js";import"./_baseEach-DeyF60pI.js";import"./useQueries-BLA8_bOE.js";import"./useInfiniteQuery-C8jlw8TN.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./useEntity-Co00Ievu.js";import"./pickBy-BZK88SPJ.js";import"./isString-C-Wiq-we.js";import"./toInteger-DykcHzSj.js";import"./pick-CM_JQSJv.js";import"./_baseSet-C0hqn8tX.js";import"./omit-BNKUVlAJ.js";import"./_baseSlice-F8doVSIJ.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntityBundle-CbSdjhfs.js";import"./useGetEntityHeaders-usCoOupV.js";import"./EntityIcon-C3xPFs8T.js";import"./IconSvg-BaMv0zRw.js";import"./LayersTwoTone-D0El_FPe.js";import"./ContentCopyTwoTone-qVwSRsLe.js";import"./HelpOutlineTwoTone-BfQEzetQ.js";import"./ErrorOutlined-Bre7TE1Q.js";import"./GetAppTwoTone-FD9IKOWy.js";import"./InfoOutlined-Dh2F-a4e.js";import"./PhoneTwoTone-BQNx281W.js";import"./DeleteTwoTone-B4KzBZke.js";import"./ErrorChip-B8w3Z0ge.js";import"./Chip-BOXh1u--.js";import"./Avatar-Ck0-wSZ2.js";import"./isHostComponent-DVu5iVWx.js";import"./isMuiElement-CvGm1-rU.js";import"./listItemButtonClasses-CfgYGE1j.js";import"./Close-CqKNMRrw.js";import"./IconButton-C7gfjzB0.js";const c=p=>{const n={ids:[p.accessRequirementId]},{data:e,isError:a,error:f}=x(n),t=(e==null?void 0:e.pages.flatMap(o=>o.results)[0])??void 0,d=(t==null?void 0:t.relatedProjectIds.length)||0,A=`${T("project",d,!0)}${d>0?":":""}`;return r.jsxs(r.Fragment,{children:[t&&r.jsxs(r.Fragment,{children:[r.jsx(M,{variant:"body1",children:A}),r.jsx(S,{sx:{listStyleType:"disc",pl:4},children:t.relatedProjectIds.map(o=>r.jsx(k,{sx:{display:"list-item",py:"4px",".no-margin-y":{my:0}},children:r.jsx(O,{entity:o,link:!1,showIcon:!1,className:"no-margin-y"})},o))})]}),a&&r.jsx(C,{severity:"error",children:f.message})]})};try{c.displayName="AccessRequirementRelatedProjectsList",c.__docgenInfo={description:"",displayName:"AccessRequirementRelatedProjectsList",props:{accessRequirementId:{defaultValue:null,description:"",name:"accessRequirementId",required:!0,type:{name:"number"}}}}}catch{}const He={title:"Governance/AccessRequirementRelatedProjectsList",component:c},i={args:{accessRequirementId:9603055}},s={args:{accessRequirementId:9605913}},m={args:{accessRequirementId:1234567},parameters:{stack:"mock",msw:{handlers:[h.rest.post(`${E}${_}`,async(p,n,e)=>{const a={results:[{id:"1234567",type:"org.sagebionetworks.repo.model.ManagedACTAccessRequirement",createdOn:"2017-08-23T18:48:20.892Z",modifiedOn:"2023-12-14T00:43:41.315Z",name:"Team AR without Related Projects",version:"1",relatedProjectIds:[],reviewerIds:[]}]};return n(e.status(200),e.json(a))})]}}};var l,u,R;i.parameters={...i.parameters,docs:{...(l=i.parameters)==null?void 0:l.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 9603055
  }
}`,...(R=(u=i.parameters)==null?void 0:u.docs)==null?void 0:R.source}}};var j,g,y;s.parameters={...s.parameters,docs:{...(j=s.parameters)==null?void 0:j.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 9605913
  }
}`,...(y=(g=s.parameters)==null?void 0:g.docs)==null?void 0:y.source}}};var I,P,q;m.parameters={...m.parameters,docs:{...(I=m.parameters)==null?void 0:I.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 1234567
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [
      // searchAccessRequirements
      rest.post(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_SEARCH}\`, async (req, res, ctx) => {
        const zeroRelatedProjects = {
          results: [{
            id: '1234567',
            type: 'org.sagebionetworks.repo.model.ManagedACTAccessRequirement',
            createdOn: '2017-08-23T18:48:20.892Z',
            modifiedOn: '2023-12-14T00:43:41.315Z',
            name: 'Team AR without Related Projects',
            version: '1',
            relatedProjectIds: [],
            reviewerIds: []
          }]
        };
        return res(ctx.status(200), ctx.json(zeroRelatedProjects));
      })]
    }
  }
}`,...(q=(P=m.parameters)==null?void 0:P.docs)==null?void 0:q.source}}};const Ke=["ManyProjects","OneProject","ZeroProjectsMock"];export{i as ManyProjects,s as OneProject,m as ZeroProjectsMock,Ke as __namedExportsOrder,He as default};
