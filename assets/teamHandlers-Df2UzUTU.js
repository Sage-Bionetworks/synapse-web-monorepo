import{l as o}from"./index-CGGsuVLc.js";import{M as l}from"./mock_user_profile-DyzXylki.js";import{a as v,b as C,c as R,d as _,e as T,f as j,g as q,h as H}from"./mockTeam-CxaV4Vj8.js";import{u as g}from"./uniqueId-DePWDRrE.js";import{bd as A}from"./SynapseClient-D4M9LQNp.js";const i="1234",O="syn12345678",b="f1b29c62-e987-4e69-9cec-198bf017a586",S=e=>{const s=Math.pow(10,e-1);return Math.floor(Math.random()*9*s+s)},k={id:i,etag:b,projectId:O,participantTeamId:String(T)},p=e=>{const s=S(6).toString(),a=S(6).toString();return{id:s,etag:b,challengeId:i,teamId:a,message:`Message for team ${a}`,...e}},$=[p({teamId:String(v),challengeId:i}),p({teamId:String(C),challengeId:i}),p({teamId:String(R),challengeId:i}),p({teamId:String(_),challengeId:i})],h=[...$];function E(e){return o.rest.get(`${e}/repo/v1/entity/:id/challenge`,async(s,a,t)=>{const n={id:i,etag:"f5e9df54-360b-4ede-9a17-f7f5680c8dd4",projectId:s.params.id,participantTeamId:String(T)};return a(t.status(200),t.json(n))})}function w(e){return o.rest.get(`${e}/repo/v1/challenge/:challengeId/challengeTeam`,async(s,a,t)=>{const n={results:h,totalNumberOfResults:h.length};return a(t.status(200),t.json(n))})}function D(e){return o.rest.post(`${e}/repo/v1/challenge/:challengeId/challengeTeam`,async(s,a,t)=>{const r={...await s.json(),id:g(),etag:"abcdef0987654321"};return h.push(r),a(t.status(200),t.json(r))})}function B(e){return o.rest.get(`${e}/repo/v1/challenge/:challengeId/submissionTeams`,async(s,a,t)=>{const n={results:[],totalNumberOfResults:0};return a(t.status(200),t.json(n))})}function x(e){return[E(e),B(e),D(e),w(e)]}const M=[...H];function d(e){return M.find(s=>s.id===e)}const f=[...j];function K(e,s){return f.find(a=>a.teamId===e&&a.userId===s)}function L(e){f.push(e)}const y=[...q];function N(e){return o.rest.get(`${e}/repo/v1/team/:teamId`,async(s,a,t)=>{const n=d(s.params.teamId);if(n)return a(t.status(200),t.json(n));const r={reason:`Team id: '${s.params.teamId}' does not exist`};return a(t.status(404),t.json(r))})}function U(e){return o.rest.post(`${e}/repo/v1/teamList`,async(s,a,t)=>{const n=await s.json(),r=[];for(const u of n.list){const c=d(u.toString());if(!c){const I={reason:`Team with id ${u} not found`};return a(t.status(404),t.json(I))}r.push(c)}const m={concreteType:"org.sagebionetworks.repo.model.Team",list:r};return a(t.status(200),t.json(m))})}function J(e){return o.rest.post(`${e}/repo/v1/team`,async(s,a,t)=>{const r={...await s.json(),createdBy:String(l),createdOn:new Date().toISOString(),etag:"etag",id:g(),modifiedBy:String(l),modifiedOn:new Date().toISOString()};return M.push(r),f.push({teamId:r.id,userId:String(l),isMember:!0,hasOpenInvitation:!1,hasOpenRequest:!1,canJoin:!1,membershipApprovalRequired:!1,hasUnmetAccessRequirement:!1,canSendEmail:!0}),await A(250),a(t.status(201),t.json(d(r.id)))})}function G(e){return o.rest.get(`${e}/repo/v1/team/:teamId/member/:memberId/membershipStatus`,async(s,a,t)=>{const n=s.params.teamId,r=s.params.memberId;let m,u;return d(n)?(m=K(n,r)??{teamId:n,userId:r,isMember:!1,hasOpenInvitation:!1,hasOpenRequest:!1,canJoin:!0,membershipApprovalRequired:!1,hasUnmetAccessRequirement:!1,canSendEmail:!1},u=200):(m={reason:`getTeamMembershipStatusHandler could not locate a team with ID ${n}`},u=404),a(t.status(u),t.json(m))})}function P(e){return o.rest.put(`${e}/repo/v1/team/:teamId/member/:memberId`,async(s,a,t)=>{const n=s.params.teamId,r=s.params.memberId;let m,u;return d(n)?(L({teamId:n,userId:r,isMember:!0,hasOpenInvitation:!1,hasOpenRequest:!1,canJoin:!0,membershipApprovalRequired:!1,hasUnmetAccessRequirement:!1,canSendEmail:!1}),m="",u=201):(m={reason:`getTeamMembershipStatusHandler could not locate a team with ID ${n}`},u=404),a(t.status(u),t.json(m))})}function F(e){return o.rest.post(`${e}/repo/v1/membershipRequest`,async(s,a,t)=>{const r={...await s.json(),id:g(),createdOn:new Date().toISOString(),createdBy:String(l)};return a(t.status(201),t.json(r))})}function z(e){return o.rest.post(`${e}/repo/v1/membershipInvitation`,async(s,a,t)=>{const r={...await s.json(),id:g(),createdOn:new Date().toISOString(),createdBy:String(l)};return y.push(r),a(t.status(201),t.json(r))})}function Q(e){return o.rest.get(`${e}/repo/v1/user/:userId/openInvitation`,async(s,a,t)=>{const n=y.filter(m=>String(m.inviteeId)===String(s.params.userId)),r={results:n,totalNumberOfResults:n.length};return a(t.status(200),t.json(r))})}function ee(e){return[N(e),U(e),J(e),G(e),P(e),F(e),z(e),Q(e)]}export{x as a,ee as g,k as m};
