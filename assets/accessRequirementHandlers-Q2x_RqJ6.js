import{d as S,e as A,E as g,a as l,f,b as T}from"./useFiles-CzKjjYtp.js";import{O as _,S as C}from"./VerificationSubmission-D0sL2gwz.js";import{M as I}from"./SelfSignAccessRequirement-C_01XAIc.js";import{h as r,H as a}from"./index-DMkgKICF.js";import{d as m,a as q,h as y,i as w,j as M,k as E,l as $}from"./mockAccessRequirements-wMjc54mX.js";import{m as u}from"./wikiHandlers-CpJWG-qA.js";import{M as R}from"./mock_user_profile-Bg50HGfI.js";const d=new Map,j=t=>[r.get(`${t}${S(":id")}`,({params:s})=>{let e=404,o={concreteType:"org.sagebionetworks.repo.model.ErrorResponse",reason:`Mock Service worker could not find an access requirement with ID ${s.id}`};const n=m.find(c=>c.id.toString()===s.id);return n&&(o=n,e=200),a.json(o,{status:e})}),r.get(`${t}${A(":id")}`,({params:s})=>{let e=404,o={concreteType:"org.sagebionetworks.repo.model.ErrorResponse",reason:`Mock Service worker could not find an access requirement wiki page key with AR ID ${s.id}`};const n=y.find(c=>c.ownerObjectType===_.ACCESS_REQUIREMENT&&String(c.ownerObjectId)===s.id);return n&&(o=n,e=200),a.json(o,{status:e})})];function k(t){return r.post(`${t}${f}`,async({request:s})=>{const e=await s.json();return a.json({...e,id:M,etag:w},{status:201})})}function N(t){return r.put(`${t}${S(":id")}`,async({request:s})=>{const e=await s.json();return a.json(e,{status:200})})}const B=(t,s=":entityId",e=m)=>[r.get(`${t}${g(s)}`,()=>{const n={results:e,totalNumberOfResults:e.length};return a.json(n,{status:200})})],h=(t,s=[q])=>r.get(`${t}/repo/v1/team/:teamId/accessRequirement`,()=>{const o={results:s,totalNumberOfResults:s.length};return a.json(o,{status:200})}),U=(t,s)=>(s&&s.forEach(e=>{d.set(e.accessRequirementId,e)}),[r.get(`${t}${l(":id")}`,({params:e})=>{let o;const n=m.find(i=>e.id===i.id.toString()),c=d.get(e.id);if(c&&(o=c),!o&&n){const i=n.concreteType===I;o={accessRequirementId:e.id,concreteType:i?"org.sagebionetworks.repo.model.dataaccess.ManagedACTAccessRequirementStatus":"org.sagebionetworks.repo.model.dataaccess.BasicAccessRequirementStatus",isApproved:!0,currentSubmissionStatus:i?{submissionId:u.id,submittedBy:u.submittedBy,modifiedOn:u.modifiedOn,state:C.APPROVED}:void 0}}const p=o?200:404;return a.json(o,{status:p})})]);function b(t){return r.post(`${t}/repo/v1/accessApproval`,async({request:s})=>{const e=await s.json(),o=200,n={...e,id:123,etag:"mock-etag",createdOn:new Date().toISOString(),modifiedOn:new Date().toISOString(),createdBy:String(R),modifiedBy:String(R)};return d.set(String(e.requirementId),{accessRequirementId:String(e.requirementId),concreteType:"org.sagebionetworks.repo.model.dataaccess.BasicAccessRequirementStatus",isApproved:!0}),a.json(n,{status:o})})}function D(t){return r.post(`${t}${T}`,async({request:s})=>{let e;return(await s.json()).nextPageToken===E.nextPageToken?e=$:e=E,a.json(e,{status:200})})}function x(t){return[...j(t),k(t),N(t),...B(t),h(t),...U(t),b(t),D(t)]}export{B as a,U as b,x as c,j as g};
