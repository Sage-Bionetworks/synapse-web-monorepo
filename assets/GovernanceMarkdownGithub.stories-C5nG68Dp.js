import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-C5KQCC6t.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-CxG_bA2x.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-D5buD7U6.js";import"./SynapseConstants-u69kbdqM.js";import"./OrientationBanner-Ddf3lLdM.js";import"./index-CvhDhX6u.js";import"./index-B1W5WNgJ.js";import"./iframe-MHlXG0HA.js";import"./spreadSx-CwcO6WA9.js";import"./react-BTSVRfVy.js";import"./FullWidthAlert-C_BBQmTm.js";import"./Alert-D_dzlE-h.js";import"./createTheme-4YtjTmS_.js";import"./DefaultPropsProvider-C3VHkWTY.js";import"./useSlot-2q2LYMo2.js";import"./useForkRef-CaEGGiEl.js";import"./createSimplePaletteValueFilter-D2FMHYeY.js";import"./createSvgIcon-l1RjMTva.js";import"./Close-CF2uOmcv.js";import"./IconButton-CGQqBcgV.js";import"./useTimeout-Cs2HoDjc.js";import"./ButtonBase-ChPpEqOK.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BKDJ5rkw.js";import"./Paper-BvVO5eUD.js";import"./useTheme-QhhyLIuU.js";import"./useTheme-DOuWHGWV.js";import"./Stack-BL7qtwo2.js";import"./extendSxProp-DB9awf9E.js";import"./getThemeProps-D9TNRttJ.js";import"./Box-8QQP0DYh.js";import"./AlertTitle-BhuLBLYK.js";import"./Typography-_6VRFWmU.js";import"./index-C-gqQIMz.js";import"./ClickAwayListener-t0pKiAG_.js";import"./getReactElementRef-BQo3qkIg.js";import"./index-DEWSSy9Q.js";import"./index-DC5kNJrm.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-pQq64t3k.js";import"./Tooltip-UlufiAyt.js";import"./index-B1p0gP3S.js";import"./useControlled-BUOgx5qY.js";import"./Popper-Cm1i59-L.js";import"./Button-D03MFFMq.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-Bv8ltnIt.js";import"./QueryClientProvider-DNzmMbq6.js";import"./Link-B71KkcZ0.js";import"./Collapse-1t69axGl.js";import"./_baseUniq-BImmrfwB.js";import"./_Uint8Array-DrGc3PPg.js";import"./isArray-CVsAWsIX.js";import"./_getTag-BU9Y5Ey-.js";import"./isEqual-BYvDwKrb.js";import"./merge-Dth-e1TY.js";import"./_initCloneObject-sfaIGWP2.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-Bv3eCvAv.js";import"./inputBaseClasses-DUGrsJdw.js";import"./calculateFriendlyFileSize-CNlbHJx8.js";import"./CheckCircleTwoTone-CDt56jj-.js";import"./InfoTwoTone-teTa1z1M.js";import"./useMutation-_Uc1Hbj5.js";import"./dayjs.min-BUdMulCI.js";import"./chunk-AYJ5UCUI-DwXOjjlr.js";import"./cloneDeep-BUF6UF9n.js";import"./Skeleton-BNsxiZii.js";import"./SkeletonButton-ZbaHnkmZ.js";import"./SkeletonInlineBlock-CjOUgXXg.js";import"./SkeletonTable-DuseKicN.js";import"./times-CV7oWwXM.js";import"./toInteger-8U8aJCYt.js";import"./isSymbol-apFP-hzS.js";import"./SkeletonParagraph-CTXsD5WL.js";import"./MarkdownSynapse-DNjiVrJd.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
