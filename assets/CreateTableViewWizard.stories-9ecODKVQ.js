import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{bt as be}from"./useFiles-Cl7iPkP2.js";import{E as i,b as se,o as le,h as ge}from"./VerificationSubmission-OWkqLMYZ.js";import{e as F,o as we}from"./StringUtils-C5rFena9.js";import"./OrientationBanner-Cay0I_Rt.js";import{r as a}from"./index-CQ6hJmgW.js";import{k as Le,o as Oe}from"./useEntity-Bx2L7Scf.js";import{u as Ae,a as xe,T as Ne}from"./TableColumnSchemaForm-CarB8q3X.js";import{u as Be}from"./useMutation-EAVGskWB.js";import{D as Me}from"./DialogBase-DUmxFYQY.js";import{E as je}from"./EntityViewMaskEditor-TQ9qM6_z.js";import{E as ve}from"./EntityViewScopeEditor-D0o78DH_.js";import{T as Y}from"./TextField-DGHHRfkF.js";import{B as y}from"./Box-Cntk2MIO.js";import{T as pe}from"./Typography-Dm61OQER.js";import{L as _}from"./Link-DPVf6eQF.js";import{S as Pe}from"./SubmissionViewScopeEditor-CHTr6cUO.js";import{u as me}from"./useGetFeatureFlag-Awoomsdy.js";import{W as ce,a as T,b as I}from"./WizardChoiceButton-Bq74aKmG.js";import{i as We}from"./index-CFDpsDqI.js";import{A as R}from"./Alert-hAudTaki.js";import{B as U}from"./Button-D65AIMBA.js";import{d as ke}from"./ToastMessage-CwigBsvZ.js";import{f as De}from"./index-BGmudB0S.js";import"./SynapseConstants-k8J4G2g0.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useTimeout-_fh52LB_.js";import"./FullWidthAlert-CbdaCswA.js";import"./spreadSx-CwcO6WA9.js";import"./Stack-BtIxaE9P.js";import"./DefaultPropsProvider-ZI2sxVbZ.js";import"./createTheme-DcluBHDz.js";import"./extendSxProp-YRmzrdHl.js";import"./getThemeProps-DSATpSeZ.js";import"./useTheme-27YPboVz.js";import"./AlertTitle-D24R2e_4.js";import"./useForkRef-DooywLql.js";import"./useSlot-66fkwDAg.js";import"./useTheme-BGuepDlr.js";import"./ClickAwayListener-VYYUrldH.js";import"./getReactElementRef-BoHY-GqX.js";import"./index-DGNyRJeG.js";import"./iframe-DBLSlUlM.js";import"./index-CIWwvEWD.js";import"./ownerDocument-DW-IO8s5.js";import"./Paper-D-DccQnO.js";import"./Grow-DpHErTTs.js";import"./Tooltip-kPWKAtR8.js";import"./index-DLIdZaB1.js";import"./useControlled-CYPIr_yw.js";import"./Popper-Cpq6kGnG.js";import"./isFocusVisible-B8k4qzLc.js";import"./useQuery-BLF80Y5p.js";import"./QueryClientProvider-LHOBn88c.js";import"./Collapse-B5PXfbL3.js";import"./_baseUniq-C1GjGhSb.js";import"./_Uint8Array-VToj_l7w.js";import"./isArray-CCh7EMNH.js";import"./_getTag-DadTTLKK.js";import"./isEqual-DDdqe_xI.js";import"./merge-BIg5srE9.js";import"./_initCloneObject-DleR7C7U.js";import"./identity-DKeuBCMA.js";import"./createSvgIcon-CJYbEqxG.js";import"./tinycolor-Begke6kS.js";import"./Fade-BJT3-mqI.js";import"./inputBaseClasses-DXATOCIJ.js";import"./calculateFriendlyFileSize-BM-0xruH.js";import"./CheckCircleTwoTone-CKcbuZl5.js";import"./InfoTwoTone-yPYIEBIY.js";import"./index-Ci7ktC4R.js";import"./createSimplePaletteValueFilter-oYjRqgE7.js";import"./dayjs.min-SyJWqs4d.js";import"./chunk-AYJ5UCUI-zqOAelV1.js";import"./cloneDeep-BdpZvwEq.js";import"./Skeleton-jZRJXesW.js";import"./index-8ZlaN0KU.js";import"./react-CekjFg9U.js";import"./pickBy-COwu_Elh.js";import"./isString-tWhX51s7.js";import"./toInteger-8aCWWukh.js";import"./isSymbol-KNtqQZzG.js";import"./toString-DyQ4XWX5.js";import"./_baseIteratee-D3kDtpaW.js";import"./_baseGet-CW-MqwlK.js";import"./hasIn-CWwoDuh3.js";import"./pick-NCgTGhJN.js";import"./_baseSet-BXLKOUKe.js";import"./omit-BzE4_jr7.js";import"./_baseSlice-F8doVSIJ.js";import"./useQueries-DaVpjOy1.js";import"./useInfiniteQuery-BMRuormX.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntityBundle-DBlkkmMq.js";import"./SchemaDrivenAnnotationEditor-DFbgQsno.js";import"./ConfirmationDialog-CfMT846k.js";import"./JsonSchemaForm-Bwb80iKq.js";import"./enums-L_V5gAX6.js";import"./_arrayReduce-CrxnWFSq.js";import"./_baseEach-CJGZE3uM.js";import"./times-lWFgWeTw.js";import"./uniq-CGQUvay5.js";import"./forEach-CuA6uw0P.js";import"./GridLegacy-BgWL3ReL.js";import"./MarkdownPopover-CZBunLtt.js";import"./LightTooltip-BI8pj5Dh.js";import"./MarkdownSynapse-2lX_1nnF.js";import"./SkeletonButton-nz9AKRVi.js";import"./SkeletonInlineBlock-MByo-9se.js";import"./SkeletonTable-BiGLsZlp.js";import"./SkeletonParagraph-rlYLFQuL.js";import"./HelpTwoTone-DZhEOzBb.js";import"./IconButton-Bh69he5-.js";import"./ButtonBase-Bov65eTU.js";import"./CircularProgress-ASAwFG9e.js";import"./InputLabel-CA3KrGj_.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-CeyPgzti.js";import"./FormLabel-DeXhiZ_f.js";import"./ContentCopy-C62onoQo.js";import"./Close-Ca2zrBx9.js";import"./ArrowUpward-CgkRbz6C.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./groupBy-P2YCQ_OA.js";import"./_createAggregator-BcOqbsOp.js";import"./_baseMap-qL16OrZd.js";import"./List-Cezn6cCV.js";import"./ListItem-DT0FNQ9Z.js";import"./isHostComponent-DVu5iVWx.js";import"./isMuiElement-Dr9L-TcW.js";import"./listItemButtonClasses-D_3y3-p-.js";import"./FormHelperText-BcSZeWBr.js";import"./DateTimePicker-BxMg_uuW.js";import"./localizedFormat-BBf4qU12.js";import"./utc-cG5XkN0E.js";import"./useMobilePicker-C5sOl5Jd.js";import"./index-C265-ZiD.js";import"./index-Chjiymov.js";import"./CSSTransition-DvVpW01J.js";import"./Modal-D2Jr1YHO.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-BSvTrvyy.js";import"./Dialog-DWzrvGdu.js";import"./DialogContent-BuyPuDUI.js";import"./visuallyHidden-Dan1xhjv.js";import"./FormControl-Dls8VPyi.js";import"./InputAdornment-C4iNvHJV.js";import"./index-BqHX6IHD.js";import"./Chip-DXgFpEQ_.js";import"./Tabs-BLHJYPxo.js";import"./debounce-Be36O1Ab.js";import"./KeyboardArrowRight-Kb3f7bhx.js";import"./Divider-Ct5sbIbU.js";import"./dividerClasses-CfNFaKnv.js";import"./MenuItem-BNj4QSpS.js";import"./MenuList-DtEADRcF.js";import"./Autocomplete-BcnTIOYA.js";import"./Input-354S_uzT.js";import"./InputBase-D3w5HAx6.js";import"./Select-DxdS4Alx.js";import"./Menu-CQGpZ8E5.js";import"./Popover-B3bhfQgI.js";import"./mergeSlotProps-CjZ5cNEj.js";import"./Close-CHeVeGkX.js";import"./usePreviousProps-BOklRRjC.js";import"./LoadingScreen-BVccTMsN.js";import"./LinearProgress-Zb5wBOqW.js";import"./use-deep-compare-effect.esm-DfP-d6ob.js";import"./TextWidget-sz_z1ynu.js";import"./pluralize-BnL2QRWv.js";import"./MultiValueField-DZQG4KVA.js";import"./DateFormatter-CZkSou3f.js";import"./JSONArrayEditorModal-B9pl-VmA.js";import"./papaparse.min-D1KxGBLm.js";import"./EntityFinderModal-CFVpijl1.js";import"./WarningDialog-CPiaxHSz.js";import"./EntityFinder-D1vwWsht.js";import"./IconSvg-Dmyzu1P_.js";import"./LayersTwoTone-BFG_oXCk.js";import"./ContentCopyTwoTone-hVp_kL4c.js";import"./HelpOutlineTwoTone-hly0I2B1.js";import"./ErrorOutlined-DFCQsPsH.js";import"./GetAppTwoTone-XlFThG2R.js";import"./InfoOutlined-BeSxFQw_.js";import"./PhoneTwoTone-DvUGS8-r.js";import"./DeleteTwoTone-BqNVxSMh.js";import"./Search-2w-HzWu5.js";import"./defineProperty-CegpTSss.js";import"./useEntitySelection-CIes1HGh.js";import"./useGetEntityChildren-BpXnn8Gg.js";import"./StyledTanStackTable-aO0Q-XG_.js";import"./StyledTableContainer-MbXxeHr5.js";import"./ExpandCollapseButton-CLAGndxr.js";import"./index-BaBf5lof.js";import"./index-DQ8Cc3ao.js";import"./const-BP60AzNb.js";import"./ColumnHeader-DPxGKnwI.js";import"./EnumFacetFilterUI-XSwePHHh.js";import"./FacetFilterHeader-D3B_JusO.js";import"./FormControlLabel-BSrhzDYu.js";import"./Checkbox-DDarvAtn.js";import"./SwitchBase-5gWg7OzZ.js";import"./Radio-BU68oKLG.js";import"./useDownloadList-BB6Nta6F.js";import"./DownloadConfirmationUtils-1A6ymct1.js";import"./EntityBadgeIcons-DffTNhlx.js";import"./index-V3nsILzo.js";import"./EntityModal-DEaeS7QR.js";import"./FileHandleUtils-CigPT_BJ.js";import"./UserBadge-BGBSni4P.js";import"./Card-aZFjCdWE.js";import"./Avatar-BnKRMBNS.js";import"./LockTwoTone-deFMmpOO.js";import"./EntityIcon-iauZp8Wk.js";import"./FileEntityDirectDownload-Bh9vNOeQ.js";import"./DirectDownload-BCUR60WZ.js";import"./SynapseTableConstants-2qH3fDlQ.js";import"./HelpPopover-CbFb29Zr.js";import"./immutable.es-BJjDfH8f.js";import"./useFavorites-DqDf1gN0.js";import"./useGetEntityHeaders-0le5t1zC.js";import"./NoSearchResults-C8Fw1lGf.js";import"./DropdownSelect-zi10lBkq.js";import"./getValidReactChildren-CFpKtmRi.js";import"./index.esm-C5PY9PYK.js";import"./DialogTitle-DLtXXAKV.js";import"./FormGroup-CBcRDd4q.js";import"./EntityHeaderTable-UplX7LyX.js";import"./EntityHeaderTableCellRenderers-C8faT3as.js";import"./EntityLink-Bcq9kDyM.js";import"./ErrorChip-eAXWhefX.js";import"./useDebouncedEffect-AtihvTns.js";import"./upperFirst-B1H-yc4z.js";import"./_stringToArray-N8cAV6t0.js";import"./useEvaluation-Dfo3_5AD.js";import"./EvaluationFinder-C8laAok-.js";import"./Grid-DSNped25.js";import"./ListItemIcon-C2v4NSey.js";import"./ListItemText-BN4poL57.js";import"./RadioGroup-DBDYC8a9.js";import"./Slider-DgseMOel.js";import"./index-C148XJoK.js";import"./uniqueId-CKz47GJY.js";function Fe(t){return Be({...t,mutationFn:r=>be(r.sql,r.entityType)})}const Re=e.jsxs(y,{sx:{mb:2.5},children:[e.jsx(pe,{variant:"body1",sx:{color:"grey.700",mb:1.25},children:"If you store normalized data in Synapse tables, views, or datasets, you can combine separate data sources using Materialized Views. A materialized view is a type of Synapse table that is defined using a Synapse SQL statement, which can contain SQL keywords such as JOIN and UNION to combine existing Synapse tables."}),e.jsx(_,{href:"https://help.synapse.org/docs/Combining-Data-from-Multiple-Table-Sources.2973270158.html",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about Materialized Views"})]}),Ue=e.jsx(y,{sx:{mb:2.5},children:e.jsx(pe,{variant:"body1",sx:{color:"grey.700",mb:1.25},children:"A Synapse Virtual Table is a type of table that is defined by a Synapse SQL query. Any query on a Virtual Table will execute the defining SQL statement on the referenced table. The defining SQL of a Virtual Table cannot include JOIN clauses on multiple tables."})});function q(t){const{entityType:r,...s}=t;return e.jsxs(e.Fragment,{children:[r===i.MATERIALIZED_VIEW&&Re,r===i.VIRTUAL_TABLE&&Ue,e.jsx(Y,{label:"Defining SQL",placeholder:"SELECT * FROM syn123",fullWidth:!0,multiline:!0,required:!0,minRows:6,...s})]})}try{q.displayName="SqlDefinedTableEditor",q.__docgenInfo={description:"Component used to edit the SQL of a Synapse entity defined by SQL, such as a MaterializedView or VirtualTable",displayName:"SqlDefinedTableEditor",props:{component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"Partial<TextFieldSlots>"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.",name:"slotProps",required:!1,type:{name:"{ root?: SlotProps<ElementType<FormControlProps, keyof IntrinsicElements>, {}, BaseTextFieldProps>; ... 4 more ...; select?: SlotProps<...>; } | { ...; } | { ...; }"}},entityType:{defaultValue:null,description:"",name:"entityType",required:!1,type:{name:"enum",value:[{value:'"project"'},{value:'"folder"'},{value:'"file"'},{value:'"table"'},{value:'"link"'},{value:'"entityview"'},{value:'"dockerrepo"'},{value:'"submissionview"'},{value:'"dataset"'},{value:'"datasetcollection"'},{value:'"materializedview"'},{value:'"virtualtable"'}]}}}}}catch{}function Ye(t,r){switch(t){case"CHOOSE_TABLE_TYPE":return"Create Table or View";case"CHOOSE_VIEW_TYPE":return"Create View";case"ENTITY_VIEW_SCOPE":case"SUBMISSION_VIEW_SCOPE":return`Define ${F(r)} Scope`;case"TABLE_SQL":return"Create a SQL-Defined View";case"TABLE_COLUMNS":return`Add Columns to ${F(r)}`;case"TABLE_NAME":return`Create the ${F(r)}`}}function qe(t,r){switch(t){case"CHOOSE_TABLE_TYPE":break;case"CHOOSE_VIEW_TYPE":return"CHOOSE_TABLE_TYPE";case"ENTITY_VIEW_SCOPE":case"SUBMISSION_VIEW_SCOPE":case"TABLE_SQL":return"CHOOSE_VIEW_TYPE";case"TABLE_COLUMNS":if(r===i.TABLE)return"CHOOSE_TABLE_TYPE";if(r===i.ENTITY_VIEW)return"ENTITY_VIEW_SCOPE";if(r===i.SUBMISSION_VIEW)return"SUBMISSION_VIEW_SCOPE";break;case"TABLE_NAME":if(r===i.TABLE||r===i.ENTITY_VIEW||r===i.SUBMISSION_VIEW)return"TABLE_COLUMNS";if(r===i.MATERIALIZED_VIEW||r===i.VIRTUAL_TABLE)return"TABLE_SQL";break}return console.warn(`Unknown previous step at ${t} for type ${r}`),"CHOOSE_TABLE_TYPE"}function ie(t){return t==="TABLE_NAME"}function He(t){return t===i.TABLE?"TABLE_COLUMNS":t===i.ENTITY_VIEW?"ENTITY_VIEW_SCOPE":t===i.SUBMISSION_VIEW?"SUBMISSION_VIEW_SCOPE":t===i.MATERIALIZED_VIEW||t===i.VIRTUAL_TABLE?"TABLE_SQL":"CHOOSE_TABLE_TYPE"}function ze(t,r,s){[i.TABLE,i.ENTITY_VIEW,i.SUBMISSION_VIEW,i.DATASET,i.DATASET_COLLECTION].includes(r)&&s.length>0&&(t.columnIds=s.map(h=>h.id))}function Qe(t,r,s){[i.ENTITY_VIEW,i.SUBMISSION_VIEW].includes(r)&&s.length>0&&(t.scopeIds=s)}function Ze(t,r,s){r===i.ENTITY_VIEW&&(t.viewTypeMask=s)}function $e(t,r,s){[i.MATERIALIZED_VIEW,i.VIRTUAL_TABLE].includes(r)&&(t.definingSQL=s)}function H(t){const{name:r,setName:s,description:h,setDescription:C}=t,n=me(se.DESCRIPTION_FIELD);return e.jsxs(e.Fragment,{children:[e.jsx(Y,{required:!0,label:"Name",value:r,onChange:p=>{s(p.target.value)},fullWidth:!0}),n&&e.jsx(Y,{label:"Description",value:h,onChange:p=>{C(p.target.value||void 0)},fullWidth:!0,multiline:!0,rows:3,sx:{my:2}})]})}try{H.displayName="TableNameForm",H.__docgenInfo={description:`React component for the naming a new table or view.
Renders UI to provide the name and description of a table or view.`,displayName:"TableNameForm",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},setName:{defaultValue:null,description:"",name:"setName",required:!0,type:{name:"Dispatch<SetStateAction<string>>"}},description:{defaultValue:null,description:"",name:"description",required:!0,type:{name:"string"}},setDescription:{defaultValue:null,description:"",name:"setDescription",required:!0,type:{name:"Dispatch<SetStateAction<string>>"}}}}}catch{}const Je=e.jsxs(e.Fragment,{children:[e.jsx(I,{children:"Synapse tables are used to organize web-accessible, sharable, and queryable data. Tables may be queried and edited with the Synapse UI, as well as with the Synapse programmatic clients."}),e.jsx(_,{href:"https://help.synapse.org/docs/Organizing-Data-With-Tables.2011038095.html",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about Tables"})]}),Ge=e.jsxs(e.Fragment,{children:[e.jsx(I,{children:"Views allow you to see and query groups of other objects in Synapse, such as files, tables, projects, or submissions and any associated annotations about those items."}),e.jsx(_,{href:"https://help.synapse.org/docs/Views.2011070739.html",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about Views"})]});function z(t){const{onTableSelected:r,onViewSelected:s}=t;return e.jsxs(ce,{children:[e.jsx(T,{title:"Table",description:Je,onClick:()=>{r()}}),e.jsx(T,{title:"View",description:Ge,onClick:s})]})}try{z.displayName="TableTypeSelection",z.__docgenInfo={description:`React component for the first step of creating a new table or view.
The user will decide if they want to create a Table or a View`,displayName:"TableTypeSelection",props:{onTableSelected:{defaultValue:null,description:"",name:"onTableSelected",required:!0,type:{name:"() => void"}},onViewSelected:{defaultValue:null,description:"",name:"onViewSelected",required:!0,type:{name:"() => void"}}}}}catch{}const Ke=e.jsxs(e.Fragment,{children:[e.jsx(I,{children:"This view lists all files, folders, and/or tables in the selected folders or projects."}),e.jsx(_,{href:"https://help.synapse.org/docs/Views.2011070739.html#Views-CreatingaFileView",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about File Views"})]}),Xe=e.jsxs(e.Fragment,{children:[e.jsx(I,{children:"This view lists all (and only) your selected projects."}),e.jsx(_,{href:"https://help.synapse.org/docs/Views.2011070739.html#Views-CreatingaProjectView",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about Project Views"})]}),et=e.jsxs(e.Fragment,{children:[e.jsx(I,{children:"This view lists all submissions within one or more evaluation queues."}),e.jsx(_,{href:"https://help.synapse.org/docs/Views.2011070739.html#Views-CreatingaSubmissionView",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about Submission Views"})]}),tt=e.jsxs(e.Fragment,{children:[e.jsx(I,{children:"The results of a query across multiple sources, defined by a SQL statement."}),e.jsx(_,{href:"https://help.synapse.org/docs/Combining-Data-from-Multiple-Table-Sources.2973270158.html",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about Materialized Views"})]}),rt=e.jsx(I,{children:"A saved query on another table or view where complex filters can be applied to aggregated results."});function Q(t){const{onTypeSelected:r}=t,s=me(se.VIRTUALTABLE_SUPPORT);return e.jsxs(ce,{children:[e.jsx(T,{title:"Files, Folders, and Other Objects",description:Ke,onClick:()=>{r(i.ENTITY_VIEW)}}),e.jsx(T,{title:"Projects",description:Xe,onClick:()=>{r(i.ENTITY_VIEW,le)}}),e.jsx(T,{title:"Challenge Submissions",description:et,onClick:()=>{r(i.SUBMISSION_VIEW)}}),e.jsx(T,{title:"Materialized View",description:tt,onClick:()=>{r(i.MATERIALIZED_VIEW)}}),s&&e.jsx(T,{title:"Virtual Table",description:rt,onClick:()=>{r(i.VIRTUAL_TABLE)}})]})}try{Q.displayName="ViewTypeSelection",Q.__docgenInfo={description:`React component for selecting a View type in the View creation wizard.
Renders UI to show all view types where the user must choose one to continue.`,displayName:"ViewTypeSelection",props:{onTypeSelected:{defaultValue:null,description:"",name:"onTypeSelected",required:!0,type:{name:"(type: EntityType, viewTypeMask?: number) => void"}}}}}catch{}function Z(t){const{open:r,parentId:s,onComplete:h,onCancel:C}=t,[n,p]=a.useState("CHOOSE_TABLE_TYPE"),[V,de]=a.useState(""),[b,ue]=a.useState(void 0),[o,Ee]=a.useState(void 0),[c,Se]=a.useState([]),[d,Te]=a.useState([]),[m,$]=a.useState(ge),L=m===le,[S,O]=a.useState([]),A=a.useRef(null),[f,_e]=a.useState(""),u=a.useMemo(()=>{if(o===i.ENTITY_VIEW)return{scope:c,viewTypeMask:m,viewEntityType:o};if(o===i.SUBMISSION_VIEW)return{scope:d,viewEntityType:o}},[o,c,d,m]),{data:x,isLoading:N,isError:B}=Ae(u==null?void 0:u.viewEntityType,u==null?void 0:u.viewTypeMask,{enabled:n==="ENTITY_VIEW_SCOPE"||n==="SUBMISSION_VIEW_SCOPE",staleTime:1/0}),{mutateAsync:J,error:M}=Le({onSuccess:l=>{h(l.id)}}),{mutate:G,data:g,error:j}=Fe({onSuccess:l=>{l&&l.isValid&&p("TABLE_NAME")}}),v=a.useMemo(()=>j?j.reason:g&&g.invalidReason?g.invalidReason:null,[j,g]),{mutateAsync:K,error:P}=xe(),W=a.useCallback((l,E)=>{Ee(l),E!=null&&$(E),p(He(l))},[]),X=a.useCallback(()=>{p("CHOOSE_VIEW_TYPE")},[]),ee=a.useCallback(async()=>{if(!o){console.error("entityType was not defined!"),p("CHOOSE_TABLE_TYPE");return}let l=[];if(S&&o!==i.MATERIALIZED_VIEW&&o!==i.VIRTUAL_TABLE)try{l=await K(S.map(D=>Oe(D,We)))}catch{return}const E={name:V,description:b,parentId:s,concreteType:we(o)};ze(E,o,l),Qe(E,o,o===i.SUBMISSION_VIEW?d:c),Ze(E,o,m),$e(E,o,f);try{await J(E)}catch{return}},[S,K,J,b,o,V,s,c,d,f,m]),te=a.useCallback(l=>{O(l),p("TABLE_NAME")},[]),re=a.useCallback(()=>{A.current!=null&&A.current.submit()},[]),Ie=n!=="CHOOSE_TABLE_TYPE",fe=n!=="CHOOSE_TABLE_TYPE"&&n!=="CHOOSE_VIEW_TYPE",he=a.useCallback(()=>{const l=qe(n,o);["CHOOSE_TABLE_TYPE","CHOOSE_VIEW_TYPE"].includes(l)&&O([]),p(l)},[n,o]),ye=a.useCallback(()=>{ie(n)?ee():n==="TABLE_SQL"&&o?G({sql:f,entityType:o}):n==="TABLE_COLUMNS"?re():(n==="ENTITY_VIEW_SCOPE"||n==="SUBMISSION_VIEW_SCOPE")&&(S.length==0&&x&&O(x.map(l=>({...l,id:void 0}))),p("TABLE_COLUMNS"))},[n,ee,re,S.length,x,G,o,f]),Ce=a.useMemo(()=>n==="ENTITY_VIEW_SCOPE"?c.length===0||m===0||N&&!B:n==="SUBMISSION_VIEW_SCOPE"?d.length===0||m===0||N&&!B:!1,[c.length,d.length,n,m,N,B]),k=a.useMemo(()=>e.jsxs(e.Fragment,{children:[M&&e.jsx(R,{sx:{my:2},severity:"error",children:M.message}),P&&e.jsx(R,{sx:{my:2},severity:"error",children:P.message}),v&&e.jsx(R,{sx:{my:2},severity:"error",children:v})]}),[P,M,v]),Ve=a.useMemo(()=>{switch(n){case"CHOOSE_TABLE_TYPE":return e.jsx(z,{onTableSelected:()=>{W(i.TABLE)},onViewSelected:X});case"CHOOSE_VIEW_TYPE":return e.jsx(Q,{onTypeSelected:W});case"ENTITY_VIEW_SCOPE":return e.jsxs(e.Fragment,{children:[e.jsx(ve,{scopeIds:c,onChange:Se,isProjectView:L}),!L&&e.jsx(je,{value:m,onChange:$})]});case"SUBMISSION_VIEW_SCOPE":return e.jsx(Pe,{evaluationIds:d,onChange:Te});case"TABLE_SQL":return e.jsxs(e.Fragment,{children:[e.jsx(y,{sx:{mt:1.25},children:e.jsx(q,{value:f,onChange:l=>_e(l.target.value),entityType:o})}),k]});case"TABLE_COLUMNS":return e.jsx(Ne,{initialData:S,entityType:o,ref:A,onSubmit:te,viewScope:u});case"TABLE_NAME":return e.jsxs(e.Fragment,{children:[e.jsx(H,{name:V,setName:de,description:b,setDescription:ue}),k]})}},[n,X,W,c,L,m,d,V,b,f,o,k,S,te,u]);return e.jsx(Me,{open:r,onCancel:C,maxWidth:"md",title:Ye(n,o),content:Ve,actions:e.jsxs(y,{sx:{display:"flex",width:"100%",gap:2.25,mt:2},children:[Ie&&e.jsx(U,{variant:"outlined",onClick:he,children:"Back"}),e.jsx(y,{sx:{m:"auto"}}),e.jsx(U,{variant:"outlined",onClick:C,children:"Cancel"}),fe&&e.jsx(U,{variant:"contained",onClick:ye,disabled:Ce,children:ie(n)?"Finish":"Next"})]})})}try{Z.displayName="CreateTableViewWizard",Z.__docgenInfo={description:`Wizard to create a Synapse table, view, or other table type.

See the README.md in this folder for a visualization of the flowchart`,displayName:"CreateTableViewWizard",props:{open:{defaultValue:null,description:"",name:"open",required:!0,type:{name:"boolean"}},parentId:{defaultValue:null,description:"",name:"parentId",required:!0,type:{name:"string"}},onCancel:{defaultValue:null,description:"",name:"onCancel",required:!0,type:{name:"() => void"}},onComplete:{defaultValue:null,description:"",name:"onComplete",required:!0,type:{name:"(newEntityId: string) => void"}}}}}catch{}const jn={title:"Synapse/Create Table Wizard",component:Z,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=7108-22337&mode=design&t=acwaLAqUDge5p8eQ-4"}},tags:["autodocs"]},w={args:{open:!0,parentId:"syn23567475",onComplete:t=>{ke(`Successfully created ${t}`)},onCancel:De()}};var oe,ne,ae;w.parameters={...w.parameters,docs:{...(oe=w.parameters)==null?void 0:oe.docs,source:{originalSource:`{
  args: {
    open: true,
    parentId: 'syn23567475',
    onComplete: newId => {
      displayToast(\`Successfully created \${newId}\`);
    },
    onCancel: fn()
  }
}`,...(ae=(ne=w.parameters)==null?void 0:ne.docs)==null?void 0:ae.source}}};const vn=["Demo"];export{w as Demo,vn as __namedExportsOrder,jn as default};
