import{g as f}from"./userProfileHandlers-Dfb4OS-o.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-lb8uXJha.js";import{A}from"./AccountLevelBadges-Dr4D-r0N.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-Dp-zOFqY.js";import"./iframe-CG85BzK6.js";import"./mockEntity-CFQctnoN.js";import"./mockFileEntity-CSfJyLv0.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-CLHf9qhR.js";import"./mockTeam-ehpp9a4f.js";import"./SynapseConstants-CBaWUDFp.js";import"./OrientationBanner-C_cI8Wdu.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-HT8vm-KD.js";import"./index-CJTqbwg9.js";import"./spreadSx-CwcO6WA9.js";import"./react-C5eOr4qq.js";import"./FullWidthAlert-BYzUdYmy.js";import"./Alert-CfqRHpto.js";import"./createTheme-gj4ta8JK.js";import"./DefaultPropsProvider-BIvMs3xX.js";import"./useSlot-C9QU161m.js";import"./useForkRef-CL-HmWE-.js";import"./createSimplePaletteValueFilter-Xz4nl1-g.js";import"./createSvgIcon-Ds67miPL.js";import"./Close-DUTvymq8.js";import"./IconButton-BVm2k0V8.js";import"./useTimeout-DDPxidDq.js";import"./ButtonBase-CmahN1yA.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BBZlh3jv.js";import"./Paper-_TypEQXS.js";import"./useTheme-J3HQsDMf.js";import"./useTheme-DHaXmWDd.js";import"./Stack-B6Fv6rDP.js";import"./extendSxProp-LD-I1WVR.js";import"./getThemeProps-BkNvNRVH.js";import"./Box-DO5is7mO.js";import"./AlertTitle-DW1ksqT6.js";import"./Typography-BjJo8e6h.js";import"./index-ClhWbTH2.js";import"./ClickAwayListener-Bz0pJjhC.js";import"./getReactElementRef-DefmUWlD.js";import"./index-DhqT-wZf.js";import"./index-B30IKtuV.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DT56OTPx.js";import"./Tooltip-_Br_YO6O.js";import"./index-BTTzR3FC.js";import"./useControlled-CGanW96O.js";import"./Popper-TkGtPLMk.js";import"./Button-D8a1OC-O.js";import"./uniqueId-BS6rIJoH.js";import"./toString-Sbl_gexy.js";import"./isArray-ECjS2Mk1.js";import"./isSymbol-Bc0E7QSo.js";import"./times-BU-w-Ma5.js";import"./_Uint8Array-Bge7RmPT.js";import"./identity-DKeuBCMA.js";import"./toInteger-BRHbTtsF.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-DccECcxJ.js";import"./QueryClientProvider-BiW_y-Nb.js";import"./Link-w5BOvl6J.js";import"./Collapse-DPBKAoXV.js";import"./_baseUniq-Cm1Ujzdq.js";import"./_getTag-CLHhZoU-.js";import"./isEqual-l9qiUE8w.js";import"./merge-DOaqpN72.js";import"./_initCloneObject-BNcBeVfK.js";import"./tinycolor-Begke6kS.js";import"./Fade-BO0WQVeb.js";import"./inputBaseClasses-8RM-Z2Qw.js";import"./calculateFriendlyFileSize-BfxCmKAO.js";import"./CheckCircleTwoTone-DRnqgNMo.js";import"./InfoTwoTone-tVAIT2bF.js";import"./useMutation-DzECAvFo.js";import"./dayjs.min-DN9ltQUU.js";import"./chunk-AYJ5UCUI-J8G0ovJt.js";import"./cloneDeep-B7tqKnHv.js";import"./Skeleton-jH73I46F.js";import"./AccountLevelBadge-B9vJO5_-.js";import"./Card-ZKaZaPPX.js";import"./ConfirmationDialog-DNmxzrEK.js";import"./DialogBase-C50ocYqx.js";import"./Close-CDZ0RJ8n.js";import"./HelpPopover-Dz5azijv.js";import"./MarkdownPopover-BGd0DFa-.js";import"./LightTooltip-t7dWQhVM.js";import"./MarkdownSynapse-CkTwKD2h.js";import"./SkeletonButton-CCljSEP8.js";import"./SkeletonInlineBlock-GNyZlT8w.js";import"./SkeletonTable-DvuctY-5.js";import"./SkeletonParagraph-BDf2vA-h.js";import"./HelpOutlineTwoTone-D0liaSOs.js";import"./DialogTitle-BqBGRuhy.js";import"./DialogContent-CqpweY4Q.js";import"./DialogActions-c9NRtydT.js";import"./Dialog-Pv9C8CrC.js";import"./Modal-6neU7BAJ.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-D5m0FWel.js";import"./LoadingScreen-LIwWbj8i.js";import"./LinearProgress-BFGQiwcu.js";import"./ToastMessage-Rv1Wdd2O.js";import"./CSSTransition-DGCXm9kJ.js";const St={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Et=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Et as __namedExportsOrder,St as default};
