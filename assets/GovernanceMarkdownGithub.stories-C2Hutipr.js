import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-Dgs3uMNM.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-DLjZupDt.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-CNqbgomB.js";import"./SynapseConstants-wJcRwust.js";import"./OrientationBanner-CHIYKSEx.js";import"./index-mio91fxR.js";import"./index-BW17KZKz.js";import"./iframe-AlUFIbQA.js";import"./spreadSx-CwcO6WA9.js";import"./react-Cpw0QdjG.js";import"./FullWidthAlert-Cbox3Wt6.js";import"./Alert-D14P_WXX.js";import"./createTheme-CJaSHM8i.js";import"./DefaultPropsProvider-GvbBlk1O.js";import"./useSlot-CIodoxpa.js";import"./useForkRef-BbR4VQwJ.js";import"./createSimplePaletteValueFilter-DJdOpCq8.js";import"./createSvgIcon-C4Pt1he2.js";import"./Close-B0lT3RNc.js";import"./IconButton-CDzmaI7z.js";import"./useTimeout-C-2tZBQJ.js";import"./ButtonBase-cLl0L_-X.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-XIYmj3c5.js";import"./Paper-CRPbRcXd.js";import"./useTheme-DGgtVRkC.js";import"./useTheme-BT7Iu2cS.js";import"./Stack-GwaC4Ni9.js";import"./extendSxProp-DR6Eobbt.js";import"./getThemeProps-jCeH95Yf.js";import"./Box-BTXbyZ2n.js";import"./AlertTitle-B6_xGnBg.js";import"./Typography-D1F-iNAZ.js";import"./index-C4Yh2wPI.js";import"./ClickAwayListener-DDE9KQe2.js";import"./getReactElementRef-jlFeFyay.js";import"./index-CinYwbgZ.js";import"./index-XSW94zJ8.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DCWexVAj.js";import"./Tooltip-DITPsrzh.js";import"./index-CeSOllUY.js";import"./useControlled-CLD-pQrt.js";import"./Popper-Be4VvP_C.js";import"./Button-CvHXhaAM.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-BRKwIggm.js";import"./QueryClientProvider-CfU8EORi.js";import"./Link-DJd8FYSi.js";import"./Collapse-D1glpoFn.js";import"./_baseUniq-DZkpOZuT.js";import"./_Uint8Array-CabcxReM.js";import"./isArray-Hdn9cI6Y.js";import"./_getTag-CVjReAgr.js";import"./isEqual-BSL4CLyC.js";import"./merge-9eTURKQA.js";import"./_initCloneObject-BV3thbhv.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-CHNlJFXp.js";import"./inputBaseClasses-oDpC98vD.js";import"./calculateFriendlyFileSize-BbKg9Xga.js";import"./CheckCircleTwoTone-D_EH_ocU.js";import"./InfoTwoTone-B1r95wou.js";import"./useMutation-CbrFQrRG.js";import"./dayjs.min-BtGMXT4Y.js";import"./chunk-AYJ5UCUI-FooUYMmZ.js";import"./cloneDeep-Djr6Dklt.js";import"./Skeleton-n40_vaA5.js";import"./SkeletonButton-CQOtAjaJ.js";import"./SkeletonInlineBlock-IgrC-mCS.js";import"./SkeletonTable-D5Ia-O1L.js";import"./times-D8t6rW9z.js";import"./toInteger-BDayn89P.js";import"./isSymbol-CF1Y2Ha4.js";import"./SkeletonParagraph-_gJJd9VZ.js";import"./MarkdownSynapse-cQOfbftA.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
