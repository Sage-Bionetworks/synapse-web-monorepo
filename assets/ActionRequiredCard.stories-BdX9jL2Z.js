import{j as t}from"./jsx-runtime-CoXzOFQn.js";import{W as s}from"./WideButton-BIAD3BVJ.js";import{E as d}from"./SynapseConstants-Bfg1qQ66.js";import{A as c}from"./ActionRequiredCard-B_uv7VEP.js";import{T as u}from"./Typography-mifgVkJr.js";import{B as g}from"./Button-CQ-PKmTk.js";import"./index-Bv-s9W2u.js";import"./iframe-Cbn6Wioa.js";import"./DefaultPropsProvider-CV1WaMnn.js";import"./createTheme-B2jVum5G.js";import"./OrientationBanner-BN7sc-yW.js";import"./index-BTAejVQp.js";import"./spreadSx-CwcO6WA9.js";import"./react-DOQBJuAS.js";import"./FullWidthAlert-Vqv0OtJl.js";import"./Alert-3vS49jrx.js";import"./resolveComponentProps-Da3g-n6Q.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CYGkZ_5i.js";import"./createSvgIcon-zGAR842g.js";import"./Close-BLBNR7A4.js";import"./IconButton-EuepfCvL.js";import"./ButtonBase-DsKebiHo.js";import"./useTimeout-CxKGPiOF.js";import"./TransitionGroupContext-CntLVBsw.js";import"./useIsFocusVisible-CNLfUmJ0.js";import"./useEventCallback-BzaKhurB.js";import"./Paper-DTlkPfUp.js";import"./Stack-cKH5qMzO.js";import"./getThemeProps-BpylFmtp.js";import"./useTheme-BjBg_HQE.js";import"./Box-BCl-T6Nm.js";import"./AlertTitle-BN8ssDQ0.js";import"./useTheme-BFXFTIwP.js";import"./Grow-DEaHBlcM.js";import"./index-CDrKje1t.js";import"./utils-Bov2-oov.js";import"./ClickAwayListener-CQQ6DDI4.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DfqKSysC.js";import"./index-ByVQsoFM.js";import"./useControlled-CDkZ20IG.js";import"./useId-BXknn2vZ.js";import"./Popper-BA5jVx5O.js";import"./Icon-DqUZzmRi.js";import"./mouse-BbZzBQHc.js";import"./SortDown-j3wNYmn9.js";import"./IconSvg-B-lOeMzW.js";import"./LayersTwoTone-g0XkJwEx.js";import"./ContentCopyTwoTone-B-IrEila.js";import"./HelpOutlineTwoTone-CBmI5w2E.js";import"./ErrorOutlined-DRlCjBTu.js";import"./GetAppTwoTone-CHebopEE.js";import"./InfoOutlined-4z3_ePTP.js";import"./DeleteTwoTone-f0CWjk5c.js";import"./CheckCircleTwoTone-DLeaCtrD.js";import"./Skeleton-C6cw4nQZ.js";const xt={title:"Download/ActionRequiredCard",component:c,tags:["autodocs"],argTypes:{actionNode:{options:["Button","Button with text (Sharing Settings)"],mapping:{Button:t.jsx(s,{variant:"contained",children:"Start"}),"Button with text (Sharing Settings)":t.jsxs(t.Fragment,{children:[t.jsx(u,{variant:"smallText1",sx:{color:"grey.700"},children:"Contact an administrator to request download permission"}),t.jsx(g,{variant:"outlined",children:"View Sharing Settings"})]})}}}},o={args:{isLoading:!0}},r={args:{isLoading:!1,title:"The title of the card",description:"The description of the card",actionNode:"Button",iconType:d,count:42}};var i,p,m;o.parameters={...o.parameters,docs:{...(i=o.parameters)==null?void 0:i.docs,source:{originalSource:`{
  args: {
    isLoading: true
  }
}`,...(m=(p=o.parameters)==null?void 0:p.docs)==null?void 0:m.source}}};var e,a,n;r.parameters={...r.parameters,docs:{...(e=r.parameters)==null?void 0:e.docs,source:{originalSource:`{
  args: {
    isLoading: false,
    title: 'The title of the card',
    description: 'The description of the card',
    actionNode: 'Button',
    iconType: EASY_DIFFICULTY,
    count: 42
  }
}`,...(n=(a=r.parameters)==null?void 0:a.docs)==null?void 0:n.source}}};const Tt=["Loading","Card"];export{r as Card,o as Loading,Tt as __namedExportsOrder,xt as default};
