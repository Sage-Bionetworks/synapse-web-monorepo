import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-ChepUPeC.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-qWqsmHvm.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-ZdExZnQf.js";import"./SynapseConstants-uuZQ07ZG.js";import"./OrientationBanner-BMTtxCRZ.js";import"./index-DZwoqB70.js";import"./index-DlbKFsS_.js";import"./iframe-0wVslN7b.js";import"./spreadSx-CwcO6WA9.js";import"./react-_2U-C0GU.js";import"./FullWidthAlert-DM2vrgRA.js";import"./Alert-ByvuzRIz.js";import"./createTheme-DbTVx9wk.js";import"./DefaultPropsProvider-DkB9qiCW.js";import"./useSlot-D2G1tdG6.js";import"./useForkRef-dmtj3swN.js";import"./createSimplePaletteValueFilter-B2_2URZH.js";import"./createSvgIcon-D3A_t-T8.js";import"./Close-C835DunE.js";import"./IconButton-CdNa3UAM.js";import"./useTimeout-DZY_Ldn6.js";import"./ButtonBase-BSSfV59K.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DwsvCZV6.js";import"./Paper-CmTDa9ue.js";import"./useTheme-CmWvFfrN.js";import"./useTheme-BkeJ3rG0.js";import"./Stack-CICCoKMV.js";import"./extendSxProp-CkTWBxQk.js";import"./getThemeProps-CDavjzIJ.js";import"./Box-C41TTZyw.js";import"./AlertTitle-CpyBs_uL.js";import"./Typography-QhlHI-oV.js";import"./index-Dg0Jby1P.js";import"./ClickAwayListener-M7aD0F4C.js";import"./getReactElementRef-C_kE-ach.js";import"./index-j7g_Ug4x.js";import"./index-DZsggVEU.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BWTyqGfK.js";import"./Tooltip-C-YsDLR5.js";import"./index-B_X4U_Mc.js";import"./useControlled-fzollbDs.js";import"./Popper-jZJ7QXLK.js";import"./Button-Cw1keIu4.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-DYS1_2Hc.js";import"./QueryClientProvider-BI7jbFXj.js";import"./Link-CxT6ZAtC.js";import"./Collapse-DBT4GF4U.js";import"./_baseUniq-DbxKqsNd.js";import"./_Uint8Array-CnaUAbwU.js";import"./isArray-B4fJuMgT.js";import"./_getTag-Bdvo1j8R.js";import"./isEqual-C0jfZ1nU.js";import"./merge-DTEhEQRY.js";import"./_initCloneObject-BHwFfX6u.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-T_moeo9f.js";import"./inputBaseClasses-BD6lXioz.js";import"./calculateFriendlyFileSize-eluljBmG.js";import"./CheckCircleTwoTone-BIDizvcR.js";import"./InfoTwoTone-BUbbgrPF.js";import"./useMutation-BU-UzXwG.js";import"./dayjs.min-twCecxUk.js";import"./chunk-AYJ5UCUI-BjaXvkqd.js";import"./cloneDeep-Cj0ZoDZo.js";import"./Skeleton-CZTbWp2s.js";import"./SkeletonButton-C1kBXEd8.js";import"./SkeletonInlineBlock-6cQ_LBSP.js";import"./SkeletonTable-BIYOYjjl.js";import"./times-aVsXrtI-.js";import"./toInteger-DV-Al5QH.js";import"./isSymbol-DJTNGuaN.js";import"./SkeletonParagraph-BjEjvexw.js";import"./MarkdownSynapse-CBW1tLi0.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
