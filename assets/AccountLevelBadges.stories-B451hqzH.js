import{g as f}from"./userProfileHandlers-DiTFIyqH.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-BQg2l_mC.js";import{A}from"./AccountLevelBadges-VM7B3rMQ.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-CqDvZtPB.js";import"./iframe-CwGKoaIF.js";import"./mockEntity-BOe_flvY.js";import"./mockFileEntity-BaWY81PH.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-BNw3nO0k.js";import"./mockTeam-stPrAhM0.js";import"./SynapseConstants-234bgPC3.js";import"./OrientationBanner-Ba_WLX69.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-DRuXmisc.js";import"./index-BEjLIAR5.js";import"./spreadSx-CwcO6WA9.js";import"./react-fP1UZYcI.js";import"./FullWidthAlert-BueunzTy.js";import"./Alert-CL0zz-8I.js";import"./createTheme-gXr55H0m.js";import"./DefaultPropsProvider-BlmQpHue.js";import"./useSlot-D6L-ORg2.js";import"./useForkRef-I1dv9UDr.js";import"./createSimplePaletteValueFilter-BOXH4uIn.js";import"./createSvgIcon-C6p_F7p2.js";import"./Close-CmIFNtKx.js";import"./IconButton-BVkKIzAo.js";import"./useTimeout-BgSeNLNv.js";import"./ButtonBase-ksp5zqqD.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-jnMXXNDb.js";import"./Paper-dcVYzYMj.js";import"./useTheme-DXEcceH2.js";import"./useTheme-C3VYIg5j.js";import"./Stack-BIZFhOmX.js";import"./extendSxProp-DelytbQg.js";import"./getThemeProps-Bsoevkdv.js";import"./Box-DFln69uE.js";import"./AlertTitle-CO6GLx2J.js";import"./Typography-CoIbKr7l.js";import"./index-qd5JykJS.js";import"./ClickAwayListener-P3VkkFbs.js";import"./getReactElementRef-BLYsTnAm.js";import"./index-TKWJ5sXr.js";import"./index-CPXD-uRb.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BbBJN9Bb.js";import"./Tooltip-D0dK4Slt.js";import"./index-BE838Nkr.js";import"./useControlled-BHX0J-8f.js";import"./Popper-Bzy4Jbyt.js";import"./Button-C5PiRzoR.js";import"./uniqueId-DoI5JSaB.js";import"./toString-D0f1gbCj.js";import"./isArray-29EfBsKk.js";import"./isSymbol-BHh9s-Qb.js";import"./times-BzMgaTyJ.js";import"./_Uint8Array-B2-F3GF1.js";import"./identity-DKeuBCMA.js";import"./toInteger-DIt91Y5R.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-CrW5nkBB.js";import"./QueryClientProvider-6UyNw7x6.js";import"./Link-Bq8ymdbG.js";import"./Collapse-RaZHU9Wm.js";import"./_baseUniq-gWU3IFtJ.js";import"./_getTag-BwYISoq0.js";import"./isEqual-BxMVxjXA.js";import"./merge-DyG2PJVv.js";import"./_initCloneObject-Cokl0rF2.js";import"./tinycolor-Begke6kS.js";import"./Fade-BQZZIYWG.js";import"./inputBaseClasses-BI4UakU4.js";import"./calculateFriendlyFileSize-DTUMM0RF.js";import"./CheckCircleTwoTone-B_hMD9N9.js";import"./InfoTwoTone-DxkkeeGX.js";import"./useMutation-B59eIzkm.js";import"./dayjs.min-BBXC49jR.js";import"./chunk-AYJ5UCUI-D1bRiwJ_.js";import"./cloneDeep-DzrI_yLo.js";import"./Skeleton-CR-iryCa.js";import"./AccountLevelBadge-BPP8DSSt.js";import"./Card-DWty-5Go.js";import"./ConfirmationDialog-CFj9Ne3w.js";import"./DialogBase-Dt6wGvjD.js";import"./Close-DX5SP0Rs.js";import"./HelpPopover-D20NdrH-.js";import"./MarkdownPopover-Dd1ovGQI.js";import"./LightTooltip-BbZQg-l6.js";import"./MarkdownSynapse-Dcglv2Xl.js";import"./SkeletonButton-CIgE9K_V.js";import"./SkeletonInlineBlock-Bw4UXacQ.js";import"./SkeletonTable-SXv9ewKp.js";import"./SkeletonParagraph-DbvwwXxs.js";import"./HelpOutlineTwoTone-BKO2mCAI.js";import"./DialogTitle-BQW5aO92.js";import"./DialogContent-BSL8G45P.js";import"./Dialog-B9r1Af6F.js";import"./Modal-3OUBR7Ii.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-hlDkKBKQ.js";import"./LoadingScreen-x0U8zsVg.js";import"./LinearProgress-B45-Voel.js";import"./ToastMessage-BXAHQrc6.js";import"./CSSTransition-CjLTZBHA.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
