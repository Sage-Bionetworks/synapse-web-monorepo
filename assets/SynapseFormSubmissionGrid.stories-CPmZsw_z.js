import{j as l}from"./jsx-runtime-CmUBiTSS.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-B0kBNeMy.js";import{g as T}from"./handlers-Ca7ZQFVY.js";import{aH as S,M as a}from"./useFiles-CvqXu3qP.js";import"./OrientationBanner-2QI37Wfz.js";import"./index-B2mmVxOD.js";import"./StringUtils-CzgJJW-6.js";import{l as _}from"./index-BE71bAqU.js";import{S as E}from"./SynapseFormSubmissionGrid-CHGE3l_S.js";import"./mockSchema-DBRSdCBz.js";import"./mockFileEntity-lOsbNXT6.js";import"./mock_file_handle-Ct1MSfYs.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-B0KiAiju.js";import"./mockTeam-9eVd25o0.js";import"./SynapseConstants-BlsqOTHC.js";import"./uniqueId-BxhAah8S.js";import"./toString-BkYqruvC.js";import"./isObjectLike-DP5A2EKp.js";import"./iframe-DsjoRgeV.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-jhg71ZvJ.js";import"./times-CPC6xvmp.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-D1qWWQGl.js";import"./asyncJobHandlers-BNHTp_CL.js";import"./BasicMockedCrudService-Cz5PJyNo.js";import"./cloneDeep-w5MjdiAW.js";import"./_Uint8Array-BgOhq7U8.js";import"./_initCloneObject-DiF2uFhN.js";import"./_getTag-DQ9vJk3b.js";import"./isEqual-BohAHrtr.js";import"./_baseIsEqual-DA4b58eN.js";import"./mockAnnotationColumns-DGKdwYH6.js";import"./tableQueryHandlers-CynMJEOK.js";import"./omit-DnJjIYZr.js";import"./_baseGet-DO2RGvje.js";import"./isNil-CZYLZObm.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BKjEj6FU.js";import"./_baseFlatten-ShrwB3ZH.js";import"./pick-DE7COK-9.js";import"./_baseSet-BZCDULCF.js";import"./hasIn-DqV1ePDH.js";import"./accessRequirementAclHandlers-CqbJqrJe.js";import"./mockAccessRequirementAcls-Bgd4KWEa.js";import"./mockAccessRequirements-DHNP183K.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CZdZHQnO.js";import"./accessRequirementHandlers-BTbPH_nV.js";import"./wikiHandlers-C8_qSSp8.js";import"./mockWikiPageKey-Bk_UUBRj.js";import"./teamHandlers-D5mwEyzi.js";import"./dataAccessRequestHandlers-CiH4mZvr.js";import"./MockResearchProject-D5lPLfyY.js";import"./mock_discussion-BPW3GfkL.js";import"./fakerUtils-5YUaYIkA.js";import"./index--fw_KklQ.js";import"./mockTableEntity-ewGucJ1t.js";import"./mockFileEntityACLVariants-B1u6RZDg.js";import"./entityHandlers-1O88llWu.js";import"./mockEntity-CV7km0PO.js";import"./mockEvaluationQueue-B4VBqyoM.js";import"./featureFlagHandlers-oaK-dwi_.js";import"./fileHandlers-DCGbnc_F.js";import"./personalAccessTokenHandlers-DJl-Ix-v.js";import"./researchProjectHandlers-B_etq0Ka.js";import"./resetTwoFactorAuthHandlers-D2gJwOmz.js";import"./userProfileHandlers-B7pDEFqX.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-CNQWmoPq.js";import"./FullWidthAlert-BvgWiVQR.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-B-cn8V0o.js";import"./createTheme-BYqAVevx.js";import"./resolveComponentProps-DIVgucYq.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-B7GgJKmZ.js";import"./createSvgIcon-CXv11Dc8.js";import"./DefaultPropsProvider-HrPDOaQj.js";import"./Close-8Hs4OiKc.js";import"./IconButton-C2H3UkEd.js";import"./ButtonBase-Ba5_fvQa.js";import"./useTimeout-DfID44yi.js";import"./useIsFocusVisible-DNP6iLGB.js";import"./useEventCallback-DTUVY-xC.js";import"./Paper-C5IK7UQQ.js";import"./Stack-nY20Dr3r.js";import"./getThemeProps-eRGJN_py.js";import"./useTheme-GMYttHBr.js";import"./Box-B5_L4GWb.js";import"./AlertTitle-CjTD5uFs.js";import"./Typography-BM-M-p3D.js";import"./useTheme-DODxR0TP.js";import"./Grow-CLzqoJXl.js";import"./index-DILzB3oy.js";import"./utils-Co3IOaXm.js";import"./ClickAwayListener-C2W41t9R.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-D8GA7O7E.js";import"./index-B1J7WTRX.js";import"./useControlled-B2db4EWk.js";import"./useId-B2N2XShu.js";import"./Popper-CBcXCHhQ.js";import"./Button-MnbgKpIJ.js";import"./useQuery-Bx5eY2jj.js";import"./utils-DKTCckgQ.js";import"./Link-C7sf-qNT.js";import"./Collapse-beDlu7I0.js";import"./tinycolor-Begke6kS.js";import"./Fade-DFW6SVXN.js";import"./Skeleton--p_DRxXi.js";import"./inputBaseClasses-DiOO8wJ9.js";import"./calculateFriendlyFileSize-DSmqR10B.js";import"./CheckCircleTwoTone-DoCCywjP.js";import"./InfoTwoTone-ZuwsmNOx.js";import"./mutation-BIqmHUfI.js";import"./dayjs.min-Due_NQNo.js";import"./chunk-AYJ5UCUI-BafslQL4.js";import"./index-D5VFXiz7.js";import"./react-C4gcExyr.js";import"./util-DQ61J2Bl.js";import"./WideButton-CyDhUX-V.js";import"./DeleteTwoTone-Dnz2BEA-.js";import"./createSvgIcon-DfyO_iKN.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-BhN8Y5W7.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-DoBXlyGU.js";import"./DialogBase-BKfMtDP6.js";import"./Close-CBASoWhl.js";import"./HelpPopover-DImnpYDn.js";import"./MarkdownPopover-C5Q0nVND.js";import"./LightTooltip-CnPUiGwY.js";import"./MarkdownSynapse-CxoQsrlL.js";import"./SkeletonButton-qf1roUqK.js";import"./SkeletonInlineBlock-FTQSFqiF.js";import"./SkeletonTable-Dr01XARY.js";import"./SkeletonParagraph-CZDAN-o-.js";import"./HelpOutlineTwoTone-C-5gYRNj.js";import"./DialogTitle-N3OYp2uu.js";import"./DialogContent-CuPGSmuZ.js";import"./Dialog-_aWsMVay.js";import"./Modal-9xEoEcVc.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-9xMxJYWH.js";import"./WarningDialog-i_n54EpE.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
