import{j as l}from"./jsx-runtime-waCBpRoR.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-DhrTP4Lv.js";import{aF as S,M as a}from"./useFiles-CljrymEZ.js";import"./OrientationBanner-CjgChWnG.js";import"./index-h_UnLfo6.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-D88kfWru.js";import{S as E}from"./SynapseFormSubmissionGrid-C_TTGP83.js";import"./mockSchema-DnBFIhmo.js";import"./mockFileEntity-Dhwl5Czw.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-BfzMa8NZ.js";import"./mockTeam-DH4kiTRF.js";import"./SynapseConstants-Dph5rBQn.js";import"./uniqueId-DbMziyOn.js";import"./toString-CGj-Smq8.js";import"./isObjectLike-BOvvXJEh.js";import"./iframe-680MXZqt.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-DbZKyWlb.js";import"./times-pUo71Ydm.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DvpKJ1NE.js";import"./asyncJobHandlers-Cp1CWSgY.js";import"./BasicMockedCrudService-DmsC1aFi.js";import"./cloneDeep-D36itDQt.js";import"./_Uint8Array-Cpy_aadF.js";import"./_initCloneObject-DmY_Sjqn.js";import"./_getTag-hz2soytL.js";import"./isEqual-CHZ16x6I.js";import"./_baseIsEqual-XAMHD0zM.js";import"./mockAnnotationColumns-C8iLoS2I.js";import"./tableQueryHandlers-Dt5ny5wE.js";import"./omit-D8eOVLqv.js";import"./_baseGet-CWeBGnWO.js";import"./isNil-fMBoSKa1.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-psQUmM5Q.js";import"./_baseFlatten-CvI_q-Kn.js";import"./pick-BmMZu3W8.js";import"./_baseSet-8SBS4IPx.js";import"./hasIn-DasAo-cR.js";import"./accessRequirementAclHandlers-ImumLoWI.js";import"./mockAccessRequirementAcls-D1HpNkKP.js";import"./mockAccessRequirements-DX5AYBol.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-nFfReRbV.js";import"./wikiHandlers-BVYQagFB.js";import"./mockWikiPageKey-C81QeBCD.js";import"./teamHandlers-Cjkkg3-P.js";import"./dataAccessRequestHandlers-D5q2JT9_.js";import"./MockResearchProject-BHAkMFwH.js";import"./mock_discussion-SLg8K0e9.js";import"./fakerUtils-DsJvyGfT.js";import"./index-DktpjRql.js";import"./mockTableEntity-B8OlVn50.js";import"./mockFileEntityACLVariants-BbErmbUc.js";import"./entityHandlers-D5Ri-NGx.js";import"./mockEntity-DJl3ibgN.js";import"./mockEvaluationQueue-Bv3JsTzm.js";import"./featureFlagHandlers-D33yZL4z.js";import"./fileHandlers-BzDkwyGT.js";import"./personalAccessTokenHandlers-Dtgs0Gs0.js";import"./researchProjectHandlers-DPT0Hyfm.js";import"./resetTwoFactorAuthHandlers-2TiqnEnh.js";import"./userProfileHandlers-DdggqzXt.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-De44v-j0.js";import"./FullWidthAlert-Cw5CPwRv.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-B6mldulx.js";import"./createTheme-5D4Rqrxe.js";import"./resolveComponentProps-BKsis4FC.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-jxbZ-E30.js";import"./createSvgIcon-CIPClKme.js";import"./DefaultPropsProvider-DQ5Mk1U-.js";import"./Close-CKkBBbGC.js";import"./IconButton-DJmlOxBU.js";import"./ButtonBase-6YJIww5y.js";import"./useTimeout-J1ckvgE6.js";import"./useIsFocusVisible-B6_ekAN2.js";import"./useEventCallback-BKViiGwn.js";import"./Paper-CYKweuiV.js";import"./Stack-Dn8ZLNgz.js";import"./getThemeProps-LgoUfpsB.js";import"./useTheme-DyhUS_Ki.js";import"./Box-CT_1nrVQ.js";import"./AlertTitle-Bcq6TdWa.js";import"./Typography-CZ9ALj71.js";import"./useTheme-ClgfWb4r.js";import"./Grow-5pvfAIWM.js";import"./index-B6LkEjhj.js";import"./utils-PWlZfzHj.js";import"./ClickAwayListener-CXap0MMj.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DDSuOHr6.js";import"./index-CJ_vAaO1.js";import"./useControlled-C_NVhIqR.js";import"./useId-C-rjosBi.js";import"./Popper-DCTk9ede.js";import"./Button-5JJ-GHl5.js";import"./useQuery-Dh1LhL3I.js";import"./utils-Y4zdJIeZ.js";import"./Link-BiQG15cz.js";import"./Collapse-D3hOgT8-.js";import"./tinycolor-Begke6kS.js";import"./Fade-CCgcWxTC.js";import"./Skeleton-C0ymAZsd.js";import"./inputBaseClasses-DkacoV0o.js";import"./calculateFriendlyFileSize-eQ_8oMwZ.js";import"./CheckCircleTwoTone-DYQ4blk1.js";import"./InfoTwoTone-DuJaAHyI.js";import"./useMutation-BS5_YSRi.js";import"./dayjs.min-DQJjIQJ-.js";import"./chunk-AYJ5UCUI-C9ZxOBGw.js";import"./index-BMF_L9R3.js";import"./react-DU91D3nF.js";import"./util-B3gLSLDI.js";import"./WideButton-D0vFZJkf.js";import"./DeleteTwoTone-BemWHYIf.js";import"./createSvgIcon-B3ZmXSEM.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-Cke1zi7b.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-DjoYmoJt.js";import"./DialogBase-CzhdAsSZ.js";import"./Close-CNc9fnzD.js";import"./HelpPopover-IvDJzxl5.js";import"./MarkdownPopover-DqRdZ0xp.js";import"./LightTooltip-C_YSXTl3.js";import"./MarkdownSynapse-BSQKTB-z.js";import"./SkeletonButton-FeirKhlZ.js";import"./SkeletonInlineBlock-DI4_IQHD.js";import"./SkeletonTable-Ba322s94.js";import"./SkeletonParagraph-5sb__CHL.js";import"./HelpOutlineTwoTone-BFtwQ4DQ.js";import"./DialogTitle-8hjjNjT0.js";import"./DialogContent-C4tATWVC.js";import"./Dialog-CUSPuOZ1.js";import"./Modal-CrOsGJ6P.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-Da2XNMZp.js";import"./WarningDialog-COaOa6xX.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
