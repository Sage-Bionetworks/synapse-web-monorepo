import{M as E,f as _}from"./useFiles-DsXNnbuB.js";import{l as h}from"./index-8dYqqbvO.js";import{j as r}from"./jsx-runtime-CEiya-qk.js";import"./VerificationSubmission-CMrrYimb.js";import"./StringUtils-Bdqa-HwM.js";import"./OrientationBanner-p1YWnoy_.js";import"./index-BSp_ZQzn.js";import{n as x}from"./useAccessRequirements-CRk0t1i8.js";import{p as T}from"./pluralize-CNHxWJMQ.js";import{E as O}from"./EntityLink-DfqhooH0.js";import{T as M}from"./Typography-DrbAIehx.js";import{L as S}from"./List-CUDPGnVD.js";import{L as k}from"./ListItem-DhsMqdi2.js";import{A as C}from"./Alert-VbEHGyJ9.js";import"./SynapseConstants-B0LjNAFO.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useTimeout-DQj90VCm.js";import"./FullWidthAlert-APJZjszM.js";import"./spreadSx-CwcO6WA9.js";import"./Stack-BVGEmsZM.js";import"./DefaultPropsProvider-mowMNPVN.js";import"./createTheme-BIYFvq8g.js";import"./extendSxProp--VZNpAZm.js";import"./getThemeProps-Bo5zZXDb.js";import"./useTheme-CUpSamw8.js";import"./Box-CeBO_yiS.js";import"./AlertTitle-BtZzDwm8.js";import"./useForkRef-DpmcJsqc.js";import"./useSlot-Bi5uK-Bp.js";import"./useTheme-DEW0hui-.js";import"./ClickAwayListener-V2WTDJSg.js";import"./getReactElementRef-DObOhTgY.js";import"./index-Bmc5tHOG.js";import"./iframe-D2P6Hz8u.js";import"./index-B8_ioYD3.js";import"./ownerDocument-DW-IO8s5.js";import"./Paper-IJ_WKSZl.js";import"./Grow-Cu2yfkpY.js";import"./Tooltip-BPHaPNfS.js";import"./index-CwubJZ7e.js";import"./useControlled-DYG3vje6.js";import"./Popper-BTFfeZDZ.js";import"./isFocusVisible-B8k4qzLc.js";import"./Button-DW8uwKcd.js";import"./createSimplePaletteValueFilter-Cum4RQAQ.js";import"./ButtonBase-DzCtctvR.js";import"./CircularProgress-CN-NraCE.js";import"./useQuery-BaQ4tC5y.js";import"./utils-NAV_hApq.js";import"./Link-ClzLR6kU.js";import"./Collapse-CHZvkNcr.js";import"./_baseUniq-CH5B1OKL.js";import"./_Uint8Array-DDv7F2aI.js";import"./_baseTimes-36S_kd0L.js";import"./isObjectLike-BerGYOoN.js";import"./isArray-Dxzbedgu.js";import"./_getTag-CruQv3Dp.js";import"./isEqual-ChKGANOO.js";import"./merge-B2Kk0ye1.js";import"./_initCloneObject-CzYcNzPS.js";import"./identity-DKeuBCMA.js";import"./createSvgIcon-BEhJlt2H.js";import"./tinycolor-Begke6kS.js";import"./Fade-BLEwZ0yn.js";import"./inputBaseClasses-BPzUyhmM.js";import"./calculateFriendlyFileSize-D4N7TZwp.js";import"./CheckCircleTwoTone-Dl8Hb3jc.js";import"./InfoTwoTone-D7pUqeUD.js";import"./index-BZI38DsI.js";import"./useMutation-De7K5N57.js";import"./dayjs.min-PNfTLX3I.js";import"./chunk-AYJ5UCUI-DfFmK8x9.js";import"./cloneDeep-DhitCHjc.js";import"./Skeleton-Ds7O-lEt.js";import"./util-HBh2B_LH.js";import"./index-DDIc1CHd.js";import"./react-B_KpKvb2.js";import"./index-CjJI17xJ.js";import"./_baseOrderBy-CfOh5O_p.js";import"./toString-D5-98mOr.js";import"./isSymbol-DxPGBnDj.js";import"./_baseGet-DLaTx7LA.js";import"./_baseIteratee-DFOap-i-.js";import"./hasIn-HlSHgPub.js";import"./_baseMap-DyVPJHpn.js";import"./_baseEach-DX3Ik6Jq.js";import"./useQueries-DwE10l0O.js";import"./useInfiniteQuery-Cu1HSCaO.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./useEntity-qHCvC7-L.js";import"./pickBy-DI_T3A-z.js";import"./isString-Boeu8eNB.js";import"./toInteger-BmLuhZ-4.js";import"./pick-bp0mWTv6.js";import"./_baseSet-DIZtfUfQ.js";import"./omit-BSdh_8oH.js";import"./_baseSlice-F8doVSIJ.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntityBundle-C5Sny-mJ.js";import"./useGetEntityHeaders-C_EQPvfx.js";import"./EntityIcon-Bipl8UsT.js";import"./IconSvg-Ru8SDfys.js";import"./LayersTwoTone-DQsSFRzv.js";import"./ContentCopyTwoTone-D7Fl5aFU.js";import"./HelpOutlineTwoTone-C6DcZrhw.js";import"./ErrorOutlined-DFdweklI.js";import"./GetAppTwoTone-8z-L4HON.js";import"./InfoOutlined-DUWrIKcG.js";import"./PhoneTwoTone-C7jLHwJE.js";import"./DeleteTwoTone-BCrnQMhe.js";import"./ErrorChip-TQ3Tj4_y.js";import"./Chip-DoXsjVw8.js";import"./Avatar--SiFyk7F.js";import"./isHostComponent-DVu5iVWx.js";import"./isMuiElement-DqPuB8Ka.js";import"./listItemButtonClasses-CAhXtEVd.js";import"./Close-CgXCugLz.js";import"./IconButton-D8jW5NGW.js";const c=p=>{const n={ids:[p.accessRequirementId]},{data:e,isError:a,error:f}=x(n),t=(e==null?void 0:e.pages.flatMap(o=>o.results)[0])??void 0,d=(t==null?void 0:t.relatedProjectIds.length)||0,A=`${T("project",d,!0)}${d>0?":":""}`;return r.jsxs(r.Fragment,{children:[t&&r.jsxs(r.Fragment,{children:[r.jsx(M,{variant:"body1",children:A}),r.jsx(S,{sx:{listStyleType:"disc",pl:4},children:t.relatedProjectIds.map(o=>r.jsx(k,{sx:{display:"list-item",py:"4px",".no-margin-y":{my:0}},children:r.jsx(O,{entity:o,link:!1,showIcon:!1,className:"no-margin-y"})},o))})]}),a&&r.jsx(C,{severity:"error",children:f.message})]})};try{c.displayName="AccessRequirementRelatedProjectsList",c.__docgenInfo={description:"",displayName:"AccessRequirementRelatedProjectsList",props:{accessRequirementId:{defaultValue:null,description:"",name:"accessRequirementId",required:!0,type:{name:"number"}}}}}catch{}const He={title:"Governance/AccessRequirementRelatedProjectsList",component:c},i={args:{accessRequirementId:9603055}},s={args:{accessRequirementId:9605913}},m={args:{accessRequirementId:1234567},parameters:{stack:"mock",msw:{handlers:[h.rest.post(`${E}${_}`,async(p,n,e)=>{const a={results:[{id:"1234567",type:"org.sagebionetworks.repo.model.ManagedACTAccessRequirement",createdOn:"2017-08-23T18:48:20.892Z",modifiedOn:"2023-12-14T00:43:41.315Z",name:"Team AR without Related Projects",version:"1",relatedProjectIds:[],reviewerIds:[]}]};return n(e.status(200),e.json(a))})]}}};var l,u,R;i.parameters={...i.parameters,docs:{...(l=i.parameters)==null?void 0:l.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 9603055
  }
}`,...(R=(u=i.parameters)==null?void 0:u.docs)==null?void 0:R.source}}};var j,g,y;s.parameters={...s.parameters,docs:{...(j=s.parameters)==null?void 0:j.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 9605913
  }
}`,...(y=(g=s.parameters)==null?void 0:g.docs)==null?void 0:y.source}}};var I,P,q;m.parameters={...m.parameters,docs:{...(I=m.parameters)==null?void 0:I.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 1234567
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [
      // searchAccessRequirements
      rest.post(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_SEARCH}\`, async (req, res, ctx) => {
        const zeroRelatedProjects = {
          results: [{
            id: '1234567',
            type: 'org.sagebionetworks.repo.model.ManagedACTAccessRequirement',
            createdOn: '2017-08-23T18:48:20.892Z',
            modifiedOn: '2023-12-14T00:43:41.315Z',
            name: 'Team AR without Related Projects',
            version: '1',
            relatedProjectIds: [],
            reviewerIds: []
          }]
        };
        return res(ctx.status(200), ctx.json(zeroRelatedProjects));
      })]
    }
  }
}`,...(q=(P=m.parameters)==null?void 0:P.docs)==null?void 0:q.source}}};const Ke=["ManyProjects","OneProject","ZeroProjectsMock"];export{i as ManyProjects,s as OneProject,m as ZeroProjectsMock,Ke as __namedExportsOrder,He as default};
