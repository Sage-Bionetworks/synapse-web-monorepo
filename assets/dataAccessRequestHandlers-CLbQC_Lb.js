import{a2 as p,a3 as l,a4 as D}from"./useFiles-D-hdekB1.js";import{l as c}from"./index-1859C49g.js";import{m as S,M as g}from"./mockAccessRequirements-o1j8tsY1.js";import{o as _}from"./VerificationSubmission-BnFne12N.js";import{M as a,b as M}from"./mock_user_profile-CyZOyNQ0.js";import{e as A,f as E,g as C,h as I}from"./mock_file_handle-CZX1VBx6.js";import{M as u}from"./MockResearchProject-BSFCuXd0.js";import{B as m}from"./BasicMockedCrudService-DeSDZ0UD.js";const O="3541518",f="49813181",R={id:O,accessorChanges:[{userId:String(a),type:_.GAIN_ACCESS}],attachments:[A,E],createdBy:String(a),createdOn:"2023-04-19T13:06:51+00:00",ducFileHandleId:C,irbFileHandleId:I,modifiedBy:String(a),modifiedOn:"2023-04-19T13:06:51+00:00",researchProjectId:u,etag:"0",accessRequirementId:String(S.id),concreteType:"org.sagebionetworks.repo.model.dataaccess.Request"},T={id:f,accessorChanges:[{userId:String(a),type:_.GAIN_ACCESS},{userId:String(M),type:_.REVOKE_ACCESS}],attachments:[A,E],createdBy:String(a),createdOn:"2023-04-19T13:06:51+00:00",ducFileHandleId:C,irbFileHandleId:I,modifiedBy:String(a),modifiedOn:"2023-04-19T13:06:51+00:00",researchProjectId:u,etag:"0",accessRequirementId:String(S.id),concreteType:"org.sagebionetworks.repo.model.dataaccess.Renewal",publication:"My cool paper that used this data: https://doi.org/10.1016/j.cell.2011.02.013",summaryOfUse:"We ran a χ² test of homogeneity to determine if this data was representative of the rest of the population with consideration for similar large data collections."},o=new m({idField:"id",autoGenerateId:!0,initialData:[R,T]}),y=new m({initialData:[{accessRequirementId:String(S.id),requestId:R.id},{accessRequirementId:String(g),requestId:T.id}]});function F(n){return[c.rest.get(`${n}${p(":id")}`,async(r,s,e)=>{const t=y.getOneByField("accessRequirementId",r.params.id);if(t&&t.requestId){const i=o.getOneById(t.requestId);if(i)return s(e.status(200),e.json(i))}return s(e.status(404),e.json({message:`MSW: Request or Renewal not found for access requirement ID: ${r.params.id}`}))}),c.rest.post(`${n}${l}`,async(r,s,e)=>{const t=await r.json(),i=t.id?o.getOneById(t.id):null;let d;return i?d=o.update(t.id,t):d=o.create(t),s(e.status(201),e.json(d))}),c.rest.post(`${n}${D(":id")}`,async(r,s,e)=>s(e.status(201),e.json({})))]}export{F as g};
