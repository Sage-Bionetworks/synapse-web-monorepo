import{j as o}from"./jsx-runtime-Du8NFWEI.js";import{o as c}from"./useFiles-DlV8jtGY.js";import{p as y}from"./SqlFunctions-DeVdCW8u.js";import"./StringUtils-CCZoPpVk.js";import{g as f,h as R}from"./SynapseConstants-CMdv2tqR.js";import"./SkeletonButton-BPAFkCQK.js";import"./SkeletonInlineBlock-D4fNjiAE.js";import{S as h}from"./SkeletonTable-Bfp_IXYb.js";import"./SkeletonParagraph-jKLsJPMJ.js";import{R as q}from"./RowDataTable-C8PRb-9p.js";const r=a=>{const{columnAliases:s,columnLinks:n,query:t,displayedColumns:l}=a,i=y(t.sql),u={partMask:f|R,concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",entityId:i,query:t},{data:e,isLoading:m}=c(u),d=(e==null?void 0:e.queryResult.queryResults.rows[0].values)??[],p=(e==null?void 0:e.queryResult.queryResults.headers)??[];return m?o.jsx(h,{numRows:6,numCols:1}):o.jsx(q,{columnAliases:s,columnLinks:n,rowData:d,headers:p,displayedColumns:l})};try{r.displayName="RowDataTableWithQuery",r.__docgenInfo={description:"For the first row returned by the query, displays a table of column names and Synapse Table row data represented as key/value pairs",displayName:"RowDataTableWithQuery",props:{query:{defaultValue:null,description:"The query used to retrieve data",name:"query",required:!0,type:{name:"Query"}},displayedColumns:{defaultValue:null,description:"Optional list of column names whose data should be displayed in the table. If not provided, all columns with data will be shown.",name:"displayedColumns",required:!1,type:{name:"string[]"}},columnAliases:{defaultValue:null,description:"Optional display value overrides for column names",name:"columnAliases",required:!1,type:{name:"Record<string, string>"}},columnLinks:{defaultValue:null,description:"Optional configuration for linking columns",name:"columnLinks",required:!1,type:{name:"LabelLinkConfig"}}}}}catch{}export{r as R};
