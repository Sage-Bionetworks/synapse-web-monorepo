import{a as C,b as P,c as U,d as L}from"./mockSchema-DEzT3NT0.js";import{g as M}from"./asyncJobHandlers-CkBqCLZx.js";import{bI as O,bJ as _,bK as D,bL as E,bM as B,bN as v,bO as F,bP as V,g as j,B as y}from"./useFiles-C5KQCC6t.js";import{h as i,H as r}from"./index-CxG_bA2x.js";import{M as G}from"./mockAnnotationColumns-7XLM4Ojz.js";import{g as W}from"./accessRequirementAclHandlers-IwID5-9u.js";import{c as q}from"./accessRequirementHandlers-V2cgV3wT.js";import{g as K,a as x}from"./teamHandlers-CuTSMSeT.js";import{g as J}from"./dataAccessRequestHandlers-B1xMMgxe.js";import{s as I,p as $}from"./VerificationSubmission-OWkqLMYZ.js";import{m as A,a as H}from"./mock_discussion-DkUvhi8w.js";import{m as Y}from"./mockProject-DDHIUe1N.js";import{M as m}from"./mock_user_profile-CCzWeUML.js";import{B as h}from"./BasicMockedCrudService-H312J4Md.js";import{g as X}from"./entityHandlers-CeCwl61Q.js";import{a as w}from"./mockEvaluationQueue-DeahwHid.js";import{g as Q}from"./featureFlagHandlers-rHa_Piql.js";import{g as z}from"./fileHandlers-CJFPOFHB.js";import{g as Z}from"./personalAccessTokenHandlers-aBAkl3OH.js";import{g as tt}from"./researchProjectHandlers-S9njn1c8.js";import{g as et}from"./resetTwoFactorAuthHandlers-BAkBf7b5.js";import{f as R}from"./fakerUtils-BjHYPEnn.js";import{c as ot,b as st,a as rt,g as nt}from"./tableQueryHandlers-BHDp0ZGM.js";import{g as at,a as it}from"./userProfileHandlers-DGUd68h4.js";import{b as ut}from"./wikiHandlers-EKqohMRM.js";const b={PENDING:"PENDING",CODE_SENT:"CODE_SENT",FAILED:"FAILED",REVOKED:"REVOKED",VERIFIED:"VERIFIED"},ct=[C,P,U,L];function dt(t){return M(_,e=>O(e),e=>{const o=e.$id,s=ct.find(n=>{var a;return(a=n.$id)==null?void 0:a.includes(o)});if(!s)throw new Error(`Validation schema with id ${o} not found in mock data.`);return{concreteType:"org.sagebionetworks.repo.model.schema.GetValidationSchemaResponse",validationSchema:s}},t)}const lt=new h({initialData:A,idField:"id",autoGenerateId:!0}),S=new h({initialData:H,idField:"id",autoGenerateId:!0});function mt(t,e){return S.getMany(o=>o.forumId===t).filter(o=>{switch(e){case I.NO_FILTER:return!0;case I.DELETED_ONLY:return o.isDeleted;case I.EXCLUDE_DELETED:return!o.isDeleted}})}function pt(t){return[i.get(`${t}${D}/:id`,({params:e})=>{let o=404,s={concreteType:"org.sagebionetworks.repo.model.ErrorResponse",reason:`MSW could not find a mock forum object with ID ${e.id}`};const n=lt.getOneById(e.id);return n&&(o=200,s=n),r.json(s,{status:o})}),i.get(`${t}${E}/:id`,({params:e})=>{let o=404,s={concreteType:"org.sagebionetworks.repo.model.ErrorResponse",reason:`MSW could not find a mock discussion thread bundle object with ID ${e.id}`};e.id==="messageUrl"&&(s={concreteType:"org.sagebionetworks.repo.model.ErrorResponse",reason:"GET /thread/messageUrl is not yet implemented"});const n=S.getOneById(e.id);return n&&(o=200,s=n),r.json(s,{status:o})}),i.post(`${t}${E}`,async({request:e})=>{const o=await e.json(),s=S.create({forumId:o.forumId,projectId:Y.id,title:o.title,createdOn:new Date().toISOString(),createdBy:String(m),modifiedOn:new Date().toISOString(),etag:"etag",messageKey:"todo key",numberOfViews:0,numberOfReplies:0,lastActivity:new Date().toISOString(),activeAuthors:[String(m)],isEdited:!1,isDeleted:!1,isPinned:!1});return r.json(s,{status:201})}),i.get(`${t}${B(":forumId")}`,({params:e,request:o})=>{const s=new URL(o.url).searchParams.get("offset"),n=s?parseInt(s):0,a=new URL(o.url).searchParams.get("limit"),u=a?parseInt(a):10,c=e.filter??I.EXCLUDE_DELETED,l=mt(e.forumId,c),p={results:l.slice(n,n+u),totalNumberOfResults:l.length};return r.json(p,{status:200})}),i.get(`${t}${D}/:id/moderators`,()=>{const e={results:[String(m)],totalNumberOfResults:1};return r.json(e,{status:200})})]}const ft={creators:[{creatorName:"Farnsworth, Hubert"},{creatorName:"Wong, Amy"}],titles:[{title:"Mathematics of quantum neutrino fields"}],publicationYear:3024};function It(t,e=ft){return[i.get(`${t}${v}/doi`,()=>r.json(e,{status:201}))]}function gt(t){return[i.get(`${t}${F(":evaluationId")}`,({params:e})=>{let o=404,s={concreteType:"org.sagebionetworks.repo.model.ErrorResponse",reason:`Mock Service worker could not find a mock evaluation queue with ID ${e.evaluationId}`};const n=w.find(a=>a.id===e.entityId);return n&&(s=n,o=200),r.json(s,{status:o})}),i.get(`${t}${V}`,()=>{const o={results:w,totalNumberOfResults:w.length};return r.json(o,{status:200})})]}function N(){return crypto.getRandomValues(new Uint32Array(1))[0]}const ht=()=>`grid-session-${N()*1e5}`,f=new Map;function wt(t){return[i.post(`${t}/repo/v1/grid/session/async/start`,async({request:e})=>{const o=`job-${Date.now()}-${Math.random().toString(36).substring(2,9)}`,s=await e.json();return f.set(o,{status:"PROCESSING",startTime:Date.now(),sessionId:ht()}),r.json(s,{status:201})}),i.get(`${t}/repo/v1/grid/session/async/get/:token`,({params:e})=>{const o=f.get(e.token);return o?(o.status="COMPLETE",r.json({concreteType:"org.sagebionetworks.repo.model.grid.GridSession",gridSession:{sessionId:o.sessionId,startedBy:"mockUser",startedOn:new Date().toISOString(),etag:`etag-${Date.now()}`,modifiedOn:new Date().toISOString(),lastReplicaIdClient:1,lastReplicaIdService:1}},{status:200})):r.text("Job not found",{status:404})}),i.post(`${t}/repo/v1/grid/:sessionId/replica`,async({request:e})=>{const{gridSessionId:o}=await e.json();if(!Array.from(f.values()).find(u=>u.sessionId===o))return r.text("Grid session not found",{status:404});const n=N()%1e3,a={concreteType:"org.sagebionetworks.repo.model.grid.GridReplica",replica:{gridSessionId:o,replicaId:n,createdBy:"mockUser",isAgentReplica:!1,createdOn:new Date().toISOString()}};return r.json(a,{status:201})}),i.get(`${t}/repo/v1/grid/:sessionId/presignedUrl`,({params:e})=>{const{sessionId:o}=e;if(!Array.from(f.values()).find(a=>a.sessionId===o))return r.text("Grid session not found",{status:404});const n=`https://mock-s3-bucket/${o}/data.csv?presigned=true`;return r.json({presignedUrl:n},{status:200})})]}function bt(t){return[i.post(`${t}${v}/message`,async({request:e})=>{const o=await e.json();return r.json(o,{status:201})})]}const St="https://short.io/abc123",Dt=(t,e)=>({id:"123456",originalURL:t,shortURL:St,domain:e}),Et=()=>[i.post("https://api.short.io/links/public",async({request:t})=>{const e=await t.json();return r.json(Dt(e.originalURL,e.domain),{status:200})})];function k(t){return{subscriptionId:String(R.number.int({min:1e3,max:9999})),subscriberId:String(m),createdOn:R.date.anytime().toISOString(),...t}}const jt=A.map(t=>k({objectId:t.id,objectType:$.FORUM})),yt=H.map(t=>k({objectType:$.THREAD,objectId:t.id})),g=new h({initialData:[...jt,...yt],idField:"subscriptionId",autoGenerateId:!0});function T(t,e="ASC",o=0,s=10,n){const a=g.getAll().filter(c=>t?c.objectType===t:!0).filter(c=>n?n.includes(c.objectId):!0).sort((c,l)=>{const p=new Date(l.createdOn).getTime()-new Date(c.createdOn).getTime();return e==="ASC"?p:-1*p}),u=a.length;return{results:a.slice(o,o+s),totalNumberOfResults:u}}function Rt(t){return[i.get(`${t}/repo/v1/subscription/all`,({request:e})=>{const o=new URL(e.url).searchParams.get("objectType")??void 0,s=new URL(e.url).searchParams.get("sortDirection")??void 0,n=new URL(e.url).searchParams.get("offset"),a=n?parseInt(n):void 0,u=new URL(e.url).searchParams.get("limit"),c=u?parseInt(u):void 0,l=T(o??void 0,s,a,c);return r.json(l,{status:200})}),i.post(`${t}/repo/v1/subscription/list`,async({request:e})=>{const o=await e.json(),s=T(o.objectType,o.sortDirection,void 0,void 0,o.idList);return r.json(s,{status:200})}),i.post(`${t}/repo/v1/subscription`,async({request:e})=>{const o=await e.json(),s=g.create({subscriberId:String(m),objectId:o.objectId,objectType:o.objectType,createdOn:new Date().toISOString()});return r.json(s,{status:201})}),i.delete(`${t}/repo/v1/subscription/:id`,({params:e})=>{const o=e.id;return g.delete(o),new Response("",{status:200})}),i.post(`${t}/repo/v1/subscription/subscribers`,async({request:e})=>{const o=await e.json(),n={subscribers:g.getMany(a=>a.objectType===o.objectType&&a.objectId===o.objectId).map(a=>a.subscriberId)};return r.json(n,{status:200})})]}const d=new h({initialData:[],idField:"id",autoGenerateId:!0});function Tt(t){return[i.get(`${t}/repo/v1/webhook/:webhookId`,({params:e})=>{const o=e.webhookId,s=d.getOneById(o);return s?r.json(s,{status:200}):r.json({reason:`Webhook with ID ${o} not found`},{status:404})}),i.post(`${t}/repo/v1/webhook/list`,()=>{const e={page:d.getAll()};return r.json(e,{status:200})}),i.post(`${t}/repo/v1/webhook`,async({request:e})=>{const o=await e.json(),s=d.create({...o,verificationStatus:b.CODE_SENT});return r.json(s,{status:201})}),i.put(`${t}/repo/v1/webhook/:webhookId`,async({params:e,request:o})=>{const s=e.webhookId,n=await o.json(),a=d.getOneById(s);if(!a)return r.json({reason:`Webhook with ID ${s} not found`},{status:404});let u=a==null?void 0:a.verificationStatus;a&&a.invokeEndpoint!==n.invokeEndpoint&&(u=b.CODE_SENT);const c=d.update(s,{...n,verificationStatus:u});return r.json(c,{status:201})}),i.post(`${t}/repo/v1/webhook/:webhookId/verify`,({params:e})=>{const o=e.webhookId,s=d.getOneById(o);if(!s)return r.json({reason:`Webhook with ID ${o} not found`},{status:404});const n=d.update(o,{...s,verificationStatus:b.VERIFIED});return r.json(n,{status:201})}),i.put(`${t}/repo/v1/webhook/:webhookId/verificationCode`,({params:e})=>{const o=e.webhookId,s=d.getOneById(o);return s?r.json(s,{status:201}):r.json({reason:`Webhook with ID ${o} not found`},{status:404})}),i.delete(`${t}/repo/v1/webhook/:webhookId`,({params:e})=>{const o=e.webhookId;return d.delete(o),new Response("",{status:200})})]}const vt=(t,e)=>[i.options("*",()=>new Response("",{status:200})),i.get(`${t}/auth/v1/authenticatedOn`,()=>r.json({authenticatedOn:new Date().toISOString()},{status:200})),...X(t),...at(t),it(t,!0,!0),...ut(t),...q(t),...W(t),...J(t),...tt(t),...z(t),...wt(t),...pt(t),...Rt(t),...gt(t),ot(t),...st(G,t),...rt(t),...Z(t),...K(t),...x(t),...et(t),...bt(t),Q({portalOrigin:e}),...nt(t),...It(t),...Et(),...Tt(t),...dt(t)];vt(j(y.REPO_ENDPOINT),j(y.PORTAL_ENDPOINT));export{b as W,vt as g};
