import{j as e,X as S,B as q,aq as re,dq as L,d5 as oe,_ as F,d7 as ae,r as l,J as B,c9 as ce,bU as le,gq as de,dr as ue,cc as pe,cb as N,gr as fe,bp as he,ax as me,c7 as k,c3 as ge,cs as ye,ct as Ie,c6 as H,c8 as Ae}from"./iframe-DkJtXMGY.js";import{C as Se}from"./ConfirmCloseWithoutSavingDialog-BO6TlyBz.js";import{b as Ce,A as Ee,u as be}from"./useEntityBundle-B1ApGHDu.js";import{C as _e}from"./ConfirmationDialog-DYXCYbxt.js";import{a as Le,b as Ne,c as ve,d as je}from"./useEntity-CO16wdW2.js";import{r as Te}from"./AccessControlListUtils-BEMWZG-R.js";import{a as xe,A as we}from"./AclEditor-BwJwsBCU.js";import{u as Pe}from"./useUpdateAcl-ChYObCJ-.js";import{u as De}from"./useGetEntityHeaders-BV7RK0QT.js";import{E as M}from"./EntityLink-BqpJWKI0.js";import{O as Ue}from"./OpenData-CpVIP6Bx.js";import{u as Re}from"./useMessage-lOC72vKJ.js";import{u as Oe}from"./UserBadge-D10KGNES.js";function Ge(t,s){return t?s?` (${t})`:t:""}function Ve(t,s,o){let n="",i=!1;return t&&(n+=t.trim(),i=!0),s&&(n+=" "+s.trim(),i=!0),n+=Ge(o,i),n}function qe(t){return Ve(t.firstName,t.lastName,t.userName)}const ke="Create local sharing settings",He="Delete local sharing settings";function j(t){const{isInherited:s,setIsInherited:o}=t;return s?e.jsxs("div",{children:[e.jsx(S,{variant:"body1",sx:{mt:2,mb:1},children:"Sharing settings are initially inherited from the parent folder or project by default. To customize settings for a specific file, folder, or table, you must create and adjust local sharing settings."}),e.jsx(q,{variant:"contained",size:"small",color:"success",startIcon:e.jsx(re,{icon:"add",wrap:!1}),onClick:()=>o(!1),children:ke})]}):e.jsxs("div",{children:[e.jsx(S,{variant:"body1",sx:{mt:2,mb:1},children:"The sharing settings will be inherited from the parent folder or project if local sharing settings are deleted."}),e.jsx(q,{variant:"outlined",size:"small",color:"error",onClick:()=>o(!0),children:He})]})}try{j.displayName="CreateOrDeleteLocalSharingSettingsButton",j.__docgenInfo={description:"",displayName:"CreateOrDeleteLocalSharingSettingsButton",props:{isInherited:{defaultValue:null,description:"",name:"isInherited",required:!0,type:{name:"boolean"}},setIsInherited:{defaultValue:null,description:"",name:"setIsInherited",required:!0,type:{name:"(isInherited: boolean) => void"}}}}}catch{}function T(t){const{isProject:s,isInherited:o,isAfterUpload:n=!1,benefactorId:i}=t,{data:u}=De(i,void 0,{enabled:!!i});return n?e.jsxs(e.Fragment,{children:[e.jsxs(S,{variant:"body1",children:["Currently, the sharing settings are inherited from the"," ",u?L(oe(u.type)).toLowerCase():"container"," ","named",i?e.jsxs(e.Fragment,{children:[" ",e.jsx(M,{entity:i})," "]}):"",". If you wish to customize settings for a particular file, folder, or table, you must establish ",e.jsx("strong",{children:"Local Sharing Settings"})," to make modifications."]}),e.jsxs(S,{variant:"body1",children:["After uploading, choose the file you want to customize sharing settings for, then navigate to File Tools >"," ",e.jsx(F,{href:"https://help.synapse.org/docs/Sharing-Settings,-Permissions,-and-Conditions-for-Use.2024276030.html",children:"File Sharing Settings"}),"."]})]}):s?e.jsx(S,{variant:"body1",children:"The sharing settings shown below apply to this project and are inherited by all project contents unless local sharing settings have been set."}):o?e.jsxs(S,{variant:"body1",children:["The sharing settings shown below are currently being inherited"," ",i?e.jsxs(e.Fragment,{children:["from ",e.jsx(M,{entity:i})," "]}):"","and cannot be modified here."]}):e.jsxs(S,{variant:"body1",children:["The local sharing settings shown below are ",e.jsx("strong",{children:"not"})," being inherited from a parent resource."]})}try{T.displayName="InheritanceMessage",T.__docgenInfo={description:"",displayName:"InheritanceMessage",props:{isProject:{defaultValue:null,description:"",name:"isProject",required:!0,type:{name:"boolean"}},isInherited:{defaultValue:null,description:"",name:"isInherited",required:!0,type:{name:"boolean"}},isAfterUpload:{defaultValue:null,description:"",name:"isAfterUpload",required:!1,type:{name:"boolean"}},benefactorId:{defaultValue:null,description:"",name:"benefactorId",required:!1,type:{name:"string"}}}}}catch{}function Me(t,s,o,n){const i=s.some(r=>t===r.principalId),u=o.isIndividual,m=String(t)===n,f=ce.includes(t);return!i&&u&&!m&&!f}function We(t){const{subject:s,body:o,initialResourceAccessList:n,newResourceAccessList:i}=t,{data:u,isLoading:m}=ae(),{data:f,isLoading:r}=Oe(i.map(h=>String(h.principalId))),y=m||r,{mutate:p,isPending:a}=Re({onError:h=>{B(`New users couldn't be notified: ${h.reason}`)}});return{sendNotification:l.useCallback(()=>{if(y){console.error("Attempted to send notification before user profile or user group headers were loaded. This should never happen.");return}const h=i.filter(g=>{const d=f.find(c=>c.ownerId===String(g.principalId));return Me(g.principalId,n,d,u.ownerId)}).map(g=>String(g.principalId));h.length>0&&p({subject:s,body:o,recipients:h})},[o,u,n,y,i,p,s,f]),isPending:a,isLoading:y}}const Fe=["CAN_VIEW","CAN_DOWNLOAD","CAN_EDIT","CAN_EDIT_DELETE","CAN_ADMINISTER"];function Be(t){return`${t} (shared on Synapse)`}function $e(t,s){return`${qe(t)} has shared an item with you on Synapse:
${ye(Ie.PORTAL_ENDPOINT)}Synapse:${s}`}function ze(t,s,o){return!t||s?!1:n=>{const i=o.ownerId===String(n.principalId),u=n.principalId===N;return!(i||u)}}function Ye(t,s,o){return!t||s?!1:n=>o.ownerId===String(n.principalId)?!1:t}function Ke(t){return s=>{if(s.principalId===N)return t?H.CAN_DOWNLOAD:H.CAN_VIEW}}const x=l.forwardRef(function(s,o){const{entityId:n,onCanSaveChange:i,onUpdateSuccess:u,isAfterUpload:m=!1}=s,{data:f}=de(),{data:r}=Ce(n,void 0,Ee,{staleTime:1/0}),y=ue.project==r.entityType,{data:p}=Le(r.entity.parentId,{staleTime:1/0}),a=r.benefactorAcl.resourceAccess,E=l.useMemo(()=>(p==null?void 0:p.resourceAccess)??[],[p]),h=r.permissions.canChangePermissions,g=r.permissions.isEntityOpenData,d=r.benefactorAcl.id!=n,[c,w]=l.useState(d),[P,$]=l.useState(!1),[D,z]=l.useState(),{resourceAccessList:I,setResourceAccessList:b,addResourceAccessItem:U,updateResourceAccessItem:Y,removeResourceAccessItem:K,resetDirtyState:C}=Pe({initialResourceAccessList:a});l.useEffect(()=>{a&&(C(),b([...a]))},[a,C,b]),l.useEffect(()=>{C(),w(d)},[d,C]),l.useEffect(()=>{d==c?b(a):c&&b(E),C()},[d,a,E,C,b,c]);const J=I.some(A=>[pe,N,fe].includes(A.principalId)),{sendNotification:X,isLoading:Q,isPending:Z}=We({subject:Be(r.entity.name||""),body:$e(f,n),initialResourceAccessList:a,newResourceAccessList:I}),v={onSuccess:()=>{P&&X(),u()},onError:A=>{z(A)}},{mutate:R,isPending:ee}=Ne(v),{mutate:O,isPending:te}=ve(v),{mutate:G,isPending:se}=je(v),ne=ee||te||se||Z,V=l.useMemo(()=>d!=c||!Te(a,I),[a,d,c,I]),_=V||Q||ne,ie=V&&m;return l.useEffect(()=>{i(_)},[i,_]),l.useImperativeHandle(o,()=>({save(){_?d!=c?c?G(n):R({id:n,resourceAccess:I}):O({...r.accessControlList,resourceAccess:I}):console.error("EntityAclEditor: save() called but canSave is false")}}),[_,R,G,r,n,d,O,c,I]),e.jsxs(he,{sx:{gap:2},children:[e.jsx(Ue,{isOpenData:g,isPublic:J,currentUserCanUpdateSharingSettings:h}),e.jsx(T,{isProject:y,isInherited:c,benefactorId:c?p==null?void 0:p.id:n,isAfterUpload:m}),ie&&e.jsx(me,{isGlobal:!1,variant:"warning",title:`Edits will affect settings of entire ${L(r==null?void 0:r.entityType).toLowerCase()}.`,description:e.jsxs(e.Fragment,{children:[e.jsxs("p",{children:["Editing the settings here will impact the sharing settings for all files and folders within this"," ",L(r==null?void 0:r.entityType).toLowerCase(),", not just the ones you've recently uploaded."]}),e.jsxs("p",{children:["View the instructions above for setting your"," ",e.jsx(F,{href:"https://help.synapse.org/docs/Sharing-Settings,-Permissions,-and-Conditions-for-Use.2024276030.html",target:"_blank",children:"Local Sharing Settings"}),"."]})]})}),e.jsx(we,{isInherited:c,canEdit:ze(h,c,f),canRemoveEntry:Ye(h,c,f),resourceAccessList:I,availablePermissionLevels:Fe,emptyText:"",displayedPermissionLevelOverride:Ke(g),onAddPrincipalToAcl:A=>{A===N?U(A,k("CAN_VIEW")):U(A,k("CAN_DOWNLOAD"))},updateResourceAccessItem:Y,removeResourceAccessItem:K,showNotifyCheckbox:!0,notifyCheckboxValue:P,onNotifyCheckboxChange:$,showAddRemovePublicButton:!0}),!m&&!y&&r.permissions.canEnableInheritance&&e.jsx(j,{isInherited:c,setIsInherited:w}),D&&e.jsx(ge,{severity:"error",children:D.message})]})}),Je=l.forwardRef(function(s,o){return e.jsx(le,{children:e.jsx(l.Suspense,{fallback:e.jsx(xe,{}),children:e.jsx(x,{...s,ref:o})})})});try{x.displayName="EntityAclEditor",x.__docgenInfo={description:"",displayName:"EntityAclEditor",props:{entityId:{defaultValue:null,description:"The ID of the entity on which to view/edit the ACL. Note that the ACL may actually belong to an entity ancestor (benefactor).",name:"entityId",required:!0,type:{name:"string"}},onCanSaveChange:{defaultValue:null,description:"Invoked when the user can/cannot save the pending changes.",name:"onCanSaveChange",required:!0,type:{name:"(canSaveChanges: boolean) => void"}},onUpdateSuccess:{defaultValue:null,description:"Invoked when changes are successfully made.",name:"onUpdateSuccess",required:!0,type:{name:"() => void"}},isAfterUpload:{defaultValue:null,description:`Special case to show specific copy and allow changes to an inherited ACL immediately after a file is uploaded.
Note that if this is true, the entityId should be the ID of the folder or project that is the benefactor of the newly uploaded file(s)
@defaultValue false`,name:"isAfterUpload",required:!1,type:{name:"boolean"}}}}}catch{}const Xe=`Sharing settings determine who can access your content, and what kind of access they have. Choose people/teams and define their level of access below.

_Only Administrators can add, delete, or change access levels for other people._`,Qe="https://help.synapse.org/docs/Sharing-Settings,-Permissions,-and-Conditions-for-Use.2024276030.html";function W(t){var d;const{entityId:s,open:o,onUpdateSuccess:n=Ae,onClose:i,isAfterUpload:u=!1}=t,[m,f]=l.useState(!1),[r,y]=l.useState(!1),p=l.useRef(null),{data:a}=be(s),E=a!=null&&a.entityType?L(a==null?void 0:a.entityType):"",h=(d=a==null?void 0:a.permissions)==null?void 0:d.canChangePermissions;function g(){r?f(!0):i()}return e.jsxs(e.Fragment,{children:[e.jsx(Se,{open:m,onCancel:()=>{f(!1)},onConfirm:()=>{f(!1),i()}}),e.jsx(_e,{title:`${E} Sharing Settings`.trim(),onCancel:g,open:o,maxWidth:"md",titleHelpPopoverProps:{markdownText:Xe,helpUrl:Qe},content:e.jsx(Je,{ref:p,entityId:s,onCanSaveChange:c=>y(c),onUpdateSuccess:()=>{B("Permissions were successfully saved to Synapse","info"),n(),i()},isAfterUpload:u}),onConfirm:c=>{c.preventDefault(),p.current.save()},confirmButtonProps:{children:h?"Save":"OK",disabled:!r}})]})}try{W.displayName="EntityAclEditorModal",W.__docgenInfo={description:"",displayName:"EntityAclEditorModal",props:{entityId:{defaultValue:null,description:"",name:"entityId",required:!0,type:{name:"string"}},open:{defaultValue:null,description:"",name:"open",required:!0,type:{name:"boolean"}},onUpdateSuccess:{defaultValue:null,description:"",name:"onUpdateSuccess",required:!1,type:{name:"() => void"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}},isAfterUpload:{defaultValue:null,description:"",name:"isAfterUpload",required:!1,type:{name:"boolean"}}}}}catch{}export{W as E};
