import{j as l}from"./jsx-runtime-tYB6KGdN.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-B0kBNeMy.js";import{g as T}from"./handlers-rG9mMBlQ.js";import{aD as S,M as a}from"./useFiles-DvmSZ7jv.js";import"./OrientationBanner-DtbTbOX1.js";import"./index-Bkzzsk0B.js";import"./StringUtils-CzgJJW-6.js";import{l as _}from"./index--MHyVk00.js";import{S as E}from"./SynapseFormSubmissionGrid-4yIXMeYA.js";import"./mockSchema-KKPDV1cK.js";import"./mockFileEntity-BtsZHYxU.js";import"./mock_file_handle-Ct1MSfYs.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-BU4FqDwh.js";import"./mockTeam-D8edzndd.js";import"./SynapseConstants-C6W0HfbC.js";import"./uniqueId-DPTTp-CC.js";import"./toString-BGYj9T_z.js";import"./isObjectLike-BOpRD9h1.js";import"./iframe-PLARaQxx.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-DEfeboWZ.js";import"./times-BoBDNadF.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-BootuV1Z.js";import"./asyncJobHandlers-BbZjGt3v.js";import"./BasicMockedCrudService-BOreo5Ts.js";import"./cloneDeep-DTYlG1uc.js";import"./_Uint8Array-BtQ75CAl.js";import"./_initCloneObject-BIJYbTMn.js";import"./_getTag-9nw34TEi.js";import"./isEqual-Cw7YgxfX.js";import"./_baseIsEqual-DVVLfzkX.js";import"./mockAnnotationColumns-dg-CLXp4.js";import"./tableQueryHandlers-CtnF4f3C.js";import"./omit-B2cAlGk8.js";import"./_baseGet-BMsj7LUp.js";import"./isNil-DJG7UM9y.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BufaBT0Y.js";import"./_baseFlatten-WwGLmx2O.js";import"./pick-QoQOIwDv.js";import"./_baseSet-DRBC2r5a.js";import"./hasIn-a2QIQg1S.js";import"./accessRequirementAclHandlers-DiwoLDAe.js";import"./mockAccessRequirementAcls-61h81jVf.js";import"./mockAccessRequirements-CjR1Lnq5.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CZdZHQnO.js";import"./accessRequirementHandlers-CE1WhBVD.js";import"./wikiHandlers-BkZGRXoF.js";import"./mockWikiPageKey-Bnxu3PHq.js";import"./teamHandlers-DoXbKFNm.js";import"./dataAccessRequestHandlers-BapIdwos.js";import"./MockResearchProject-DXu45-Nm.js";import"./mock_discussion-Dx_0D5Mh.js";import"./fakerUtils-CbAc8ufF.js";import"./index-CQWj6zzq.js";import"./mockTableEntity-v8HDq1fD.js";import"./mockFileEntityACLVariants-DzzMngzf.js";import"./entityHandlers-BTzPBhMh.js";import"./mockEntity-D5NOx6ex.js";import"./mockEvaluationQueue-BYA3OXoI.js";import"./featureFlagHandlers-BoHwfnJT.js";import"./fileHandlers-D7lyGSN4.js";import"./personalAccessTokenHandlers-DGmb9XWp.js";import"./researchProjectHandlers-BAJX7Ao5.js";import"./resetTwoFactorAuthHandlers-BpK_npun.js";import"./userProfileHandlers-B_jba-6k.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-BI5ozUmQ.js";import"./FullWidthAlert-DhQrdjoW.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-B1CSW1mB.js";import"./createTheme-ow6PpJ59.js";import"./resolveComponentProps-DtrKlPN5.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-9Xc3crMX.js";import"./createSvgIcon-BMm4XUen.js";import"./DefaultPropsProvider-keNhgGSS.js";import"./Close-C7oos599.js";import"./IconButton-NVoucUGK.js";import"./ButtonBase-DUe-2sLH.js";import"./useTimeout-D_xDPDG6.js";import"./useIsFocusVisible-BmX07aem.js";import"./useEventCallback-n4BBqXCp.js";import"./Paper-CUJNJhUR.js";import"./Stack-yhBWrz08.js";import"./getThemeProps-DKG83qIe.js";import"./useTheme-BjnpOWHg.js";import"./Box-BxR0r0Bu.js";import"./AlertTitle-CVG6At3E.js";import"./Typography-BZGJY9FA.js";import"./useTheme-DhFu0EUb.js";import"./Grow-CKdiTWKJ.js";import"./index-s6VlmbGT.js";import"./utils-B54jEU3b.js";import"./ClickAwayListener-ComLkdB-.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-5RP58HIB.js";import"./index-C1cLcL-0.js";import"./useControlled-DJeY4ee5.js";import"./useId-b-gK5Z5A.js";import"./Popper-DiS3rm17.js";import"./Button-lu1VZGqc.js";import"./useQuery-CdcWoVBs.js";import"./utils-Chx9P0H6.js";import"./Link-DqPKtuF6.js";import"./Collapse-BvuOKxET.js";import"./tinycolor-Begke6kS.js";import"./Fade-DXThxLhw.js";import"./Skeleton-DDpLtQDR.js";import"./inputBaseClasses-HcbgCmhJ.js";import"./calculateFriendlyFileSize-DM-ZgnS1.js";import"./CheckCircleTwoTone-BvcCTkha.js";import"./InfoTwoTone-XqK14u6n.js";import"./mutation-DSCbETsB.js";import"./dayjs.min-B8Vi_I8g.js";import"./chunk-AYJ5UCUI-D3hJj5mX.js";import"./index-CoNRd3XO.js";import"./react-C-ewhzLl.js";import"./util-Cyu53tyr.js";import"./WideButton-C-UXwiKt.js";import"./DeleteTwoTone-BwdEkD51.js";import"./createSvgIcon-DQOs6dC1.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-DYSgLnXg.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-CPIcuDY8.js";import"./DialogBase-BklV6ulQ.js";import"./Close-Dw2bzEco.js";import"./HelpPopover-Crb4zXBp.js";import"./MarkdownPopover-BtTyZKfL.js";import"./LightTooltip-DzpiZLuM.js";import"./MarkdownSynapse-Crt3bvwR.js";import"./useMutation-BbbbQ8LY.js";import"./SkeletonButton-BsCpqfA-.js";import"./SkeletonInlineBlock-DpwxUn6v.js";import"./SkeletonTable-BggKxszJ.js";import"./SkeletonParagraph-BnJYm6g2.js";import"./HelpOutlineTwoTone-DGQkE-w7.js";import"./DialogTitle-zpmfsBaU.js";import"./DialogContent-GybMQ9FW.js";import"./Dialog-DLIO8pfL.js";import"./Modal-B5rJ19O6.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-DfAJYufp.js";import"./WarningDialog-C5lErZhz.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},To={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const _o=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,_o as __namedExportsOrder,To as default};
