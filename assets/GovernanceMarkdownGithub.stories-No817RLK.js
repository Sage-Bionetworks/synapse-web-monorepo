import{u as o}from"./VerificationSubmission-BDh1zA9f.js";import{g as u,bd as d,be as l,B as f,bf as S,M as O}from"./useFiles-DP5r_8h_.js";import"./StringUtils-C95LMFI-.js";import{h as i,H as n}from"./index-4ixb_EbX.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-qvRxtz3a.js";import"./SynapseConstants-B374GTlB.js";import"./OrientationBanner-BU-7X07a.js";import"./index-DOh4s_-E.js";import"./index-BtGDcTvp.js";import"./iframe-CBNphiDP.js";import"./spreadSx-CwcO6WA9.js";import"./react-Cn6UXufh.js";import"./FullWidthAlert-DNI0u40D.js";import"./Alert-C_0F6J7S.js";import"./createTheme-C4xHNGdh.js";import"./DefaultPropsProvider-BHwoOyH7.js";import"./useSlot-4Dt2bm7X.js";import"./useForkRef-BiijcE59.js";import"./createSimplePaletteValueFilter-C_Cdnk9R.js";import"./createSvgIcon-s4G4qou3.js";import"./Close-Cg5bmZHm.js";import"./IconButton-DwyAerDa.js";import"./useTimeout-Cmz87tz9.js";import"./ButtonBase-DBuVifEX.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BMJ4Jv0_.js";import"./Paper-q9JuhaB3.js";import"./useTheme-Dx4TqPEY.js";import"./useTheme-DwROfidY.js";import"./Stack-DYtdGJnP.js";import"./useThemeProps-BpG_5eyZ.js";import"./getThemeProps-gvKTAKTt.js";import"./extendSxProp-B_iH4oL0.js";import"./Box-DcHUT-iR.js";import"./AlertTitle-Cc_aOr1q.js";import"./Typography-C87QV3YC.js";import"./index-DValAcPx.js";import"./ClickAwayListener-C8du9OzG.js";import"./getReactElementRef-Bvp3nBcK.js";import"./index-umcRd70c.js";import"./index-ChFLTI6y.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-7xCOvQFP.js";import"./Tooltip-BVGISXDf.js";import"./index-VuQkd2dy.js";import"./useControlled-ChZzA-b3.js";import"./Popper-1yvfHCmZ.js";import"./Button-X-aMYJSh.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-DKU6Kxm0.js";import"./QueryClientProvider-Drv3DDYU.js";import"./Link-DNZklxO1.js";import"./Collapse-Bo6KiRDL.js";import"./_baseUniq-D9WPqwKE.js";import"./_Uint8Array-CtW1SfOY.js";import"./isArray-DJCEQSyb.js";import"./_getTag-C_b1pV5H.js";import"./isEqual-XYNdVziB.js";import"./noop-DX6rZLP_.js";import"./merge-BiadW8tB.js";import"./_initCloneObject-KGx9qkw7.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-Bp6vP_zE.js";import"./inputBaseClasses-ESUxP_6L.js";import"./calculateFriendlyFileSize-BGNYAu__.js";import"./CheckCircleTwoTone-B_j1OfQE.js";import"./InfoTwoTone-Fe5W6L4i.js";import"./useMutation-CR2RaXsm.js";import"./dayjs.min-BFapz5wS.js";import"./chunk-AYJ5UCUI-C5f8fAX_.js";import"./cloneDeep-BD-s7-9R.js";import"./Skeleton-DdZWbvza.js";import"./SkeletonButton-DYtdjqSY.js";import"./SkeletonInlineBlock-CN0uCq7x.js";import"./SkeletonTable-CWS9ay58.js";import"./times-C6sZ1Dzv.js";import"./toInteger-Yff7iR8r.js";import"./isSymbol-jJgaIxLY.js";import"./SkeletonParagraph-DpLHM0PJ.js";import"./MarkdownSynapse-D4SmAEKI.js";import"./Container-BD9h8G5S.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Qr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Xr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Xr as __namedExportsOrder,Qr as default};
