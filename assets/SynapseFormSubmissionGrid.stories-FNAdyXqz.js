import{j as l}from"./jsx-runtime-DfABaRRm.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DsgC4t7y.js";import{g as T}from"./handlers-E1vcT38q.js";import{aD as S,M as a}from"./useFiles-B_YGx59Q.js";import"./OrientationBanner-tFttoDJP.js";import"./index-DYlxwmQf.js";import"./StringUtils-tNCAfVhp.js";import{l as _}from"./index-DV6n9MQE.js";import{S as E}from"./SynapseFormSubmissionGrid-Eqgzwpqm.js";import"./mockSchema-B0t6KeHh.js";import"./mockFileEntity-CWMCMh9K.js";import"./mock_file_handle-DS_yjaGE.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-yNI4ErHN.js";import"./mockTeam-BsrQh51W.js";import"./SynapseConstants-CgNOmtbB.js";import"./uniqueId-BO_i-R7g.js";import"./toString-Bhze4qLh.js";import"./isObjectLike-IRS_VwDX.js";import"./iframe-N_SCbRud.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-B0Bx6SJu.js";import"./times-Ceor9oVU.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-4FVoJAF9.js";import"./asyncJobHandlers-C7Gvg8k4.js";import"./BasicMockedCrudService-nRTyHI8K.js";import"./cloneDeep-IiHMspIc.js";import"./_Uint8Array-Capyws4v.js";import"./_initCloneObject-DuN2pDEt.js";import"./_getTag-DYVojOvt.js";import"./isEqual-D6ItS3N1.js";import"./_baseIsEqual-DxRvwVdk.js";import"./mockAnnotationColumns-Dfx-fAt8.js";import"./tableQueryHandlers-DwAzL-HE.js";import"./omit-DHY0_m09.js";import"./_baseGet-Q_EnST1M.js";import"./isNil-BgiRU2Us.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-0Cc2NZpY.js";import"./_baseFlatten-CepnhIC8.js";import"./pick-BR-R2kuH.js";import"./_baseSet-Ci5I_5KS.js";import"./hasIn-Cf0k-CiD.js";import"./accessRequirementAclHandlers-D6Em1iG7.js";import"./mockAccessRequirementAcls-CfYS7YaM.js";import"./mockAccessRequirements-BtovGl8K.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DHj13qiO.js";import"./accessRequirementHandlers-BK-5RvZk.js";import"./wikiHandlers-CoegO-_s.js";import"./mockWikiPageKey-DjmaiY8J.js";import"./teamHandlers-CdJVB7wx.js";import"./dataAccessRequestHandlers-B8QuCzyR.js";import"./MockResearchProject-J-dDFO7w.js";import"./mock_discussion-CqOgNClQ.js";import"./fakerUtils-BmN3z4X_.js";import"./index-DbM7CNfA.js";import"./mockTableEntity-BsOYXqX7.js";import"./mockFileEntityACLVariants-B3kRtWcj.js";import"./entityHandlers-DpYr7r1c.js";import"./mockEntity-D3cWRU-V.js";import"./mockEvaluationQueue-JBkAZvUy.js";import"./featureFlagHandlers-DrWWUZe2.js";import"./fileHandlers-CHZQOJWP.js";import"./personalAccessTokenHandlers-Bsu8OkY2.js";import"./researchProjectHandlers-Bdga2_2N.js";import"./resetTwoFactorAuthHandlers-BL8FKaOD.js";import"./userProfileHandlers-BDf4ILsR.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-Dyr4l5YQ.js";import"./FullWidthAlert-BkSSmOGu.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-DZ4FxOIp.js";import"./createTheme-B7j6gmB9.js";import"./resolveComponentProps-Dk7HmJ2Q.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-pxSTpRRe.js";import"./createSvgIcon-C1r-9WuP.js";import"./DefaultPropsProvider-zBbok_Rg.js";import"./Close-DTAljvJz.js";import"./IconButton-CtrWpawg.js";import"./ButtonBase-BvEMQRg-.js";import"./useTimeout-DZ-OqC0g.js";import"./useIsFocusVisible-BStVjJ1N.js";import"./useEventCallback-Hfhvhsjq.js";import"./Paper-LaDS8bEp.js";import"./Stack-BuqrQrvy.js";import"./getThemeProps-qtNr_xPF.js";import"./useTheme-Dtm1qci2.js";import"./Box-BqS2LAmE.js";import"./AlertTitle-BWu0j2xR.js";import"./Typography-CeIa-fZn.js";import"./useTheme-Jk5FIvWn.js";import"./Grow-BehhM4N7.js";import"./index-CeyVdOhP.js";import"./utils-BKSSoB6B.js";import"./ClickAwayListener-B9uGoLeK.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DdV7RVVG.js";import"./index-Dj_6vp2Q.js";import"./useControlled-YFKV2F2n.js";import"./useId-ebMPsm6_.js";import"./Popper-Crl-0kzB.js";import"./Button-CYmbjpql.js";import"./useQuery-RqcQXr6l.js";import"./utils-7vG6A43c.js";import"./Link-C4XBdo-g.js";import"./Collapse-hevKOALZ.js";import"./tinycolor-Begke6kS.js";import"./Fade-CCfhYHs2.js";import"./Skeleton-DeHRU0rh.js";import"./inputBaseClasses-DuedhsRY.js";import"./calculateFriendlyFileSize-Wtc8EXbC.js";import"./CheckCircleTwoTone-Bo9T9_TT.js";import"./InfoTwoTone-BEe_0-jU.js";import"./mutation-BY_OAeuj.js";import"./dayjs.min-Cm4ygt_D.js";import"./chunk-AYJ5UCUI-CmQNpgxF.js";import"./index-B6ZDsx2K.js";import"./react-fTEcXI9d.js";import"./util-oBpSghil.js";import"./WideButton-C8W3DIxs.js";import"./DeleteTwoTone-C1_bjaKB.js";import"./createSvgIcon-Dyf6Fd6U.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-C-2PgPMN.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-p8oCGB7L.js";import"./DialogBase-CT9jrRF1.js";import"./Close-nSXKW4af.js";import"./HelpPopover-HmqB7_fn.js";import"./MarkdownPopover-Cn6d-VV_.js";import"./LightTooltip-DTMGXHQE.js";import"./MarkdownSynapse-5mtGjM53.js";import"./useMutation-QxWOl32L.js";import"./SkeletonButton-BEKl1r2o.js";import"./SkeletonInlineBlock-DrElrzsD.js";import"./SkeletonTable-BCs-xQQb.js";import"./SkeletonParagraph-CZKCQyEv.js";import"./HelpOutlineTwoTone-BNxe-Y5_.js";import"./DialogTitle-DFc93eD1.js";import"./DialogContent-xE0L8GlU.js";import"./Dialog-B3ZKlDQq.js";import"./Modal-uyeHWQ0z.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-DhEdRS2d.js";import"./WarningDialog-OQl38FKg.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},To={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const _o=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,_o as __namedExportsOrder,To as default};
