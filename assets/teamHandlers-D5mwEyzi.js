import{l as o}from"./index-BE71bAqU.js";import{M as l}from"./mock_user_profile-CijvmO8r.js";import{a as M,b as y,c as v,d as R,e as C,f as j,g as O,h as _}from"./mockTeam-9eVd25o0.js";import{B as I}from"./BasicMockedCrudService-Cz5PJyNo.js";import{aJ as q}from"./useFiles-CvqXu3qP.js";import{u as S}from"./uniqueId-BxhAah8S.js";const u="1234",w="f1b29c62-e987-4e69-9cec-198bf017a586",f=e=>{const s=Math.pow(10,e-1);return Math.floor(Math.random()*9*s+s)},Y={id:u},g=e=>{const s=f(6).toString(),a=f(6).toString();return{id:s,etag:w,challengeId:u,teamId:a,message:`Message for team ${a}`,...e}},A=[g({teamId:String(M),challengeId:u}),g({teamId:String(y),challengeId:u}),g({teamId:String(v),challengeId:u}),g({teamId:String(R),challengeId:u})],T=new I({initialData:A,idField:"id",autoGenerateId:!0});function B(e){return o.rest.get(`${e}/repo/v1/entity/:id/challenge`,async(s,a,t)=>{const n={id:u,etag:"f5e9df54-360b-4ede-9a17-f7f5680c8dd4",projectId:s.params.id,participantTeamId:String(C)};return a(t.status(200),t.json(n))})}function H(e){return o.rest.get(`${e}/repo/v1/challenge/:challengeId/challengeTeam`,async(s,a,t)=>{const n=T.getAll(),r={results:n,totalNumberOfResults:n.length};return a(t.status(200),t.json(r))})}function $(e){return o.rest.post(`${e}/repo/v1/challenge/:challengeId/challengeTeam`,async(s,a,t)=>{const n=await s.json(),r=T.create({...n,etag:"abcdef0987654321"});return a(t.status(200),t.json(r))})}function D(e){return o.rest.get(`${e}/repo/v1/challenge/:challengeId/submissionTeams`,async(s,a,t)=>{const n={results:[],totalNumberOfResults:0};return a(t.status(200),t.json(n))})}function Z(e){return[B(e),D(e),$(e),H(e)]}const d=new I({initialData:O,idField:"id",autoGenerateId:!0}),h=new I({initialData:_});function E(e,s){return h.getOneByPredicate(a=>a.teamId===e&&a.userId===s)}const b=[...j];function K(e){return o.rest.get(`${e}/repo/v1/team/:teamId`,async(s,a,t)=>{const n=d.getOneById(s.params.teamId);if(n)return a(t.status(200),t.json(n));const r={reason:`Team id: '${s.params.teamId}' does not exist`};return a(t.status(404),t.json(r))})}function L(e){return o.rest.post(`${e}/repo/v1/teamList`,async(s,a,t)=>{const n=await s.json(),r=[];for(const i of n.list){const c=d.getOneById(i.toString());if(!c){const p={reason:`Team with id ${i} not found`};return a(t.status(404),t.json(p))}r.push(c)}const m={concreteType:"org.sagebionetworks.repo.model.Team",list:r};return a(t.status(200),t.json(m))})}function N(e){return o.rest.post(`${e}/repo/v1/team`,async(s,a,t)=>{const n=await s.json(),r=d.create({...n,createdBy:String(l),createdOn:new Date().toISOString(),etag:"etag",modifiedBy:String(l),modifiedOn:new Date().toISOString()});return h.create({teamId:r.id,userId:String(l),isMember:!0,hasOpenInvitation:!1,hasOpenRequest:!1,canJoin:!1,membershipApprovalRequired:!1,hasUnmetAccessRequirement:!1,canSendEmail:!0}),await q(250),a(t.status(201),t.json(r))})}function U(e){return o.rest.get(`${e}/repo/v1/team/:teamId/member/:memberId/membershipStatus`,async(s,a,t)=>{const n=s.params.teamId,r=s.params.memberId;let m,i;return d.getOneById(n)?(m=E(n,r)??{teamId:n,userId:r,isMember:!1,hasOpenInvitation:!1,hasOpenRequest:!1,canJoin:!0,membershipApprovalRequired:!1,hasUnmetAccessRequirement:!1,canSendEmail:!1},i=200):(m={reason:`getTeamMembershipStatusHandler could not locate a team with ID ${n}`},i=404),a(t.status(i),t.json(m))})}function G(e){return o.rest.put(`${e}/repo/v1/team/:teamId/member/:memberId`,async(s,a,t)=>{const n=s.params.teamId,r=s.params.memberId;let m,i;if(!d.getOneById(n))m={reason:`getTeamMembershipStatusHandler could not locate a team with ID ${n}`},i=404;else{const p={teamId:n,userId:r,isMember:!0,hasOpenInvitation:!1,hasOpenRequest:!1,canJoin:!0,membershipApprovalRequired:!1,hasUnmetAccessRequirement:!1,canSendEmail:!1};h.create(p),m="",i=201}return a(t.status(i),t.json(m))})}function J(e){return o.rest.post(`${e}/repo/v1/membershipRequest`,async(s,a,t)=>{const r={...await s.json(),id:S(),createdOn:new Date().toISOString(),createdBy:String(l)};return a(t.status(201),t.json(r))})}function F(e){return o.rest.post(`${e}/repo/v1/membershipInvitation`,async(s,a,t)=>{const r={...await s.json(),id:S(),createdOn:new Date().toISOString(),createdBy:String(l)};return b.push(r),a(t.status(201),t.json(r))})}function P(e){return o.rest.get(`${e}/repo/v1/user/:userId/openInvitation`,async(s,a,t)=>{const n=b.filter(m=>String(m.inviteeId)===String(s.params.userId)),r={results:n,totalNumberOfResults:n.length};return a(t.status(200),t.json(r))})}function x(e){return[K(e),L(e),N(e),U(e),G(e),J(e),F(e),P(e)]}export{Z as a,x as g,Y as m};
