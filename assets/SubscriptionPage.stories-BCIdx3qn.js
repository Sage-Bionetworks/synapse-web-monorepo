import{j as r}from"./jsx-runtime-Du8NFWEI.js";import{r as e}from"./index-Dl6G-zuu.js";import{b as h}from"./useSubscription-DspY65UV.js";import{s,j as O}from"./index-0sKCi0IA.js";import{S as y}from"./SubscriptionItem-Ufa-xeYm.js";import{D}from"./DropdownSelect-DtBXMiFp.js";import{B as I}from"./Box-DRYT9rh3.js";import{T,a as d}from"./Tabs-BIOuo03q.js";import{S as v}from"./Stack-D3AEdRlD.js";import{B as R}from"./Button-CLkrjdQe.js";import{M as C}from"./SynapseClient-D4gkDMC-.js";import{g as E}from"./handlers-TzMUH1EW.js";import"./useMutation-BrriwhYv.js";import"./useInfiniteQuery-XcJaVaVN.js";import"./OrientationBanner-DcDyIfis.js";import"./FullWidthAlert-Q7pb-Dsc.js";import"./Alert-Aa0bm5Nm.js";import"./createTheme-DFSTUSmt.js";import"./index-GEGPABih.js";import"./styled-D9wW3ABP.js";import"./mergeSlotProps-deWJORir.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CEBgoE3Z.js";import"./createSvgIcon-gkOuU5-G.js";import"./Paper-6hBhi2Vr.js";import"./IconButton-CLoAcDX9.js";import"./ButtonBase-BgDXtZj-.js";import"./TransitionGroupContext-B611AcNu.js";import"./useIsFocusVisible-Cwvw9TRl.js";import"./AlertTitle-DKLb405u.js";import"./Typography-DgBbIcOX.js";import"./utils-Bdp_oNP4.js";import"./index-B6qzg4VC.js";import"./Grow-lFU1cKdF.js";import"./ClickAwayListener-5odGQiyi.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-Drr3vXNI.js";import"./index-hJhP8EJR.js";import"./RegularExpressions-CgDTvkkI.js";import"./Topic-DS95MNRV.js";import"./IconSvg-Bu2KGuM0.js";import"./ErrorOutlined-CnICwQW0.js";import"./GetAppTwoTone-CEgy4oXX.js";import"./InfoOutlined-DJDm_gVQ.js";import"./CheckCircleTwoTone-U_UPMvHV.js";import"./ConditionalWrapper-Be926PbJ.js";import"./Skeleton-1jrlRaLC.js";import"./colorManipulator-2ZEM0eRC.js";import"./Link-Cl5bQMMR.js";import"./useForum-BOO0i_qw.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntity-VnPVwusp.js";import"./useQueries-Gre6fUe3.js";import"./isEqualWith-DihPwTBB.js";import"./isEqual-D41zhIvk.js";import"./_Uint8Array-kXJ5rGjS.js";import"./_baseTimes-DoMoQz2v.js";import"./_Map-CWVOAJuy.js";import"./isArray-ggc3KxVp.js";import"./_cacheHas-CXp-3pXr.js";import"./_setToArray-CSiN_fit.js";import"./_getAllKeys-BsAuleaE.js";import"./_getTag-BK1szWWC.js";import"./pick-DLWpS9wS.js";import"./_baseIndexOf-DlmoT9Yo.js";import"./toInteger-CoOs-5Xi.js";import"./isSymbol-BzKS7Qf1.js";import"./toString-CYyvKWOl.js";import"./_baseIteratee-B9eV7LvB.js";import"./_getMatchData-BtR9HIKq.js";import"./_baseFlatten-CLm95RgQ.js";import"./identity-DKeuBCMA.js";import"./_baseClone-BdRBhfx5.js";import"./_initCloneObject-CwIS7fS2.js";import"./_defineProperty-Df4ZcNZr.js";import"./omit-CSy2asyG.js";import"./_baseSlice-F8doVSIJ.js";import"./isPlainObject-B3AKd_5V.js";import"./_overRest-DUrPJxXC.js";import"./QueryFilterUtils-CLCheuDv.js";import"./SynapseConstants-DNR648SI.js";import"./isNumber-BM-UBS4N.js";import"./useThread-z1BI4EKN.js";import"./MenuList-CWcqbzO9.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./List-JFp8Imct.js";import"./MenuItem-Dw5ZhG7D.js";import"./dividerClasses-B5r-ooM0.js";import"./ownerWindow-BN2rbQ_G.js";import"./tinycolor-Begke6kS.js";import"./InfoTwoTone-BOGoGeNw.js";import"./inputBaseClasses-ZfVcQiUT.js";import"./Fade-Bhxuafx5.js";import"./dayjs.min-d18Up55D.js";import"./index-BfyspvgH.js";import"./tiny-invariant-CopsF_GD.js";import"./StringUtils-O0ZMhOlq.js";import"./index-BnUe19-C.js";import"./util-JRuJS-T4.js";import"./index-Cek1a_Jj.js";import"./entityHandlers-BYPNT1vY.js";import"./index-CJiwH8pG.js";import"./mock_user_profile-DyzXylki.js";import"./mockProject-C5hkJfO-.js";import"./mockTeam-DsRVbqw5.js";import"./uniqueId-CSw6ftlJ.js";import"./times-CNSOYeu0.js";import"./mockTableEntity-Bci68CWm.js";import"./mockFileEntityACLVariants-CYDItKX6.js";import"./fakerUtils-JZNSDtdI.js";import"./mockFileEntity-BJn6jSn_.js";import"./mock_file_handle-BrVueqvW.js";import"./mockEntity-Djqwpms3.js";import"./mockSchema-CSVV2Czs.js";import"./userProfileHandlers-CqWDQDTX.js";import"./accessRequirementHandlers-BRTJRyQF.js";import"./mockAccessRequirements-BV5S3P-i.js";import"./mockWiki-aKCAV69n.js";import"./MockSubmission-C0KZ_LPx.js";import"./mockWikiPageKey-DhLiAaXm.js";import"./BasicMockedCrudService-BRYNF0mp.js";import"./cloneDeep-rJi3vbui.js";import"./dataAccessRequestHandlers-BGzmZRK1.js";import"./MockResearchProject-BSmyj6RV.js";import"./researchProjectHandlers-CVC9sLgU.js";import"./fileHandlers-BX_VIe5j.js";import"./mock_discussion-BrHKyp2Z.js";import"./tableQueryHandlers-rukx7uxn.js";import"./mockEvaluationQueue-BiYUFHwS.js";import"./mockAnnotationColumns-Xs58V-QE.js";import"./personalAccessTokenHandlers-CvvqE55K.js";import"./teamHandlers-Bk6a_EjL.js";import"./accessRequirementAclHandlers-Dm40En5c.js";import"./mockAccessRequirementAcls-BXhpjvsE.js";import"./resetTwoFactorAuthHandlers-BYieUUXZ.js";const o=[{value:"ASC",label:"Date Posted"},{value:"DESC",label:"Most Recent"}];function F(){const[a,b]=e.useState(s.FORUM),[n,S]=e.useState(o[0]),f=e.useId(),c={objectType:a,sortBy:O.CREATED_ON,sortDirection:n.value},{data:m,hasNextPage:j,isFetchingNextPage:l,fetchNextPage:P}=h(c,{staleTime:1/0,select:t=>({pages:t.pages.flatMap(p=>p.results),pageParams:t.pageParams})},[`subscriptionPageFetch_${f}`,c]);return r.jsxs(r.Fragment,{children:[r.jsx(I,{sx:{float:"right"},children:r.jsx(D,{variant:"outlined",options:o.map(t=>t.label),selectedIndex:o.findIndex(t=>t.value===n.value),setSelectedIndex:t=>S(o[t])})}),r.jsxs(T,{sx:{mb:3},value:a,onChange:(t,p)=>{t.stopPropagation(),b(p)},textColor:"secondary",indicatorColor:"secondary",children:[r.jsx(d,{value:s.FORUM,label:"Project Forums"}),r.jsx(d,{value:s.THREAD,label:"Threads"})]}),r.jsx(v,{gap:.5,children:m==null?void 0:m.pages.map(t=>r.jsx(y,{subscription:t},t.subscriptionId))}),j&&r.jsx(R,{variant:"contained",onClick:()=>{P()},disabled:l,sx:{mt:6},children:l?"Loading...":"Load More"})]})}const po={title:"Synapse/Following/SubscriptionPage",component:F,parameters:{stack:"mock"}},i={name:"SubscriptionPage",args:{},parameters:{msw:{handlers:{...E(C)}}}};var u,g,x;i.parameters={...i.parameters,docs:{...(u=i.parameters)==null?void 0:u.docs,source:{originalSource:`{
  name: 'SubscriptionPage',
  args: {},
  parameters: {
    msw: {
      handlers: {
        ...getHandlers(MOCK_REPO_ORIGIN)
      }
    }
  }
}`,...(x=(g=i.parameters)==null?void 0:g.docs)==null?void 0:x.source}}};const eo=["Demo"];export{i as Demo,eo as __namedExportsOrder,po as default};
