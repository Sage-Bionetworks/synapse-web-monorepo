import{j as l}from"./jsx-runtime-C5ysBaSF.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-DCp6finX.js";import{aF as S,M as a}from"./useFiles-Dhq64LD3.js";import"./OrientationBanner-BaOJTw1c.js";import"./index-nsQxvz3s.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-BIKS1RtD.js";import{S as E}from"./SynapseFormSubmissionGrid-0sYecREM.js";import"./mockSchema-CDMNX8WH.js";import"./mockFileEntity-BW1Qwomg.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-CPLGgEGE.js";import"./mockTeam-2Sl2r74K.js";import"./SynapseConstants-nC0cy9NR.js";import"./uniqueId-CgNFNXXh.js";import"./toString-CGhGPn4R.js";import"./isObjectLike-DIW4b2lw.js";import"./iframe-Janl4OHm.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-CpHMAUht.js";import"./times-CAapsJ-A.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-nZ6sOvfN.js";import"./asyncJobHandlers-HsW7-6Au.js";import"./BasicMockedCrudService-DSGO9cWl.js";import"./cloneDeep-CKZCjTCX.js";import"./_Uint8Array-CJ-px7Q4.js";import"./_initCloneObject-Bx7Kkndt.js";import"./_getTag-BK3frtm6.js";import"./isEqual-tsjY0vzA.js";import"./_baseIsEqual-CkMKoezu.js";import"./mockAnnotationColumns-BR1tlDLx.js";import"./tableQueryHandlers-D3Ow384j.js";import"./omit-DMiUn-QT.js";import"./_baseGet-BYRbJBG6.js";import"./isNil-DWkoTF96.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-DPAljtzM.js";import"./_baseFlatten-CTxJUf0P.js";import"./pick-BPvAvle7.js";import"./_baseSet-DSacdckX.js";import"./hasIn-CygaFDRi.js";import"./accessRequirementAclHandlers-mhoAVr-W.js";import"./mockAccessRequirementAcls-C_GFwB8K.js";import"./mockAccessRequirements-Z0ZB2kpW.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-dZAn6aHT.js";import"./wikiHandlers-BI_kNdJ0.js";import"./mockWikiPageKey-DTt21uFv.js";import"./teamHandlers-B0DgKvlR.js";import"./dataAccessRequestHandlers-Ck4sF8JA.js";import"./MockResearchProject-Le99HrvO.js";import"./mock_discussion-BgLLUfih.js";import"./fakerUtils-Di7OTgLi.js";import"./index-DC_7GfCR.js";import"./mockTableEntity-CVGuWs6v.js";import"./mockFileEntityACLVariants-DVicNJjL.js";import"./entityHandlers-CoXFDJW7.js";import"./mockEntity-Blz6eRWv.js";import"./mockEvaluationQueue-CCYsWALd.js";import"./featureFlagHandlers-DHCpqmKg.js";import"./fileHandlers-BAf5W-Ex.js";import"./personalAccessTokenHandlers-BMC2iY-c.js";import"./researchProjectHandlers-DsdaIo4i.js";import"./resetTwoFactorAuthHandlers-Bv9XomCY.js";import"./userProfileHandlers-CP0TTQlT.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-BRGEgvEM.js";import"./FullWidthAlert-DlFKq-DC.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-RC7B8x0K.js";import"./createTheme-ByXOpdJz.js";import"./resolveComponentProps-CfpND56K.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-Ceiq6s0j.js";import"./createSvgIcon-DeXJlgu_.js";import"./DefaultPropsProvider-AOp6TNyl.js";import"./Close-CT9yiP13.js";import"./IconButton-BtJv4fcx.js";import"./ButtonBase-D09UPZOY.js";import"./useTimeout-iGOOtj66.js";import"./useIsFocusVisible-B_yrjrHI.js";import"./useEventCallback-BxOaVHWE.js";import"./Paper-BkFXPQ0I.js";import"./Stack-Bu6KB5fc.js";import"./getThemeProps-BR7frNLW.js";import"./useTheme-dh9DXsym.js";import"./Box-Dh_kMIqf.js";import"./AlertTitle-CTWcSjN8.js";import"./Typography-2ZaHckIm.js";import"./useTheme-faklcodD.js";import"./Grow-DQCtPGN8.js";import"./index-BNgdfWIu.js";import"./utils-CCZi6kcq.js";import"./ClickAwayListener-DyUGUeMv.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-rXWE94cF.js";import"./index-BEcPdF-J.js";import"./useControlled-B8KPlW55.js";import"./useId-C4BxQuWA.js";import"./Popper-i9E87YUZ.js";import"./Button-2ZkIkkeV.js";import"./useQuery-B-QxEfwh.js";import"./utils-NjyKKwdB.js";import"./Link-DTRRVZ6z.js";import"./Collapse-haV8wGjw.js";import"./tinycolor-Begke6kS.js";import"./Fade-zN03jnnY.js";import"./Skeleton-CCW5pzar.js";import"./inputBaseClasses-DEtapqOK.js";import"./calculateFriendlyFileSize-C134mPnt.js";import"./CheckCircleTwoTone-DdehzE-y.js";import"./InfoTwoTone-DyKFxUVE.js";import"./useMutation-KCq28Paw.js";import"./dayjs.min-CO0gnhwg.js";import"./chunk-AYJ5UCUI-DnzAy6h8.js";import"./index-Euv0kKX6.js";import"./react--bFTsUCT.js";import"./util-I2jZNDwQ.js";import"./WideButton-DCElAVc-.js";import"./DeleteTwoTone-BLon60QC.js";import"./createSvgIcon-DTrsq4sa.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-BH-zacRI.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-CifEwPJA.js";import"./DialogBase-x8zb6r6j.js";import"./Close-CPRTHJCm.js";import"./HelpPopover-DHB_j72B.js";import"./MarkdownPopover-COAzFP-b.js";import"./LightTooltip-BT5VeAu5.js";import"./MarkdownSynapse-YGfrF3Yf.js";import"./SkeletonButton-CLJ0wCC8.js";import"./SkeletonInlineBlock-B54Jvxn9.js";import"./SkeletonTable-DU9_F4fF.js";import"./SkeletonParagraph-BQEg-f88.js";import"./HelpOutlineTwoTone-CkufXJ2j.js";import"./DialogTitle-D2smI9XZ.js";import"./DialogContent-CwJsNFnl.js";import"./Dialog-B29h3NWT.js";import"./Modal-C5b2vUP8.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-BjEKCNaq.js";import"./WarningDialog-Mpx1JH8M.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
