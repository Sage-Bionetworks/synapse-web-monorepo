import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-DaYozhj8.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-BvSm7KhP.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-B2NaMTzs.js";import"./SynapseConstants-CZPiPVFz.js";import"./OrientationBanner-B2DF_DFi.js";import"./index-B1UExM3p.js";import"./index-BULbjeCJ.js";import"./iframe-D8Kty_Cx.js";import"./spreadSx-CwcO6WA9.js";import"./react-D4pAv_N3.js";import"./FullWidthAlert-EAoJPxu-.js";import"./Alert-CClpx-g6.js";import"./createTheme-ev_cnLba.js";import"./DefaultPropsProvider-BYuvptnG.js";import"./useSlot-BwDIOyOX.js";import"./useForkRef-7bnDI6EI.js";import"./createSimplePaletteValueFilter-C5m0hHOH.js";import"./createSvgIcon-C0GalzBE.js";import"./Close-CYhpPBds.js";import"./IconButton-DMIkHh5_.js";import"./useTimeout-DWmVZNbT.js";import"./ButtonBase-CiAIFq4G.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BwBC6jxn.js";import"./Paper-Cx_w1032.js";import"./useTheme-B5FTPKZL.js";import"./useTheme-dcyxTKNU.js";import"./Stack-BFFoH8un.js";import"./extendSxProp-Ce12OY0O.js";import"./getThemeProps-BORvnqwy.js";import"./Box-DqnviQW6.js";import"./AlertTitle-geORYhAF.js";import"./Typography-DitlkZyP.js";import"./index-ClN6qXii.js";import"./ClickAwayListener-BbaBQeHw.js";import"./getReactElementRef-D0uGMMsH.js";import"./index-fk2bcQrb.js";import"./index-Dct6V00c.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-D5RDzHRC.js";import"./Tooltip-BLYw3Ezs.js";import"./index-B4uz7QPW.js";import"./useControlled-ByKzLjYb.js";import"./Popper-1vHQSSRm.js";import"./Button-r_CHdG4P.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-Mk4mN9q8.js";import"./QueryClientProvider-C83H8mhw.js";import"./Link-DxLeV4Tk.js";import"./Collapse-Cd_tDlUa.js";import"./_baseUniq-DnPxHH0Q.js";import"./_Uint8Array-Cji-Snuo.js";import"./isArray-tOqOrFMs.js";import"./_getTag-C3CHM0S0.js";import"./isEqual-BQ3mKdqC.js";import"./merge-Dr5C9d-b.js";import"./_initCloneObject-CM0Vu1zc.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-7vaEf5cW.js";import"./inputBaseClasses-BsVVbgu8.js";import"./calculateFriendlyFileSize-aCuYBZYU.js";import"./CheckCircleTwoTone-CxOtohD-.js";import"./InfoTwoTone-CqaUMjXS.js";import"./useMutation-CZS0_A_1.js";import"./dayjs.min-CmsqEN2B.js";import"./chunk-AYJ5UCUI-BnMQ8BOG.js";import"./cloneDeep-oCmGEZxM.js";import"./Skeleton-jbL9UTdY.js";import"./SkeletonButton-DogY7bbu.js";import"./SkeletonInlineBlock-Bgp2oViA.js";import"./SkeletonTable-BHD6Ddwk.js";import"./times-DcD14I14.js";import"./toInteger-B1OGm4wT.js";import"./isSymbol-Cy-jvChq.js";import"./SkeletonParagraph-bNKAs0JR.js";import"./MarkdownSynapse-I4pwtJjs.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
