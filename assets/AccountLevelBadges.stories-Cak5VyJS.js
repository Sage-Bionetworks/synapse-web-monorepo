import{g as f}from"./userProfileHandlers-DDrH-m62.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-CabKz2BX.js";import{A}from"./AccountLevelBadges-D2bKSxu0.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-BwGQ3hhy.js";import"./iframe-BwmT6DnA.js";import"./mockEntity-Zb5hnnZc.js";import"./mockFileEntity-D4QN8aGs.js";import"./StringUtils-C95LMFI-.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-gsuMHqEa.js";import"./mockTeam-DftLthD0.js";import"./SynapseConstants-s7AVu6sL.js";import"./OrientationBanner-BK2mf2Th.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-XnoiuBUV.js";import"./index-Bclfwf2c.js";import"./spreadSx-CwcO6WA9.js";import"./react-D0WT0Cnf.js";import"./FullWidthAlert-Cg_Edw0M.js";import"./Alert-DsoayRUU.js";import"./createTheme-CzZhU4mT.js";import"./DefaultPropsProvider-Cw6x8ixs.js";import"./useSlot--qVLG9rV.js";import"./useForkRef-DrhSOHJn.js";import"./createSimplePaletteValueFilter-CHJUaE6s.js";import"./createSvgIcon-Bbg0YSe_.js";import"./Close-CTF-FaFj.js";import"./IconButton-C2yfwCnc.js";import"./useTimeout-DQRToeqs.js";import"./ButtonBase-BanSt4k6.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-eGIE85BV.js";import"./Paper-C-MxAE3X.js";import"./useTheme-DBez2_uP.js";import"./useTheme-B2qwNNbc.js";import"./Stack-B8lUTm_5.js";import"./useThemeProps-BkMB52f-.js";import"./getThemeProps-BgWx5ja4.js";import"./extendSxProp-Cy_w0M7c.js";import"./Box-Dif21-Ta.js";import"./AlertTitle-Xjxp6dYf.js";import"./Typography-CR9HyBtT.js";import"./index-_J9zFtLw.js";import"./ClickAwayListener-BQ-icjcb.js";import"./getReactElementRef-rMJwrBoh.js";import"./index-Wtgxe081.js";import"./index-DfrTKupj.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-AhBpZALS.js";import"./Tooltip-BcHs3bh9.js";import"./index-CFBjFAlj.js";import"./useControlled-sVn0qm5_.js";import"./Popper-CqTlDTef.js";import"./Button-CMsK5jkJ.js";import"./uniqueId-Cej-QUp6.js";import"./toString-DqKwb9Lr.js";import"./isArray-Bjvy55fd.js";import"./isSymbol-D-ezxYA9.js";import"./times-ByfnELeL.js";import"./_Uint8Array-C8WR35dk.js";import"./identity-DKeuBCMA.js";import"./toInteger-MMr5JLvD.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-B9rRePvy.js";import"./QueryClientProvider-Dc7Y7gmt.js";import"./Link-DpQKU4aY.js";import"./Collapse-CvW24kl2.js";import"./_baseUniq-X4u6lSY4.js";import"./_getTag-DMyVPIGy.js";import"./isEqual-CBygoy8c.js";import"./noop-DX6rZLP_.js";import"./merge-D_9vdqan.js";import"./_initCloneObject-DFlTj-VM.js";import"./tinycolor-Begke6kS.js";import"./Fade-B2NLaioE.js";import"./inputBaseClasses-CS9kB3iA.js";import"./calculateFriendlyFileSize-Cz7skY0R.js";import"./CheckCircleTwoTone-Dsau-jpM.js";import"./InfoTwoTone-B7Emrovp.js";import"./useMutation-DmB6IlS-.js";import"./dayjs.min-BYIiwRKv.js";import"./chunk-AYJ5UCUI-DdNkrdCt.js";import"./cloneDeep-Cr5aOjXu.js";import"./Skeleton-CsmpLdqI.js";import"./AccountLevelBadge-Rwsh2ZUm.js";import"./Card-D8WWzGoX.js";import"./ConfirmationDialog-0Xchn1Vw.js";import"./DialogBase-Cp5TTfY1.js";import"./Close-COieOrxa.js";import"./HelpPopover-DopKxDzr.js";import"./MarkdownPopover-vjC1emIT.js";import"./LightTooltip-DPWHQMDd.js";import"./MarkdownSynapse-2yyEWXk7.js";import"./SkeletonButton-ChLWta4G.js";import"./SkeletonInlineBlock-Bj_nSxoS.js";import"./SkeletonTable-BFB2PN0p.js";import"./SkeletonParagraph-DWuTwbia.js";import"./HelpOutlineTwoTone-CrY3i7rm.js";import"./Dialog-DNnusEOk.js";import"./DialogActions-DX9p26b8.js";import"./Modal-v3tfXPAd.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-CH7Pq-xS.js";import"./DialogContent-CoWfe1-i.js";import"./DialogTitle-CkGpsdIL.js";import"./LoadingScreen-ML8Hc_Q1.js";import"./LinearProgress-Cp5_MWGL.js";import"./ToastMessage-zBtUyLkG.js";import"./CSSTransition-u2_j3GCw.js";const kt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Ut=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Ut as __namedExportsOrder,kt as default};
