import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-LRfWBx7T.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-BNVL-i1C.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-BKMBpB64.js";import"./SynapseConstants-ChWUMcnS.js";import"./OrientationBanner-s6eTZzEt.js";import"./index-BYyc2JrK.js";import"./index-BlLk-Cpc.js";import"./iframe-DJCqPViV.js";import"./spreadSx-CwcO6WA9.js";import"./react-D5cejL4U.js";import"./FullWidthAlert-D4jTY0fX.js";import"./Alert-B7NYi1K_.js";import"./createTheme-BoMy76Wd.js";import"./DefaultPropsProvider-DvBkxC4C.js";import"./useSlot-CpdUPpqd.js";import"./useForkRef-CGY_Jpnx.js";import"./createSimplePaletteValueFilter-rT-XZ6YK.js";import"./createSvgIcon-C2KnO3b1.js";import"./Close-BVMYX_2b.js";import"./IconButton-C7cq6q9W.js";import"./useTimeout-C_n07iHc.js";import"./ButtonBase-BNSbuHrY.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-CYiXRZxW.js";import"./Paper-fh_aPiaL.js";import"./useTheme-DDFbBi03.js";import"./useTheme-D2m2JSWe.js";import"./Stack-U_7UVz7x.js";import"./extendSxProp-CBVJ6YUV.js";import"./getThemeProps-MT1NWnOz.js";import"./Box-DQcvacV7.js";import"./AlertTitle-Dl16SzKZ.js";import"./Typography-BbClb5JZ.js";import"./index-Dl9oXoY9.js";import"./ClickAwayListener-BgS_jDtg.js";import"./getReactElementRef-WVFk0XF3.js";import"./index-cmVBkNr4.js";import"./index-C-9IeJIn.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-tZoeOsj2.js";import"./Tooltip-Dl_Yp1xA.js";import"./index-BCiEuy_k.js";import"./useControlled-ByhA5hml.js";import"./Popper-BZ3v4Tpm.js";import"./Button-CUHfRZHg.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-CxpB_4ZD.js";import"./QueryClientProvider-BUsydTN1.js";import"./Link-BgcZchnZ.js";import"./Collapse-BxntDTnK.js";import"./_baseUniq-DMKGI_1z.js";import"./_Uint8Array-_eNHEINi.js";import"./isArray-7RDBt840.js";import"./_getTag-DFujFdhf.js";import"./isEqual-DoNViL0q.js";import"./merge-DnwzsJk3.js";import"./_initCloneObject-BEyCVTwE.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-CD2qHBnv.js";import"./inputBaseClasses-DEpJxZAI.js";import"./calculateFriendlyFileSize-BID7fkoL.js";import"./CheckCircleTwoTone-DcxIrYc5.js";import"./InfoTwoTone-B4Gj6T04.js";import"./useMutation-CZJJ3y2Z.js";import"./dayjs.min-CGHnQ1ES.js";import"./chunk-AYJ5UCUI-18XW2Mua.js";import"./cloneDeep-D14gkEBB.js";import"./Skeleton-DTvEDHoY.js";import"./SkeletonButton-BVS9c4Ql.js";import"./SkeletonInlineBlock-rgq47Wzo.js";import"./SkeletonTable-BwLeTFNN.js";import"./times-BxG8IAIc.js";import"./toInteger-BwymIA8y.js";import"./isSymbol-DO1i8DpO.js";import"./SkeletonParagraph-EtAQuzh0.js";import"./MarkdownSynapse-LsoizFHH.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
