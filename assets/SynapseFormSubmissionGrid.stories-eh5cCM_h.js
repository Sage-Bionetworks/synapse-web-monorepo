import{j as l}from"./jsx-runtime-DkbpurNs.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-BI5WaB2N.js";import{g as T}from"./handlers-BVH3cmux.js";import{aD as S,M as a}from"./useFiles-DsFYUvgk.js";import"./OrientationBanner-Db5b4wt6.js";import"./index-BWTz5das.js";import"./StringUtils-DN6u4g4A.js";import{l as _}from"./index-Df-lSvwk.js";import{S as E}from"./SynapseFormSubmissionGrid-C0tRJVsf.js";import"./mockSchema-XdPWUaJP.js";import"./mockFileEntity-B2xRGeo7.js";import"./mock_file_handle-CFTRkxcS.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-CuKyy7IA.js";import"./mockTeam-B5qyUQtt.js";import"./SynapseConstants-WdyYb7Om.js";import"./uniqueId-B5ecwVFo.js";import"./toString-2F-XAeAH.js";import"./isObjectLike-BtYs4CQI.js";import"./iframe-CIwcPPSS.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-z04EB1x3.js";import"./times-D-oxzHKh.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-B5iDNIpg.js";import"./asyncJobHandlers-CQzFkfeX.js";import"./BasicMockedCrudService-DJLwL9bD.js";import"./cloneDeep-Bc5O_UuE.js";import"./_Uint8Array-dFMtMdky.js";import"./_initCloneObject-B99hApBY.js";import"./_getTag-9L9wrwHR.js";import"./isEqual-BTEFoVlQ.js";import"./_baseIsEqual-CSEyos6D.js";import"./mockAnnotationColumns-D86mss4l.js";import"./tableQueryHandlers-D-0iNEp-.js";import"./omit-R2OI3HLO.js";import"./_baseGet-DkW9Oo_3.js";import"./isNil-SLuPmgyU.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BKuaLmoA.js";import"./_baseFlatten-pPuaxJ9v.js";import"./pick-CxeDkpts.js";import"./_baseSet-B82Px_PH.js";import"./hasIn-1KOP7LTd.js";import"./accessRequirementAclHandlers-BmlLwKsl.js";import"./mockAccessRequirementAcls-BOBCQ2FE.js";import"./mockAccessRequirements-D3qNcT6u.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CgjxDh2Q.js";import"./accessRequirementHandlers-BtdvQujQ.js";import"./wikiHandlers-j1h5OX2T.js";import"./mockWikiPageKey-BSPQyBZG.js";import"./teamHandlers-Bg5PIi7i.js";import"./dataAccessRequestHandlers-CQNaj4Op.js";import"./MockResearchProject-bggpRBFi.js";import"./mock_discussion-7W0Fywn9.js";import"./fakerUtils-jQ0Bf5Kb.js";import"./index-8JuYQ9-j.js";import"./mockTableEntity-DY_VRM5H.js";import"./mockFileEntityACLVariants-DoSybJjU.js";import"./entityHandlers-Bs96JZJF.js";import"./mockEntity-DjaH2BgM.js";import"./mockEvaluationQueue-rvtkGryd.js";import"./featureFlagHandlers-CpZVXy4C.js";import"./fileHandlers-B_t55Hml.js";import"./personalAccessTokenHandlers-D3Tj2WvA.js";import"./researchProjectHandlers-B67meHxl.js";import"./resetTwoFactorAuthHandlers-DgZNkD3H.js";import"./userProfileHandlers-C6BS-IAG.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-C__s9c2O.js";import"./FullWidthAlert-CV5VqY0G.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-oO57gt13.js";import"./createTheme-A3wdy6CE.js";import"./resolveComponentProps-D-CanUzl.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-D76_CRuH.js";import"./createSvgIcon-D1wrlE5j.js";import"./DefaultPropsProvider-ByOVQs-n.js";import"./Close-B0Wd8leo.js";import"./IconButton-4eAf36A2.js";import"./ButtonBase-BhLDaX_S.js";import"./useTimeout-vSjzk-Un.js";import"./useIsFocusVisible-FsgV9KWa.js";import"./useEventCallback-Bwqph7YH.js";import"./Paper-C9rqLEV4.js";import"./Stack-bl7kY2rD.js";import"./getThemeProps-DZ0VtK3w.js";import"./useTheme--XQLJcej.js";import"./Box-oS9X8DmL.js";import"./AlertTitle-DXMw9tkm.js";import"./Typography-C9RmHiWH.js";import"./useTheme-BWFniEYL.js";import"./Grow-CF1islW1.js";import"./index-CWlTKyso.js";import"./utils-CnscWP4i.js";import"./ClickAwayListener-KlaQc122.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-AOG27yeN.js";import"./index-BF7XAVzO.js";import"./useControlled-BZcNW5Fh.js";import"./useId-CWMqiBBO.js";import"./Popper-mjGHPHZJ.js";import"./Button-iLozBQyn.js";import"./useQuery-DcrUW3Ia.js";import"./utils-D0Sn12cL.js";import"./Link-DpF5ZODC.js";import"./Collapse-C3IE9BnM.js";import"./tinycolor-Begke6kS.js";import"./Fade-Cf5YgOGZ.js";import"./Skeleton-CjiSKKcr.js";import"./inputBaseClasses-B_tp1BOw.js";import"./calculateFriendlyFileSize-DFfVqf0N.js";import"./CheckCircleTwoTone-CXzQKqsF.js";import"./InfoTwoTone-B5Z1IoZb.js";import"./mutation-DVozW0ZS.js";import"./dayjs.min-BwO3N9YX.js";import"./chunk-AYJ5UCUI-Dw2DX1gQ.js";import"./index-WdIyC9zy.js";import"./react-B92lp8oH.js";import"./util-B9HYC58D.js";import"./WideButton-BbxVDbO9.js";import"./DeleteTwoTone-B8BYcVbR.js";import"./createSvgIcon-D9-n6DFW.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-BWpsH5QI.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-C74FlqBk.js";import"./DialogBase-DlBHhkW-.js";import"./Close-B2aB2q-Y.js";import"./HelpPopover-eyILxfOc.js";import"./MarkdownPopover-BRVzVo64.js";import"./LightTooltip-CxqzCIMg.js";import"./MarkdownSynapse-Cors3dqY.js";import"./useMutation-C6BvrXXS.js";import"./SkeletonButton-DIk8ysAH.js";import"./SkeletonInlineBlock-D41IW_XW.js";import"./SkeletonTable-BO641YUo.js";import"./SkeletonParagraph-uvExlbzX.js";import"./HelpOutlineTwoTone-DkRxxb5B.js";import"./DialogTitle-CMiqqDsV.js";import"./DialogContent-CiL_bRvr.js";import"./Dialog-DmeUnTli.js";import"./Modal-CMiOZFkn.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-MmdoHhD6.js";import"./WarningDialog-utCpCFcr.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},To={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const _o=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,_o as __namedExportsOrder,To as default};
