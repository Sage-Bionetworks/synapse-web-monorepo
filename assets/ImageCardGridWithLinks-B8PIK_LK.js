import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{s as j,t as m,aC as L}from"./useFiles-Da5SPf30.js";import{p as S}from"./SqlFunctions-DQ27hT8m.js";import"./StringUtils-DP1EOPFU.js";import{B as C,d as T}from"./SynapseConstants-BgpCwDFe.js";import"./index-CfbPO5Pk.js";import{F as _}from"./VerificationSubmission-DHtRxRPZ.js";import"./OrientationBanner-BwAbfTIw.js";import{L as b}from"./chunk-AYJ5UCUI-DgOYknd8.js";import{c as R}from"./createSvgIcon-B4oujve6.js";import{P as k}from"./PortalSectionHeader-Y3F4QVYb.js";import{B as u}from"./Box-C_8woQ6t.js";import{G as g}from"./GridLegacy-BACItqbN.js";import{S as q}from"./Skeleton-DfHSJENk.js";import{C as w}from"./Card-B3ORH_ko.js";import{L as E}from"./Link-Dv4MSEKL.js";import{T as v}from"./Typography-C496KcFS.js";import{C as F}from"./CardMedia-DEUoNPUG.js";const U=R(e.jsx("path",{d:"M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z"})),x="6px",B=({card:r,isLoading:s,linkColumnIndex:n,linkTextColumnIndex:d,entityId:a,fileId:i})=>{const t={associateObjectId:a,associateObjectType:_.TableEntity,fileHandleId:i??""},o=L(t,!1,{enabled:!!i}),p=o==null?void 0:o.dataUrl;return e.jsx(g,{item:!0,xs:12,sm:6,md:4,sx:{height:"245px",paddingTop:"24px",paddingLeft:"24px"},children:s?e.jsx(q,{variant:"rectangular",height:221,width:"100%"}):e.jsx(w,{raised:!1,sx:{height:"100%",position:"relative",borderRadius:x,border:"none",transform:"scale(1)",transition:".3s ease-in-out","&:hover":{transform:"scale(1.05)",boxShadow:"0px 4px 15px rgba(0, 0, 0, 0.2)"}},children:e.jsxs(E,{component:b,to:r.values[n]||"",children:[e.jsxs(u,{sx:{display:"flex",alignItems:"center",gap:"10px",position:"absolute",backgroundColor:"#FFFF",borderRadius:`0px 0px ${x} 0px`,textDecoration:"none","&:hover":{textDecoration:"none"},padding:"6px 10px"},children:[e.jsx(v,{variant:"headline2",sx:{color:"grey.1000",fontSize:"16px"},children:r.values[d]}),e.jsx(U,{style:{color:"unset",width:16,height:16}})]}),e.jsx(F,{component:"img",image:p,style:{height:"100%",width:"100%",objectFit:"cover"}})]})})},r.rowId)};function c(r){const{sql:s,title:n,summaryText:d}=r,a=S(s),i={partMask:C|T,concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",entityId:a,query:{sql:s}},{data:t,isLoading:o}=j(i),p=m("Image",t),f=(t==null?void 0:t.queryResult.queryResults.rows)??[],h=m("Link",t),y=m("LinkText",t);return e.jsxs(u,{sx:{display:"grid",gridTemplateColumns:{xs:"1fr",md:"1fr 3fr"},gap:{xs:"38px",md:"80px"},padding:{xs:"40px",lg:"80px"}},children:[e.jsx(k,{title:n,summaryText:d,sx:{h2:{fontSize:"24px",paddingTop:"26px",width:"100%"},"& p":{fontSize:"16px",lineHeight:"24px"}}}),e.jsx(g,{container:!0,spacing:2.5,sx:{order:{xs:1,md:0}},children:f.map(l=>{const I=l.values[p];return e.jsx(B,{card:l,linkColumnIndex:h,linkTextColumnIndex:y,fileId:I,entityId:a,isLoading:o},l.rowId)})})]})}try{c.displayName="ImageCardGridWithLinks",c.__docgenInfo={description:"",displayName:"ImageCardGridWithLinks",props:{sql:{defaultValue:null,description:"",name:"sql",required:!0,type:{name:"string"}},title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},summaryText:{defaultValue:null,description:"",name:"summaryText",required:!0,type:{name:"string"}}}}}catch{}export{c as I};
