import{j as l}from"./jsx-runtime-camNUIeC.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-CX8-w_p4.js";import{aH as S,M as a}from"./useFiles-C5Mq70RQ.js";import"./OrientationBanner-BWRgEzO9.js";import"./index-3qy05by_.js";import"./StringUtils-Df7AZImX.js";import{l as _}from"./index-GHUxk_Dy.js";import{S as E}from"./SynapseFormSubmissionGrid-BAcYzTrm.js";import"./mockSchema-rdVNOz_-.js";import"./mockFileEntity-BHGWpDr8.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-CurDbhI9.js";import"./mockTeam-hD4-SxxW.js";import"./SynapseConstants-C6dWug1_.js";import"./uniqueId-B8A_DTuU.js";import"./toString-Dk-ReWd2.js";import"./isObjectLike-DJBklG-L.js";import"./iframe-DcLzMnze.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-rbepKx_t.js";import"./times-D-t0OTsM.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-Cou3KyGr.js";import"./asyncJobHandlers-BrtSG-0k.js";import"./BasicMockedCrudService-dyiG9jnc.js";import"./cloneDeep-DXQ6UOjN.js";import"./_Uint8Array-Cq1aENa3.js";import"./_initCloneObject-CARNlWyH.js";import"./_getTag-FobV6xDg.js";import"./isEqual-Bs8vOeuK.js";import"./_baseIsEqual-Dtkjh-d1.js";import"./mockAnnotationColumns-BG1dTOWo.js";import"./tableQueryHandlers-CyVidWqs.js";import"./omit-CDzT1Esr.js";import"./_baseGet-CC2BmS4q.js";import"./isNil-BR-_1Pzq.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BFUthBpK.js";import"./_baseFlatten-CCK_0l-Z.js";import"./pick-DpYxt_7N.js";import"./_baseSet-DHNl2gDN.js";import"./hasIn-G3iVnVWV.js";import"./accessRequirementAclHandlers-CTa_OcaG.js";import"./mockAccessRequirementAcls-DfroEzr6.js";import"./mockAccessRequirements-G7PcKxIu.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-Dt-9OCPN.js";import"./wikiHandlers-Cj7U5kUX.js";import"./mockWikiPageKey-B6wj4H4L.js";import"./teamHandlers-CL4Y3f73.js";import"./dataAccessRequestHandlers-QFLkz_q1.js";import"./MockResearchProject-BW4KW3-Y.js";import"./mock_discussion-FUkbKki3.js";import"./fakerUtils-DURyVb4t.js";import"./index-CiSAZVlG.js";import"./mockTableEntity-BYcSasiW.js";import"./mockFileEntityACLVariants-CSA0E6fV.js";import"./entityHandlers-CmCFtJjC.js";import"./mockEntity-ChV19DFA.js";import"./mockEvaluationQueue-EBc0itlZ.js";import"./featureFlagHandlers-D7iaD0Vq.js";import"./fileHandlers-DxdRZX4M.js";import"./personalAccessTokenHandlers-CpHqva0t.js";import"./researchProjectHandlers-iAhCT3Qf.js";import"./resetTwoFactorAuthHandlers-iZA2fldh.js";import"./userProfileHandlers-YJd8xAs2.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-Pdv27smz.js";import"./FullWidthAlert-BQAeOLAY.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-C56d-Dk2.js";import"./createTheme-BxrJgBSW.js";import"./resolveComponentProps-C4VxWT4p.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CLEivBCN.js";import"./createSvgIcon-CeAJU78Y.js";import"./DefaultPropsProvider-DLeeu6LA.js";import"./Close-C5t_KRqI.js";import"./IconButton-BHUvtcCe.js";import"./ButtonBase-BHtY9VZL.js";import"./useTimeout-ssszZLNk.js";import"./useIsFocusVisible-C3N0_RYP.js";import"./useEventCallback-8ueBEeTE.js";import"./Paper-Ber0U2Dw.js";import"./Stack-Icu4aaDP.js";import"./getThemeProps-Z_xok4s4.js";import"./useTheme-B0RT_gxt.js";import"./Box-BdQJQTds.js";import"./AlertTitle-DvX8uaVr.js";import"./Typography-3xjKDb7N.js";import"./useTheme-BeRZYfS0.js";import"./Grow-DpiwUoQW.js";import"./index-DzjMEJyD.js";import"./utils-C1frHh93.js";import"./ClickAwayListener-B3Ml9YPS.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BWvdWZlE.js";import"./index-CEIkfSAW.js";import"./useControlled-CesbcXsm.js";import"./useId-BFCGIoCo.js";import"./Popper-8EezrjSi.js";import"./Button-EqcuO244.js";import"./useQuery-BG0Ze_zN.js";import"./utils-DnzoUh7_.js";import"./Link-CiQ-OV23.js";import"./Collapse-Bo7xNqfl.js";import"./tinycolor-Begke6kS.js";import"./Fade-DjOJc1x_.js";import"./Skeleton-BPkEygKI.js";import"./inputBaseClasses-DFhmw9MT.js";import"./calculateFriendlyFileSize-DeQhHFBq.js";import"./CheckCircleTwoTone-Bg2tqZXX.js";import"./InfoTwoTone-Bi0fUZGN.js";import"./mutation-BwbNpoFa.js";import"./dayjs.min-CEepuNfW.js";import"./chunk-AYJ5UCUI-CBYDAt04.js";import"./index-BZbH1w8C.js";import"./react-CbTk7auu.js";import"./util-D1gCIoEx.js";import"./WideButton-DCJx79XB.js";import"./DeleteTwoTone-CS1aBU4t.js";import"./createSvgIcon-GU5Eg2-f.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-B7YzOXtZ.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-BdcBJutw.js";import"./DialogBase-Qtx9AOe2.js";import"./Close-Ge5Y0u9S.js";import"./HelpPopover-DVw90O37.js";import"./MarkdownPopover-CE5d_NVT.js";import"./LightTooltip-BS2yXlQT.js";import"./MarkdownSynapse-DELfemiv.js";import"./SkeletonButton-BgC5sIpZ.js";import"./SkeletonInlineBlock-CpSbukZt.js";import"./SkeletonTable-BmAPXfcx.js";import"./SkeletonParagraph-98k5VQr3.js";import"./HelpOutlineTwoTone-C74cNEnD.js";import"./DialogTitle-BtN-X6FW.js";import"./DialogContent-BcFD8bFk.js";import"./Dialog-DzPITEjs.js";import"./Modal-CzpJjmnT.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-CckJXoMw.js";import"./WarningDialog-C2VuaKi0.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
