import{S as p}from"./SpinnerButton-Bewf1GD_.js";import"./jsx-runtime-DoxjgJx5.js";import"./index-Cu9bd8lq.js";import"./LoginAwareButton-ByDl57mx.js";import"./react-router-dom-Cy6-9Jud.js";import"./SynapseClient-D4ATx1tI.js";import"./OrientationBanner-Ct6IgTPI.js";import"./FullWidthAlert-CpohRhD9.js";import"./Alert-DevAguyB.js";import"./createTheme-CFwAOJQC.js";import"./index-GEGPABih.js";import"./styled-uoyYAB-L.js";import"./mergeSlotProps-bXd1ns9H.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-Bm_QQ74L.js";import"./createSvgIcon--fcRVpp9.js";import"./Paper-C3XTRciO.js";import"./IconButton-rjGZl5Ij.js";import"./ButtonBase-CwAnxZmp.js";import"./TransitionGroupContext-C4KIfRep.js";import"./useIsFocusVisible-Lp1_y5xp.js";import"./Stack-BCUKu9qx.js";import"./Box-tOdEuW_y.js";import"./AlertTitle-F01TNSvq.js";import"./Typography-Ctk8_6Bo.js";import"./utils-Cz4ynwjU.js";import"./index-BlO3JfGB.js";import"./Grow-Dczl5MLz.js";import"./ClickAwayListener-Ba-YFlDA.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-Cr4lETRB.js";import"./index-_EfqdWAV.js";import"./useControlled-JEQ1v-P8.js";import"./useId-g68bhPgm.js";import"./Button-BkvFhVsL.js";import"./index--5FOymzB.js";import"./SynapseConstants-DKOAl3NQ.js";import"./RegularExpressions-C2ZZh8jv.js";import"./useQuery-ChYzlhEH.js";import"./tinycolor-Begke6kS.js";import"./InfoTwoTone-C882d77b.js";import"./CheckCircleTwoTone-nCTn5zJK.js";import"./colorManipulator-CSxSE2hh.js";import"./inputBaseClasses-CcXvGEyU.js";import"./Fade-BXejYtqq.js";import"./dayjs.min-D1RcYm3-.js";import"./index-SDyqs4cU.js";import"./tiny-invariant-CopsF_GD.js";import"./Link-ceK_fu-q.js";import"./_getTag-CC1n5fj9.js";import"./_Map-BfIf8dAI.js";import"./isArray-ggc3KxVp.js";import"./isObject-C3e4t58V.js";import"./StringUtils-DvQ2IdRE.js";const mr={title:"UI/SpinnerButton",component:p,argTypes:{isAuthenticated:{control:{type:"boolean"}},showSpinner:{control:{type:"boolean"}}},args:{isAuthenticated:!0,showSpinner:!1}},r={args:{isAuthenticated:!0,children:"Make Async call",showSpinner:!1,variant:"contained",color:"primary",onClick:()=>{alert("clicked")}}};var t,o,i;r.parameters={...r.parameters,docs:{...(t=r.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    isAuthenticated: true,
    children: 'Make Async call',
    showSpinner: false,
    variant: 'contained',
    color: 'primary',
    onClick: () => {
      alert('clicked');
    }
  }
}`,...(i=(o=r.parameters)==null?void 0:o.docs)==null?void 0:i.source}}};const er=["Demo"];export{r as Demo,er as __namedExportsOrder,mr as default};
