import{j as l}from"./jsx-runtime-G3kcun9p.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-BI5WaB2N.js";import{g as T}from"./handlers-CM8Xw7qD.js";import{aD as S,M as a}from"./useFiles-Csa7dt3u.js";import"./OrientationBanner-CyUpBZqy.js";import"./index-Yg--iZq-.js";import"./StringUtils-DN6u4g4A.js";import{l as _}from"./index-CxhQRlem.js";import{S as E}from"./SynapseFormSubmissionGrid-QLNmLrx1.js";import"./mockSchema-YXDAspbk.js";import"./mockFileEntity-BPUdiTV2.js";import"./mock_file_handle-CFTRkxcS.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-C1w9Fh0m.js";import"./mockTeam-CoubK4gl.js";import"./SynapseConstants-BlBmq_8s.js";import"./uniqueId-DGOE_Eo6.js";import"./toString-BIm7eliI.js";import"./isObjectLike-CFnMZm62.js";import"./iframe-BCAWC2I3.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-B1Y8W1g8.js";import"./times-B9LSUJWV.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DtJYaMSH.js";import"./asyncJobHandlers-DjPZ_QCI.js";import"./BasicMockedCrudService-BrnCLVoT.js";import"./cloneDeep-DyVOe_3L.js";import"./_Uint8Array-D2lqwLng.js";import"./_initCloneObject-F6eDGnab.js";import"./_getTag-VdZ1AeIP.js";import"./isEqual-1qT8SkT_.js";import"./_baseIsEqual-so24MjHt.js";import"./mockAnnotationColumns-Yk-WKjk5.js";import"./tableQueryHandlers-Dt1KO8gE.js";import"./omit-pRZ75zL9.js";import"./_baseGet-8iH6Jyfz.js";import"./isNil-B6br_ZUr.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-B4L7tGLW.js";import"./_baseFlatten-DyxeSl38.js";import"./pick-DSQCqzes.js";import"./_baseSet-BPZtj2ZQ.js";import"./hasIn-BACOj0o6.js";import"./accessRequirementAclHandlers-DZC8una5.js";import"./mockAccessRequirementAcls-pEsXFtp8.js";import"./mockAccessRequirements-Be3HyUFm.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CgjxDh2Q.js";import"./accessRequirementHandlers-DSfSKbm2.js";import"./wikiHandlers-B1A09exG.js";import"./mockWikiPageKey-C8Ld9LQt.js";import"./teamHandlers-CKMzyIs7.js";import"./dataAccessRequestHandlers-uRD0k21z.js";import"./MockResearchProject-D3l-rHwN.js";import"./mock_discussion-CLG46jli.js";import"./fakerUtils-Cn9Hc36r.js";import"./index-Cf6fksIL.js";import"./mockTableEntity-DW0pd2Ud.js";import"./mockFileEntityACLVariants-DefVXR89.js";import"./entityHandlers-CcPigpGO.js";import"./mockEntity-ZuH7EvJT.js";import"./mockEvaluationQueue-BzaLydkY.js";import"./featureFlagHandlers-CRsjRwj9.js";import"./fileHandlers-CBs_HAEc.js";import"./personalAccessTokenHandlers-Caju3dEy.js";import"./researchProjectHandlers-BlhvpVKr.js";import"./resetTwoFactorAuthHandlers-DOO_xs-U.js";import"./userProfileHandlers-DyT_OixS.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-82H1ouW-.js";import"./FullWidthAlert-BHmvYLXZ.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-DfvFtguU.js";import"./createTheme-N1-IWSxF.js";import"./resolveComponentProps-D4e1xWws.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CP5fgMc-.js";import"./createSvgIcon-cnhKmrGB.js";import"./DefaultPropsProvider-C_pLLkTF.js";import"./Close-DoMxHeVd.js";import"./IconButton-Di2GD9l2.js";import"./ButtonBase-CscigYjd.js";import"./useTimeout-DZZ8kkGX.js";import"./useIsFocusVisible-DqibNYDO.js";import"./useEventCallback-B2bKWCyK.js";import"./Paper-nI3QrkK7.js";import"./Stack-B-60LY7Q.js";import"./getThemeProps-CnIQNgOP.js";import"./useTheme-D7OueLh-.js";import"./Box-D2jroMLZ.js";import"./AlertTitle-BH9q9-gu.js";import"./Typography-82RYpCCZ.js";import"./useTheme-BEHJ7b1Q.js";import"./Grow-D5UV9RB1.js";import"./index-C1xQEisA.js";import"./utils-whpWPMHJ.js";import"./ClickAwayListener-BO4uKgNA.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-b-ocpEJh.js";import"./index-CxihIUxw.js";import"./useControlled-B7iGhHHh.js";import"./useId-BW8Wy0LR.js";import"./Popper-Bu2gOJgQ.js";import"./Button-C1jDFRQd.js";import"./useQuery-C-x_EuHm.js";import"./utils-Dw86f0ge.js";import"./Link-Cn2J7rSx.js";import"./Collapse-CUMtwh7G.js";import"./tinycolor-Begke6kS.js";import"./Fade-MvuZT9g3.js";import"./Skeleton-CtwgzPcw.js";import"./inputBaseClasses-bR0UpD5b.js";import"./calculateFriendlyFileSize-C234RjjD.js";import"./CheckCircleTwoTone-D907d1Fo.js";import"./InfoTwoTone-FuykDER9.js";import"./mutation-ClyIXRCV.js";import"./dayjs.min-B30jtBEV.js";import"./chunk-AYJ5UCUI-Do7oMhra.js";import"./index-BmkGWmvH.js";import"./react-B_-pcSi9.js";import"./util-DfjEQqpE.js";import"./WideButton-Bt32XWpe.js";import"./DeleteTwoTone-DIk98ne4.js";import"./createSvgIcon-CC7Qjqb9.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-B7ftcYSP.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-ZyjSMJsE.js";import"./DialogBase-CNi_lEnw.js";import"./Close-D2bvpq6U.js";import"./HelpPopover-J-jdt4QG.js";import"./MarkdownPopover-DWNkmjVw.js";import"./LightTooltip-B-YU86PB.js";import"./MarkdownSynapse-CKtQmUVq.js";import"./useMutation-OxRW4evI.js";import"./SkeletonButton-DWszxauG.js";import"./SkeletonInlineBlock-3HpDN67J.js";import"./SkeletonTable-CfBcHAeE.js";import"./SkeletonParagraph-D_pzPeXO.js";import"./HelpOutlineTwoTone-wxJo8PkE.js";import"./DialogTitle-7pREPvl4.js";import"./DialogContent-BXOOBbDP.js";import"./Dialog-CIRoiC75.js";import"./Modal-DJwo8SlF.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-BDFbH7e0.js";import"./WarningDialog-CdtRV4bw.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},To={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const _o=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,_o as __namedExportsOrder,To as default};
