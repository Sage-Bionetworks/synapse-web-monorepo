import{j as l}from"./jsx-runtime-vh0p6n0c.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-B0kBNeMy.js";import{g as T}from"./handlers-B193W6nL.js";import{aH as S,M as a}from"./useFiles-DQomEVun.js";import"./OrientationBanner-C_iS06Ns.js";import"./index-DeX7QLnK.js";import"./StringUtils-CzgJJW-6.js";import{l as _}from"./index-CiL54TVM.js";import{S as E}from"./SynapseFormSubmissionGrid-D3zy3Oqp.js";import"./mockSchema-BYiFsN0w.js";import"./mockFileEntity-DazHL2yh.js";import"./mock_file_handle-Ct1MSfYs.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-BKPpN2NR.js";import"./mockTeam-BTa_Z9Ss.js";import"./SynapseConstants-CXcV-nUb.js";import"./uniqueId-aH3pAQSh.js";import"./toString-CW6JUJh5.js";import"./isObjectLike-DkxRSzUr.js";import"./iframe-Dz9QNSIS.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-DiSEgX0Q.js";import"./times-CXVCkMin.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-C0wH07DI.js";import"./asyncJobHandlers-CruRNbGy.js";import"./BasicMockedCrudService-DAYs3Zce.js";import"./cloneDeep-BN-Uvubu.js";import"./_Uint8Array-DO9JwxIS.js";import"./_initCloneObject-bSDXZj5t.js";import"./_getTag-Ctolf7Nh.js";import"./isEqual-DX-ARlL8.js";import"./_baseIsEqual-BocUTVTM.js";import"./mockAnnotationColumns-3LkFKKq7.js";import"./tableQueryHandlers-K4VUkQsT.js";import"./omit--6iTg7x-.js";import"./_baseGet-Dj3JLTM0.js";import"./isNil-DRpjLwQd.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-lJvdJtPI.js";import"./_baseFlatten-C1fyv5Tp.js";import"./pick-CrNkX59L.js";import"./_baseSet-BhPTLa9_.js";import"./hasIn-C68hSDWb.js";import"./accessRequirementAclHandlers-DXfbY7Md.js";import"./mockAccessRequirementAcls-DjKoC7XT.js";import"./mockAccessRequirements-DCw1P2nM.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CZdZHQnO.js";import"./accessRequirementHandlers-CyIKu6Oa.js";import"./wikiHandlers-CHaJNvBU.js";import"./mockWikiPageKey-DQHFk7QJ.js";import"./teamHandlers-CHZy82z9.js";import"./dataAccessRequestHandlers-D7mfo_OH.js";import"./MockResearchProject-C2HUP5Ii.js";import"./mock_discussion-C3nSGmxe.js";import"./fakerUtils-LXXpeTpE.js";import"./index-09iZtkze.js";import"./mockTableEntity-CO1dZNiD.js";import"./mockFileEntityACLVariants-DuyIJEAC.js";import"./entityHandlers-DFEMR9V8.js";import"./mockEntity-BCBR28R7.js";import"./mockEvaluationQueue-rokln0pW.js";import"./featureFlagHandlers-K1FZGCPc.js";import"./fileHandlers-LzuwjGSr.js";import"./personalAccessTokenHandlers-CLasz_Hn.js";import"./researchProjectHandlers-BE0CzqXr.js";import"./resetTwoFactorAuthHandlers-CG18zzo3.js";import"./userProfileHandlers-Dr2SsjC4.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-Bk5PxsO_.js";import"./FullWidthAlert-BGfrn--X.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-hlGtq58G.js";import"./createTheme-D_Nq0pYz.js";import"./resolveComponentProps-C3DQMbGC.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-D_vAhRI1.js";import"./createSvgIcon-BLNG6c_9.js";import"./DefaultPropsProvider-tfjonuSR.js";import"./Close-2nHrK--Y.js";import"./IconButton-BE7RjaP6.js";import"./ButtonBase-C0uTtWXh.js";import"./useTimeout-CnvRux1B.js";import"./useIsFocusVisible-D78Je22A.js";import"./useEventCallback-BvK-inDl.js";import"./Paper-CrvSRQHk.js";import"./Stack-BXqHkzqU.js";import"./getThemeProps-CmqkWx3T.js";import"./useTheme-CU31NEYo.js";import"./Box-FOgVp8fD.js";import"./AlertTitle-Cto3bigq.js";import"./Typography-DnatgZXD.js";import"./useTheme-Bt3ZmCgz.js";import"./Grow-YfXnsoA7.js";import"./index-CoE_GtHh.js";import"./utils-B9T-diIo.js";import"./ClickAwayListener-CqBPamoh.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-B6hgiwNh.js";import"./index-C-slG4EV.js";import"./useControlled-DXoD7LBp.js";import"./useId-VNLmTyT9.js";import"./Popper-DxQPaj6k.js";import"./Button-CgAeDyY5.js";import"./useQuery-C6R-wX43.js";import"./utils-E3uMvwn6.js";import"./Link-CxU-Z6uq.js";import"./Collapse-DVKT910h.js";import"./tinycolor-Begke6kS.js";import"./Fade-DrP2MKDE.js";import"./Skeleton-BUTy_UuT.js";import"./inputBaseClasses-DiqPll0m.js";import"./calculateFriendlyFileSize-8ac87dam.js";import"./CheckCircleTwoTone-uvYbkrv9.js";import"./InfoTwoTone-BUHLQ4H9.js";import"./mutation-BlIrrZqO.js";import"./dayjs.min-3iMEg4-E.js";import"./chunk-AYJ5UCUI-B8oIr-Ax.js";import"./index-B5Paye-i.js";import"./react-zapmL7RU.js";import"./util-CdHYbc7z.js";import"./WideButton-9xPNjrcP.js";import"./DeleteTwoTone-B_7feS-v.js";import"./createSvgIcon-czcN1ru4.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-40xHE-U3.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-wePUUYCx.js";import"./DialogBase-4mWB6zAa.js";import"./Close-CUTExLr4.js";import"./HelpPopover-C68yharR.js";import"./MarkdownPopover-BTAnvB4r.js";import"./LightTooltip-DDx26Bqe.js";import"./MarkdownSynapse-BadScrZ2.js";import"./SkeletonButton-QodrV1k1.js";import"./SkeletonInlineBlock-BzoqpDRQ.js";import"./SkeletonTable-DzWxUjn_.js";import"./SkeletonParagraph-OP5oZFIh.js";import"./HelpOutlineTwoTone-CwKYGIkE.js";import"./DialogTitle-BMEo3wMG.js";import"./DialogContent-BB_Lvnx6.js";import"./Dialog-jOI2r1p1.js";import"./Modal-DVGc4hlX.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-kCGNziGM.js";import"./WarningDialog-Bp71tF2f.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
