import{u as o}from"./VerificationSubmission-BDh1zA9f.js";import{g as u,bd as d,be as l,B as f,bf as S,M as O}from"./useFiles-C5IkgHKR.js";import"./StringUtils-C95LMFI-.js";import{h as i,H as n}from"./index-DFwYiTBW.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-D_A6OsTz.js";import"./SynapseConstants-BZ1xM3T_.js";import"./OrientationBanner-CaftPmJ0.js";import"./index-Dc7oXtx5.js";import"./index-BvwUSpoE.js";import"./iframe-CSh-yyb9.js";import"./spreadSx-CwcO6WA9.js";import"./react-CnOFtkUB.js";import"./FullWidthAlert-rH7PBXfB.js";import"./Alert-BNsJ0XmI.js";import"./createTheme-CLEJyU4o.js";import"./DefaultPropsProvider-CQ9vr5Fg.js";import"./useSlot-CPjqoygj.js";import"./useForkRef-C4hZLQ5F.js";import"./createSimplePaletteValueFilter-BgsLGErn.js";import"./createSvgIcon-cTCJaS7a.js";import"./Close-B26ASiW2.js";import"./IconButton-C1az1_o5.js";import"./useTimeout-D2Typ0WN.js";import"./ButtonBase-CAx0EV6B.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-13Ka8rlw.js";import"./Paper-CgmbLxaC.js";import"./useTheme-DPLPxQnc.js";import"./useTheme-z89Ynh4-.js";import"./Stack-x99x_t8V.js";import"./useThemeProps-DJ1xyvk8.js";import"./getThemeProps-HpT_6znR.js";import"./extendSxProp-BJJBLbQS.js";import"./Box-Dehh3oxZ.js";import"./AlertTitle-IP3qXvli.js";import"./Typography-BE4rHoNc.js";import"./index-IXTkT_FC.js";import"./ClickAwayListener-H_84-Aw-.js";import"./getReactElementRef-F8_OyX7G.js";import"./index-DMH_OaqC.js";import"./index-Cd_E_qr9.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-D4OCuCHp.js";import"./Tooltip-DyZrSW_o.js";import"./index-B01-020F.js";import"./useControlled-BgGRQ0g4.js";import"./Popper-BVenD2n_.js";import"./Button-BPLc_V13.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-CLTeTbBo.js";import"./QueryClientProvider--YwERgDS.js";import"./Link-DlDLrxWt.js";import"./Collapse-CD-W84BO.js";import"./_baseUniq-DbXnkPVl.js";import"./_Uint8Array-CADqMcwt.js";import"./isArray-D8ZdJY-6.js";import"./_getTag-CirUuiqi.js";import"./isEqual-DlYHZiLm.js";import"./noop-DX6rZLP_.js";import"./merge-D-Dam4qi.js";import"./_initCloneObject-CJz6qKry.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-Cw-PXPOF.js";import"./inputBaseClasses-DPwHkifs.js";import"./calculateFriendlyFileSize-BfZPBZKW.js";import"./CheckCircleTwoTone-C44u5emq.js";import"./InfoTwoTone-mT_LStKZ.js";import"./useMutation-BQl0KsC5.js";import"./dayjs.min-DxypZ_oT.js";import"./chunk-AYJ5UCUI-3iV-Oige.js";import"./cloneDeep-GqePjE_a.js";import"./Skeleton-CKT5zskH.js";import"./SkeletonButton-D5PtZFHX.js";import"./SkeletonInlineBlock-DqJUOdnP.js";import"./SkeletonTable-Bq5Dz7Xr.js";import"./times-ITYPdN0b.js";import"./toInteger-BAtd_Kq7.js";import"./isSymbol-KbPNZ9sy.js";import"./SkeletonParagraph-Bou7kSp7.js";import"./MarkdownSynapse-_B7zxlyi.js";import"./Container-Bcq87Vrm.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Qr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Xr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Xr as __namedExportsOrder,Qr as default};
