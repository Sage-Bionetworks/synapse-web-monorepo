import{g as f}from"./userProfileHandlers-rH06HajU.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-DM8ODnE1.js";import{A}from"./AccountLevelBadges-Bbzz1ijW.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-_B9HbBpY.js";import"./iframe-CKfgUuPM.js";import"./mockEntity-ChaNteAl.js";import"./mockFileEntity-KcoS96E_.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-B8eo9IvW.js";import"./mockTeam-B8mMkV5K.js";import"./SynapseConstants-BhK8041S.js";import"./OrientationBanner-CZLIqqQW.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-CXGD1nhD.js";import"./index-BloLEAy1.js";import"./spreadSx-CwcO6WA9.js";import"./react-BruRYVnC.js";import"./FullWidthAlert-PH21VpMl.js";import"./Alert-CVuydjvy.js";import"./createTheme-CZav1_Gb.js";import"./DefaultPropsProvider-Cc2WXfIy.js";import"./useSlot-7ZCLd36S.js";import"./useForkRef-Cb6JBq-d.js";import"./createSimplePaletteValueFilter-eby9pYbG.js";import"./createSvgIcon-pEoAHn1W.js";import"./Close-vzj9hjx-.js";import"./IconButton-DcP9VhRe.js";import"./useTimeout-sp5LbUOC.js";import"./ButtonBase-i9yFzP5m.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BDbmFF2h.js";import"./Paper-CIe6YCK_.js";import"./useTheme-BB7mkDQM.js";import"./useTheme-sze_bRIR.js";import"./Stack-S_1S8qQR.js";import"./extendSxProp-C1UJW0LD.js";import"./getThemeProps-y8DddFS4.js";import"./Box-B2NAFohM.js";import"./AlertTitle-J1r0sIO1.js";import"./Typography-DAbfgqiK.js";import"./index-BU6WjtVn.js";import"./ClickAwayListener-xpLIiVXr.js";import"./getReactElementRef-91ouRfnc.js";import"./index-CVk8f9Z0.js";import"./index-KlmJpNBV.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-Btkl0dwb.js";import"./Tooltip-LLJF2Sui.js";import"./index-CaphlovL.js";import"./useControlled-eGHYQS1z.js";import"./Popper-CCeV26oI.js";import"./Button-CMHi5O9T.js";import"./uniqueId-fLo1fJUi.js";import"./toString-DVQmHkRT.js";import"./isArray-C0axBQbV.js";import"./isSymbol-CLxX1gXb.js";import"./times-DokJBrpe.js";import"./_Uint8Array-DaYXT6X2.js";import"./identity-DKeuBCMA.js";import"./toInteger-OQRcS22X.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-A2nSLqYV.js";import"./QueryClientProvider-B-jv1tS7.js";import"./Link-t6I2sdQ7.js";import"./Collapse-DN8doD0U.js";import"./_baseUniq-BVIKsDod.js";import"./_getTag-BL3im_fO.js";import"./isEqual-BS3sRW2T.js";import"./merge-B5cZnhNH.js";import"./_initCloneObject-IUGla6cP.js";import"./tinycolor-Begke6kS.js";import"./Fade-BOoRDzga.js";import"./inputBaseClasses-XK2vZhF1.js";import"./calculateFriendlyFileSize-Cm0JtIBR.js";import"./CheckCircleTwoTone-DrxZDCjx.js";import"./InfoTwoTone-DirFePmA.js";import"./useMutation-imcDv-vJ.js";import"./dayjs.min-BQ6mRLia.js";import"./chunk-AYJ5UCUI-CjQA8okQ.js";import"./cloneDeep-CaO4d-Vx.js";import"./Skeleton-DJX65kDG.js";import"./AccountLevelBadge-BrBhijxg.js";import"./Card-jZW_9mwV.js";import"./ConfirmationDialog-BFqFzJ6_.js";import"./DialogBase-BQxdggvG.js";import"./Close-kLMTifle.js";import"./HelpPopover-Bv3Cxx7v.js";import"./MarkdownPopover-n1CDp5Wz.js";import"./LightTooltip-3E2vqbri.js";import"./MarkdownSynapse-CwxIkFCl.js";import"./SkeletonButton-C4L_FMdR.js";import"./SkeletonInlineBlock-D2w-ccA5.js";import"./SkeletonTable-DPKa3L2H.js";import"./SkeletonParagraph-YYuPxs89.js";import"./HelpOutlineTwoTone-BEMbSgsV.js";import"./DialogTitle-DHBVuBSa.js";import"./DialogContent-C4GDEjuo.js";import"./DialogActions-BbSWcPH2.js";import"./Dialog-DYp4MNQV.js";import"./Modal-BxZJEgnB.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-HeEcc-yi.js";import"./LoadingScreen-DhhR39Bw.js";import"./LinearProgress-BHY4yjRF.js";import"./ToastMessage-gBUCU2C8.js";import"./CSSTransition-DkPV5JJg.js";const St={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Et=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Et as __namedExportsOrder,St as default};
