import{j as i}from"./jsx-runtime-D_zvdyIk.js";import{W as m,a as t}from"./WizardChoiceButton-CfbS39RF.js";import{I as l}from"./LayersTwoTone-BatyDSeZ.js";import{F as d}from"./IconSvg-6RTG8UNX.js";import"./Box-BQqeNhLw.js";import"./createTheme-CKTnRhf8.js";import"./index-roJ4vK9f.js";import"./iframe-usNaZGIV.js";import"./useTheme-CfHcAony.js";import"./extendSxProp-Cq9B16Aj.js";import"./spreadSx-CwcO6WA9.js";import"./Typography-DiV-TSAW.js";import"./index-BL8eoJay.js";import"./DefaultPropsProvider-BKZXJlgr.js";import"./createSimplePaletteValueFilter-Cs5GTHcK.js";import"./createSvgIcon-ES-cxXT2.js";import"./useTheme-z78Ru-D7.js";import"./Tooltip-DxTN-iVj.js";import"./index-CCsjNeDE.js";import"./useSlot-DHnKQh3_.js";import"./useForkRef-CVKF0tln.js";import"./useTimeout-DCTApi_k.js";import"./useControlled-Dj4md4a0.js";import"./getReactElementRef-SxH9WasF.js";import"./index-C8GKbJq-.js";import"./index-NGl8JrjW.js";import"./Grow-1_GvRgnD.js";import"./Popper-trMMFIZR.js";import"./ownerDocument-DW-IO8s5.js";import"./isFocusVisible-B8k4qzLc.js";import"./ContentCopyTwoTone-Bm1_731Z.js";import"./HelpOutlineTwoTone-AthE11ZY.js";import"./ErrorOutlined-D9Sypnka.js";import"./GetAppTwoTone-BNPUs-F1.js";import"./InfoOutlined-BLmDaXTg.js";import"./PhoneTwoTone-22bvLopz.js";import"./DeleteTwoTone-Brbs3v1B.js";import"./CheckCircleTwoTone-CTTxY2FK.js";const Y={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},e={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),i.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:i.jsx(l,{fontSize:"large"})}),i.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:i.jsx(d,{fontSize:"large"})})]})}};var r,s,n;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const Z=["Basic","WithIcons"];export{e as Basic,o as WithIcons,Z as __namedExportsOrder,Y as default};
