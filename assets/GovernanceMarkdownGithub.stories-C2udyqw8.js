import{u as o}from"./VerificationSubmission-BDh1zA9f.js";import{g as u,bd as d,be as l,B as f,bf as S,M as O}from"./useFiles-KjJsMF-p.js";import"./StringUtils-C95LMFI-.js";import{h as i,H as n}from"./index-CHKU6rT_.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-BQQ_EIYY.js";import"./SynapseConstants-DLx2cP4k.js";import"./OrientationBanner-Jb_O7Vhq.js";import"./index-Is5_m3kz.js";import"./index-CgGWB-jV.js";import"./iframe-BUMkfsLU.js";import"./spreadSx-CwcO6WA9.js";import"./react-N-ryfbTF.js";import"./FullWidthAlert-Cbe1wvZw.js";import"./Alert-CeHdnxTK.js";import"./createTheme-CzqifIS2.js";import"./DefaultPropsProvider-ChnhiV7X.js";import"./useSlot-DJp30WUK.js";import"./useForkRef-Cg7exXTP.js";import"./createSimplePaletteValueFilter-DoKXWXAR.js";import"./createSvgIcon-CJyY65Ao.js";import"./Close-Ct4BeBDP.js";import"./IconButton-CiTuzBw7.js";import"./useTimeout-BaoekB3P.js";import"./ButtonBase-CFAyCW0o.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DJKpL5dd.js";import"./Paper-DDtB3wBD.js";import"./useTheme-7NPehFBl.js";import"./useTheme-BN-TwAsg.js";import"./Stack-DbagSvH3.js";import"./useThemeProps-C1npFjKE.js";import"./getThemeProps-DaX0KFEn.js";import"./extendSxProp-JVQTI-CD.js";import"./Box-BZ1lOftb.js";import"./AlertTitle-Cb7s4coE.js";import"./Typography-B9kkfmck.js";import"./index-q_vgnk4f.js";import"./ClickAwayListener-DRuGIOht.js";import"./getReactElementRef-CPho3O8d.js";import"./index-D2jwleMP.js";import"./index-BigBH4wQ.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BICR705K.js";import"./Tooltip-CuMkmQ11.js";import"./index-JClH4D6U.js";import"./useControlled-BvzDdtG-.js";import"./Popper-xa5ue3Yw.js";import"./Button-DEyRWKz6.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-NiW2zyRg.js";import"./QueryClientProvider-DW-f02xS.js";import"./Link-oef7RIge.js";import"./Collapse-D0tlUayk.js";import"./_baseUniq-Dytxu0zx.js";import"./_Uint8Array-CN0Ng_Ch.js";import"./isArray-C9reyBA0.js";import"./_getTag-B2uaWzEd.js";import"./isEqual-C-hv45PE.js";import"./noop-DX6rZLP_.js";import"./merge-BNcXC3-S.js";import"./_initCloneObject-BEsO6nF6.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-CslKpPQa.js";import"./inputBaseClasses-DC4K9515.js";import"./calculateFriendlyFileSize-Hzj1mxFN.js";import"./CheckCircleTwoTone-BhkaRfHQ.js";import"./InfoTwoTone-D3TwCEy5.js";import"./useMutation-CCNgT-2E.js";import"./dayjs.min-BQpchTlf.js";import"./chunk-AYJ5UCUI-D6YYAcr5.js";import"./cloneDeep-KI5YljVK.js";import"./Skeleton-HDLzVwIb.js";import"./SkeletonButton-DXoTvKx8.js";import"./SkeletonInlineBlock-DTj_dYaw.js";import"./SkeletonTable-DqoNgDeh.js";import"./times-CxvG_X9r.js";import"./toInteger-B15ZtKM0.js";import"./isSymbol-DnFPJaTK.js";import"./SkeletonParagraph-CasqnWrn.js";import"./MarkdownSynapse-B-ppL6oM.js";import"./Container-xse1EuMH.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Qr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Xr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Xr as __namedExportsOrder,Qr as default};
