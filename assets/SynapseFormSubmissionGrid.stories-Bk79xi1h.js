import{j as l}from"./jsx-runtime-CnC__bFg.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-Cq5bnxKe.js";import{aF as S,M as a}from"./useFiles-D6D6aavL.js";import"./OrientationBanner-CiRzQfQO.js";import"./index-BsJQi6Dk.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-C2vI-jm7.js";import{S as E}from"./SynapseFormSubmissionGrid-BYNgTjbh.js";import"./mockSchema-BRoLxgsi.js";import"./mockFileEntity-Bns16Lkd.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-C6nUVHBC.js";import"./mockTeam-BCKzsLaO.js";import"./SynapseConstants-CIJTL8Hh.js";import"./uniqueId-BFvx1CNb.js";import"./toString-DFORIYL8.js";import"./isObjectLike-DmdZbYeo.js";import"./iframe-CLOMuBS1.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BlFNIlma.js";import"./times-a9NTxe3E.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-Bdm7bKOc.js";import"./asyncJobHandlers-CH6q-hAB.js";import"./BasicMockedCrudService-DdPXiNBQ.js";import"./cloneDeep-C2q4fZxO.js";import"./_Uint8Array-BSaYQZWv.js";import"./_initCloneObject-Csqg8Vlr.js";import"./_getTag-m1EiPaOw.js";import"./isEqual-C1O3GEEt.js";import"./_baseIsEqual-CsLca8bb.js";import"./mockAnnotationColumns-CT8eMQiO.js";import"./tableQueryHandlers-B7z6TisL.js";import"./omit-DaFsy9V1.js";import"./_baseGet-CklCWWu3.js";import"./isNil-CTodBd8q.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-LpyMrc_U.js";import"./_baseFlatten-CMWJCppI.js";import"./pick-Dj8wlvDH.js";import"./_baseSet-CCA-xeCA.js";import"./hasIn-DiF2EpM1.js";import"./accessRequirementAclHandlers-BE8VTQyk.js";import"./mockAccessRequirementAcls-De0ZKCb5.js";import"./mockAccessRequirements-I1MN6NYx.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-CMxucsia.js";import"./wikiHandlers-DQ_mnX6t.js";import"./mockWikiPageKey-BwMX83yY.js";import"./teamHandlers-CUCtEO9a.js";import"./dataAccessRequestHandlers-DxY_w3wl.js";import"./MockResearchProject-9eAusyyN.js";import"./mock_discussion-COGjgWZ3.js";import"./fakerUtils-B8MonDTH.js";import"./index-Cu_Bmw18.js";import"./mockTableEntity-DGITVa5H.js";import"./mockFileEntityACLVariants-DaQWcFf9.js";import"./entityHandlers-D-Zc6li6.js";import"./mockEntity-CY6VwAvP.js";import"./mockEvaluationQueue-CIVwdcU3.js";import"./featureFlagHandlers-TAO9i9h2.js";import"./fileHandlers-CHyKqJew.js";import"./personalAccessTokenHandlers-BKwWpeAs.js";import"./researchProjectHandlers-C5fgRzPw.js";import"./resetTwoFactorAuthHandlers-CLd_AVuI.js";import"./userProfileHandlers-csWfzCpB.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-yGFzkBTt.js";import"./FullWidthAlert-BgsUTCUD.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-lc64fEld.js";import"./createTheme-DVbiGJ67.js";import"./resolveComponentProps-Bv7pQW1z.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-BJRw6fTR.js";import"./createSvgIcon-DTKv9Rlb.js";import"./DefaultPropsProvider-yqsgBtMO.js";import"./Close-DCccWvSR.js";import"./IconButton-qFeqvS30.js";import"./ButtonBase-DlZPLEXy.js";import"./useTimeout-BtTY_1Hi.js";import"./useIsFocusVisible-D3oCvNA0.js";import"./useEventCallback-Bh5fpomL.js";import"./Paper-CZ6IEQ09.js";import"./Stack-DW2g_KTM.js";import"./getThemeProps-CQ-evv0A.js";import"./useTheme-SwEfz4tC.js";import"./Box-Jd0TGo98.js";import"./AlertTitle-DXQWSGGX.js";import"./Typography-BcmFSKlE.js";import"./useTheme-D0sMZgaF.js";import"./Grow-BADnlCPX.js";import"./index-CL9pY3NP.js";import"./utils-5GDObXQ_.js";import"./ClickAwayListener-Cd-S1Q1u.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DaXBtCB8.js";import"./index-cvImvpDl.js";import"./useControlled-CCxoHuWH.js";import"./useId-CFCmZZFw.js";import"./Popper-CD-JqEPm.js";import"./Button-CKoHvT6d.js";import"./useQuery-CF-CfnG8.js";import"./utils-Bq0_XUyv.js";import"./Link-_TBTXcDx.js";import"./Collapse-B7cdoG5y.js";import"./tinycolor-Begke6kS.js";import"./Fade-DcXqhDgy.js";import"./Skeleton-BNofG0Ec.js";import"./inputBaseClasses-CFue45jM.js";import"./calculateFriendlyFileSize-Bt8qXmv0.js";import"./CheckCircleTwoTone-jeuH2qq1.js";import"./InfoTwoTone-CeQqu_rR.js";import"./useMutation-3NTG8Lcv.js";import"./dayjs.min-CnuSBCzJ.js";import"./chunk-AYJ5UCUI-pNtXMNcj.js";import"./index-IjppgAFK.js";import"./react-Wpnlki_N.js";import"./util-5m9QK5Gt.js";import"./WideButton-C1tZMdri.js";import"./DeleteTwoTone-D5ZN8-kG.js";import"./createSvgIcon-CamsET4o.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-Bvb0310H.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-D6x7kL_b.js";import"./DialogBase-CaFUT5hT.js";import"./Close-e7f09U2N.js";import"./HelpPopover-qM59PdY3.js";import"./MarkdownPopover-bQ_rbdLw.js";import"./LightTooltip-DDDOKS1k.js";import"./MarkdownSynapse-BAznWAlp.js";import"./SkeletonButton-C-eCYWGB.js";import"./SkeletonInlineBlock-08qroX_M.js";import"./SkeletonTable-DOJaXP3-.js";import"./SkeletonParagraph-Dv9lb0yO.js";import"./HelpOutlineTwoTone-B9wfPIJN.js";import"./DialogTitle-Bj1eiFA7.js";import"./DialogContent-BkajL-3n.js";import"./Dialog-D7YXOnoY.js";import"./Modal-B79Pb3TI.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-CjJ9RRa2.js";import"./WarningDialog-DARbpFDz.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
