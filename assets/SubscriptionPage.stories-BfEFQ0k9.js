import{g as E}from"./handlers-CXRm0NpX.js";import{g as j,B as I,M as N}from"./useFiles-DU3bXuAE.js";import{j as t}from"./jsx-runtime-DPiG3R0R.js";import{a as h,b as R}from"./useSubscription-rFxCgZX0.js";import{p as s,m as D}from"./VerificationSubmission-DKyendrM.js";import{r as b}from"./index-DRlER7nw.js";import{D as F}from"./DropdownSelect-CXX9Kpq5.js";import"./StringUtils-BcSmk1fX.js";import"./OrientationBanner-DJ4alAZp.js";import{u as v}from"./useEntity-BCPHsCPl.js";import{c as M}from"./useForum-CysMWbe0.js";import{T as P}from"./Topic-D0EeVX5G.js";import{c as C}from"./useThread-C0V0mWTg.js";import{B as k}from"./Box-Y1nj0ApN.js";import{T as A,a as T}from"./Tabs-BkR1mdhE.js";import{S as B}from"./Stack-pM5AE4OC.js";import{B as $}from"./Button-AJnSQ6Ut.js";import"./mockSchema-CBJNt3PA.js";import"./mockFileEntity-CfYZb3zu.js";import"./mock_file_handle-qAzg5fnb.js";import"./mock_user_profile-CCzWeUML.js";import"./mockProject-K-xNM1SC.js";import"./mockTeam-ReJoiZpI.js";import"./SynapseConstants-DsCgHoOU.js";import"./uniqueId-DiMoTFEh.js";import"./toString-D1XFNLEL.js";import"./isObjectLike-DT1F5_Ix.js";import"./iframe-gi3XisdE.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-CjqP9xKe.js";import"./times-MSAKd2fY.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-j6SitRtm.js";import"./asyncJobHandlers-CRwojBaL.js";import"./index-Duei715J.js";import"./util-D51obbuS.js";import"./BasicMockedCrudService-Co6sRO8T.js";import"./cloneDeep-C3r-Yrwt.js";import"./_Uint8Array-BS3jSnnJ.js";import"./_initCloneObject-BLTkGPGB.js";import"./_getTag-BqzSQALn.js";import"./isEqual-BHCCo4qE.js";import"./mockAnnotationColumns-BDt9ZdO3.js";import"./tableQueryHandlers-Ddxde9Aw.js";import"./omit-CXqC8tAu.js";import"./_baseGet-DKjxS-yc.js";import"./isNil-BPAgBugS.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-CBSVjRxV.js";import"./_baseFlatten-BWJrjAwn.js";import"./pick-U0OxM6rh.js";import"./_baseSet-CBolvReL.js";import"./hasIn-Bu7hD2Q0.js";import"./accessRequirementAclHandlers-DMs4PGVx.js";import"./mockAccessRequirementAcls-3XW1AEdu.js";import"./mockAccessRequirements-BUVn4qJP.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CfZ4orwO.js";import"./accessRequirementHandlers-2zRNQLge.js";import"./wikiHandlers-DCnC_V6C.js";import"./mockWikiPageKey-BaR6dq1s.js";import"./teamHandlers-DRsGqpEY.js";import"./dataAccessRequestHandlers-BDHU62Lx.js";import"./MockResearchProject-CUvX3rmA.js";import"./mock_discussion-xh6EpNmu.js";import"./fakerUtils-CNZtZ5GR.js";import"./index-D5zz0VP1.js";import"./mockTableEntity-5RvN8z8K.js";import"./mockFileEntityACLVariants-vtr3F3hj.js";import"./entityHandlers-6cJhaYPT.js";import"./mockEntity-BNzd_d7e.js";import"./mockEvaluationQueue-D-Ry_wns.js";import"./featureFlagHandlers-C-EsX8MW.js";import"./fileHandlers-CkWRqRK-.js";import"./personalAccessTokenHandlers-CP912qmZ.js";import"./researchProjectHandlers-D2oSgtXR.js";import"./resetTwoFactorAuthHandlers-D7n4F9IR.js";import"./userProfileHandlers-Dgc30W3E.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useTimeout-B2bPIzMS.js";import"./FullWidthAlert-R6EVtHKx.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-BYxbQIxM.js";import"./createTheme-DQIvOmBk.js";import"./DefaultPropsProvider-UlX5bXx-.js";import"./useSlot-D8yvO1xQ.js";import"./useForkRef-ChqFpJWE.js";import"./createSimplePaletteValueFilter-DVwuXgvt.js";import"./createSvgIcon-CtDRwr3p.js";import"./Close-BBiabR_k.js";import"./IconButton-CNH7gO9P.js";import"./ButtonBase-D3zgPrFN.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-O-qj_I90.js";import"./Paper-Df0ViG5C.js";import"./useTheme-DNUoLfsv.js";import"./useTheme-B_Xprks4.js";import"./AlertTitle-Bk5UvP8h.js";import"./Typography-BCGqRzgO.js";import"./index-CFzJowKf.js";import"./extendSxProp-1Gj-CtJT.js";import"./ClickAwayListener-YB_ofQ_g.js";import"./getReactElementRef-Dw4MON7M.js";import"./index-B4fFtDTl.js";import"./index-DdFze2Ln.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BONjhKmI.js";import"./Tooltip-CtRWM5bs.js";import"./index-DanVeDdQ.js";import"./useControlled-C8ZsNrtG.js";import"./Popper-yosZaOGL.js";import"./useQuery-BFkXHN1n.js";import"./utils-FQaTZWKo.js";import"./Link-Y_M4S6oM.js";import"./Collapse-BwMzmQIR.js";import"./tinycolor-Begke6kS.js";import"./Fade-DT4Zl6lr.js";import"./inputBaseClasses-DXtOTEzM.js";import"./calculateFriendlyFileSize-CB-owWsp.js";import"./CheckCircleTwoTone-BDWuetOC.js";import"./InfoTwoTone-Ms5lPGxf.js";import"./useMutation-96DTmNIV.js";import"./dayjs.min-hNWLMaQU.js";import"./chunk-AYJ5UCUI-DL7t06aT.js";import"./Skeleton-CZHFA_u-.js";import"./useInfiniteQuery-DgkMOf_Y.js";import"./IconSvg-j1aFceTe.js";import"./LayersTwoTone-0USmmkDQ.js";import"./ContentCopyTwoTone-C_CePw0S.js";import"./HelpOutlineTwoTone-E9-0nojy.js";import"./ErrorOutlined-B3clGiHP.js";import"./GetAppTwoTone-BE6ALZxk.js";import"./InfoOutlined-9jFroM_N.js";import"./PhoneTwoTone-5NbOtulp.js";import"./DeleteTwoTone-DBIrCmfC.js";import"./getValidReactChildren-DnwjHH28.js";import"./MenuList-CmAAjZiH.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./List-BBzGMdl5.js";import"./MenuItem-CQw9vSGr.js";import"./dividerClasses-Cvm4_ygd.js";import"./index-BI1mSjG2.js";import"./react-BnG7FJAV.js";import"./pickBy-BzrTM4X-.js";import"./_baseIndexOf-rBnIfvEs.js";import"./isString-B2oilmkU.js";import"./_baseIteratee-DvE8Ik7c.js";import"./useQueries-BrJ9z_JP.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntityBundle-01OFdAgZ.js";import"./ConditionalWrapper-DcbSmpS_.js";import"./debounce-Be36O1Ab.js";import"./KeyboardArrowRight-omIipxnO.js";import"./getThemeProps-DP5W_O2x.js";function g(i){const{subscription:p}=i,{data:o}=M(p.objectId),{data:m}=v(o==null?void 0:o.projectId,void 0,{enabled:!!o}),{isSubscribed:a,isLoading:n,toggleSubscribed:e}=h(p.objectId,s.FORUM);let c;return o&&(c=`${j(I.PORTAL_ENDPOINT)}Synapse:${o.projectId}/discussion`),t.jsx(P,{isLoading:n,isSubscribed:a,icon:"dashboard",name:m==null?void 0:m.name,nameHref:c,onToggleSubscribe:e})}try{g.displayName="ForumTopic",g.__docgenInfo={description:"",displayName:"ForumTopic",props:{subscription:{defaultValue:null,description:"",name:"subscription",required:!0,type:{name:"Subscription"}}}}}catch{}function H(i){const{subscription:p}=i,{threadData:o}=C(p.objectId),{isSubscribed:m,isLoading:a,toggleSubscribed:n}=h(p.objectId,s.THREAD);let e;return o&&(e=`${j(I.PORTAL_ENDPOINT)}Synapse:${o.projectId}/discussion/threadId=${p.objectId}`),t.jsx(P,{isLoading:a,isSubscribed:m,icon:"discussion",name:o==null?void 0:o.title,nameHref:e,onToggleSubscribe:n})}try{ThreadTopic.displayName="ThreadTopic",ThreadTopic.__docgenInfo={description:"",displayName:"ThreadTopic",props:{subscription:{defaultValue:null,description:"",name:"subscription",required:!0,type:{name:"Subscription"}}}}}catch{}function S(i){const{subscription:p}=i;switch(p.objectType){case s.FORUM:return t.jsx(g,{subscription:p});case s.THREAD:return t.jsx(H,{subscription:p});default:return console.warn(`Subscription type ${i.subscription.objectType} not supported in UI`),t.jsx(t.Fragment,{})}}try{S.displayName="SubscriptionItem",S.__docgenInfo={description:`Simple discriminator component that maps a {@link Subscription} rendered on the {@link SubscriptionPage } to
a {@link Topic } component`,displayName:"SubscriptionItem",props:{subscription:{defaultValue:null,description:"",name:"subscription",required:!0,type:{name:"Subscription"}}}}}catch{}const d=[{value:"ASC",label:"Date Posted"},{value:"DESC",label:"Most Recent"}];function w(){const[i,p]=b.useState(s.FORUM),[o,m]=b.useState(d[0]),a=b.useId(),n={objectType:i,sortBy:D.CREATED_ON,sortDirection:o.value},{data:e,hasNextPage:c,isFetchingNextPage:f,fetchNextPage:O}=R(n,{staleTime:1/0,select:r=>({pages:r.pages.flatMap(l=>l.results),pageParams:r.pageParams})},[`subscriptionPageFetch_${a}`,n]);return t.jsxs(t.Fragment,{children:[t.jsx(k,{sx:{float:"right"},children:t.jsx(F,{variant:"outlined",options:d.map(r=>r.label),selectedIndex:d.findIndex(r=>r.value===o.value),setSelectedIndex:r=>m(d[r])})}),t.jsxs(A,{sx:{mb:3},value:i,onChange:(r,l)=>{r.stopPropagation(),p(l)},textColor:"secondary",indicatorColor:"secondary",children:[t.jsx(T,{value:s.FORUM,label:"Project Forums"}),t.jsx(T,{value:s.THREAD,label:"Threads"})]}),t.jsx(B,{sx:{gap:.5},children:e==null?void 0:e.pages.map(r=>t.jsx(S,{subscription:r},r.subscriptionId))}),c&&t.jsx($,{variant:"contained",onClick:()=>{O()},disabled:f,sx:{mt:6},children:f?"Loading...":"Load More"})]})}const Hr={title:"Synapse/Following/SubscriptionPage",component:w,parameters:{stack:"mock"}},u={name:"SubscriptionPage",args:{},parameters:{msw:{handlers:{...E(N)}}}};var _,y,x;u.parameters={...u.parameters,docs:{...(_=u.parameters)==null?void 0:_.docs,source:{originalSource:`{
  name: 'SubscriptionPage',
  args: {},
  parameters: {
    msw: {
      handlers: {
        ...getHandlers(MOCK_REPO_ORIGIN)
      }
    }
  }
}`,...(x=(y=u.parameters)==null?void 0:y.docs)==null?void 0:x.source}}};const wr=["Demo"];export{u as Demo,wr as __namedExportsOrder,Hr as default};
