import{g as f}from"./userProfileHandlers-csWfzCpB.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-D6D6aavL.js";import{A}from"./AccountLevelBadges-DlMMcZJq.js";import"./VerificationSubmission-DHPhgAH7.js";import"./index-C2vI-jm7.js";import"./OrientationBanner-CiRzQfQO.js";import"./jsx-runtime-CnC__bFg.js";import"./index-BsJQi6Dk.js";import"./iframe-CLOMuBS1.js";import"./index-IjppgAFK.js";import"./spreadSx-CwcO6WA9.js";import"./react-Wpnlki_N.js";import"./FullWidthAlert-BgsUTCUD.js";import"./Alert-lc64fEld.js";import"./createTheme-DVbiGJ67.js";import"./resolveComponentProps-Bv7pQW1z.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-BJRw6fTR.js";import"./createSvgIcon-DTKv9Rlb.js";import"./DefaultPropsProvider-yqsgBtMO.js";import"./Close-DCccWvSR.js";import"./IconButton-qFeqvS30.js";import"./ButtonBase-DlZPLEXy.js";import"./useTimeout-BtTY_1Hi.js";import"./TransitionGroupContext-yGFzkBTt.js";import"./useIsFocusVisible-D3oCvNA0.js";import"./useEventCallback-Bh5fpomL.js";import"./Paper-CZ6IEQ09.js";import"./Stack-DW2g_KTM.js";import"./getThemeProps-CQ-evv0A.js";import"./useTheme-SwEfz4tC.js";import"./Box-Jd0TGo98.js";import"./AlertTitle-DXQWSGGX.js";import"./Typography-BcmFSKlE.js";import"./useTheme-D0sMZgaF.js";import"./Grow-BADnlCPX.js";import"./index-CL9pY3NP.js";import"./utils-5GDObXQ_.js";import"./ClickAwayListener-Cd-S1Q1u.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DaXBtCB8.js";import"./index-cvImvpDl.js";import"./useControlled-CCxoHuWH.js";import"./useId-CFCmZZFw.js";import"./Popper-CD-JqEPm.js";import"./Button-CKoHvT6d.js";import"./util-5m9QK5Gt.js";import"./mockEntity-CY6VwAvP.js";import"./mockFileEntity-Bns16Lkd.js";import"./StringUtils-Bj0SG9ce.js";import"./mock_file_handle-C2NjfX48.js";import"./mockProject-C6nUVHBC.js";import"./mockTeam-BCKzsLaO.js";import"./SynapseConstants-CIJTL8Hh.js";import"./uniqueId-BFvx1CNb.js";import"./toString-DFORIYL8.js";import"./isObjectLike-DmdZbYeo.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BlFNIlma.js";import"./times-a9NTxe3E.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-Bdm7bKOc.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./useQuery-CF-CfnG8.js";import"./utils-Bq0_XUyv.js";import"./Link-_TBTXcDx.js";import"./Collapse-B7cdoG5y.js";import"./isNil-CTodBd8q.js";import"./_Uint8Array-BSaYQZWv.js";import"./_baseIsEqual-CsLca8bb.js";import"./_getTag-m1EiPaOw.js";import"./tinycolor-Begke6kS.js";import"./Fade-DcXqhDgy.js";import"./Skeleton-BNofG0Ec.js";import"./inputBaseClasses-CFue45jM.js";import"./calculateFriendlyFileSize-Bt8qXmv0.js";import"./CheckCircleTwoTone-jeuH2qq1.js";import"./InfoTwoTone-CeQqu_rR.js";import"./useMutation-3NTG8Lcv.js";import"./isEqual-C1O3GEEt.js";import"./dayjs.min-CnuSBCzJ.js";import"./chunk-AYJ5UCUI-pNtXMNcj.js";import"./cloneDeep-C2q4fZxO.js";import"./_initCloneObject-Csqg8Vlr.js";import"./merge-LpyMrc_U.js";import"./AccountLevelBadge-CATo6zxH.js";import"./Card-DMMxQVCK.js";import"./ConfirmationDialog-D6x7kL_b.js";import"./DialogBase-CaFUT5hT.js";import"./Close-e7f09U2N.js";import"./createSvgIcon-CamsET4o.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-Bvb0310H.js";import"./ownerWindow-HkKU3E4x.js";import"./HelpPopover-qM59PdY3.js";import"./MarkdownPopover-bQ_rbdLw.js";import"./LightTooltip-DDDOKS1k.js";import"./MarkdownSynapse-BAznWAlp.js";import"./SkeletonButton-C-eCYWGB.js";import"./SkeletonInlineBlock-08qroX_M.js";import"./SkeletonTable-DOJaXP3-.js";import"./SkeletonParagraph-Dv9lb0yO.js";import"./HelpOutlineTwoTone-B9wfPIJN.js";import"./DialogTitle-Bj1eiFA7.js";import"./DialogContent-BkajL-3n.js";import"./Dialog-D7YXOnoY.js";import"./Modal-B79Pb3TI.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-CjJ9RRa2.js";import"./LoadingScreen-D6r5z3mg.js";import"./LinearProgress-0FcBOYkQ.js";import"./ToastMessage-DIjxh__d.js";import"./CSSTransition-CWlmotGT.js";const Pt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Vt=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Vt as __namedExportsOrder,Pt as default};
