import{j as i}from"./jsx-runtime-BKf5RQqp.js";import{W as m,a as t}from"./WizardChoiceButton-faD2Y1Jk.js";import{I as l}from"./LayersTwoTone-BN76PfHL.js";import{F as d}from"./IconSvg-C5u4y0tt.js";import"./index-B9M1VMdY.js";import"./iframe-DrxrBbCN.js";import"./Box-D7zKVt5d.js";import"./createTheme-DvTVIqjb.js";import"./useTheme-Bekjdflv.js";import"./Typography-DzBHpQw1.js";import"./DefaultPropsProvider-n162cE-R.js";import"./createSvgIcon-hbT_i5o6.js";import"./spreadSx-CwcO6WA9.js";import"./useTheme-CEZhMqZD.js";import"./Tooltip-BEF1_Vht.js";import"./index-P0g_OErs.js";import"./Grow-BaIE4F4U.js";import"./resolveComponentProps-DPQntKSC.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-DIg_dHQL.js";import"./index-5WQ-QQb9.js";import"./utils-Bc1CwYEB.js";import"./TransitionGroupContext-DyKzf55a.js";import"./useEventCallback-Ct97vZo3.js";import"./useTimeout-zL07Ezm-.js";import"./useControlled-Cy6R5uHn.js";import"./useId-DqRnOE6C.js";import"./useIsFocusVisible-CRgE5DAe.js";import"./Popper-BbC7HGmV.js";import"./ownerDocument-DW-IO8s5.js";import"./ContentCopyTwoTone-Ca6GNuYj.js";import"./HelpOutlineTwoTone-BEhnizFV.js";import"./ErrorOutlined-BfXR1I9T.js";import"./GetAppTwoTone-RGoCMrWX.js";import"./InfoOutlined-C-tiL-ff.js";import"./DeleteTwoTone-BFUh_6bQ.js";import"./CheckCircleTwoTone-BX_oHHcp.js";const V={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},e={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),i.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:i.jsx(l,{fontSize:"large"})}),i.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:i.jsx(d,{fontSize:"large"})})]})}};var r,s,n;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const Y=["Basic","WithIcons"];export{e as Basic,o as WithIcons,Y as __namedExportsOrder,V as default};
