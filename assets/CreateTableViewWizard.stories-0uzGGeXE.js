import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{bt as be}from"./useFiles-En5liOfn.js";import{E as i,b as se,o as le,h as ge}from"./VerificationSubmission-NmfK1W18.js";import{e as F,p as we}from"./StringUtils-D1dT8CXY.js";import"./OrientationBanner-B4uqU9lW.js";import{r as a}from"./index-BGKfHSk8.js";import{k as Le,o as Oe}from"./useEntity-Cz-jk0Ft.js";import{u as Ae,a as xe,T as Ne}from"./TableColumnSchemaForm-B_wl9ErK.js";import{u as Be}from"./useMutation-uR_lUn9I.js";import{D as Me}from"./DialogBase-BrF6cmcK.js";import{E as je}from"./EntityViewMaskEditor-CC45XePI.js";import{E as ve}from"./EntityViewScopeEditor-Cj1v7D9k.js";import{T as Y}from"./TextField-BT3s_9IO.js";import{B as y}from"./Box-Dl9bdDgz.js";import{T as pe}from"./Typography-4FBfznuU.js";import{L as _}from"./Link-nIKgOOJn.js";import{S as Pe}from"./SubmissionViewScopeEditor-B7WH6-vL.js";import{u as me}from"./useGetFeatureFlag-tzrmS9CF.js";import{W as ce,a as T,b as I}from"./WizardChoiceButton-BNtK2CPn.js";import{i as We}from"./index-B-Ww8grE.js";import{A as R}from"./Alert-CyRc4Clc.js";import{B as U}from"./Button-COK4dnOS.js";import{d as ke}from"./ToastMessage-bz9xsNFs.js";import{f as De}from"./index-CSjVp6Dx.js";import"./SynapseConstants-C6zJ4IJQ.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useTimeout-5Q0Z7_vO.js";import"./FullWidthAlert-0V12Rkuf.js";import"./spreadSx-CwcO6WA9.js";import"./Stack-Ch0lA1Ch.js";import"./DefaultPropsProvider-DIzpH3Fg.js";import"./createTheme-CAa1rIKv.js";import"./extendSxProp-BO6t2ASw.js";import"./getThemeProps-C51oBefI.js";import"./useTheme-DgxJ3CLL.js";import"./AlertTitle-BjOUD14l.js";import"./useForkRef-DzDqwRel.js";import"./useSlot-DwXZ_j6C.js";import"./useTheme-CPstsOGE.js";import"./ClickAwayListener-di5aomVr.js";import"./getReactElementRef-DsQrM9l7.js";import"./index-CcJMFhVR.js";import"./iframe-hwM07gcL.js";import"./index-DJM3o9cS.js";import"./ownerDocument-DW-IO8s5.js";import"./Paper-Gj35BgLn.js";import"./Grow-D5ckU-GR.js";import"./Tooltip-HabFJOHL.js";import"./index-D2DV3O1J.js";import"./useControlled-D7Vfogjk.js";import"./Popper-CAg7-6pF.js";import"./isFocusVisible-B8k4qzLc.js";import"./useQuery-DwS_k2nL.js";import"./QueryClientProvider-CvTrulJZ.js";import"./Collapse-B1wdMAtp.js";import"./_baseUniq-B-rBxMDk.js";import"./_Uint8Array-BS5v6wM4.js";import"./_baseTimes-36S_kd0L.js";import"./isObjectLike-DFt_srKj.js";import"./isArray-Dxzbedgu.js";import"./_getTag-B3lOEEon.js";import"./isEqual-Bc2MJLgB.js";import"./merge-CnMidIvr.js";import"./_initCloneObject-CqCgam3p.js";import"./identity-DKeuBCMA.js";import"./createSvgIcon-C9jSypZa.js";import"./tinycolor-Begke6kS.js";import"./Fade-DxE_f_NY.js";import"./inputBaseClasses-B2dsuVyA.js";import"./calculateFriendlyFileSize-DxMWruXs.js";import"./CheckCircleTwoTone-Cf5s39nD.js";import"./InfoTwoTone-C5ChC8_t.js";import"./index-CtVaEtER.js";import"./createSimplePaletteValueFilter-DsH-b64n.js";import"./dayjs.min-CV6CNdty.js";import"./chunk-AYJ5UCUI-UiPGEWhr.js";import"./cloneDeep-CXETPPTh.js";import"./Skeleton-t7s89DoH.js";import"./index-DxyBYFfC.js";import"./react-CAsqVN01.js";import"./pickBy-B7EyjpGd.js";import"./isString-D2-qERQv.js";import"./toInteger-D74yyUHy.js";import"./isSymbol-CGZ9FdHD.js";import"./toString-eKxBM-WY.js";import"./_baseIteratee-BKh9hIGR.js";import"./_baseGet-KSWsSO2_.js";import"./hasIn-BmRDJpaB.js";import"./pick-D_rKTthN.js";import"./_baseSet-DFt76FPE.js";import"./omit-BX_-pMF7.js";import"./_baseSlice-F8doVSIJ.js";import"./useQueries-vogQwHFu.js";import"./useInfiniteQuery-Bc7q7Aj9.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntityBundle-DMSZcYD-.js";import"./SchemaDrivenAnnotationEditor-Bjdm6mRW.js";import"./ConfirmationDialog-Bx31LfQQ.js";import"./JsonSchemaForm-BMNBRB--.js";import"./enums-D3P8fap-.js";import"./_arrayReduce-CrxnWFSq.js";import"./_baseEach-fPy6njHZ.js";import"./times-CphR5kbL.js";import"./uniq-DHiGVPov.js";import"./forEach-BU_PYVaJ.js";import"./GridLegacy-xtgAgU_W.js";import"./MarkdownPopover-D_zYtq9j.js";import"./LightTooltip-DVTrzEIc.js";import"./MarkdownSynapse-BmyyG9zi.js";import"./SkeletonButton-BRi1iWkK.js";import"./SkeletonInlineBlock-nR17EmHX.js";import"./SkeletonTable-l5mpvP7f.js";import"./SkeletonParagraph-Caqw0isw.js";import"./HelpTwoTone-CrYu-Kxk.js";import"./IconButton-DAJgvnrd.js";import"./ButtonBase-BFODyUCV.js";import"./CircularProgress-DvUgbv3o.js";import"./InputLabel-BUFBn_s6.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-dhpKj888.js";import"./FormLabel-ZHI4QikR.js";import"./ContentCopy-BDWqaI0r.js";import"./Close-DqOXIUc0.js";import"./ArrowUpward-Ce5cAnWm.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./groupBy-DTR5t9sQ.js";import"./_createAggregator-CWQKRhDP.js";import"./_baseMap-tSegPPBU.js";import"./List-DwruuQji.js";import"./ListItem-D9NZVZCp.js";import"./isHostComponent-DVu5iVWx.js";import"./isMuiElement-DlsZli2r.js";import"./listItemButtonClasses-2vN9J6_T.js";import"./FormHelperText---h1gnH-.js";import"./DateTimePicker-DCejwmnG.js";import"./localizedFormat-DM4y7SlG.js";import"./utc-v1k6oto5.js";import"./useMobilePicker-CNOzQmOd.js";import"./index--Wo-zlkG.js";import"./index-Chjiymov.js";import"./CSSTransition-AyOCI4XK.js";import"./Modal-DnH3HvOS.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-CsC4pNgX.js";import"./Dialog-DfpZYSW5.js";import"./DialogContent-Cc20rbID.js";import"./visuallyHidden-Dan1xhjv.js";import"./FormControl-Bn7qEMYr.js";import"./InputAdornment-Kh5kD-Cy.js";import"./index-DccthQaf.js";import"./Chip-Bm-GIF3k.js";import"./Tabs-Ypm4Y4TU.js";import"./debounce-Be36O1Ab.js";import"./KeyboardArrowRight-B3ZUH3TB.js";import"./Divider-C3BHdbBl.js";import"./dividerClasses-D59spcs_.js";import"./MenuItem-D3zto6YT.js";import"./MenuList-D1zpVIEZ.js";import"./Autocomplete-C5JvqIKU.js";import"./Input-CdwriFws.js";import"./InputBase-DdWXzH_0.js";import"./Select-CcAHP4wW.js";import"./Menu-osaOIVX2.js";import"./Popover-CPKubrYk.js";import"./mergeSlotProps-Bvp5795_.js";import"./Close-SD3DC24O.js";import"./usePreviousProps-CH1-rw8t.js";import"./LoadingScreen-jZ020hZ8.js";import"./LinearProgress-WlwJAWRc.js";import"./use-deep-compare-effect.esm-DpAeXuh3.js";import"./TextWidget-sz_z1ynu.js";import"./pluralize-7nBQ7blH.js";import"./MultiValueField-BF3dNe19.js";import"./DateFormatter-BhzVSW5b.js";import"./JSONArrayEditorModal-Bu_zWzGr.js";import"./papaparse.min-D1KxGBLm.js";import"./EntityFinderModal-ecVOeJoM.js";import"./WarningDialog-BuCnLj6U.js";import"./EntityFinder-JsqfrhD8.js";import"./IconSvg-BhRoBLlE.js";import"./LayersTwoTone-BCGd6i5G.js";import"./ContentCopyTwoTone-J3hI0Nr4.js";import"./HelpOutlineTwoTone-DXO7FgJH.js";import"./ErrorOutlined-Cy1U-_Yh.js";import"./GetAppTwoTone-kv2WYxCI.js";import"./InfoOutlined-Di6A1CNm.js";import"./PhoneTwoTone-BjauUoAG.js";import"./DeleteTwoTone-Bv2lfl-0.js";import"./Search-CO4UD6YY.js";import"./defineProperty-CegpTSss.js";import"./useEntitySelection-BEHRMbx6.js";import"./useGetEntityChildren-qzjvLVpO.js";import"./StyledTanStackTable-BLrSYsPv.js";import"./StyledTableContainer-D51tIvE1.js";import"./ExpandCollapseButton-BLa4lL7K.js";import"./index-CgoMYbN8.js";import"./index-CpuJ1BoC.js";import"./const-BP60AzNb.js";import"./ColumnHeader-D_K6v9uU.js";import"./EnumFacetFilterUI-C-ydXUAc.js";import"./FacetFilterHeader-BpTxkXWj.js";import"./FormControlLabel-WGSQlky8.js";import"./Checkbox-CGFO2uoC.js";import"./SwitchBase-BSzOnqGI.js";import"./Radio-BtK4DfgP.js";import"./useDownloadList-B9onvLEl.js";import"./DownloadConfirmationUtils-J1-j2tIk.js";import"./EntityBadgeIcons-t5flAA02.js";import"./index-DRtHrp6I.js";import"./EntityModal-By6NJhtf.js";import"./FileHandleUtils-DS1WvA1U.js";import"./UserBadge-CnTgxBnA.js";import"./Card-DRemlq09.js";import"./Avatar-Bht8D31j.js";import"./LockTwoTone-D32_mv9E.js";import"./EntityIcon-C5cQh00O.js";import"./FileEntityDirectDownload-j4GuptsB.js";import"./DirectDownload-Dl_RHbY2.js";import"./SynapseTableConstants-2qH3fDlQ.js";import"./HelpPopover-D85Z5pz4.js";import"./immutable.es-BJjDfH8f.js";import"./useFavorites-DLLvx9kM.js";import"./useGetEntityHeaders-BfR65Vse.js";import"./NoSearchResults-B53zDyta.js";import"./DropdownSelect-LN-mvXZY.js";import"./getValidReactChildren-GXJbbqfH.js";import"./index.esm-BDldmUmG.js";import"./DialogTitle-CofK_ILB.js";import"./FormGroup-dDmltoD-.js";import"./EntityHeaderTable-Dh1X_goL.js";import"./EntityHeaderTableCellRenderers-yiMoKLCN.js";import"./EntityLink-DxS94gAp.js";import"./ErrorChip-C6sfSP7H.js";import"./useDebouncedEffect-kWNZN41P.js";import"./upperFirst-BfHH62Qm.js";import"./_stringToArray-N8cAV6t0.js";import"./useEvaluation-D4z9uCIo.js";import"./EvaluationFinder-DQw315yJ.js";import"./Grid-CsU5CltD.js";import"./ListItemIcon-lcBala_D.js";import"./ListItemText-CFOGiL8n.js";import"./RadioGroup-3rM9YDtY.js";import"./Slider-DDmgjQEw.js";import"./uniqueId-C6Y_izdd.js";function Fe(t){return Be({...t,mutationFn:r=>be(r.sql,r.entityType)})}const Re=e.jsxs(y,{sx:{mb:2.5},children:[e.jsx(pe,{variant:"body1",sx:{color:"grey.700",mb:1.25},children:"If you store normalized data in Synapse tables, views, or datasets, you can combine separate data sources using Materialized Views. A materialized view is a type of Synapse table that is defined using a Synapse SQL statement, which can contain SQL keywords such as JOIN and UNION to combine existing Synapse tables."}),e.jsx(_,{href:"https://help.synapse.org/docs/Combining-Data-from-Multiple-Table-Sources.2973270158.html",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about Materialized Views"})]}),Ue=e.jsx(y,{sx:{mb:2.5},children:e.jsx(pe,{variant:"body1",sx:{color:"grey.700",mb:1.25},children:"A Synapse Virtual Table is a type of table that is defined by a Synapse SQL query. Any query on a Virtual Table will execute the defining SQL statement on the referenced table. The defining SQL of a Virtual Table cannot include JOIN clauses on multiple tables."})});function q(t){const{entityType:r,...s}=t;return e.jsxs(e.Fragment,{children:[r===i.MATERIALIZED_VIEW&&Re,r===i.VIRTUAL_TABLE&&Ue,e.jsx(Y,{label:"Defining SQL",placeholder:"SELECT * FROM syn123",fullWidth:!0,multiline:!0,required:!0,minRows:6,...s})]})}try{q.displayName="SqlDefinedTableEditor",q.__docgenInfo={description:"Component used to edit the SQL of a Synapse entity defined by SQL, such as a MaterializedView or VirtualTable",displayName:"SqlDefinedTableEditor",props:{component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"Partial<TextFieldSlots>"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.",name:"slotProps",required:!1,type:{name:"{ root?: SlotProps<ElementType<FormControlProps, keyof IntrinsicElements>, {}, BaseTextFieldProps>; ... 4 more ...; select?: SlotProps<...>; } | { ...; } | { ...; }"}},entityType:{defaultValue:null,description:"",name:"entityType",required:!1,type:{name:"enum",value:[{value:'"project"'},{value:'"folder"'},{value:'"file"'},{value:'"table"'},{value:'"link"'},{value:'"entityview"'},{value:'"dockerrepo"'},{value:'"submissionview"'},{value:'"dataset"'},{value:'"datasetcollection"'},{value:'"materializedview"'},{value:'"virtualtable"'}]}}}}}catch{}function Ye(t,r){switch(t){case"CHOOSE_TABLE_TYPE":return"Create Table or View";case"CHOOSE_VIEW_TYPE":return"Create View";case"ENTITY_VIEW_SCOPE":case"SUBMISSION_VIEW_SCOPE":return`Define ${F(r)} Scope`;case"TABLE_SQL":return"Create a SQL-Defined View";case"TABLE_COLUMNS":return`Add Columns to ${F(r)}`;case"TABLE_NAME":return`Create the ${F(r)}`}}function qe(t,r){switch(t){case"CHOOSE_TABLE_TYPE":break;case"CHOOSE_VIEW_TYPE":return"CHOOSE_TABLE_TYPE";case"ENTITY_VIEW_SCOPE":case"SUBMISSION_VIEW_SCOPE":case"TABLE_SQL":return"CHOOSE_VIEW_TYPE";case"TABLE_COLUMNS":if(r===i.TABLE)return"CHOOSE_TABLE_TYPE";if(r===i.ENTITY_VIEW)return"ENTITY_VIEW_SCOPE";if(r===i.SUBMISSION_VIEW)return"SUBMISSION_VIEW_SCOPE";break;case"TABLE_NAME":if(r===i.TABLE||r===i.ENTITY_VIEW||r===i.SUBMISSION_VIEW)return"TABLE_COLUMNS";if(r===i.MATERIALIZED_VIEW||r===i.VIRTUAL_TABLE)return"TABLE_SQL";break}return console.warn(`Unknown previous step at ${t} for type ${r}`),"CHOOSE_TABLE_TYPE"}function ie(t){return t==="TABLE_NAME"}function He(t){return t===i.TABLE?"TABLE_COLUMNS":t===i.ENTITY_VIEW?"ENTITY_VIEW_SCOPE":t===i.SUBMISSION_VIEW?"SUBMISSION_VIEW_SCOPE":t===i.MATERIALIZED_VIEW||t===i.VIRTUAL_TABLE?"TABLE_SQL":"CHOOSE_TABLE_TYPE"}function ze(t,r,s){[i.TABLE,i.ENTITY_VIEW,i.SUBMISSION_VIEW,i.DATASET,i.DATASET_COLLECTION].includes(r)&&s.length>0&&(t.columnIds=s.map(h=>h.id))}function Qe(t,r,s){[i.ENTITY_VIEW,i.SUBMISSION_VIEW].includes(r)&&s.length>0&&(t.scopeIds=s)}function Ze(t,r,s){r===i.ENTITY_VIEW&&(t.viewTypeMask=s)}function $e(t,r,s){[i.MATERIALIZED_VIEW,i.VIRTUAL_TABLE].includes(r)&&(t.definingSQL=s)}function H(t){const{name:r,setName:s,description:h,setDescription:C}=t,n=me(se.DESCRIPTION_FIELD);return e.jsxs(e.Fragment,{children:[e.jsx(Y,{required:!0,label:"Name",value:r,onChange:p=>{s(p.target.value)},fullWidth:!0}),n&&e.jsx(Y,{label:"Description",value:h,onChange:p=>{C(p.target.value||void 0)},fullWidth:!0,multiline:!0,rows:3,sx:{my:2}})]})}try{H.displayName="TableNameForm",H.__docgenInfo={description:`React component for the naming a new table or view.
Renders UI to provide the name and description of a table or view.`,displayName:"TableNameForm",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},setName:{defaultValue:null,description:"",name:"setName",required:!0,type:{name:"Dispatch<SetStateAction<string>>"}},description:{defaultValue:null,description:"",name:"description",required:!0,type:{name:"string"}},setDescription:{defaultValue:null,description:"",name:"setDescription",required:!0,type:{name:"Dispatch<SetStateAction<string>>"}}}}}catch{}const Je=e.jsxs(e.Fragment,{children:[e.jsx(I,{children:"Synapse tables are used to organize web-accessible, sharable, and queryable data. Tables may be queried and edited with the Synapse UI, as well as with the Synapse programmatic clients."}),e.jsx(_,{href:"https://help.synapse.org/docs/Organizing-Data-With-Tables.2011038095.html",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about Tables"})]}),Ge=e.jsxs(e.Fragment,{children:[e.jsx(I,{children:"Views allow you to see and query groups of other objects in Synapse, such as files, tables, projects, or submissions and any associated annotations about those items."}),e.jsx(_,{href:"https://help.synapse.org/docs/Views.2011070739.html",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about Views"})]});function z(t){const{onTableSelected:r,onViewSelected:s}=t;return e.jsxs(ce,{children:[e.jsx(T,{title:"Table",description:Je,onClick:()=>{r()}}),e.jsx(T,{title:"View",description:Ge,onClick:s})]})}try{z.displayName="TableTypeSelection",z.__docgenInfo={description:`React component for the first step of creating a new table or view.
The user will decide if they want to create a Table or a View`,displayName:"TableTypeSelection",props:{onTableSelected:{defaultValue:null,description:"",name:"onTableSelected",required:!0,type:{name:"() => void"}},onViewSelected:{defaultValue:null,description:"",name:"onViewSelected",required:!0,type:{name:"() => void"}}}}}catch{}const Ke=e.jsxs(e.Fragment,{children:[e.jsx(I,{children:"This view lists all files, folders, and/or tables in the selected folders or projects."}),e.jsx(_,{href:"https://help.synapse.org/docs/Views.2011070739.html#Views-CreatingaFileView",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about File Views"})]}),Xe=e.jsxs(e.Fragment,{children:[e.jsx(I,{children:"This view lists all (and only) your selected projects."}),e.jsx(_,{href:"https://help.synapse.org/docs/Views.2011070739.html#Views-CreatingaProjectView",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about Project Views"})]}),et=e.jsxs(e.Fragment,{children:[e.jsx(I,{children:"This view lists all submissions within one or more evaluation queues."}),e.jsx(_,{href:"https://help.synapse.org/docs/Views.2011070739.html#Views-CreatingaSubmissionView",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about Submission Views"})]}),tt=e.jsxs(e.Fragment,{children:[e.jsx(I,{children:"The results of a query across multiple sources, defined by a SQL statement."}),e.jsx(_,{href:"https://help.synapse.org/docs/Combining-Data-from-Multiple-Table-Sources.2973270158.html",target:"_blank",onClick:t=>{t.stopPropagation()},children:"More about Materialized Views"})]}),rt=e.jsx(I,{children:"A saved query on another table or view where complex filters can be applied to aggregated results."});function Q(t){const{onTypeSelected:r}=t,s=me(se.VIRTUALTABLE_SUPPORT);return e.jsxs(ce,{children:[e.jsx(T,{title:"Files, Folders, and Other Objects",description:Ke,onClick:()=>{r(i.ENTITY_VIEW)}}),e.jsx(T,{title:"Projects",description:Xe,onClick:()=>{r(i.ENTITY_VIEW,le)}}),e.jsx(T,{title:"Challenge Submissions",description:et,onClick:()=>{r(i.SUBMISSION_VIEW)}}),e.jsx(T,{title:"Materialized View",description:tt,onClick:()=>{r(i.MATERIALIZED_VIEW)}}),s&&e.jsx(T,{title:"Virtual Table",description:rt,onClick:()=>{r(i.VIRTUAL_TABLE)}})]})}try{Q.displayName="ViewTypeSelection",Q.__docgenInfo={description:`React component for selecting a View type in the View creation wizard.
Renders UI to show all view types where the user must choose one to continue.`,displayName:"ViewTypeSelection",props:{onTypeSelected:{defaultValue:null,description:"",name:"onTypeSelected",required:!0,type:{name:"(type: EntityType, viewTypeMask?: number) => void"}}}}}catch{}function Z(t){const{open:r,parentId:s,onComplete:h,onCancel:C}=t,[n,p]=a.useState("CHOOSE_TABLE_TYPE"),[V,de]=a.useState(""),[b,ue]=a.useState(void 0),[o,Ee]=a.useState(void 0),[c,Se]=a.useState([]),[d,Te]=a.useState([]),[m,$]=a.useState(ge),L=m===le,[S,O]=a.useState([]),A=a.useRef(null),[f,_e]=a.useState(""),u=a.useMemo(()=>{if(o===i.ENTITY_VIEW)return{scope:c,viewTypeMask:m,viewEntityType:o};if(o===i.SUBMISSION_VIEW)return{scope:d,viewEntityType:o}},[o,c,d,m]),{data:x,isLoading:N,isError:B}=Ae(u==null?void 0:u.viewEntityType,u==null?void 0:u.viewTypeMask,{enabled:n==="ENTITY_VIEW_SCOPE"||n==="SUBMISSION_VIEW_SCOPE",staleTime:1/0}),{mutateAsync:J,error:M}=Le({onSuccess:l=>{h(l.id)}}),{mutate:G,data:g,error:j}=Fe({onSuccess:l=>{l&&l.isValid&&p("TABLE_NAME")}}),v=a.useMemo(()=>j?j.reason:g&&g.invalidReason?g.invalidReason:null,[j,g]),{mutateAsync:K,error:P}=xe(),W=a.useCallback((l,E)=>{Ee(l),E!=null&&$(E),p(He(l))},[]),X=a.useCallback(()=>{p("CHOOSE_VIEW_TYPE")},[]),ee=a.useCallback(async()=>{if(!o){console.error("entityType was not defined!"),p("CHOOSE_TABLE_TYPE");return}let l=[];if(S&&o!==i.MATERIALIZED_VIEW&&o!==i.VIRTUAL_TABLE)try{l=await K(S.map(D=>Oe(D,We)))}catch{return}const E={name:V,description:b,parentId:s,concreteType:we(o)};ze(E,o,l),Qe(E,o,o===i.SUBMISSION_VIEW?d:c),Ze(E,o,m),$e(E,o,f);try{await J(E)}catch{return}},[S,K,J,b,o,V,s,c,d,f,m]),te=a.useCallback(l=>{O(l),p("TABLE_NAME")},[]),re=a.useCallback(()=>{A.current!=null&&A.current.submit()},[]),Ie=n!=="CHOOSE_TABLE_TYPE",fe=n!=="CHOOSE_TABLE_TYPE"&&n!=="CHOOSE_VIEW_TYPE",he=a.useCallback(()=>{const l=qe(n,o);["CHOOSE_TABLE_TYPE","CHOOSE_VIEW_TYPE"].includes(l)&&O([]),p(l)},[n,o]),ye=a.useCallback(()=>{ie(n)?ee():n==="TABLE_SQL"&&o?G({sql:f,entityType:o}):n==="TABLE_COLUMNS"?re():(n==="ENTITY_VIEW_SCOPE"||n==="SUBMISSION_VIEW_SCOPE")&&(S.length==0&&x&&O(x.map(l=>({...l,id:void 0}))),p("TABLE_COLUMNS"))},[n,ee,re,S.length,x,G,o,f]),Ce=a.useMemo(()=>n==="ENTITY_VIEW_SCOPE"?c.length===0||m===0||N&&!B:n==="SUBMISSION_VIEW_SCOPE"?d.length===0||m===0||N&&!B:!1,[c.length,d.length,n,m,N,B]),k=a.useMemo(()=>e.jsxs(e.Fragment,{children:[M&&e.jsx(R,{sx:{my:2},severity:"error",children:M.message}),P&&e.jsx(R,{sx:{my:2},severity:"error",children:P.message}),v&&e.jsx(R,{sx:{my:2},severity:"error",children:v})]}),[P,M,v]),Ve=a.useMemo(()=>{switch(n){case"CHOOSE_TABLE_TYPE":return e.jsx(z,{onTableSelected:()=>{W(i.TABLE)},onViewSelected:X});case"CHOOSE_VIEW_TYPE":return e.jsx(Q,{onTypeSelected:W});case"ENTITY_VIEW_SCOPE":return e.jsxs(e.Fragment,{children:[e.jsx(ve,{scopeIds:c,onChange:Se,isProjectView:L}),!L&&e.jsx(je,{value:m,onChange:$})]});case"SUBMISSION_VIEW_SCOPE":return e.jsx(Pe,{evaluationIds:d,onChange:Te});case"TABLE_SQL":return e.jsxs(e.Fragment,{children:[e.jsx(y,{sx:{mt:1.25},children:e.jsx(q,{value:f,onChange:l=>_e(l.target.value),entityType:o})}),k]});case"TABLE_COLUMNS":return e.jsx(Ne,{initialData:S,entityType:o,ref:A,onSubmit:te,viewScope:u});case"TABLE_NAME":return e.jsxs(e.Fragment,{children:[e.jsx(H,{name:V,setName:de,description:b,setDescription:ue}),k]})}},[n,X,W,c,L,m,d,V,b,f,o,k,S,te,u]);return e.jsx(Me,{open:r,onCancel:C,maxWidth:"md",title:Ye(n,o),content:Ve,actions:e.jsxs(y,{sx:{display:"flex",width:"100%",gap:2.25,mt:2},children:[Ie&&e.jsx(U,{variant:"outlined",onClick:he,children:"Back"}),e.jsx(y,{sx:{m:"auto"}}),e.jsx(U,{variant:"outlined",onClick:C,children:"Cancel"}),fe&&e.jsx(U,{variant:"contained",onClick:ye,disabled:Ce,children:ie(n)?"Finish":"Next"})]})})}try{Z.displayName="CreateTableViewWizard",Z.__docgenInfo={description:`Wizard to create a Synapse table, view, or other table type.

See the README.md in this folder for a visualization of the flowchart`,displayName:"CreateTableViewWizard",props:{open:{defaultValue:null,description:"",name:"open",required:!0,type:{name:"boolean"}},parentId:{defaultValue:null,description:"",name:"parentId",required:!0,type:{name:"string"}},onCancel:{defaultValue:null,description:"",name:"onCancel",required:!0,type:{name:"() => void"}},onComplete:{defaultValue:null,description:"",name:"onComplete",required:!0,type:{name:"(newEntityId: string) => void"}}}}}catch{}const vn={title:"Synapse/Create Table Wizard",component:Z,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=7108-22337&mode=design&t=acwaLAqUDge5p8eQ-4"}},tags:["autodocs"]},w={args:{open:!0,parentId:"syn23567475",onComplete:t=>{ke(`Successfully created ${t}`)},onCancel:De()}};var oe,ne,ae;w.parameters={...w.parameters,docs:{...(oe=w.parameters)==null?void 0:oe.docs,source:{originalSource:`{
  args: {
    open: true,
    parentId: 'syn23567475',
    onComplete: newId => {
      displayToast(\`Successfully created \${newId}\`);
    },
    onCancel: fn()
  }
}`,...(ae=(ne=w.parameters)==null?void 0:ne.docs)==null?void 0:ae.source}}};const Pn=["Demo"];export{w as Demo,Pn as __namedExportsOrder,vn as default};
