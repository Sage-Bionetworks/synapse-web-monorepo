import{j as l}from"./jsx-runtime-N6ye8Cll.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-D5ZRD70X.js";import{aH as S,M as a}from"./useFiles-wPL3noqa.js";import"./OrientationBanner-D3UsPxXx.js";import"./index-Lo42Gh79.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-8YOVsS5k.js";import{S as E}from"./SynapseFormSubmissionGrid-CYfOdW6V.js";import"./mockSchema-CC4WEl_Z.js";import"./mockFileEntity-Dx6CJ4A_.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-Wczm4-d-.js";import"./mockTeam-D9SmVmxX.js";import"./SynapseConstants-DVzzGxGK.js";import"./uniqueId-CeoDGpp8.js";import"./toString-BVOVI4sj.js";import"./isObjectLike-Bl8WEi7v.js";import"./iframe-BeLSOqK0.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BgsEVFJf.js";import"./times-CasrlZO6.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-Ds-kg_-y.js";import"./asyncJobHandlers-BKfaXy9i.js";import"./BasicMockedCrudService-BkhwVmui.js";import"./cloneDeep-EMhmsPM9.js";import"./_Uint8Array-BrkH6h_h.js";import"./_initCloneObject-SveHNOq9.js";import"./_getTag-dgEDOUa8.js";import"./isEqual-7SDsHlZH.js";import"./_baseIsEqual-DIkf-jLy.js";import"./mockAnnotationColumns-B4zqyFtN.js";import"./tableQueryHandlers-NRge9Ei_.js";import"./omit-y4HvTnGp.js";import"./_baseGet-DxbIhCsu.js";import"./isNil-DAzj2u8t.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-DPBYIowj.js";import"./_baseFlatten-01ADqBPJ.js";import"./pick-D_kdv8Qk.js";import"./_baseSet-BTuwu1if.js";import"./hasIn-D5i_RlX_.js";import"./accessRequirementAclHandlers-BkwAgxrt.js";import"./mockAccessRequirementAcls-B75Iazyd.js";import"./mockAccessRequirements-Nsv0quox.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-BLon296h.js";import"./wikiHandlers-BMN_mVV8.js";import"./mockWikiPageKey-C4fNuptQ.js";import"./teamHandlers-D2mzk5W7.js";import"./dataAccessRequestHandlers-BpCe8z99.js";import"./MockResearchProject-DSltOGvU.js";import"./mock_discussion-xa15SjAF.js";import"./fakerUtils-DnnqTHM4.js";import"./index-LhLQxkzK.js";import"./mockTableEntity-CFsx0bzR.js";import"./mockFileEntityACLVariants-QzSZq7uE.js";import"./entityHandlers-DJfEyYVC.js";import"./mockEntity-S3I7Y0Yn.js";import"./mockEvaluationQueue-HHgT_NbW.js";import"./featureFlagHandlers-DYplAzwx.js";import"./fileHandlers-Dp2fZFqG.js";import"./personalAccessTokenHandlers-B7XKyXr3.js";import"./researchProjectHandlers-2J-8xLyP.js";import"./resetTwoFactorAuthHandlers-BksOKV7R.js";import"./userProfileHandlers-DrfBHGYp.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-GoISSeOA.js";import"./FullWidthAlert-pApCjOvL.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-DnAYteIA.js";import"./createTheme-zUoByXU0.js";import"./resolveComponentProps-BJ8uhEQv.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-BG5ZtOCT.js";import"./createSvgIcon-B7Fm4obF.js";import"./DefaultPropsProvider-CNnQMBV4.js";import"./Close-DGWi-3t4.js";import"./IconButton-CPNT-u2D.js";import"./ButtonBase-lRXedyLt.js";import"./useTimeout-Fspxp6pC.js";import"./useIsFocusVisible-DsSc-LK2.js";import"./useEventCallback-Co6pa197.js";import"./Paper-13cV-0Of.js";import"./Stack-BeytxLtO.js";import"./getThemeProps-Bv2-5X3N.js";import"./useTheme-COBO9Fob.js";import"./Box-atqS-zJr.js";import"./AlertTitle-BbIYRcBk.js";import"./Typography-tG7EFsUv.js";import"./useTheme-CFiH-FLy.js";import"./Grow-C1bIe5cL.js";import"./index-cN61rZYG.js";import"./utils-DiIkWdd2.js";import"./ClickAwayListener-BuLQRAHV.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-lA2laYzz.js";import"./index-DYutZETn.js";import"./useControlled-DZUuzM-I.js";import"./useId-G0RrJkXu.js";import"./Popper-ouRmnn8F.js";import"./Button-Bdir9JO_.js";import"./useQuery-D1RrcX2T.js";import"./utils-DSX88CCK.js";import"./Link-029SLwqk.js";import"./Collapse-thXyZuvh.js";import"./tinycolor-Begke6kS.js";import"./Fade-B4sfEdAe.js";import"./Skeleton-zk9T0ahk.js";import"./inputBaseClasses-BQUdFaBR.js";import"./calculateFriendlyFileSize-DJRIw0Wx.js";import"./CheckCircleTwoTone-Dm-a3uAR.js";import"./InfoTwoTone-P5w7WfcN.js";import"./mutation-DrD0YQPG.js";import"./dayjs.min-CvwiUaiC.js";import"./chunk-AYJ5UCUI-Dc_jcqd8.js";import"./index-Bf7y0XZD.js";import"./react-D7WMFHc_.js";import"./util-CvVmwgLX.js";import"./WideButton-DGtQCKJI.js";import"./DeleteTwoTone-D36Iyx-j.js";import"./createSvgIcon-B3VurhAD.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-BV6accyn.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-Cjk_X_mP.js";import"./DialogBase-Dpv7qBWq.js";import"./Close-BiGr6vaA.js";import"./HelpPopover-CzdTSXjv.js";import"./MarkdownPopover-40zcY8Gg.js";import"./LightTooltip-Bf6vfXL-.js";import"./MarkdownSynapse-BJAUhtaE.js";import"./SkeletonButton-BRl78l5U.js";import"./SkeletonInlineBlock-ixzYcb3a.js";import"./SkeletonTable-CyLitWLR.js";import"./SkeletonParagraph-Bxb6rwDB.js";import"./HelpOutlineTwoTone-BkCI6dx1.js";import"./DialogTitle-BeYHCsKU.js";import"./DialogContent-BSiLJreN.js";import"./Dialog-MLSsiiGP.js";import"./Modal-DYQnb7Yb.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-XUoU_VHY.js";import"./WarningDialog-B8I7k0Th.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
