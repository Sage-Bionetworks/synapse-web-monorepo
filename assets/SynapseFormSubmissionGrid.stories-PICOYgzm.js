import{j as l}from"./jsx-runtime-CdKXYHq3.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-CP5drgTK.js";import{aF as S,M as a}from"./useFiles-Dr7u_Bva.js";import"./OrientationBanner-DzTWIvmN.js";import"./index-pFihaiJB.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-D2UXnbti.js";import{S as E}from"./SynapseFormSubmissionGrid-DQaNjXlT.js";import"./mockSchema-BECeZWVp.js";import"./mockFileEntity-eyhmimx8.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject--WIjDl2v.js";import"./mockTeam-Bar3OoiW.js";import"./SynapseConstants-BanPYtN2.js";import"./uniqueId-m19bO9oQ.js";import"./toString-CI-tOB9j.js";import"./isObjectLike-Blr26enQ.js";import"./iframe-DGWk3dtm.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BYY1_bZL.js";import"./times-C-fa7jla.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-B2xRwE5d.js";import"./asyncJobHandlers-egFVDw9u.js";import"./BasicMockedCrudService-DbZY_R7-.js";import"./cloneDeep-D86TpKYV.js";import"./_Uint8Array-01EqBUPq.js";import"./_initCloneObject-VZ8j85Z0.js";import"./_getTag-C1uljw8-.js";import"./isEqual-pwBT1dbs.js";import"./_baseIsEqual-BYN_PiCw.js";import"./mockAnnotationColumns-Cxldr8fo.js";import"./tableQueryHandlers-DRcFibAq.js";import"./omit-Cs3f-Bdy.js";import"./_baseGet-CvtZozew.js";import"./isNil-Br_fGC8c.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-CKYP9hiF.js";import"./_baseFlatten-BoLUHH_c.js";import"./pick-Dk2W147p.js";import"./_baseSet-BqfvE8m1.js";import"./hasIn-tod5QW5L.js";import"./accessRequirementAclHandlers-xVGX10R1.js";import"./mockAccessRequirementAcls-C_llZJOx.js";import"./mockAccessRequirements-C418Byye.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-CV4z5lbA.js";import"./wikiHandlers-BOQPC8-g.js";import"./mockWikiPageKey-B4oq8uwX.js";import"./teamHandlers-NvLUeEYU.js";import"./dataAccessRequestHandlers-iv4iQH1R.js";import"./MockResearchProject-BNywv5X-.js";import"./mock_discussion-h6fITueu.js";import"./fakerUtils-VLRa_U07.js";import"./index-CzaLJ53_.js";import"./mockTableEntity-BBoLRlmw.js";import"./mockFileEntityACLVariants-IVWHizGT.js";import"./entityHandlers-D3jM7i0y.js";import"./mockEntity-BVMZ9Rz6.js";import"./mockEvaluationQueue-D8rjIpV7.js";import"./featureFlagHandlers-8XNY5dwN.js";import"./fileHandlers-Ck2RzknO.js";import"./personalAccessTokenHandlers-Biom1_nU.js";import"./researchProjectHandlers-BbdPA7DW.js";import"./resetTwoFactorAuthHandlers-CtO6st15.js";import"./userProfileHandlers-CG-pKs5d.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-VJeEL-bF.js";import"./FullWidthAlert-3Lw8ZGai.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-DsIOtgCY.js";import"./createTheme-6OKFmZq8.js";import"./resolveComponentProps-BuENAeaX.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-LxaFHDGW.js";import"./createSvgIcon-BkjJkEMb.js";import"./DefaultPropsProvider-B9KQWTTu.js";import"./Close-BJDJEVVG.js";import"./IconButton-BM_7udd3.js";import"./ButtonBase-CE1J5Bjq.js";import"./useTimeout-B3NVn0q2.js";import"./useIsFocusVisible-DtTWJUhG.js";import"./useEventCallback-Rz2loLNW.js";import"./Paper-BNcB9yJp.js";import"./Stack-DjjVVnDH.js";import"./getThemeProps-V7XIfBtU.js";import"./useTheme-TYTrCo8P.js";import"./Box-BksAr4qV.js";import"./AlertTitle-CrJmCFK9.js";import"./Typography-CYinS4Gd.js";import"./useTheme-BK0D5BzJ.js";import"./Grow-D8wu1iHX.js";import"./index-CX5jh9yq.js";import"./utils-8j5hwKUm.js";import"./ClickAwayListener-rrs22D9n.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DVMPSB7k.js";import"./index-rhqfbkIa.js";import"./useControlled-DH3KsJOY.js";import"./useId-CvtASGF1.js";import"./Popper-Dza_qJqA.js";import"./Button-B082zdSZ.js";import"./useQuery-BEghArMJ.js";import"./utils-BTDzrboP.js";import"./Link-BXQgRgUp.js";import"./Collapse-CJtVz9c-.js";import"./tinycolor-Begke6kS.js";import"./Fade-DJO1wvNj.js";import"./Skeleton-Dyn6VGG3.js";import"./inputBaseClasses-BWvchspz.js";import"./calculateFriendlyFileSize-DIAohWT-.js";import"./CheckCircleTwoTone-B9avxx8U.js";import"./InfoTwoTone-DM8MXETk.js";import"./useMutation-CLVgkmvQ.js";import"./dayjs.min-mMu8AzRI.js";import"./chunk-AYJ5UCUI-CQIGzzgu.js";import"./index-vb57DutA.js";import"./react-WVV_Bngv.js";import"./util-D2Mqgivw.js";import"./WideButton-DgxA01RJ.js";import"./DeleteTwoTone-bDc66tH8.js";import"./createSvgIcon-rgcAlP71.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-BCmtmrsI.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-D0XnBrnc.js";import"./DialogBase-DVrYHri8.js";import"./Close-jz2Dxw_d.js";import"./HelpPopover-BubLh1bp.js";import"./MarkdownPopover-pVQsit8Q.js";import"./LightTooltip-Bty75P62.js";import"./MarkdownSynapse-SGNPlq_P.js";import"./SkeletonButton-C5pjF938.js";import"./SkeletonInlineBlock-CW8_Uh7l.js";import"./SkeletonTable-CmDwwKSj.js";import"./SkeletonParagraph-HrWWCVZU.js";import"./HelpOutlineTwoTone-DSXyyE-x.js";import"./DialogTitle--FvA43CT.js";import"./DialogContent-DFaBM1tS.js";import"./Dialog-DdMKGIth.js";import"./Modal-DQ1vmweV.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-qRK3jJ2i.js";import"./WarningDialog-YFvcibWs.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
