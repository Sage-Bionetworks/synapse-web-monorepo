import{j as r}from"./jsx-runtime-Du8NFWEI.js";import{r as e}from"./index-Dl6G-zuu.js";import{b as h}from"./useSubscription-D-tvHbwl.js";import{a0 as s,j as O}from"./index-CIIvWsNs.js";import{S as y}from"./SubscriptionItem-CFm3_z4-.js";import{D}from"./DropdownSelect-Y74rspkh.js";import{B as I}from"./Box-BlHPf8tq.js";import{T,a as d}from"./Tabs-BXtbiPlV.js";import{S as v}from"./Stack-DkXTQwBs.js";import{B as R}from"./Button-jcEr4EiK.js";import{M as C}from"./getEndpoint-CjoHA800.js";import{g as E}from"./handlers-Dt3cychQ.js";import"./SynapseClient-Dbc8tFdW.js";import"./OrientationBanner-x6ohh6pv.js";import"./FullWidthAlert-jkkWXtk2.js";import"./Alert-C2wXqEQ3.js";import"./createTheme-Dtzk88yv.js";import"./index-GEGPABih.js";import"./styled-BEXTB4Ho.js";import"./mergeSlotProps-Dv5GaMzt.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CEBgoE3Z.js";import"./createSvgIcon-eMxRw33w.js";import"./Paper-B2c6t1gu.js";import"./IconButton-cf2NThiY.js";import"./ButtonBase-CI9J1-uo.js";import"./TransitionGroupContext-B611AcNu.js";import"./useIsFocusVisible-Cwvw9TRl.js";import"./AlertTitle-CmC2H_AO.js";import"./Typography-qpntpuFp.js";import"./utils-C59yjAo_.js";import"./index-B6qzg4VC.js";import"./Grow-CspkvTld.js";import"./ClickAwayListener-5odGQiyi.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BZeYxe44.js";import"./index-Cvyar9fI.js";import"./SynapseConstants-Br5dMy50.js";import"./tinycolor-Begke6kS.js";import"./InfoTwoTone-CxHU0jl8.js";import"./CheckCircleTwoTone-BB9W7Hyp.js";import"./colorManipulator-D5JWZs3m.js";import"./inputBaseClasses-DcVJRUx_.js";import"./Fade-DX0GMli6.js";import"./EntityTypeUtils-BpOAC-k-.js";import"./dayjs.min-d18Up55D.js";import"./index-BfyspvgH.js";import"./tiny-invariant-CopsF_GD.js";import"./Link-DhsldE67.js";import"./_getTag-eW65qzo1.js";import"./_Map-CWVOAJuy.js";import"./isArray-ggc3KxVp.js";import"./StringUtils-D4kDWP8q.js";import"./useMutation-CmUrLdpa.js";import"./useInfiniteQuery-B9dT23yY.js";import"./Topic-BbcR4muj.js";import"./IconSvg-C03OjPNK.js";import"./ErrorOutlined-Bqgz-1Qz.js";import"./GetAppTwoTone-EWgzB7jO.js";import"./InfoOutlined-erQdz4z_.js";import"./ConditionalWrapper-Be926PbJ.js";import"./Skeleton-BnDUWcOg.js";import"./useForum-BSFY7Eln.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntity-DTL9CB3c.js";import"./useQueries-Bku0WfEc.js";import"./isEqualWith-ClXv5bFA.js";import"./isEqual-DHUbDzRq.js";import"./_Uint8Array-kXJ5rGjS.js";import"./_baseTimes-DoMoQz2v.js";import"./_cacheHas-CXp-3pXr.js";import"./_setToArray-CSiN_fit.js";import"./_getAllKeys-CXW2ACrA.js";import"./pick-CMdlJRj-.js";import"./_baseIndexOf-DlmoT9Yo.js";import"./toInteger-CoOs-5Xi.js";import"./isSymbol-BzKS7Qf1.js";import"./toString-CYyvKWOl.js";import"./_baseClone-7Is5LRdu.js";import"./_initCloneObject-CtX8iLDk.js";import"./_defineProperty-Df4ZcNZr.js";import"./_baseIteratee-BCvxiYEe.js";import"./_getMatchData-f4FRWCd_.js";import"./identity-DKeuBCMA.js";import"./_baseSlice-F8doVSIJ.js";import"./isPlainObject-r6ak-40U.js";import"./_overRest-DUrPJxXC.js";import"./QueryFilterUtils-CpPv6dGS.js";import"./isNumber-BM-UBS4N.js";import"./useThread-BH6iP3_B.js";import"./MenuList-DcRgYyIn.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./List-SpTnb4Iq.js";import"./MenuItem-B8p-S9xi.js";import"./dividerClasses-B6SJ9mag.js";import"./ownerWindow-BN2rbQ_G.js";import"./index-CCvylG8w.js";import"./util-JRuJS-T4.js";import"./index-Cek1a_Jj.js";import"./entityHandlers-B5Bc3gBW.js";import"./index-huOiaLnI.js";import"./mock_user_profile-DyzXylki.js";import"./mockProject-C1gNptpI.js";import"./fakerUtils-JZNSDtdI.js";import"./times-CNSOYeu0.js";import"./mockFileEntity-DSWWqMtx.js";import"./mock_file_handle-ChfBNHRW.js";import"./mockTableEntity-ZH8PQ2Ol.js";import"./mockEntity-2Ug0XG-S.js";import"./mockSchema-0bBvdGx3.js";import"./uniqueId-CSw6ftlJ.js";import"./userProfileHandlers-BXXacVy4.js";import"./mockTeam-CdLA4Mkw.js";import"./accessRequirementHandlers-C0b3CESy.js";import"./mockAccessRequirements-BXJv28au.js";import"./mockWiki-C8YWd9LL.js";import"./MockSubmission-CeplXgYW.js";import"./mockWikiPageKey-Cduc0B7K.js";import"./BasicMockedCrudService-CM83Ur-_.js";import"./cloneDeep-DwycXlOj.js";import"./dataAccessRequestHandlers-DyufJ2pn.js";import"./MockResearchProject-DIc5BS0t.js";import"./researchProjectHandlers-DnTOo15O.js";import"./fileHandlers-DSd3ELVf.js";import"./mock_discussion-C4CvuLY-.js";import"./tableQueryHandlers-B3Qv4XVh.js";import"./mockEvaluationQueue-BiYUFHwS.js";import"./mockAnnotationColumns-NHwGczqj.js";import"./personalAccessTokenHandlers-tl2oiZVD.js";import"./teamHandlers-B-mdb0o2.js";import"./accessRequirementAclHandlers-CjgAhVJz.js";import"./mockAccessRequirementAcls-QB919-rO.js";import"./resetTwoFactorAuthHandlers-CaaDUF1v.js";const o=[{value:"ASC",label:"Date Posted"},{value:"DESC",label:"Most Recent"}];function F(){const[a,b]=e.useState(s.FORUM),[n,S]=e.useState(o[0]),f=e.useId(),c={objectType:a,sortBy:O.CREATED_ON,sortDirection:n.value},{data:m,hasNextPage:j,isFetchingNextPage:l,fetchNextPage:P}=h(c,{staleTime:1/0,select:t=>({pages:t.pages.flatMap(p=>p.results),pageParams:t.pageParams})},[`subscriptionPageFetch_${f}`,c]);return r.jsxs(r.Fragment,{children:[r.jsx(I,{sx:{float:"right"},children:r.jsx(D,{variant:"outlined",options:o.map(t=>t.label),selectedIndex:o.findIndex(t=>t.value===n.value),setSelectedIndex:t=>S(o[t])})}),r.jsxs(T,{sx:{mb:3},value:a,onChange:(t,p)=>{t.stopPropagation(),b(p)},textColor:"secondary",indicatorColor:"secondary",children:[r.jsx(d,{value:s.FORUM,label:"Project Forums"}),r.jsx(d,{value:s.THREAD,label:"Threads"})]}),r.jsx(v,{gap:.5,children:m==null?void 0:m.pages.map(t=>r.jsx(y,{subscription:t},t.subscriptionId))}),j&&r.jsx(R,{variant:"contained",onClick:()=>{P()},disabled:l,sx:{mt:6},children:l?"Loading...":"Load More"})]})}const io={title:"Synapse/Following/SubscriptionPage",component:F,parameters:{stack:"mock"}},i={name:"SubscriptionPage",args:{},parameters:{msw:{handlers:{...E(C)}}}};var u,g,x;i.parameters={...i.parameters,docs:{...(u=i.parameters)==null?void 0:u.docs,source:{originalSource:`{
  name: 'SubscriptionPage',
  args: {},
  parameters: {
    msw: {
      handlers: {
        ...getHandlers(MOCK_REPO_ORIGIN)
      }
    }
  }
}`,...(x=(g=i.parameters)==null?void 0:g.docs)==null?void 0:x.source}}};const mo=["Demo"];export{i as Demo,mo as __namedExportsOrder,io as default};
