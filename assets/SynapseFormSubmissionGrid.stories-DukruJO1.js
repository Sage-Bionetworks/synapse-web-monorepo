import{j as l}from"./jsx-runtime-DMre8F17.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-CNLg3z3o.js";import{aF as S,M as a}from"./useFiles-CAS_QhlS.js";import"./OrientationBanner-D5pw8BSu.js";import"./index-BAuVHV2z.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-C-33pEH0.js";import{S as E}from"./SynapseFormSubmissionGrid-DUV-X_86.js";import"./mockSchema-DpG5h_FT.js";import"./mockFileEntity-BTtjC48n.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-DqrHazyr.js";import"./mockTeam-tLzTWBiT.js";import"./SynapseConstants-oxozjXiE.js";import"./uniqueId-C6G0gjvU.js";import"./toString-BZECR69S.js";import"./isObjectLike-DS50Q_-r.js";import"./iframe-OI0nEnmn.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-DOjDjtCt.js";import"./times-C3mWkCiT.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-Bdwl_-HA.js";import"./asyncJobHandlers-CmjPD1E9.js";import"./BasicMockedCrudService-CokDr4Ws.js";import"./cloneDeep-nAHUzRQX.js";import"./_Uint8Array-d9oc9a-e.js";import"./_initCloneObject-BLowrZgy.js";import"./_getTag-TV9QcuB2.js";import"./isEqual-DpbblXQH.js";import"./_baseIsEqual-DAhZrM2m.js";import"./mockAnnotationColumns-DypaiLiD.js";import"./tableQueryHandlers-BQcpH6TX.js";import"./omit-xQS4uqih.js";import"./_baseGet-CpMFbe8J.js";import"./isNil-BTdFIcRc.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-Bij2bwXJ.js";import"./_baseFlatten-BszNVMup.js";import"./pick-hVhIHWMu.js";import"./_baseSet-DpzR7sTc.js";import"./hasIn-BPrMVFOm.js";import"./accessRequirementAclHandlers-BF1j2fIZ.js";import"./mockAccessRequirementAcls-CmYideyD.js";import"./mockAccessRequirements-Bksw4xae.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-D2tdAPTi.js";import"./wikiHandlers-DSeBUlwC.js";import"./mockWikiPageKey-46y5QY3v.js";import"./teamHandlers-D83q9hec.js";import"./dataAccessRequestHandlers-C469k588.js";import"./MockResearchProject-CnMpLvlC.js";import"./mock_discussion-CkM7kDMI.js";import"./fakerUtils-DS2MjNnH.js";import"./index-Dd5y23-_.js";import"./mockTableEntity-B8KRaYA_.js";import"./mockFileEntityACLVariants-VnCF1x9O.js";import"./entityHandlers-CAJ7Jo1O.js";import"./mockEntity-B_DpBLMH.js";import"./mockEvaluationQueue-BYQsE5Nj.js";import"./featureFlagHandlers-DC44LnPf.js";import"./fileHandlers-D-20qzj_.js";import"./personalAccessTokenHandlers-DsJOsyP0.js";import"./researchProjectHandlers-rm5x87bh.js";import"./resetTwoFactorAuthHandlers-ByS9xbl-.js";import"./userProfileHandlers-BwKkZ0x1.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-BNPxgiLu.js";import"./FullWidthAlert-yVU6QIpW.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-Bmvy0Okm.js";import"./createTheme-BB1S4NEt.js";import"./resolveComponentProps-DF96h0Eq.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-u21J4taN.js";import"./createSvgIcon-D0kdEjIj.js";import"./DefaultPropsProvider-Cq1pa9G2.js";import"./Close-CcZGAq3X.js";import"./IconButton-8W9a9RnF.js";import"./ButtonBase-BaQs7_Pa.js";import"./useTimeout-pAtqERQv.js";import"./useIsFocusVisible-DfUxaCJB.js";import"./useEventCallback-DAxHKips.js";import"./Paper-2bbvmWyl.js";import"./Stack-CTUsYAii.js";import"./getThemeProps-B1TL05kh.js";import"./useTheme-B1Sv5EJG.js";import"./Box-DIA65-hd.js";import"./AlertTitle-D9nMGlyg.js";import"./Typography-CTMq_pdk.js";import"./useTheme-B8P1yjh0.js";import"./Grow-CPqua1HP.js";import"./index-DSD_JLMH.js";import"./utils-DOe16nNH.js";import"./ClickAwayListener-1SXS2RHr.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DuZFgwly.js";import"./index-CR-BbFJG.js";import"./useControlled-BGfTKx8L.js";import"./useId-BaHTv3Ol.js";import"./Popper-BATOstVY.js";import"./Button-9_gAD86Z.js";import"./useQuery-B2-wbKIs.js";import"./utils-CILTy0he.js";import"./Link-C-2XG2Lr.js";import"./Collapse-DTOGVf0W.js";import"./tinycolor-Begke6kS.js";import"./Fade-1XXXk4ux.js";import"./Skeleton-DFEpqHx_.js";import"./inputBaseClasses-C7D8GWl7.js";import"./calculateFriendlyFileSize-Dz_VodOE.js";import"./CheckCircleTwoTone-D0Rd8YBH.js";import"./InfoTwoTone-D4EKW_HA.js";import"./useMutation-CENJvQo9.js";import"./dayjs.min-cdOwOoLt.js";import"./chunk-AYJ5UCUI-BkWiTWCP.js";import"./index-D6eIipcS.js";import"./react-B8rHlrBa.js";import"./util-ArqddniM.js";import"./WideButton-Tf7VVtUr.js";import"./DeleteTwoTone-pboVsOEg.js";import"./createSvgIcon-DObx79C7.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-CoiBq_PW.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-Dl5sSwy_.js";import"./DialogBase-BKZz6gnr.js";import"./Close-wMnrqSRJ.js";import"./HelpPopover-C-p5v_uG.js";import"./MarkdownPopover-CRng9pby.js";import"./LightTooltip-BSliv-OZ.js";import"./MarkdownSynapse-BfODVAvp.js";import"./SkeletonButton-cJmG53Bo.js";import"./SkeletonInlineBlock-CrkrprES.js";import"./SkeletonTable-B7DHBoY7.js";import"./SkeletonParagraph-BfSY4gRW.js";import"./HelpOutlineTwoTone-BTM55T4P.js";import"./DialogTitle-J3UBFblb.js";import"./DialogContent-Dt3zgccy.js";import"./Dialog-BMmowlOA.js";import"./Modal-BGTTyn76.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-DC0yWDpb.js";import"./WarningDialog-DmwASkCK.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
