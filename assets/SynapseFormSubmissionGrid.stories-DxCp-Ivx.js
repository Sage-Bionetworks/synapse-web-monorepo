import{j as l}from"./jsx-runtime-DhlGJ7sc.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-eJm614jD.js";import{aH as S,M as a}from"./useFiles-UkzU0789.js";import"./OrientationBanner-CIZJytWy.js";import"./index-CY44XRQW.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-DOOIuumC.js";import{S as E}from"./SynapseFormSubmissionGrid-BEI-lCmH.js";import"./mockSchema-DJgkCx99.js";import"./mockFileEntity-u1iMeACE.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-DWgRdJYg.js";import"./mockTeam-COdpMsRJ.js";import"./SynapseConstants-DiureF8E.js";import"./uniqueId-CMLqSG1e.js";import"./toString-BBzsCTE6.js";import"./isObjectLike-BLBiTK-1.js";import"./iframe-DNkluCoN.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-D7PjBgt8.js";import"./times-G3g49VTC.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-fqtAfUrx.js";import"./asyncJobHandlers-CgKFE7Db.js";import"./BasicMockedCrudService-BoBZzUKh.js";import"./cloneDeep-DVCo1U1i.js";import"./_Uint8Array-CRsdo2D-.js";import"./_initCloneObject-EeO3VmfB.js";import"./_getTag-hjWRNB5_.js";import"./isEqual-DTloIcwI.js";import"./_baseIsEqual-mt5wqwRw.js";import"./mockAnnotationColumns-CjVxj27X.js";import"./tableQueryHandlers-C8uYFTfY.js";import"./omit-BoT7RJ6I.js";import"./_baseGet-BnmNDJWa.js";import"./isNil-SuaWjo4O.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-fkSZy5Yz.js";import"./_baseFlatten-DAxayEBN.js";import"./pick-DyUxe_AV.js";import"./_baseSet-WQ_eoIC6.js";import"./hasIn-DZRrQ4JI.js";import"./accessRequirementAclHandlers-BRGTS_cW.js";import"./mockAccessRequirementAcls-B2pD29LO.js";import"./mockAccessRequirements-MxSYfUET.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-DqwwTqao.js";import"./wikiHandlers-DX1STS9r.js";import"./mockWikiPageKey-CGIExFb1.js";import"./teamHandlers-B5BftmZJ.js";import"./dataAccessRequestHandlers-D5PQX9UG.js";import"./MockResearchProject-Bnh6DeO6.js";import"./mock_discussion-eoMA-66n.js";import"./fakerUtils-D1ArDqLk.js";import"./index-DDNgyBGG.js";import"./mockTableEntity-CGPIaOuV.js";import"./mockFileEntityACLVariants-0k6h0X-b.js";import"./entityHandlers-DRZ7stns.js";import"./mockEntity-DdltKqdS.js";import"./mockEvaluationQueue-B5sXA0CS.js";import"./featureFlagHandlers-B7ktd7AZ.js";import"./fileHandlers-Cv9LZK5N.js";import"./personalAccessTokenHandlers-Prvdq_T7.js";import"./researchProjectHandlers-BHFQFg36.js";import"./resetTwoFactorAuthHandlers-DULVz_dJ.js";import"./userProfileHandlers-DSZ10Wtp.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-BrZDDC3s.js";import"./FullWidthAlert-BX9C0HBZ.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-V7dKC7Nt.js";import"./createTheme-m5mgIdCN.js";import"./resolveComponentProps-Vs1q-1Id.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-BdXv4TBM.js";import"./createSvgIcon-BA5lmNTr.js";import"./DefaultPropsProvider-KGD77BW7.js";import"./Close-BVh9jbMJ.js";import"./IconButton-C8ZXady0.js";import"./ButtonBase-B4CcYDJP.js";import"./useTimeout-CpA1WuhJ.js";import"./useIsFocusVisible-DqkGnRDC.js";import"./useEventCallback-CmGL17y5.js";import"./Paper-BRFBKtNy.js";import"./Stack-DJs_SaLV.js";import"./getThemeProps-BczNjUdE.js";import"./useTheme-D1aHyYy6.js";import"./Box-EVNXnt5A.js";import"./AlertTitle-BJe3pS1L.js";import"./Typography-Qj9qnpdp.js";import"./useTheme-W23PmfEg.js";import"./Grow-CG2jdriR.js";import"./index-Co8xAmzj.js";import"./utils-1wkIb8xE.js";import"./ClickAwayListener-Bup8plU3.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-W9BRZUCf.js";import"./index-BYHM7TqL.js";import"./useControlled-BsWScnXl.js";import"./useId-Ba0U3ySd.js";import"./Popper-C1811B1Z.js";import"./Button-CO54amw_.js";import"./useQuery-DhL_nMLP.js";import"./utils-Bj8hR2-k.js";import"./Link-Czf_4hER.js";import"./Collapse-on-WM-XP.js";import"./tinycolor-Begke6kS.js";import"./Fade-DNHPHyMS.js";import"./Skeleton-Dbx4L9CQ.js";import"./inputBaseClasses-DezGaEjz.js";import"./calculateFriendlyFileSize-53AEO24l.js";import"./CheckCircleTwoTone-BaCBSo7_.js";import"./InfoTwoTone-BNe2WjE8.js";import"./mutation-BnSfJ6J7.js";import"./dayjs.min-D7dgKJuw.js";import"./chunk-AYJ5UCUI-CVcY5UZQ.js";import"./index-Bs5qYh7P.js";import"./react-CTzCTnsG.js";import"./util-Dl4J1kvw.js";import"./WideButton-CFdhjfKO.js";import"./DeleteTwoTone-DJ5mGjHZ.js";import"./createSvgIcon-Cc5GfVSQ.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-BeCZWdia.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-Bh_VcIhx.js";import"./DialogBase-C7f9a065.js";import"./Close-mi5nUiCk.js";import"./HelpPopover-XkEIPFnk.js";import"./MarkdownPopover-CBNF51Xp.js";import"./LightTooltip-rKGp1Qxv.js";import"./MarkdownSynapse-BWI94Hem.js";import"./SkeletonButton-C0B4iTqr.js";import"./SkeletonInlineBlock-BnO7Syfa.js";import"./SkeletonTable-DhSeXdSo.js";import"./SkeletonParagraph-oLikAP9E.js";import"./HelpOutlineTwoTone-FkTpAtSG.js";import"./DialogTitle-DS55dyXB.js";import"./DialogContent-C3mXSu3I.js";import"./Dialog-D5gxlIV5.js";import"./Modal-DZDXxeH0.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-VN1-mGvG.js";import"./WarningDialog-BpylIfYv.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
