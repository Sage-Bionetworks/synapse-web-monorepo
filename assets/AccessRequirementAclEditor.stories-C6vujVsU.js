import{j as r}from"./jsx-runtime-Du8NFWEI.js";import{r as a}from"./index-Dl6G-zuu.js";import{M as f}from"./mockAccessRequirements-BFF-a_oE.js";import{M as x}from"./mockAccessRequirementAcls-DBJAzVAK.js";import{g as I}from"./accessRequirementAclHandlers-D2QLau4o.js";import{g as C}from"./userProfileHandlers-CmsnXROZ.js";import{M as i}from"./useFiles-BWxdxFDK.js";import{A as n}from"./AccessRequirementAclEditor-BiTXGcDr.js";import{B as S}from"./Button-DtfaTZY_.js";import{P as k}from"./Paper-BrACm7G9.js";import"./VerificationSubmission-CjmU3lv6.js";import"./SelfSignAccessRequirement-CEwndEoz.js";import"./RegularExpressions-jA8tWTUq.js";import"./mockProject-Bpjmlklg.js";import"./mock_user_profile-CyZOyNQ0.js";import"./mockTeam-DsCHb7id.js";import"./SynapseConstants-DcTljING.js";import"./OrientationBanner-BWRDUh7l.js";import"./spreadSx-CwcO6WA9.js";import"./FullWidthAlert-DzPicJi1.js";import"./Alert-CduaGk2B.js";import"./createTheme-C4MKIpuQ.js";import"./index-GEGPABih.js";import"./styled-BwKg_4wT.js";import"./mergeSlotProps-BB45Ai_O.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CEBgoE3Z.js";import"./createSvgIcon-CLD93Ce9.js";import"./IconButton-BIc9jQ57.js";import"./ButtonBase-6jsyScMO.js";import"./TransitionGroupContext-TdpM2qIg.js";import"./useIsFocusVisible-ByxglBfx.js";import"./Stack-DTWuWz9s.js";import"./Box-CaFleW7-.js";import"./AlertTitle-G3es5_Tb.js";import"./Typography-DrqHmlDD.js";import"./utils-DDqOmLXv.js";import"./index-BIzb42Jq.js";import"./Grow-30Ov46SB.js";import"./ClickAwayListener-D7YV5tOA.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-B08tzUFP.js";import"./index-CarQ_cRE.js";import"./useControlled-1Y2rT-1r.js";import"./useId-BkqTTtmk.js";import"./uniqueId-CSw6ftlJ.js";import"./toString-CYyvKWOl.js";import"./isArray-ggc3KxVp.js";import"./isSymbol-BzKS7Qf1.js";import"./StringUtils-CWePA3yc.js";import"./times-Bw9geEsI.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-czOlq-ma.js";import"./mockWiki-CTFXkHId.js";import"./mock_file_handle-D4OX89e9.js";import"./index-Bid--oWg.js";import"./util-BbuHFHEZ.js";import"./mockEntity-s7Bloumw.js";import"./mockFileEntity-oOYMU_jN.js";import"./useQuery-6SsvXKRa.js";import"./utils-Bx1BRerw.js";import"./tinycolor-Begke6kS.js";import"./InfoTwoTone-D-FIW5gs.js";import"./CheckCircleTwoTone-DTl0gYtq.js";import"./calculateFriendlyFileSize-B85TBsSb.js";import"./Skeleton-CW6YXi1_.js";import"./inputBaseClasses-u7jm9M-e.js";import"./Fade-BRP5-t6h.js";import"./Link-DxNs_73S.js";import"./cloneDeep-BzxzZd4X.js";import"./_initCloneObject-CKp18hZk.js";import"./dayjs.min-d18Up55D.js";import"./chunk-K6AXKMTT-B5GX6HSq.js";import"./merge-DLQdEICg.js";import"./useAccessRequirements-mcaNDtny.js";import"./useQueries-CrJ5bZfl.js";import"./useMutation-DjwfMZ6R.js";import"./useInfiniteQuery-CC5h_upz.js";import"./QueryFilterUtils-LVt70pDf.js";import"./isNumber-BM-UBS4N.js";import"./useMediaQuery-DfCTVEwh.js";import"./sortBy-Bc2rsPoa.js";import"./hasIn-BxK3M0wH.js";import"./_baseIteratee-DM0bGHdB.js";import"./useUpdateAcl-0PQA3kHr.js";import"./UserBadge-B1yFXb_Y.js";import"./Popover-8EWwwMP9.js";import"./Modal-DofGmAF7.js";import"./Backdrop-794lhd40.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./ownerWindow-BN2rbQ_G.js";import"./createChainedFunction-BO_9K8Jh.js";import"./IconSvg-ByGqCbY0.js";import"./LayersTwoTone-Be5uNxsz.js";import"./ErrorOutlined-qWluJVEZ.js";import"./GetAppTwoTone-BARpdX8y.js";import"./InfoOutlined-CgkZO6RQ.js";import"./DeleteTwoTone-DDTGJUFj.js";import"./SkeletonTable-DaoaRpY-.js";import"./ToastMessage-DvQouy_C.js";import"./CSSTransition-CpGkAf0u.js";import"./hasClass-D5ZjVvBY.js";import"./Menu-BxlTrzRj.js";import"./MenuList-CQMQk4tL.js";import"./List-nAK0nmZc.js";import"./Divider-uKYf26yp.js";import"./dividerClasses-CxO2LWOw.js";import"./MenuItem-BF-m1c73.js";import"./Card-J02zcsj3.js";import"./Avatar-BXRn3zVs.js";import"./noop-DX6rZLP_.js";import"./AclEditor-fcskOmZS.js";import"./UserOrTeamBadge-B3uSn-Fu.js";import"./TeamBadge-BfGWe5FY.js";import"./TextField-CrNNFkUB.js";import"./InputLabel-ChcIXaMM.js";import"./useFormControl-CQLCXd-P.js";import"./isMuiElement-DAcuSkv2.js";import"./Input-Bq8Rqd0B.js";import"./IconSvgButton-C66HRW4l.js";import"./UserSearchBoxV2-NkLNrGfW.js";import"./Select-49a62830.esm-DLH6iHJo.js";import"./use-deep-compare-effect.esm-COSQ_O61.js";import"./uniq-BOVf6cUB.js";import"./_baseSlice-F8doVSIJ.js";import"./without-3UFU3cYy.js";import"./_baseIndexOf-DlmoT9Yo.js";import"./SkeletonButton-BjHUHPig.js";import"./SkeletonInlineBlock-BCGkam_K.js";import"./SkeletonParagraph-BxHdykh6.js";import"./FormControlLabel-CgCL0_qx.js";import"./Checkbox-CnAHeP9R.js";const $t={title:"Governance/AccessRequirementAclEditor",component:n,render:function(M){const[O,e]=a.useState(!1),p=a.useRef(null);return r.jsxs(r.Fragment,{children:[r.jsx(S,{onClick:()=>{var s;e(!0),(s=p.current)==null||s.save()},variant:"contained",disabled:O,children:"Save ACL"}),r.jsx(k,{sx:{mx:"auto",p:"44px",maxWidth:"750px"},children:r.jsx(n,{...M,ref:p,onSaveComplete:()=>e(!1)})})]})}},t={args:{accessRequirementId:x.id},parameters:{stack:"mock",msw:{handlers:[...C(i),I(i)]}}},o={args:{accessRequirementId:String(f)},parameters:{stack:"mock",msw:{handlers:[...C(i),I(i)]}}},m={args:{accessRequirementId:"9602671"},parameters:{stack:"development"}};var c,l,d;t.parameters={...t.parameters,docs:{...(c=t.parameters)==null?void 0:c.docs,source:{originalSource:`{
  args: {
    accessRequirementId: MOCK_MANAGED_ACCESS_REQUIREMENT_ACL.id
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), getAllAccessRequirementAclHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(d=(l=t.parameters)==null?void 0:l.docs)==null?void 0:d.source}}};var E,R,u;o.parameters={...o.parameters,docs:{...(E=o.parameters)==null?void 0:E.docs,source:{originalSource:`{
  args: {
    accessRequirementId: String(MOCK_ACCESS_REQUIREMENT_WITHOUT_ACL_ID)
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), getAllAccessRequirementAclHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(u=(R=o.parameters)==null?void 0:R.docs)==null?void 0:u.source}}};var A,_,g;m.parameters={...m.parameters,docs:{...(A=m.parameters)==null?void 0:A.docs,source:{originalSource:`{
  args: {
    accessRequirementId: '9602671'
  },
  parameters: {
    stack: 'development'
  }
}`,...(g=(_=m.parameters)==null?void 0:_.docs)==null?void 0:g.source}}};const ro=["MockDemoExistingAcl","MockDemoNoExistingAcl","DevDemo"];export{m as DevDemo,t as MockDemoExistingAcl,o as MockDemoNoExistingAcl,ro as __namedExportsOrder,$t as default};
