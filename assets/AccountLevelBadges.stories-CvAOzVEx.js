import{g as f}from"./userProfileHandlers-D8O8t596.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-CpIQf7bR.js";import{A}from"./AccountLevelBadges-BdJYtVU4.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-DzpJkOoW.js";import"./iframe-CVMtvJ31.js";import"./mockEntity-DX2cV7lF.js";import"./mockFileEntity-CQarKuXp.js";import"./StringUtils-C95LMFI-.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-XnPPmpYD.js";import"./mockTeam-Dbo3LQRm.js";import"./SynapseConstants-DCuj7v5A.js";import"./OrientationBanner-BhIo1itP.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-D6sMuhjc.js";import"./index-BTX2eULV.js";import"./spreadSx-CwcO6WA9.js";import"./react-jWqjiESD.js";import"./FullWidthAlert-DBESnlHJ.js";import"./Alert-B_Lb3ke9.js";import"./createTheme-Bg0JnvG-.js";import"./DefaultPropsProvider-DkJRQOmc.js";import"./useSlot-DJ96S8JZ.js";import"./useForkRef-Bz6GVi3q.js";import"./createSimplePaletteValueFilter-B_zFUBoe.js";import"./createSvgIcon-kaLa9Vb4.js";import"./Close-CNSmPYq1.js";import"./IconButton-mOjBei70.js";import"./useTimeout-DyBAzNlF.js";import"./ButtonBase-DKKQqZi5.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BZ-3rWL4.js";import"./Paper-BpMud_ox.js";import"./useTheme-D4cJ8PRi.js";import"./useTheme-C7YDFSZ_.js";import"./Stack-B07vM9bz.js";import"./useThemeProps-seSFSWsk.js";import"./getThemeProps-DkOrQpuL.js";import"./extendSxProp-DU89cOAM.js";import"./Box-ZnuoGFaU.js";import"./AlertTitle-CgDFnc1E.js";import"./Typography-DuRdq6Lg.js";import"./index-BIflH0jO.js";import"./ClickAwayListener-DegMn6iM.js";import"./getReactElementRef-CVLdZIi_.js";import"./index-DUzyVIzd.js";import"./index-B3i8jk0i.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BqVF91XP.js";import"./Tooltip-B4Kq9yHi.js";import"./index-iQpWDSyN.js";import"./useControlled-Sbp9FKKD.js";import"./Popper-CX1lmSaJ.js";import"./Button-B7-P1hWd.js";import"./uniqueId-BgWg1yl2.js";import"./toString-1oDI86Nf.js";import"./isArray-CKHxsLMS.js";import"./isSymbol-D6LPlgVh.js";import"./times-CiqniwQk.js";import"./_Uint8Array-Bs5hmJ22.js";import"./identity-DKeuBCMA.js";import"./toInteger-CtW9ySE_.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-BS_xL6BT.js";import"./QueryClientProvider-CNvDTIKR.js";import"./Link-BKm2vjdi.js";import"./Collapse-ByANM13v.js";import"./_baseUniq-CqcjZw0e.js";import"./_getTag-kUTcptDD.js";import"./isEqual-BQVT-dYG.js";import"./noop-DX6rZLP_.js";import"./merge-BnOw64jq.js";import"./_initCloneObject-CdUFhJ45.js";import"./tinycolor-Begke6kS.js";import"./Fade-rzidtFwW.js";import"./inputBaseClasses-DNGH4K0e.js";import"./calculateFriendlyFileSize-AZUrqDHi.js";import"./CheckCircleTwoTone-BOy-Ivpu.js";import"./InfoTwoTone-DZGvo72n.js";import"./useMutation-CqYbiywW.js";import"./dayjs.min-CzGsWT9o.js";import"./chunk-AYJ5UCUI-BJiwWrYx.js";import"./cloneDeep-ztC9flu2.js";import"./Skeleton-Clpsi09M.js";import"./AccountLevelBadge-BzyzEpkm.js";import"./Card-MphFLYZB.js";import"./ConfirmationDialog-Dj4xKVhp.js";import"./DialogBase-SFBrdyxw.js";import"./Close-B-AGOisV.js";import"./HelpPopover-BDQaFA3O.js";import"./MarkdownPopover-XkX4TMkY.js";import"./LightTooltip-Y849-S-k.js";import"./MarkdownSynapse-BP9Wm1nl.js";import"./SkeletonButton-BNDIMfsc.js";import"./SkeletonInlineBlock-BpdH0ExQ.js";import"./SkeletonTable-BlI6RnJM.js";import"./SkeletonParagraph-BcW2Gtm3.js";import"./HelpOutlineTwoTone--M4SP2LF.js";import"./Dialog-CVayOwYS.js";import"./DialogActions-EzcoInAc.js";import"./Modal-Be2absL_.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-B9d5xTyO.js";import"./DialogContent-DvKdsiWD.js";import"./DialogTitle-CogSDTT2.js";import"./LoadingScreen-CkJbnKon.js";import"./LinearProgress-5dwmjWG_.js";import"./ToastMessage-Dquv4GG3.js";import"./CSSTransition-Bh43Pu-8.js";const kt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Ut=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Ut as __namedExportsOrder,kt as default};
