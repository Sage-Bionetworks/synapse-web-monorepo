import{t as o}from"./VerificationSubmission-NmfK1W18.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-BGqzmh3K.js";import"./StringUtils-Dsx1COFf.js";import{h as i,H as n}from"./index-DRvAX-ti.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-oLYk8Ov0.js";import"./SynapseConstants-ljMAdx68.js";import"./OrientationBanner-BJoiLH5u.js";import"./index-BLHxJKGR.js";import"./index-DfXhoS93.js";import"./iframe-CmMCQ4D1.js";import"./spreadSx-CwcO6WA9.js";import"./react-C55eq54t.js";import"./FullWidthAlert-Dmg54ubi.js";import"./Alert-DdXaF5ih.js";import"./createTheme-NstNY56j.js";import"./DefaultPropsProvider-BspoEs_3.js";import"./useSlot-G1lnVT-7.js";import"./useForkRef-BP-fxWVS.js";import"./createSimplePaletteValueFilter-BVA8XCKf.js";import"./createSvgIcon-DWS9jufq.js";import"./Close-Bw8bO_ey.js";import"./IconButton-BWMua7vU.js";import"./useTimeout-BXTGuQAu.js";import"./ButtonBase-Cx1k84i0.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-LMad5R4j.js";import"./Paper-De0lh8eX.js";import"./useTheme-BWvFZ9eF.js";import"./useTheme-BYUnt95G.js";import"./Stack-CfaqAJqE.js";import"./extendSxProp-SsxQet_B.js";import"./getThemeProps-C5S3wagm.js";import"./Box-uE-W7Sa0.js";import"./AlertTitle-CCmDEvrt.js";import"./Typography-UvjlH3GM.js";import"./index-BhAvfGUh.js";import"./ClickAwayListener-BwjI0Npa.js";import"./getReactElementRef-mWD2ut9h.js";import"./index-Birxyppr.js";import"./index-C4Gk4dZy.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-HWLRwbg6.js";import"./Tooltip-D5cxmH7B.js";import"./index-D63gI9c1.js";import"./useControlled-DmifYyk4.js";import"./Popper-DR2KrX6d.js";import"./Button-CIhLg1aw.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-8Z3xdu9W.js";import"./QueryClientProvider-DMlK99P5.js";import"./Link-BSPnFS7F.js";import"./Collapse-DBDRnYj5.js";import"./_baseUniq-BI8Wf5sc.js";import"./_Uint8Array-Ydrn2Wyi.js";import"./_baseTimes-36S_kd0L.js";import"./isObjectLike-CX_aDVYj.js";import"./isArray-Dxzbedgu.js";import"./_getTag-D1f8lrtD.js";import"./isEqual-DxBbzxZF.js";import"./merge-DIokW4tV.js";import"./_initCloneObject-DQnn-fay.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-2DQ5ggOQ.js";import"./inputBaseClasses-CX2aFV1A.js";import"./calculateFriendlyFileSize-5GaeDM8q.js";import"./CheckCircleTwoTone-3PcAFoLI.js";import"./InfoTwoTone-o8EvCK01.js";import"./useMutation-Dx_N1B5f.js";import"./dayjs.min-BaM1Jxz1.js";import"./chunk-AYJ5UCUI-DkR7fV6X.js";import"./cloneDeep-C6XcWJ4n.js";import"./Skeleton-F5jMcS6Z.js";import"./SkeletonButton-DtRmTpu7.js";import"./SkeletonInlineBlock-Sj3eCySv.js";import"./SkeletonTable-D7EuUw7B.js";import"./times-DXiL4RDA.js";import"./toInteger-BTMbvDiJ.js";import"./isSymbol-Bx8sUzGK.js";import"./SkeletonParagraph-Z5p3STae.js";import"./MarkdownSynapse-CLxG7man.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Jr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Qr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Qr as __namedExportsOrder,Jr as default};
