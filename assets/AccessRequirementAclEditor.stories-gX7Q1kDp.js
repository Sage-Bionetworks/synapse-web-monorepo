import{j as r}from"./jsx-runtime-Du8NFWEI.js";import{r as a}from"./index-Dl6G-zuu.js";import{M as f,a as x}from"./mockAccessRequirementAcls-CTtEg67p.js";import{g}from"./accessRequirementAclHandlers-EsD5KGJ7.js";import{g as C}from"./userProfileHandlers-DfCUd_1p.js";import{M as i}from"./getEndpoint-CjoHA800.js";import{A as n}from"./AccessRequirementAclEditor-Bcxs-J4g.js";import{B as S}from"./Button-DBz2LXAC.js";import{P as k}from"./Paper-BCUpbPXs.js";import"./index-Jpdv6DNM.js";import"./mockAccessRequirements-CyB2AbJM.js";import"./mockProject-DU3Wh7NS.js";import"./mock_user_profile-DyzXylki.js";import"./fakerUtils-JZNSDtdI.js";import"./index-GEGPABih.js";import"./times-OfrbVv5Y.js";import"./_baseTimes-DoMoQz2v.js";import"./identity-DKeuBCMA.js";import"./toInteger-D3pixHxI.js";import"./_Map-DQ7BAz_a.js";import"./isArray-ggc3KxVp.js";import"./isSymbol-BzKS7Qf1.js";import"./mockWiki-Bx7Vw-Hl.js";import"./mock_file_handle-DQAhXNjo.js";import"./mockTeam-BjNCh3XI.js";import"./SynapseConstants-D_Oa3fs5.js";import"./OrientationBanner-BBh8JRgP.js";import"./FullWidthAlert-Q8yalkva.js";import"./Alert-C43IQeyU.js";import"./createTheme-CcAD2pPO.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-DXXbLLGH.js";import"./styled-Sx1jgj-B.js";import"./mergeSlotProps-BW52tAYO.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CEBgoE3Z.js";import"./createSvgIcon-DSqIFKhr.js";import"./IconButton-DYXdVn2C.js";import"./ButtonBase-DE7aKxis.js";import"./TransitionGroupContext-DGN18uA0.js";import"./assertThisInitialized-B9jnkVVz.js";import"./inheritsLoose-DR8r8Ogv.js";import"./useIsFocusVisible-DHYsnH_Q.js";import"./Stack-CqpovyXN.js";import"./Box--1V6nYGL.js";import"./AlertTitle-CYZGUJl4.js";import"./Typography-CxCAiHvb.js";import"./utils-DkbdKabZ.js";import"./index-D1_ZHIBm.js";import"./Grow-DK1F46qr.js";import"./ClickAwayListener-BnMSRy2k.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-Drs5efNb.js";import"./index-DgT9Y5QJ.js";import"./uniqueId-CSw6ftlJ.js";import"./toString-CYyvKWOl.js";import"./index-DzDa9m9N.js";import"./events-CXH2uRM3.js";import"./util-CIG8wfYF.js";import"./index-Cek1a_Jj.js";import"./SynapseClient-CnzPBfaf.js";import"./tinycolor-Begke6kS.js";import"./InfoTwoTone-B6zWmPbt.js";import"./CheckCircleTwoTone-DPjbEwSO.js";import"./colorManipulator-BNChw7e0.js";import"./inputBaseClasses-DiZSv6oN.js";import"./Fade-BgJxt2ZN.js";import"./dayjs.min-d18Up55D.js";import"./index-BfyspvgH.js";import"./tiny-invariant-CopsF_GD.js";import"./Link-kkaQjRHX.js";import"./_getTag-C0pnHUBv.js";import"./StringUtils-D4kDWP8q.js";import"./mockEntity-B3oZwTwe.js";import"./mockFileEntity-mVOwqB1O.js";import"./useAccessRequirements-BIWfGEAB.js";import"./useQueries-uzTb_Jbk.js";import"./useMutation-BFetITBr.js";import"./useInfiniteQuery-CMXWxcvu.js";import"./QueryFilterUtils-BJhWPW0p.js";import"./isEqual-CaRu72LX.js";import"./_baseIsEqual-D3lGWuxb.js";import"./_Uint8Array-twRg38Hu.js";import"./_cacheHas-BU0f0idW.js";import"./_setToArray-CSiN_fit.js";import"./_getAllKeys-DL4F8xdU.js";import"./isNumber-BM-UBS4N.js";import"./useMediaQuery-DmVn-FLP.js";import"./sortBy-fSuJeGMj.js";import"./_baseFlatten-CnXGNScw.js";import"./_baseIteratee-D9nAsrl4.js";import"./_getMatchData-DsQIsSK2.js";import"./_baseFor-CpEDs2Sd.js";import"./_baseRest-C7ee989Q.js";import"./_overRest-CtHGJm8e.js";import"./_defineProperty-BBezp9jK.js";import"./_isIterateeCall-C7d3fUEK.js";import"./UserSearchBoxV2-Dz-fY8e2.js";import"./Select-49a62830.esm-_VmKfqe_.js";import"./isNativeReflectConstruct-gwnEYaHE.js";import"./use-deep-compare-effect.esm-COSQ_O61.js";import"./uniq-BXp3Gc12.js";import"./_baseSlice-F8doVSIJ.js";import"./without-D3rrPEcD.js";import"./_baseIndexOf-DlmoT9Yo.js";import"./isArrayLikeObject-D8ChWtBc.js";import"./noop-DX6rZLP_.js";import"./UserBadge-BrxFarWk.js";import"./Menu-BiolvXTN.js";import"./Modal-j_naynC6.js";import"./Backdrop-ym5Z3B7b.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./ownerWindow-BN2rbQ_G.js";import"./createChainedFunction-BO_9K8Jh.js";import"./MenuList-B5VOBuiJ.js";import"./List-COipR56a.js";import"./IconSvg-BgIj-eYA.js";import"./ErrorOutlined-CN3JQb1a.js";import"./GetAppTwoTone-Bnyq84dD.js";import"./InfoOutlined-CcVy1s6k.js";import"./useFiles-CB1-As5q.js";import"./cloneDeep-DtcUUPYI.js";import"./_baseClone-B3BQ7CPs.js";import"./_initCloneObject-BfUKWZAa.js";import"./SkeletonTable-DYyQ6y03.js";import"./Skeleton-DgVklRTa.js";import"./ToastMessage-Baf69T39.js";import"./CSSTransition-BhNnLFwI.js";import"./hasClass-D5ZjVvBY.js";import"./Divider-a2JT2FUU.js";import"./dividerClasses-DQb7lYlS.js";import"./MenuItem-BEeFhL08.js";import"./Card-BBeS2tz-.js";import"./Avatar-DfcwodJm.js";import"./UserOrTeamBadge-BzdM4iY-.js";import"./TeamBadge-oF52ow0b.js";import"./TextField-x8Micm4J.js";import"./InputLabel-eJTTrjzY.js";import"./useFormControl-CQLCXd-P.js";import"./isMuiElement-DAcuSkv2.js";import"./Select-Bqc7RxiE.js";import"./IconSvgButton-fEyARegf.js";const so={title:"Governance/AccessRequirementAclEditor",component:n,render:function(O){const[M,p]=a.useState(!1),e=a.useRef(null);return r.jsxs(r.Fragment,{children:[r.jsx(S,{onClick:()=>{var s;p(!0),(s=e.current)==null||s.save()},variant:"contained",disabled:M,children:"Save ACL"}),r.jsx(k,{sx:{mx:"auto",p:"44px",maxWidth:"750px"},children:r.jsx(n,{...O,ref:e,onSaveComplete:()=>p(!1)})})]})}},t={args:{accessRequirementId:f.id},parameters:{stack:"mock",msw:{handlers:[...C(i),g(i)]}}},o={args:{accessRequirementId:x},parameters:{stack:"mock",msw:{handlers:[...C(i),g(i)]}}},m={args:{accessRequirementId:"9602671"},parameters:{stack:"development"}};var c,l,d;t.parameters={...t.parameters,docs:{...(c=t.parameters)==null?void 0:c.docs,source:{originalSource:`{
  args: {
    accessRequirementId: MOCK_MANAGED_ACCESS_REQUIREMENT_ACL.id
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), getAllAccessRequirementAclHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(d=(l=t.parameters)==null?void 0:l.docs)==null?void 0:d.source}}};var E,R,u;o.parameters={...o.parameters,docs:{...(E=o.parameters)==null?void 0:E.docs,source:{originalSource:`{
  args: {
    accessRequirementId: MOCK_ACCESS_REQUIREMENT_WITHOUT_ACL_ID
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN), getAllAccessRequirementAclHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(u=(R=o.parameters)==null?void 0:R.docs)==null?void 0:u.source}}};var A,_,I;m.parameters={...m.parameters,docs:{...(A=m.parameters)==null?void 0:A.docs,source:{originalSource:`{
  args: {
    accessRequirementId: '9602671'
  },
  parameters: {
    stack: 'development'
  }
}`,...(I=(_=m.parameters)==null?void 0:_.docs)==null?void 0:I.source}}};const ao=["MockDemoExistingAcl","MockDemoNoExistingAcl","DevDemo"];export{m as DevDemo,t as MockDemoExistingAcl,o as MockDemoNoExistingAcl,ao as __namedExportsOrder,so as default};
