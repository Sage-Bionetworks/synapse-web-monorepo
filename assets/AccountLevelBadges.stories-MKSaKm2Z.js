import{g as f}from"./userProfileHandlers-C2G9oQJL.js";import{a as _}from"./mock_user_profile-CijvmO8r.js";import{M as C}from"./useFiles-jPWlXuHc.js";import{A}from"./AccountLevelBadges-ClRp2yOI.js";import"./VerificationSubmission-dxY1kvC5.js";import"./index-1ZN_791K.js";import"./OrientationBanner-DmtTd2TQ.js";import"./jsx-runtime-tHJZYBcw.js";import"./index-Df9ki4m7.js";import"./iframe-gu9nKSuU.js";import"./index-DgcLTxff.js";import"./spreadSx-CwcO6WA9.js";import"./react-EBci5e-X.js";import"./FullWidthAlert-DPDY4mXa.js";import"./Alert-BCxFFk19.js";import"./createTheme-BINNrTrD.js";import"./resolveComponentProps-C_h7LpqL.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-By6tpA4H.js";import"./createSvgIcon-aeHwAv7r.js";import"./DefaultPropsProvider-BBINbyFF.js";import"./Close-Dg0Yyhdl.js";import"./IconButton-C4fHQ2mP.js";import"./ButtonBase-BJnbOYI0.js";import"./useTimeout-CkReBcKO.js";import"./TransitionGroupContext-Bx3VJPm0.js";import"./useIsFocusVisible-CFzyuqS3.js";import"./useEventCallback-FcdrOq4M.js";import"./Paper-DL6O15NN.js";import"./Stack-BcSaEj59.js";import"./getThemeProps-_buxTbuI.js";import"./useTheme-CrZO8DL0.js";import"./Box-C3CCkmvB.js";import"./AlertTitle-BgljIgUy.js";import"./Typography-CPW1w4ki.js";import"./useTheme-D7aU4zJW.js";import"./Grow-Bw7JNtNh.js";import"./index-Bs9oirMy.js";import"./utils-FhFw91KO.js";import"./ClickAwayListener-CvMIu_kV.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip--cxr29Mn.js";import"./index-Cxy_adfL.js";import"./useControlled-D0Pe8713.js";import"./useId-BitcG2W_.js";import"./Popper-C7DDlbfw.js";import"./Button-otBf-fCg.js";import"./util-eLaQlmvv.js";import"./mockEntity-CKVQLg_F.js";import"./mockFileEntity-DNEUgd2F.js";import"./StringUtils-lE31obNl.js";import"./mock_file_handle-3wYKbysY.js";import"./mockProject-Cr8hRLoo.js";import"./mockTeam-WwkXi9e8.js";import"./SynapseConstants-Ba1heHX4.js";import"./uniqueId-aXBBIKHb.js";import"./toString-4TSAtCHz.js";import"./isObjectLike-CnZoMM3i.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-Bi-T8Hl2.js";import"./times-BoEMLL0K.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DlOEUMT-.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./useQuery-DQWZeiYF.js";import"./utils-8n4YkW-3.js";import"./Link-CaTJJdl0.js";import"./Collapse-Cv_pKtFc.js";import"./isNil-dfygdcyY.js";import"./_Uint8Array-BY3nRIcz.js";import"./_baseIsEqual-Bsx2OylX.js";import"./_getTag-DaN_q5c6.js";import"./tinycolor-Begke6kS.js";import"./Fade-CNMLBLPt.js";import"./Skeleton-CgkAeMKL.js";import"./inputBaseClasses-Czd2LOTF.js";import"./calculateFriendlyFileSize-DvGvzjK0.js";import"./CheckCircleTwoTone-gIIBURBC.js";import"./InfoTwoTone-D0xmy2qt.js";import"./mutation-BRa-ekOT.js";import"./dayjs.min-MYorRcO6.js";import"./chunk-AYJ5UCUI-hydSzuez.js";import"./cloneDeep-CeJYBU74.js";import"./_initCloneObject-BmsGmtIF.js";import"./isEqual-DW03Q8_-.js";import"./merge-Byo7_oei.js";import"./AccountLevelBadge-BQ5JzfJe.js";import"./Card-CGbpj7xi.js";import"./ConfirmationDialog-DKsPwUov.js";import"./DialogBase-HvamU2B6.js";import"./Close-D3K-TfhB.js";import"./createSvgIcon-CkgtuW0R.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-CGCpKIdF.js";import"./ownerWindow-HkKU3E4x.js";import"./HelpPopover-D25Mpr3H.js";import"./MarkdownPopover-DNVsh5w0.js";import"./LightTooltip-62AS7rvO.js";import"./MarkdownSynapse-CAMsGIQ_.js";import"./SkeletonButton-BJ8gNvUN.js";import"./SkeletonInlineBlock-Ba8buGB9.js";import"./SkeletonTable-CBmaqvB9.js";import"./SkeletonParagraph-DG99-NLx.js";import"./HelpOutlineTwoTone-kVx3xHfZ.js";import"./DialogTitle-wI-tOTZ1.js";import"./DialogContent-BxBnhDnO.js";import"./Dialog-D8h7d6Fa.js";import"./Modal-CYS4qXwo.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-BXwT-rTA.js";import"./useMutation-DTEVw7HO.js";import"./LoadingScreen-DMsIYWbO.js";import"./LinearProgress-DAH29SpC.js";import"./ToastMessage-4g651IXb.js";import"./CSSTransition-BuIomPHg.js";const Vt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const bt=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,bt as __namedExportsOrder,Vt as default};
