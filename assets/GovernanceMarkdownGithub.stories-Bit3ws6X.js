import{u as o}from"./VerificationSubmission-BDh1zA9f.js";import{g as u,bd as d,be as l,B as f,bf as S,M as O}from"./useFiles-Be6tFy5F.js";import"./StringUtils-C95LMFI-.js";import{h as i,H as n}from"./index-Bh5vwBzt.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-DN2YyHDy.js";import"./SynapseConstants-BEZwovbV.js";import"./OrientationBanner-CtoXztzg.js";import"./index-0unR9H4H.js";import"./index-BljgPFTo.js";import"./iframe-CyBU6Q7V.js";import"./spreadSx-CwcO6WA9.js";import"./react-CVn33jqE.js";import"./FullWidthAlert-BZgBYNyl.js";import"./Alert-DJPQ4QIM.js";import"./createTheme-CIrJTDOf.js";import"./DefaultPropsProvider-DbEdqidE.js";import"./useSlot-DVd3PzDD.js";import"./useForkRef-BPo1GnhT.js";import"./createSimplePaletteValueFilter-BwVtGIPT.js";import"./createSvgIcon-0kRQ-kbK.js";import"./Close-DaZgjw_6.js";import"./IconButton-BXR2LYXb.js";import"./useTimeout-Bpy0NDCv.js";import"./ButtonBase-Cd_tqh-g.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-C5zAkQVG.js";import"./Paper-Cyv4dyLK.js";import"./useTheme-vHPl7Z18.js";import"./useTheme-C-hh5JcE.js";import"./Stack-Bsu_lXkI.js";import"./useThemeProps-CpST4J4d.js";import"./getThemeProps-gduYeenR.js";import"./extendSxProp-BUchhns_.js";import"./Box-B7np8nCS.js";import"./AlertTitle-DS7VlmPb.js";import"./Typography-CTlCFPS1.js";import"./index-DmDe8b2A.js";import"./ClickAwayListener-oKANEk0z.js";import"./getReactElementRef-BIbEb3Zr.js";import"./index-CLXOAuby.js";import"./index-CTWVO3q3.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BnuhUscm.js";import"./Tooltip-Cr3zvRH6.js";import"./index-D921uLT9.js";import"./useControlled-B5_NtMt5.js";import"./Popper-CrTqWDfV.js";import"./Button-BZXN9KrI.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-B-0wee67.js";import"./QueryClientProvider-DNTbqL71.js";import"./Link-BkUBKMhX.js";import"./Collapse-BYc6Wv8_.js";import"./_baseUniq-BCgHUW7P.js";import"./_Uint8Array-6RqZOC7P.js";import"./isArray-DqQflkTV.js";import"./_getTag-OZNTQHEg.js";import"./isEqual-BKU_n09T.js";import"./noop-DX6rZLP_.js";import"./merge-Dru2-Hnn.js";import"./_initCloneObject-Bom0r3NW.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-Cj0EUrvW.js";import"./inputBaseClasses-DCwWV1lh.js";import"./calculateFriendlyFileSize-CzujXqM3.js";import"./CheckCircleTwoTone-FMrAv7pD.js";import"./InfoTwoTone-MGxkGzni.js";import"./useMutation-BdNABu1Z.js";import"./dayjs.min-CqZWhcNT.js";import"./chunk-AYJ5UCUI-D_3CYfsv.js";import"./cloneDeep-XPWNqf30.js";import"./Skeleton-Dw7_uGLe.js";import"./SkeletonButton-BWbqsDJD.js";import"./SkeletonInlineBlock-BB_bM5HG.js";import"./SkeletonTable-GWXX48W3.js";import"./times-CjQq_ry3.js";import"./toInteger-Cf82bYKg.js";import"./isSymbol-GyhxyoV-.js";import"./SkeletonParagraph-e4SRr6W8.js";import"./MarkdownSynapse--cLXO_N-.js";import"./Container-B0R3AQU-.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Qr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Xr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Xr as __namedExportsOrder,Qr as default};
