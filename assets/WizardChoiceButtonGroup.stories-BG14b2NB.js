import{j as i}from"./jsx-runtime-D_zvdyIk.js";import{W as m,a as t}from"./WizardChoiceButton-b5HnQrDB.js";import{I as l}from"./LayersTwoTone-BdYBqBmK.js";import{F as d}from"./IconSvg-DWFq-Ys4.js";import"./Box-Bc5MnF01.js";import"./createTheme-Cm05LnB0.js";import"./index-BXzTDALf.js";import"./iframe-DqtMJ7kH.js";import"./useTheme-Bw_VFAy_.js";import"./extendSxProp-NTFwLVkN.js";import"./spreadSx-CwcO6WA9.js";import"./Typography-ButTJgkW.js";import"./index-C6TBygr3.js";import"./DefaultPropsProvider-CQjsmjzx.js";import"./createSimplePaletteValueFilter-VPPSjR6x.js";import"./createSvgIcon--QUYyvLe.js";import"./useTheme-BEoXmG8b.js";import"./Tooltip-D_YYABAH.js";import"./index-CNgLHgad.js";import"./useSlot-D-kym-2K.js";import"./useForkRef-DxVghhL0.js";import"./useTimeout-CAjSMdh0.js";import"./useControlled-BVj0-e3Z.js";import"./getReactElementRef-12JOJnF4.js";import"./index-Bd4oQ-C2.js";import"./index-DseqZZS0.js";import"./Grow-DDeYcOcx.js";import"./Popper-Bf618VVA.js";import"./ownerDocument-DW-IO8s5.js";import"./isFocusVisible-B8k4qzLc.js";import"./ContentCopyTwoTone-CSKeQhSt.js";import"./HelpOutlineTwoTone-BAEXosc7.js";import"./ErrorOutlined-BsKXe2dD.js";import"./GetAppTwoTone-uJLieSaw.js";import"./InfoOutlined-DuDaCId4.js";import"./PhoneTwoTone-DforeRw5.js";import"./DeleteTwoTone-CJum2LSY.js";import"./CheckCircleTwoTone-BN5GUe2y.js";const Y={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},e={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),i.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:i.jsx(l,{fontSize:"large"})}),i.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:i.jsx(d,{fontSize:"large"})})]})}};var r,s,n;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const Z=["Basic","WithIcons"];export{e as Basic,o as WithIcons,Z as __namedExportsOrder,Y as default};
