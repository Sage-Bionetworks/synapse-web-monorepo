import{j as l}from"./jsx-runtime-CsNpV52b.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-BluEfl3C.js";import{aH as S,M as a}from"./useFiles-D_KC07Yn.js";import"./OrientationBanner-D4K1PXbS.js";import"./index-mFk7i4GH.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-CTOevsR-.js";import{S as E}from"./SynapseFormSubmissionGrid-BvMCEuQF.js";import"./mockSchema-3lxjVF9D.js";import"./mockFileEntity-CHjiDt6Z.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-Bjh-3P1q.js";import"./mockTeam-D1Opiixd.js";import"./SynapseConstants-fzgxL-Wk.js";import"./uniqueId-BHP-G4Q6.js";import"./toString-C_9Aa7ya.js";import"./isObjectLike-ysIE1Q2w.js";import"./iframe-DEOEZpa7.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BD4zGCJ0.js";import"./times-DBoDqrm8.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DXGJpQee.js";import"./asyncJobHandlers-BticYne7.js";import"./BasicMockedCrudService-Duf0MKiz.js";import"./cloneDeep-Ds3WadWA.js";import"./_Uint8Array-gbqBABgH.js";import"./_initCloneObject-BEqGcqh-.js";import"./_getTag-d-X6q6ru.js";import"./isEqual-Bj0Ibk1q.js";import"./_baseIsEqual-Bwmz0e7V.js";import"./mockAnnotationColumns-A3PcDMED.js";import"./tableQueryHandlers-bG63r4lY.js";import"./omit-D43UcSvr.js";import"./_baseGet-BgWIlQLk.js";import"./isNil-BBBzVpoC.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-oP5qKHGM.js";import"./_baseFlatten-CWlUJfpj.js";import"./pick-DMthaOaj.js";import"./_baseSet-DDjVQxEf.js";import"./hasIn-DiIt4exw.js";import"./accessRequirementAclHandlers-Cw5fyd6w.js";import"./mockAccessRequirementAcls-D9ASYwgA.js";import"./mockAccessRequirements-40OvxfGp.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-rQhaj0x4.js";import"./wikiHandlers-7L-LjfbD.js";import"./mockWikiPageKey-D5VdgwVU.js";import"./teamHandlers-BSrLj7TI.js";import"./dataAccessRequestHandlers-DD3m32cO.js";import"./MockResearchProject-BLzTdirk.js";import"./mock_discussion-DN8rrn54.js";import"./fakerUtils-CmvKSEIA.js";import"./index-CZUp8uNp.js";import"./mockTableEntity-CKl7QVdL.js";import"./mockFileEntityACLVariants-BmdHC9JH.js";import"./entityHandlers-enlgHYmA.js";import"./mockEntity-A43lSoos.js";import"./mockEvaluationQueue-Co4UfDQU.js";import"./featureFlagHandlers-B4It5noK.js";import"./fileHandlers-D1-NjLgd.js";import"./personalAccessTokenHandlers-D1lTUrfN.js";import"./researchProjectHandlers-CG4PpiW_.js";import"./resetTwoFactorAuthHandlers-Nj6nSUkd.js";import"./userProfileHandlers-BzsV9jC2.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-Dt8W7umX.js";import"./FullWidthAlert-DBUNX5Z0.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-BxOYpbq5.js";import"./createTheme-C3barXkp.js";import"./resolveComponentProps-fT-xUJV6.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-5vJwFTIC.js";import"./createSvgIcon-DxSwOgMO.js";import"./DefaultPropsProvider-Bb4a2h8s.js";import"./Close-DHLyXVKW.js";import"./IconButton-CQuDWsyU.js";import"./ButtonBase-CRJlWVnj.js";import"./useTimeout-D6spdY7I.js";import"./useIsFocusVisible-BD-HS5zK.js";import"./useEventCallback-PvtZRVx5.js";import"./Paper-BzD9Caoq.js";import"./Stack-CFcOoEe3.js";import"./getThemeProps-Dtctgm80.js";import"./useTheme-N8XaFENF.js";import"./Box-D1r6O6zj.js";import"./AlertTitle-BjYPAFw4.js";import"./Typography-BaVgdRVq.js";import"./useTheme-0AVLLlD6.js";import"./Grow-BBkh1Ns9.js";import"./index-C3e2HYL3.js";import"./utils-Bd5lfNuN.js";import"./ClickAwayListener-DCBWfrxW.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-JlwuiT4k.js";import"./index-Dyubesn9.js";import"./useControlled-DdQGOSQo.js";import"./useId-B7w4jRC1.js";import"./Popper-Dj3tlAHp.js";import"./Button-D1O-XNc3.js";import"./useQuery-Tl1FAVUS.js";import"./utils-Dft4bglm.js";import"./Link-DVKciDBj.js";import"./Collapse-Dxre2Wpg.js";import"./tinycolor-Begke6kS.js";import"./Fade-Co4SyzRo.js";import"./Skeleton-BZAwj2-9.js";import"./inputBaseClasses-CQNINzSQ.js";import"./calculateFriendlyFileSize-Dk0vHyM_.js";import"./CheckCircleTwoTone-CNETuQEN.js";import"./InfoTwoTone-Cv4uWze4.js";import"./mutation-CVFNbaq8.js";import"./dayjs.min-C2vS6YTT.js";import"./chunk-AYJ5UCUI-c6JhkQ8h.js";import"./index-BuZNpAEX.js";import"./react-BAmm9IRN.js";import"./util-x2Av4eUw.js";import"./WideButton-CbQwlXKT.js";import"./DeleteTwoTone-Dlv1PvNv.js";import"./createSvgIcon-BOgYtr4i.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-Wa2aQmce.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-YQ_MsMwT.js";import"./DialogBase-Dn0wv_pa.js";import"./Close-S6b2a8zc.js";import"./HelpPopover-C861hDv8.js";import"./MarkdownPopover-KdVCxlvC.js";import"./LightTooltip-Be90ijMQ.js";import"./MarkdownSynapse-BmbYr6l5.js";import"./SkeletonButton-CfRPp5en.js";import"./SkeletonInlineBlock-DPJPf2BH.js";import"./SkeletonTable-DMGCE8A1.js";import"./SkeletonParagraph-DqecZcP5.js";import"./HelpOutlineTwoTone-BxiQk_qX.js";import"./DialogTitle-BuHAQWHr.js";import"./DialogContent-B1wWpEGD.js";import"./Dialog-LKP3I17u.js";import"./Modal-DObypUAA.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-sGl-J73g.js";import"./WarningDialog-DeKt-j34.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
