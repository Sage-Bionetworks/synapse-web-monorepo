import{g as f}from"./userProfileHandlers-DKCow-0Y.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-BY7RR_24.js";import{A}from"./AccountLevelBadges-YPFden28.js";import"./VerificationSubmission-CDh9xETu.js";import"./index-CwGd-opX.js";import"./iframe-1q_ZXoNJ.js";import"./mockEntity-DcOalJ8a.js";import"./mockFileEntity-B--bhezy.js";import"./StringUtils-_BY2npJD.js";import"./mock_file_handle-7frMWCuU.js";import"./mockProject-BVkcnSZT.js";import"./mockTeam-jEDUJTG-.js";import"./SynapseConstants-5wFUozBC.js";import"./OrientationBanner-Bi-PGINz.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-CtXvjQZG.js";import"./index-yvy-db2D.js";import"./spreadSx-CwcO6WA9.js";import"./react-Z8wD_rYz.js";import"./FullWidthAlert-CoE9vDR_.js";import"./Alert-DCknF0A6.js";import"./createTheme-CiUfzjCM.js";import"./DefaultPropsProvider-DcOZysit.js";import"./useSlot-Z2GA-iSS.js";import"./useForkRef-beRYI9rx.js";import"./createSimplePaletteValueFilter-C1zgnp1T.js";import"./createSvgIcon-CL-Zh4hn.js";import"./Close-seSZeBuJ.js";import"./IconButton-dJCsQ0LH.js";import"./useTimeout-DNwjqBRA.js";import"./ButtonBase-Gt11VN7t.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-B4CUiK17.js";import"./Paper-xpThwoIG.js";import"./useTheme-CVLuf0XX.js";import"./useTheme-BJkLbB1K.js";import"./Stack-xD0mjSDc.js";import"./extendSxProp-BVtlM31J.js";import"./getThemeProps-BueUQJN-.js";import"./Box-VPHC_qet.js";import"./AlertTitle-BToGfpRY.js";import"./Typography-C40mCnbz.js";import"./index-Dfz0lUif.js";import"./ClickAwayListener-D5QI5yc9.js";import"./getReactElementRef-ByzYBIwj.js";import"./index-xIq1_iwD.js";import"./index-C5pH_wbS.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-A-RAayFp.js";import"./Tooltip-DCFIcbMu.js";import"./index-Q8rg9TUC.js";import"./useControlled-CPCJ5tB0.js";import"./Popper-DIjI2LY0.js";import"./Button-r7xQACsx.js";import"./uniqueId-BvyZjsML.js";import"./toString-Db0AdUqz.js";import"./isArray-CGnJ5Q6W.js";import"./isSymbol-D80MTqA0.js";import"./times-CGNryYZ_.js";import"./_Uint8Array-c111EMGA.js";import"./identity-DKeuBCMA.js";import"./toInteger-Mj7CpQY8.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-X6st-VlV.js";import"./QueryClientProvider-DdXPuLGz.js";import"./Link-CWqmhl9r.js";import"./Collapse-8g1xf4pi.js";import"./_baseUniq-CsyBfxx_.js";import"./_getTag-CvnuNdI4.js";import"./isEqual-CoOAKsPN.js";import"./merge-BIptyiay.js";import"./_initCloneObject-BRxCbDFA.js";import"./tinycolor-Begke6kS.js";import"./Fade-JTkPoVCR.js";import"./inputBaseClasses-CHfnDXYO.js";import"./calculateFriendlyFileSize-CbAXs_BD.js";import"./CheckCircleTwoTone-BmvHMB2T.js";import"./InfoTwoTone-Cq9CFdau.js";import"./useMutation-DGiPDpom.js";import"./dayjs.min-B9RRCe8t.js";import"./chunk-AYJ5UCUI-CnetVj3K.js";import"./cloneDeep-BzGc9IrP.js";import"./Skeleton-JmOEAHCD.js";import"./AccountLevelBadge-Bg4NQBVX.js";import"./Card-1ffWRnB-.js";import"./ConfirmationDialog-C4drNOgD.js";import"./DialogBase-OKn2NN6w.js";import"./Close-Dv1_X6zN.js";import"./HelpPopover-DhBIfc1h.js";import"./MarkdownPopover-Dp1RsSVJ.js";import"./LightTooltip-C7jzOyw4.js";import"./MarkdownSynapse-2CwEb_nI.js";import"./SkeletonButton-1WQ8rnpx.js";import"./SkeletonInlineBlock-D2oQkChG.js";import"./SkeletonTable-Bxf7CoXV.js";import"./SkeletonParagraph-CjBcZ6DC.js";import"./HelpOutlineTwoTone-CK6hwF7i.js";import"./DialogTitle-BW8wWMNQ.js";import"./DialogContent-Dcj-wJD1.js";import"./Dialog-Ciby3Qxl.js";import"./Modal-Cyo3ugWP.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-Dg9gjJPA.js";import"./LoadingScreen-Y24V_y_i.js";import"./LinearProgress-KqsmKarF.js";import"./ToastMessage-BbC5lmUq.js";import"./CSSTransition-9uDwY7_0.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
