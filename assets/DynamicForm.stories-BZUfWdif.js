import{D as i}from"./DynamicForm-a9jgLHu5.js";import{f as p}from"./index-CVAUwOAi.js";import"./jsx-runtime-DoxjgJx5.js";import"./index-Cu9bd8lq.js";import"./useQuery-ChYzlhEH.js";import"./useMutation-DAMF4D7y.js";import"./MuiForm-DX4D7yCL.js";import"./isPlainObject-BDeK4qKc.js";import"./_getPrototype-DSx75BAr.js";import"./index.modern-BSaf6tm9.js";import"./index-D5OYWgDT.js";import"./styled-uoyYAB-L.js";import"./createTheme-CFwAOJQC.js";import"./index-GEGPABih.js";import"./toNumber-DDV9Xfgs.js";import"./createSvgIcon-dpHOCPVS.js";import"./createSvgIcon--fcRVpp9.js";import"./useForkRef-Bm_QQ74L.js";import"./createChainedFunction-BO_9K8Jh.js";import"./ownerWindow-BN2rbQ_G.js";import"./ownerDocument-DW-IO8s5.js";import"./isMuiElement-yx-QWTmT.js";import"./useId-g68bhPgm.js";import"./useControlled-JEQ1v-P8.js";import"./TransitionGroupContext-C4KIfRep.js";import"./useIsFocusVisible-Lp1_y5xp.js";import"./IconButton-rjGZl5Ij.js";import"./ButtonBase-CwAnxZmp.js";import"./Grid-B0LRLE4N.js";import"./utils-Cz4ynwjU.js";import"./index-BlO3JfGB.js";import"./Box-tOdEuW_y.js";import"./Paper-C3XTRciO.js";import"./TextField-Babz9VTU.js";import"./FormControl-D2SAlsbf.js";import"./useFormControl-vG3XTiAH.js";import"./inputBaseClasses-CcXvGEyU.js";import"./isHostComponent-DVu5iVWx.js";import"./InputLabel-HjQ8NhiL.js";import"./Select-DyEO4Yas.js";import"./Menu-DP0ZqW8h.js";import"./index-_EfqdWAV.js";import"./Modal-DrOgiQfJ.js";import"./Backdrop-C06rXI7r.js";import"./Fade-BXejYtqq.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./mergeSlotProps-bXd1ns9H.js";import"./Grow-Dczl5MLz.js";import"./MenuList-4qTTYqEf.js";import"./List-DCKeaqo7.js";import"./Typography-Ctk8_6Bo.js";import"./ListItem-CRhDLg2K.js";import"./listItemButtonClasses-Ibz6wQu0.js";import"./ListItemIcon-DiJIZfix.js";import"./MenuItem-EiDDnJqb.js";import"./dividerClasses-dx-1Wa7v.js";import"./listItemTextClasses-BX68iLeJ.js";import"./ListItemText-DVxJOeuN.js";import"./ContentCopy-C1M41ygd.js";import"./Button-BkvFhVsL.js";import"./Divider-YtPnVIiX.js";import"./FormControlLabel-GzIHkHAg.js";import"./Stack-BCUKu9qx.js";import"./Checkbox-x_qQJTR0.js";import"./FormGroup-BMVVpVNb.js";import"./RadioGroup-CGT24UIA.js";import"./Radio-DK5tOnGk.js";import"./Slider-BDJ67xFL.js";import"./ToastMessage-8mzk2-LM.js";import"./FullWidthAlert-CpohRhD9.js";import"./Alert-DevAguyB.js";import"./AlertTitle-F01TNSvq.js";import"./ClickAwayListener-Ba-YFlDA.js";import"./Tooltip-Cr4lETRB.js";import"./CSSTransition-TVgsN7sW.js";import"./hasClass-D5ZjVvBY.js";import"./uniqueId-CSw6ftlJ.js";import"./toString-CYyvKWOl.js";import"./isArray-ggc3KxVp.js";import"./isSymbol-BzKS7Qf1.js";import"./SkeletonButton-qvhv91j_.js";import"./Skeleton-D3uxr_0h.js";import"./colorManipulator-CSxSE2hh.js";import"./SkeletonInlineBlock-xinjJ1wr.js";import"./SkeletonTable-DAQ0wUWM.js";import"./times-BHmAKp8a.js";import"./_baseTimes-DoMoQz2v.js";import"./identity-DKeuBCMA.js";import"./toInteger-CYyrx-ZX.js";import"./isObject-C3e4t58V.js";import"./SkeletonParagraph-D8hc_zPd.js";import"./index-D0JCpg9J.js";const Lo={title:"UI/DynamicForm",component:i},o={args:{schemaUrl:"https://raw.githubusercontent.com/nf-osi/nf-research-tools-schema/main/NF-Tools-Schemas/SubmitObservationSchema.json",uiSchemaUrl:"https://raw.githubusercontent.com/nf-osi/nf-research-tools-schema/main/NF-Tools-Schemas/SubmitObservationUiSchema.json",postUrl:"https://submit-form.com/KwZ46H4T",onCancel:p()}};var t,r,m;o.parameters={...o.parameters,docs:{...(t=o.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    schemaUrl: 'https://raw.githubusercontent.com/nf-osi/nf-research-tools-schema/main/NF-Tools-Schemas/SubmitObservationSchema.json',
    uiSchemaUrl: 'https://raw.githubusercontent.com/nf-osi/nf-research-tools-schema/main/NF-Tools-Schemas/SubmitObservationUiSchema.json',
    postUrl: 'https://submit-form.com/KwZ46H4T',
    // Set mutateFormDataBeforePost if service expects the form data wrapped in some other data.  For example:
    // mutateFormDataBeforePost: formData => {
    //   return {
    //     event_type: 'submission',
    //     client_payload: {
    //       formData: formData,
    //     },
    //   }
    // },
    onCancel: fn()
  }
}`,...(m=(r=o.parameters)==null?void 0:r.docs)==null?void 0:m.source}}};const Mo=["NFDataSubmissionForm"];export{o as NFDataSubmissionForm,Mo as __namedExportsOrder,Lo as default};
