import{g as f}from"./userProfileHandlers-C-vQ_7sH.js";import{a as _}from"./mock_user_profile-CijvmO8r.js";import{M as C}from"./useFiles-CbMpvGhW.js";import{A}from"./AccountLevelBadges-vOXEtXmf.js";import"./VerificationSubmission-dxY1kvC5.js";import"./index-C6DPBJMm.js";import"./OrientationBanner-BCOcpvAV.js";import"./jsx-runtime-BPwvgLas.js";import"./index-CBDLWlOB.js";import"./iframe-BOhnkrTR.js";import"./index-AJ8qoPp1.js";import"./spreadSx-CwcO6WA9.js";import"./react-iQ_QJFeH.js";import"./FullWidthAlert-C4NXiFAr.js";import"./Alert-xrq_SMEg.js";import"./createTheme-CqhKahyM.js";import"./resolveComponentProps-CbacDgM7.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CYG44Oi1.js";import"./createSvgIcon-CngalfwQ.js";import"./DefaultPropsProvider-CK3fJzAT.js";import"./Close-DIxv3BmU.js";import"./IconButton-D355AQnf.js";import"./ButtonBase-DkvFo0rp.js";import"./useTimeout-D29s38n5.js";import"./TransitionGroupContext-vIwZ2ZdW.js";import"./useIsFocusVisible-CRwyDx7g.js";import"./useEventCallback-BEeQPLsK.js";import"./Paper-keIiwirC.js";import"./Stack-BgNqp8gK.js";import"./getThemeProps-BbDbNfTq.js";import"./useTheme-CHrnUnqX.js";import"./Box-DZ1qA8WV.js";import"./AlertTitle-CEogbmjt.js";import"./Typography-CEe9erp9.js";import"./useTheme-P165y_LK.js";import"./Grow-CJVUX4yR.js";import"./index-BwhZA35d.js";import"./utils-BPpJDtRg.js";import"./ClickAwayListener-P6OmxxdK.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-_plCLI4q.js";import"./index-B9wPZdQL.js";import"./useControlled-BK1AIYs5.js";import"./useId-CLSRERuv.js";import"./Popper-BvhU2AWB.js";import"./Button-Cn6JHKgz.js";import"./util-CiZGs5gx.js";import"./mockEntity-BAmn3goQ.js";import"./mockFileEntity-BfDVYvSm.js";import"./StringUtils-Df7AZImX.js";import"./mock_file_handle-3wYKbysY.js";import"./mockProject-CZLEXUlF.js";import"./mockTeam-kRFo7KR3.js";import"./SynapseConstants-C-MequxA.js";import"./uniqueId-BPJn473d.js";import"./toString-B6Yu26DP.js";import"./isObjectLike-qFFT-3MK.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BwXYObLQ.js";import"./times-CJqkd24n.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DmMobODX.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./useQuery-DZi11ge7.js";import"./utils-BqDa975t.js";import"./Link-Ccuxh7N2.js";import"./Collapse-xlH7IseN.js";import"./isNil-Bv7-3_hG.js";import"./_Uint8Array-BDCBH0-0.js";import"./_baseIsEqual-D3_Tdhx8.js";import"./_getTag-KyP6iQiD.js";import"./tinycolor-Begke6kS.js";import"./Fade-CY98KLjb.js";import"./Skeleton-iR_TlL_5.js";import"./inputBaseClasses-DlYO5ZlR.js";import"./calculateFriendlyFileSize-Chfxh2O6.js";import"./CheckCircleTwoTone-Bw2Wk5oI.js";import"./InfoTwoTone-Afibcha7.js";import"./mutation-BBLhG9HE.js";import"./dayjs.min-DYOI9g68.js";import"./chunk-AYJ5UCUI-D4D6uZ8Q.js";import"./cloneDeep-BLP2jVxP.js";import"./_initCloneObject-eaMKh-yS.js";import"./isEqual-BvUIKxyq.js";import"./merge-BbxdCm3T.js";import"./AccountLevelBadge-CDOyLoOX.js";import"./Card-FVFZHeoL.js";import"./ConfirmationDialog-DRbVfIRE.js";import"./DialogBase-C7B9JrFg.js";import"./Close-CI4jZYUU.js";import"./createSvgIcon-DEPGggoL.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-m_R2mW_W.js";import"./ownerWindow-HkKU3E4x.js";import"./HelpPopover-CNYffTRv.js";import"./MarkdownPopover-Cizeoctj.js";import"./LightTooltip-CoggAz3C.js";import"./MarkdownSynapse-MHLPs3tU.js";import"./SkeletonButton-CfDxG5C1.js";import"./SkeletonInlineBlock-_DewcDuh.js";import"./SkeletonTable-CCbMvuDe.js";import"./SkeletonParagraph-BjwZeaHW.js";import"./HelpOutlineTwoTone-63OLYDHD.js";import"./DialogTitle-CQT1Kt4V.js";import"./DialogContent--OxUYu_Y.js";import"./Dialog-BNAQRZ1F.js";import"./Modal-BN5JbFC4.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-Bt50zR9z.js";import"./useMutation-Ba2zbtfY.js";import"./LoadingScreen-Blf8LSXT.js";import"./LinearProgress-DlDdSH6p.js";import"./ToastMessage-Dt1DJatT.js";import"./CSSTransition-DK6MKwuj.js";const Vt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const bt=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,bt as __namedExportsOrder,Vt as default};
