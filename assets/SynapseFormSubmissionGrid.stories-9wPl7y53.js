import{j as l}from"./jsx-runtime-CJcMkd2a.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-BI5WaB2N.js";import{g as T}from"./handlers-Bq7SXeiU.js";import{aF as S,M as a}from"./useFiles-EY5yUS1a.js";import"./OrientationBanner-D5pstQt3.js";import"./index-D8IQqatP.js";import"./StringUtils-DN6u4g4A.js";import{l as _}from"./index-h0tgZjO9.js";import{S as E}from"./SynapseFormSubmissionGrid-CO56qhun.js";import"./mockSchema-nS7RGC95.js";import"./mockFileEntity-BmJnS1uY.js";import"./mock_file_handle-CFTRkxcS.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-BcGlb8Eb.js";import"./mockTeam-BOg2jNJO.js";import"./SynapseConstants-C9G9oc3F.js";import"./uniqueId-B775uaMO.js";import"./toString-ldV5xIUu.js";import"./isObjectLike-CeKfXdYG.js";import"./iframe-B3klFfb3.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-DGkBwnAD.js";import"./times-D9cDbckz.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-CcmwZD6r.js";import"./asyncJobHandlers-COGr7kIE.js";import"./BasicMockedCrudService-X43TAA_0.js";import"./cloneDeep-CZ2oFFmE.js";import"./_Uint8Array-G2XBJ7Fr.js";import"./_initCloneObject-Dgntrhkh.js";import"./_getTag-C38afX1X.js";import"./isEqual-BaplPoEC.js";import"./_baseIsEqual-Dkugu-u4.js";import"./mockAnnotationColumns-Cz722vVA.js";import"./tableQueryHandlers-Dvc2vcNr.js";import"./omit-CUkdP0J1.js";import"./_baseGet-DkG8PXqK.js";import"./isNil-BbTWaJUC.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-D1YZpMkh.js";import"./_baseFlatten-B4XxT1qh.js";import"./pick-BuDshyls.js";import"./_baseSet-DyZOyoIa.js";import"./hasIn-o8WqFIoO.js";import"./accessRequirementAclHandlers-vuXjDFkc.js";import"./mockAccessRequirementAcls-BxwxlSDj.js";import"./mockAccessRequirements-B_QB-idz.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CgjxDh2Q.js";import"./accessRequirementHandlers-BCsv7EfE.js";import"./wikiHandlers-DdaDQoTT.js";import"./mockWikiPageKey-Cft1Q_r5.js";import"./teamHandlers-DDZf1INL.js";import"./dataAccessRequestHandlers-B5brZX09.js";import"./MockResearchProject-Cjf9C4pz.js";import"./mock_discussion-CbdLPkNc.js";import"./fakerUtils-kYjamRoD.js";import"./index-D6GcWBB9.js";import"./mockTableEntity-CchhhOXN.js";import"./mockFileEntityACLVariants-Dtw8E29w.js";import"./entityHandlers-CpOyAohs.js";import"./mockEntity-D5SbSHat.js";import"./mockEvaluationQueue-0pVReO73.js";import"./featureFlagHandlers-JnBNjQIR.js";import"./fileHandlers-BOZIEhTk.js";import"./personalAccessTokenHandlers-Lm4Zkq__.js";import"./researchProjectHandlers-OD5rbo4f.js";import"./resetTwoFactorAuthHandlers-oAhpLvrX.js";import"./userProfileHandlers-CbsKMXSg.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-BuH8XwDI.js";import"./FullWidthAlert-D4yctO1D.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-HwfZasOY.js";import"./createTheme-BgkRoyWx.js";import"./resolveComponentProps-sTax8ldv.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-BtMPwt5U.js";import"./createSvgIcon-itcnBQV6.js";import"./DefaultPropsProvider-BdAH66gj.js";import"./Close-DHWtdwuS.js";import"./IconButton-DgeU6NWZ.js";import"./ButtonBase-BMm9ZI01.js";import"./useTimeout-CGDmoPwO.js";import"./useIsFocusVisible-CEgQdcXj.js";import"./useEventCallback-CeSGo_7v.js";import"./Paper-CFO5aWKw.js";import"./Stack-CAfo5E6f.js";import"./getThemeProps-_ttmqSlx.js";import"./useTheme-SfVjWsDY.js";import"./Box-DHTTRiCn.js";import"./AlertTitle-D4AVQS7x.js";import"./Typography-B8--A30q.js";import"./useTheme-Bub1kAfA.js";import"./Grow-wiKAnCjf.js";import"./index-zd_GrE0U.js";import"./utils-iLe1jc-J.js";import"./ClickAwayListener-DkoVjmkZ.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-BA0zzAb6.js";import"./index-CrmRNCUB.js";import"./useControlled-BWj-QM7C.js";import"./useId-BxUPaSO-.js";import"./Popper-TpTiHex5.js";import"./Button-DPUTJjYo.js";import"./useQuery-nEN4f5Ah.js";import"./utils-hetqLS4L.js";import"./Link-D3E1V0rp.js";import"./Collapse-B8HvoXuG.js";import"./tinycolor-Begke6kS.js";import"./Fade-B8FJIUU6.js";import"./Skeleton-DMCJU624.js";import"./inputBaseClasses-CYv3VH4x.js";import"./calculateFriendlyFileSize-DwzdMftx.js";import"./CheckCircleTwoTone-D2i9AJR2.js";import"./InfoTwoTone-Cpiy0ZTW.js";import"./useMutation-D7CwHq8T.js";import"./dayjs.min-DuG5OfHn.js";import"./chunk-AYJ5UCUI-D343kYd5.js";import"./index-BlfPjPPL.js";import"./react--3FdDKFe.js";import"./util-CWgC4i5O.js";import"./WideButton-CKczfq8l.js";import"./DeleteTwoTone-B3SCA_Ma.js";import"./createSvgIcon-C1h1xjRa.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-BjApehkI.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-BYQeQT7s.js";import"./DialogBase-CmC29YnF.js";import"./Close-GczbdiD9.js";import"./HelpPopover-BzGxejSk.js";import"./MarkdownPopover-CZrzRy-K.js";import"./LightTooltip-D3U2Ncti.js";import"./MarkdownSynapse-Eyi6NUs5.js";import"./SkeletonButton-Byf0sJyH.js";import"./SkeletonInlineBlock-ClDau2mo.js";import"./SkeletonTable-DGdP_zVW.js";import"./SkeletonParagraph-CCXrrD9o.js";import"./HelpOutlineTwoTone-DSNwZzn8.js";import"./DialogTitle-CBgadhaP.js";import"./DialogContent-m7Q0XtOc.js";import"./Dialog-DN6vIHrk.js";import"./Modal-DbuGVt0x.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-CE29QxMa.js";import"./WarningDialog-BaxTokjx.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
