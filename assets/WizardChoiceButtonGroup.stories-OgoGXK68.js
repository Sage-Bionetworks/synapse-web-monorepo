import{j as i}from"./jsx-runtime-CRy6x3sP.js";import{W as m,a as t}from"./WizardChoiceButton-CKNnQwco.js";import{I as l}from"./LayersTwoTone-4Zr97sMa.js";import{F as d}from"./IconSvg-x2jzHSh6.js";import"./index-CE2Ac4IV.js";import"./iframe-BdAv9r7b.js";import"./Box-etwwWi4O.js";import"./createTheme-Chr0Mdmk.js";import"./useTheme-XiVtr3LS.js";import"./Typography-cABtXJa_.js";import"./DefaultPropsProvider-_g6l0FJe.js";import"./createSvgIcon-CiHFREdi.js";import"./spreadSx-CwcO6WA9.js";import"./useTheme-DiZnRNE7.js";import"./Tooltip-CSpbyYgv.js";import"./index-D1UKly7L.js";import"./Grow-DjIVuFVR.js";import"./resolveComponentProps-CP6vIIt2.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-C6Z4Jw8F.js";import"./index-e1WoLxJ7.js";import"./utils-BbQ6ehAh.js";import"./TransitionGroupContext-CxN-DzGm.js";import"./useEventCallback-B2yVaD7P.js";import"./useTimeout-CBH_whYp.js";import"./useControlled-DkdtTMBP.js";import"./useId-BRVnYYpi.js";import"./useIsFocusVisible-dvxC9prE.js";import"./Popper-BLUMdNSt.js";import"./ownerDocument-DW-IO8s5.js";import"./ContentCopyTwoTone-Dm8l4M1S.js";import"./HelpOutlineTwoTone-Ck9BzNoC.js";import"./ErrorOutlined-jIgQb_yk.js";import"./GetAppTwoTone-DMwFW_ru.js";import"./InfoOutlined-BfEwnYTs.js";import"./DeleteTwoTone-B6oZ2EKM.js";import"./CheckCircleTwoTone-t841N9sD.js";const V={title:"UI/WizardChoiceButtonGroup",component:m,parameters:{design:{type:"figma",url:"https://www.figma.com/file/vLusb6uSfhx45OyFx5IHwy/(XDM)-Extensible-Data-Management-Comps?type=design&node-id=2955-29513&mode=design&t=Dhbz59ySu37vSy4e-4"}}},e={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"'Classic' Access Requirement",description:"These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option."}),i.jsx(t,{title:"DUO Access Requirement",description:"The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features."})]})}},o={args:{children:i.jsxs(i.Fragment,{children:[i.jsx(t,{title:"File",description:"Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.",icon:i.jsx(l,{fontSize:"large"})}),i.jsx(t,{title:"Folder or Directory",description:'Select this option for "Folder or Directory".',icon:i.jsx(d,{fontSize:"large"})})]})}};var r,s,n;e.parameters={...e.parameters,docs:{...(r=e.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={"'Classic' Access Requirement"} description={'These access requirements use proprietary a proprietary model for describing access conditions. If you need to maintain compatibility with a legacy access requirement, or cannot use DUO, choose this option.'} />
        <WizardChoiceButton title={'DUO Access Requirement'} description={'The Data Use Ontology (DUO) is an open standard for describing access requirement conditions. Access Requirements managed under DUO support additional automation features.'} />
      </>
  }
}`,...(n=(s=e.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};var a,c,p;o.parameters={...o.parameters,docs:{...(a=o.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    children: <>
        <WizardChoiceButton title={'File'} description={'Some option with a file icon. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines. This is a long description that should wrap to multiple lines.'} icon={<InsertDriveFileTwoTone fontSize={'large'} />} />
        <WizardChoiceButton title={'Folder or Directory'} description={'Select this option for "Folder or Directory".'} icon={<FolderTwoTone fontSize={'large'} />} />
      </>
  }
}`,...(p=(c=o.parameters)==null?void 0:c.docs)==null?void 0:p.source}}};const Y=["Basic","WithIcons"];export{e as Basic,o as WithIcons,Y as __namedExportsOrder,V as default};
