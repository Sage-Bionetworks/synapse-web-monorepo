import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-CwxvEgQc.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-BzfOsjj_.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-D7AhyL2g.js";import"./SynapseConstants-vVsO59Ha.js";import"./OrientationBanner-B_J_bwDs.js";import"./index-B7gR80B6.js";import"./index-T3Ekci5F.js";import"./iframe-BRmCfrSH.js";import"./spreadSx-CwcO6WA9.js";import"./react-CnLrMEk_.js";import"./FullWidthAlert-eR_HT4PI.js";import"./Alert-Dj0vjMkf.js";import"./createTheme-BREx2ycU.js";import"./DefaultPropsProvider-CX5IAnvY.js";import"./useSlot-BzWgIWOe.js";import"./useForkRef-DDl9gleu.js";import"./createSimplePaletteValueFilter-FRuSWM5h.js";import"./createSvgIcon-CieythTx.js";import"./Close-Cqyflw8w.js";import"./IconButton-BwUndgtU.js";import"./useTimeout-DdbWpuJn.js";import"./ButtonBase-DwffoWQe.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-ClVna9-0.js";import"./Paper-BV_pZjF8.js";import"./useTheme-DMsHeVup.js";import"./useTheme-CX3kqFhT.js";import"./Stack-DyTHHcW6.js";import"./extendSxProp-DoET83MS.js";import"./getThemeProps-DYLxosxu.js";import"./Box-ChsFOQNH.js";import"./AlertTitle-DcEfJigg.js";import"./Typography-C1Pvtdxt.js";import"./index-BNpXIv6h.js";import"./ClickAwayListener-BhgKURRJ.js";import"./getReactElementRef-OtGns4Bk.js";import"./index-CNd3jG5r.js";import"./index-CawBriFs.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-C9ssHFFN.js";import"./Tooltip-BBwryouL.js";import"./index-D171HpF6.js";import"./useControlled-CFSu4r3X.js";import"./Popper-ny7uQlkX.js";import"./Button-wUlNA4eh.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-CTXt0L_P.js";import"./QueryClientProvider-CUniIWpF.js";import"./Link-Dry2tAGw.js";import"./Collapse-RvI5LdCX.js";import"./_baseUniq-M12b02au.js";import"./_Uint8Array-C48UOvul.js";import"./isArray-CbnDUNxj.js";import"./_getTag-Bn7Wript.js";import"./isEqual-C5IvVB7F.js";import"./merge-CQHxP4eV.js";import"./_initCloneObject-B3OWGSQP.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-CY_ivPaJ.js";import"./inputBaseClasses-NlXmQuAw.js";import"./calculateFriendlyFileSize-DBYvYRTA.js";import"./CheckCircleTwoTone-Dekm6AEb.js";import"./InfoTwoTone-DTPjvGeQ.js";import"./useMutation-B99jPK5W.js";import"./dayjs.min-DqgjXCuP.js";import"./chunk-AYJ5UCUI-BLo-f8sS.js";import"./cloneDeep-4H6nKNc_.js";import"./Skeleton-DxmjjPyf.js";import"./SkeletonButton-yHtX54NI.js";import"./SkeletonInlineBlock-CekNC129.js";import"./SkeletonTable-eMFwXknU.js";import"./times-X_FSlMgD.js";import"./toInteger-Cl6lFJ6-.js";import"./isSymbol-7e0TIp2a.js";import"./SkeletonParagraph-DBfeQYbL.js";import"./MarkdownSynapse-Dq_VYrmZ.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
