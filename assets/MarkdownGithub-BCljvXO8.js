import{j as u}from"./jsx-runtime-MnZ2317C.js";import{l as _,b6 as v,b7 as C}from"./useFiles-DnUO1Api.js";import"./OrientationBanner-D2fotMsN.js";import{r as M}from"./index-DBUZyXtq.js";import"./VerificationSubmission-CMrrYimb.js";import"./StringUtils-Bdqa-HwM.js";import{u as N}from"./useQuery-CiIdiLfh.js";import"./SkeletonButton-CdWOJFeT.js";import"./SkeletonInlineBlock-CqcCTFdJ.js";import"./SkeletonTable-BibtQGAJ.js";import{S as T}from"./SkeletonParagraph-DaZ3mDhP.js";import{M as $}from"./MarkdownSynapse-Dcea1MX5.js";import{c as W,s as P,u as j}from"./DefaultPropsProvider-FBbxzESS.js";import{c as S,b as f,j as q,a as L}from"./createTheme-C-idqo33.js";import{s as R,u as V}from"./Stack-FHc61ter.js";import{B as O}from"./Box-BH8rgvLb.js";const I=q(),U=R("div",{name:"MuiContainer",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:a}=e;return[t.root,t[`maxWidth${f(String(a.maxWidth))}`],a.fixed&&t.fixed,a.disableGutters&&t.disableGutters]}}),E=e=>V({props:e,name:"MuiContainer",defaultTheme:I}),D=(e,t)=>{const a=d=>L(t,d),{classes:o,fixed:s,disableGutters:i,maxWidth:r}=e,n={root:["root",r&&`maxWidth${f(String(r))}`,s&&"fixed",i&&"disableGutters"]};return W(n,a,o)};function H(e={}){const{createStyledComponent:t=U,useThemeProps:a=E,componentName:o="MuiContainer"}=e,s=t(({theme:r,ownerState:n})=>({width:"100%",marginLeft:"auto",boxSizing:"border-box",marginRight:"auto",...!n.disableGutters&&{paddingLeft:r.spacing(2),paddingRight:r.spacing(2),[r.breakpoints.up("sm")]:{paddingLeft:r.spacing(3),paddingRight:r.spacing(3)}}}),({theme:r,ownerState:n})=>n.fixed&&Object.keys(r.breakpoints.values).reduce((d,l)=>{const c=l,p=r.breakpoints.values[c];return p!==0&&(d[r.breakpoints.up(c)]={maxWidth:`${p}${r.breakpoints.unit}`}),d},{}),({theme:r,ownerState:n})=>({...n.maxWidth==="xs"&&{[r.breakpoints.up("xs")]:{maxWidth:Math.max(r.breakpoints.values.xs,444)}},...n.maxWidth&&n.maxWidth!=="xs"&&{[r.breakpoints.up(n.maxWidth)]:{maxWidth:`${r.breakpoints.values[n.maxWidth]}${r.breakpoints.unit}`}}}));return M.forwardRef(function(n,d){const l=a(n),{className:c,component:p="div",disableGutters:b=!1,fixed:y=!1,maxWidth:k="lg",classes:K,...w}=l,g={...l,component:p,disableGutters:b,fixed:y,maxWidth:k},G=D(g,o);return u.jsx(s,{as:p,ownerState:g,className:S(G.root,c),ref:d,...w})})}const B=H({createStyledComponent:P("div",{name:"MuiContainer",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:a}=e;return[t.root,t[`maxWidth${f(String(a.maxWidth))}`],a.fixed&&t.fixed,a.disableGutters&&t.disableGutters]}}),useThemeProps:e=>j({props:e,name:"MuiContainer"})}),F="https://api.github.com/repos";function z(e,t,a){const{keyFactory:o}=_(),s=async()=>{const i=await fetch(`${F}/${e}/${t}/tags`);if(!i.ok)throw new Error(`Error fetching tags: ${i.statusText}`);const r=await i.json();if(r.length===0)throw new Error("No tags found.");return r[0].name};return N({...a,queryKey:o.getGithubLatestTagKey(e,t),queryFn:s})}function h(e){const{data:t}=v(),a=t==null?void 0:t.latestTermsOfServiceVersion;return u.jsx(m,{...e,tagName:a})}function x(e){const{repoOwner:t,repoName:a}=e,{data:o}=z(t,a);return u.jsx(m,{...e,tagName:o})}function m({repoOwner:e,repoName:t,filePath:a,tagName:o}){const{data:s}=C(`https://cdn.jsdelivr.net/gh/${e}/${t}@${o}/${a}`,{enabled:!!o}),i=u.jsx(O,{sx:{width:"100%"},children:u.jsx(T,{rowHeight:"30px",numRows:70})});return u.jsx(B,{sx:{"> .markdown":{px:"10px"}},children:s?u.jsx($,{markdown:s}):i})}try{h.displayName="GovernanceMarkdownGithub",h.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}}}}}catch{}try{x.displayName="MarkdownGithubLatestTag",x.__docgenInfo={description:"Loads the latest tagged version of the (presumably MD) file from GitHub",displayName:"MarkdownGithubLatestTag",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}}}}}catch{}try{m.displayName="MarkdownGithub",m.__docgenInfo={description:"Load MD file content from GitHub (using the given tag)",displayName:"MarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},tagName:{defaultValue:null,description:"",name:"tagName",required:!1,type:{name:"string"}}}}}catch{}export{h as G,x as M};
