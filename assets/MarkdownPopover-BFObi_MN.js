import{j as e}from"./jsx-runtime-DmKnoNQ-.js";import{L as b}from"./LightTooltip-DPh926hy.js";import{s as g}from"./spreadSx-CwcO6WA9.js";import{r as k}from"./index-BFCc_wv0.js";import{B as l}from"./Box-CnkquDgp.js";import{B as d}from"./Button-DYb5I_h6.js";import{t as _}from"./Tooltip-BESuS2go.js";import{b as w,a as S}from"./react-B7JEe_9q.js";import{M as j}from"./MarkdownSynapse-CsjHmxuh.js";import{T as M}from"./Typography-CoReq-7T.js";const q={mt:2,display:"flex",justifyContent:"space-between",flexDirection:"row-reverse","> button":{flexGrow:1,maxWidth:"45%"}},V=S(null);function s({children:t,popoverContent:r,placement:n="bottom-start",showCloseButton:c=!0,actionButton:o,sx:m,maxWidth:v="500px",minWidth:f="300px",containerSx:x}){const a=k.useId(),[y,i]=w(V),h=y===a,P=e.jsxs(l,{sx:{padding:"20px"},children:[r,e.jsxs(l,{sx:q,children:[o&&e.jsx(d,{color:o.color||"primary",variant:o.variant||"contained",onClick:()=>{o.onClick(),o.closePopoverOnClick&&i(null)},children:o.content}),c&&e.jsx(d,{variant:"outlined",onClick:()=>i(null),children:"Close"})]})]});return e.jsx(b,{title:P,placement:n,open:h,sx:g(m,{[`& .${_.tooltip}`]:{maxWidth:{maxWidth:v},minWidth:{minWidth:f}}}),children:e.jsx(l,{role:"button",className:"PopoverContainer",onClick:p=>{p.preventDefault(),p.stopPropagation(),i(C=>C==a?null:a)},sx:{display:"inline-block",cursor:"pointer",...x},children:t})})}try{s.displayName="StyledPopover",s.__docgenInfo={description:"",displayName:"StyledPopover",props:{popoverContent:{defaultValue:null,description:"",name:"popoverContent",required:!0,type:{name:"ReactNode"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},placement:{defaultValue:{value:"bottom-start"},description:"",name:"placement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"bottom-end"'},{value:'"bottom-start"'},{value:'"left-end"'},{value:'"left-start"'},{value:'"right-end"'},{value:'"right-start"'},{value:'"top-end"'},{value:'"top-start"'}]}},showCloseButton:{defaultValue:{value:"true"},description:"",name:"showCloseButton",required:!1,type:{name:"boolean"}},actionButton:{defaultValue:null,description:"",name:"actionButton",required:!1,type:{name:'{ content: ReactNode; color?: OverridableStringUnion<"info" | "success" | "warning" | "inherit" | "primary" | "secondary" | "error", ButtonPropsColorOverrides>; variant?: OverridableStringUnion<...>; onClick: () => void; closePopoverOnClick?: boolean; }'}},maxWidth:{defaultValue:{value:"500px"},description:"",name:"maxWidth",required:!1,type:{name:"string"}},minWidth:{defaultValue:{value:"300px"},description:"",name:"minWidth",required:!1,type:{name:"string"}},containerSx:{defaultValue:null,description:"",name:"containerSx",required:!1,type:{name:"SxProps"}}}}}catch{}function u(t){const{contentProps:r,...n}=t;return e.jsx(s,{...n,popoverContent:e.jsx(M,{variant:"body1",children:e.jsx(j,{...r})})})}try{u.displayName="MarkdownPopover",u.__docgenInfo={description:"",displayName:"MarkdownPopover",props:{contentProps:{defaultValue:null,description:"",name:"contentProps",required:!0,type:{name:"MarkdownSynapseProps"}}}}}catch{}export{u as M,s as S};
