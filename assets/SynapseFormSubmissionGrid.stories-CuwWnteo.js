import{j as l}from"./jsx-runtime-DzZnOzqg.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-Cd_aVOfP.js";import{aH as S,M as a}from"./useFiles-D8uG9HU0.js";import"./OrientationBanner-w1VcnD_5.js";import"./index-C60fwWGm.js";import"./StringUtils-Df7AZImX.js";import{l as _}from"./index-D83JbCyo.js";import{S as E}from"./SynapseFormSubmissionGrid-BdUwRacY.js";import"./mockSchema-CdTGIP3Q.js";import"./mockFileEntity-Bb0Dh_WI.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-BQpL3_ez.js";import"./mockTeam-CIQwm3Wy.js";import"./SynapseConstants-B1FWRhdk.js";import"./uniqueId-ZztKZTyN.js";import"./toString-CXtXUg6z.js";import"./isObjectLike-Dxq-98_C.js";import"./iframe-BCxQYagR.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BQx_Ubgc.js";import"./times-DpsyR5Du.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-mOPhbX-G.js";import"./asyncJobHandlers-CeiisTb3.js";import"./BasicMockedCrudService-CXruu4te.js";import"./cloneDeep-CbpOHm8w.js";import"./_Uint8Array-BVEqVThY.js";import"./_initCloneObject-C8Pds_s0.js";import"./_getTag-BiZXTrrh.js";import"./isEqual-SADtRp1R.js";import"./_baseIsEqual-BlXHlzVN.js";import"./mockAnnotationColumns-BI_xsLQr.js";import"./tableQueryHandlers-zMNmUSr9.js";import"./omit-D7hCFOK0.js";import"./_baseGet-C1axozkZ.js";import"./isNil-5_7q3K66.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-QkVvsKfT.js";import"./_baseFlatten-D8PPfXnW.js";import"./pick-DUw5t57R.js";import"./_baseSet-XGeDJqPn.js";import"./hasIn-DVwow5VW.js";import"./accessRequirementAclHandlers-CQf7fGsl.js";import"./mockAccessRequirementAcls-Dgoa_JDh.js";import"./mockAccessRequirements-DvnZhygY.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-DsUfflHD.js";import"./wikiHandlers-CyQ8t-qW.js";import"./mockWikiPageKey-BAKEatcE.js";import"./teamHandlers-Bz_CHwhA.js";import"./dataAccessRequestHandlers-CY_IEdBU.js";import"./MockResearchProject-D8O9TIHh.js";import"./mock_discussion-CyCloavX.js";import"./fakerUtils-C3SExdhN.js";import"./index-BqigE-zQ.js";import"./mockTableEntity-BcEdNUSF.js";import"./mockFileEntityACLVariants-DymlO0rS.js";import"./entityHandlers-C67YyxIn.js";import"./mockEntity-2ACmEVgC.js";import"./mockEvaluationQueue-DPqZheyA.js";import"./featureFlagHandlers-BOXqY2lC.js";import"./fileHandlers-CN6l57db.js";import"./personalAccessTokenHandlers-COn4mjrV.js";import"./researchProjectHandlers-udkc5hAQ.js";import"./resetTwoFactorAuthHandlers-BAzymSqM.js";import"./userProfileHandlers-DjVbJlPl.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-B9UPuYLo.js";import"./FullWidthAlert-cAgO7bVX.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-CbCSI8ns.js";import"./createTheme-CYWnjTil.js";import"./resolveComponentProps-B2e4_KER.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-C3QGtmSj.js";import"./createSvgIcon-m9fHyGyS.js";import"./DefaultPropsProvider-BuN52GuK.js";import"./Close-CzUlLz04.js";import"./IconButton-BNmjBrUK.js";import"./ButtonBase-CdwHWq9j.js";import"./useTimeout-BPh3bJVB.js";import"./useIsFocusVisible-Bukda0BQ.js";import"./useEventCallback-BHMz769w.js";import"./Paper-CA8X2nmN.js";import"./Stack-BisZ62cv.js";import"./getThemeProps-BYxHHPXx.js";import"./useTheme-D6IuG_uC.js";import"./Box-FDIqTSOb.js";import"./AlertTitle-B4fbjN8A.js";import"./Typography-BmZ7G-Jn.js";import"./useTheme-CypcUUjZ.js";import"./Grow-DhFF0lAh.js";import"./index-CSh4ftr3.js";import"./utils-CRAVGkRr.js";import"./ClickAwayListener-BAN580I8.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-xln8x51v.js";import"./index-Cz5g-qWT.js";import"./useControlled-BMCukgAB.js";import"./useId-DjK6D95n.js";import"./Popper-DTiq_qV1.js";import"./Button-DpKUeDej.js";import"./useQuery-DlRymLBd.js";import"./utils-C1A9897Y.js";import"./Link-Cbuy5Khz.js";import"./Collapse-sufiHMck.js";import"./tinycolor-Begke6kS.js";import"./Fade-CqoyTvjP.js";import"./Skeleton-FYvl9i-x.js";import"./inputBaseClasses-Qjg2uSnc.js";import"./calculateFriendlyFileSize-CpEXOQcO.js";import"./CheckCircleTwoTone-Bmp6VC1Z.js";import"./InfoTwoTone-DsLs3GaH.js";import"./mutation-DUOv2tBk.js";import"./dayjs.min-CA1ARrMC.js";import"./chunk-AYJ5UCUI-CCXOOs5x.js";import"./index-BCKAJkgQ.js";import"./react-BhSIdDPr.js";import"./util-CPu5_fr3.js";import"./WideButton-Dd3JWHSJ.js";import"./DeleteTwoTone-VKC0h_xj.js";import"./createSvgIcon-CxbxUcyA.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-BcPAW15f.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-BxyO3BPj.js";import"./DialogBase-B-MmQPj8.js";import"./Close-7pCIuoXr.js";import"./HelpPopover-CEVcn0-h.js";import"./MarkdownPopover-Cce85mt2.js";import"./LightTooltip-DVfdqfYy.js";import"./MarkdownSynapse-XJ9iU0cq.js";import"./SkeletonButton-BoQHW4ur.js";import"./SkeletonInlineBlock-ifZrLBwB.js";import"./SkeletonTable-Cjt6cUEE.js";import"./SkeletonParagraph-9petVL4x.js";import"./HelpOutlineTwoTone-DPW3q9aG.js";import"./DialogTitle-CwcBhpS1.js";import"./DialogContent-CQD9e03K.js";import"./Dialog-Cvakc50R.js";import"./Modal-IaObXt2z.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-boD7Ippf.js";import"./WarningDialog-CXsYQxSx.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
