import{j as e}from"./jsx-runtime-DoxjgJx5.js";import{r as v}from"./index-Cu9bd8lq.js";import{p as V,g as k}from"./SqlFunctions-D_YhZIxj.js";import{k as C,S as F}from"./SynapseClient--xLROLBX.js";import{e as D}from"./SynapseConstants-DKOAl3NQ.js";import"./RegularExpressions-C2ZZh8jv.js";import{j as u}from"./index--5FOymzB.js";import{u as M}from"./use-deep-compare-effect.esm-BJt8Qld_.js";import"./OrientationBanner-Ct6IgTPI.js";import{M as I}from"./ConfirmationDialog-BoB4w1ge.js";import{S as A}from"./SkeletonTable-BnQ5noh_.js";import{T as K}from"./Typography-Ctk8_6Bo.js";const O=[u.BOOLEAN_LIST,u.DATE_LIST,u.ENTITYID_LIST,u.INTEGER_LIST,u.STRING_LIST],N=({sql:d,searchParams:y,sqlOperator:_,isMarkdown:p=!1,columnLink:l,friendlyValuesMap:R,columnNameIsSectionTitle:g=!1,limit:E,additionalFiltersSessionStorageKey:q})=>{const{accessToken:h}=C(),[o,L]=v.useState(),[x,T]=v.useState();let j=!0;M(()=>(async function(){var r;T(!0);const t=V(d),m=k(q,y,_),i={partMask:D,concreteType:"org.sagebionetworks.repo.model.table.QueryBundleRequest",entityId:t,query:{sql:d,limit:E,additionalFilters:m}},s=await F.getQueryTableResults(i,h);T(!1);const n=(r=s==null?void 0:s.queryResult)==null?void 0:r.queryResults;n?j&&L(n):console.log("SubsectionRowRenderer: Error getting data")}(),()=>{j=!1}),[d,h,y,_]);const f=a=>{if(!R)return a;const t=R[a];return t||a};return e.jsxs("div",{className:"SubsectionRowRenderer bootstrap-4-backport",children:[x&&e.jsx(A,{numRows:2,numCols:1}),!x&&o&&o.rows.length>0&&o.headers.map((a,t)=>l&&a.name==l.linkColumnName?e.jsx(e.Fragment,{}):e.jsxs("div",{className:"SubsectionRowRenderer__item",role:"table",children:[e.jsx(K,{variant:g?"sectionTitle":"subsectionHeader",role:"heading",children:a.name}),g&&e.jsx("hr",{}),e.jsx("div",{role:"rowgroup",children:o.rows.map((m,w)=>{const i=m.values[t];if(!i)return e.jsx(e.Fragment,{});let s;if(O.includes(a.columnType))s=JSON.parse(i).map((r,c)=>e.jsxs("div",{className:"SubsectionRowRenderer__item__value",role:"row",children:[p&&e.jsx(I,{markdown:f(r)}),!p&&e.jsx("p",{children:f(r)})]},c));else{let n;const r=f(i);if(p)n=e.jsx(I,{markdown:r});else if(l&&l.matchColumnName==a.name){const c=o.headers.findIndex(S=>S.name==l.linkColumnName),b=m.values;b.some(S=>S===null)&&console.warn("Row has null value(s) when no nulls expected"),c>-1?n=e.jsx("a",{rel:"noopener noreferrer",target:"_blank",href:b[c],children:r}):n=e.jsx("p",{children:r})}else n=e.jsx("p",{children:r});s=e.jsx("div",{className:"SubsectionRowRenderer__item__value",role:"row",children:n},w)}return s})})]},`${t}`))]})};try{N.displayName="SubsectionRowRenderer",N.__docgenInfo={description:"",displayName:"SubsectionRowRenderer",props:{sql:{defaultValue:null,description:"",name:"sql",required:!0,type:{name:"string"}},isMarkdown:{defaultValue:{value:"false"},description:"",name:"isMarkdown",required:!1,type:{name:"boolean"}},sqlOperator:{defaultValue:null,description:"",name:"sqlOperator",required:!1,type:{name:"enum",value:[{value:'"LIKE"'},{value:'"EQUAL"'},{value:'"IN"'},{value:'"HAS"'},{value:'"HAS_LIKE"'}]}},searchParams:{defaultValue:null,description:"",name:"searchParams",required:!1,type:{name:"Record<string, string>"}},columnLink:{defaultValue:null,description:"",name:"columnLink",required:!1,type:{name:"ColumnSpecifiedLink"}},friendlyValuesMap:{defaultValue:null,description:"",name:"friendlyValuesMap",required:!1,type:{name:"FriendlyValuesMap"}},columnNameIsSectionTitle:{defaultValue:{value:"false"},description:"",name:"columnNameIsSectionTitle",required:!1,type:{name:"boolean"}},limit:{defaultValue:null,description:"",name:"limit",required:!1,type:{name:"number"}},additionalFiltersSessionStorageKey:{defaultValue:null,description:"",name:"additionalFiltersSessionStorageKey",required:!1,type:{name:"string"}}}}}catch{}export{N as S};
