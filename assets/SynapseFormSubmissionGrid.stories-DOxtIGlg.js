import{j as l}from"./jsx-runtime-tHJZYBcw.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-DG0sNrlU.js";import{aH as S,M as a}from"./useFiles-jPWlXuHc.js";import"./OrientationBanner-DmtTd2TQ.js";import"./index-Df9ki4m7.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-1ZN_791K.js";import{S as E}from"./SynapseFormSubmissionGrid-CBXbD4Ft.js";import"./mockSchema-D-V0v5lE.js";import"./mockFileEntity-DNEUgd2F.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-Cr8hRLoo.js";import"./mockTeam-WwkXi9e8.js";import"./SynapseConstants-Ba1heHX4.js";import"./uniqueId-aXBBIKHb.js";import"./toString-4TSAtCHz.js";import"./isObjectLike-CnZoMM3i.js";import"./iframe-gu9nKSuU.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-Bi-T8Hl2.js";import"./times-BoEMLL0K.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DlOEUMT-.js";import"./asyncJobHandlers-BpcQV2b-.js";import"./BasicMockedCrudService-CkSGGVv_.js";import"./cloneDeep-CeJYBU74.js";import"./_Uint8Array-BY3nRIcz.js";import"./_initCloneObject-BmsGmtIF.js";import"./_getTag-DaN_q5c6.js";import"./isEqual-DW03Q8_-.js";import"./_baseIsEqual-Bsx2OylX.js";import"./mockAnnotationColumns-21Gm7kS6.js";import"./tableQueryHandlers-D0A6iUvz.js";import"./omit-BxZmf5OD.js";import"./_baseGet-BPSs4d5T.js";import"./isNil-dfygdcyY.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-Byo7_oei.js";import"./_baseFlatten-Bjsme5Dn.js";import"./pick-CcQKyPk7.js";import"./_baseSet-BihGoxr3.js";import"./hasIn-BgJqgTsg.js";import"./accessRequirementAclHandlers-B2vHIgtI.js";import"./mockAccessRequirementAcls-Dg24kSYH.js";import"./mockAccessRequirements-BQcAoZnz.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-DtFxFGHu.js";import"./wikiHandlers-D5Yd_pr9.js";import"./mockWikiPageKey-Cdct183V.js";import"./teamHandlers-o6kxgkx_.js";import"./dataAccessRequestHandlers-B6jgyL5n.js";import"./MockResearchProject-CHuQ7SAk.js";import"./mock_discussion-Bv-XMS-8.js";import"./fakerUtils-B0ECbVCN.js";import"./index-CJ8L4aRP.js";import"./mockTableEntity-Buv-SH29.js";import"./mockFileEntityACLVariants-BuYdhQ54.js";import"./entityHandlers-DYeu_cdH.js";import"./mockEntity-CKVQLg_F.js";import"./mockEvaluationQueue-l0qjuQnN.js";import"./featureFlagHandlers-Ti7pmt7A.js";import"./fileHandlers-DjsymlId.js";import"./personalAccessTokenHandlers-aS8DbFaa.js";import"./researchProjectHandlers-DlVyTbGL.js";import"./resetTwoFactorAuthHandlers-BFYQkqSU.js";import"./userProfileHandlers-C2G9oQJL.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-Bx3VJPm0.js";import"./FullWidthAlert-DPDY4mXa.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-BCxFFk19.js";import"./createTheme-BINNrTrD.js";import"./resolveComponentProps-C_h7LpqL.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-By6tpA4H.js";import"./createSvgIcon-aeHwAv7r.js";import"./DefaultPropsProvider-BBINbyFF.js";import"./Close-Dg0Yyhdl.js";import"./IconButton-C4fHQ2mP.js";import"./ButtonBase-BJnbOYI0.js";import"./useTimeout-CkReBcKO.js";import"./useIsFocusVisible-CFzyuqS3.js";import"./useEventCallback-FcdrOq4M.js";import"./Paper-DL6O15NN.js";import"./Stack-BcSaEj59.js";import"./getThemeProps-_buxTbuI.js";import"./useTheme-CrZO8DL0.js";import"./Box-C3CCkmvB.js";import"./AlertTitle-BgljIgUy.js";import"./Typography-CPW1w4ki.js";import"./useTheme-D7aU4zJW.js";import"./Grow-Bw7JNtNh.js";import"./index-Bs9oirMy.js";import"./utils-FhFw91KO.js";import"./ClickAwayListener-CvMIu_kV.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip--cxr29Mn.js";import"./index-Cxy_adfL.js";import"./useControlled-D0Pe8713.js";import"./useId-BitcG2W_.js";import"./Popper-C7DDlbfw.js";import"./Button-otBf-fCg.js";import"./useQuery-DQWZeiYF.js";import"./utils-8n4YkW-3.js";import"./Link-CaTJJdl0.js";import"./Collapse-Cv_pKtFc.js";import"./tinycolor-Begke6kS.js";import"./Fade-CNMLBLPt.js";import"./Skeleton-CgkAeMKL.js";import"./inputBaseClasses-Czd2LOTF.js";import"./calculateFriendlyFileSize-DvGvzjK0.js";import"./CheckCircleTwoTone-gIIBURBC.js";import"./InfoTwoTone-D0xmy2qt.js";import"./mutation-BRa-ekOT.js";import"./dayjs.min-MYorRcO6.js";import"./chunk-AYJ5UCUI-hydSzuez.js";import"./index-DgcLTxff.js";import"./react-EBci5e-X.js";import"./util-eLaQlmvv.js";import"./WideButton-bmXTWvPj.js";import"./DeleteTwoTone-bDw1Slws.js";import"./createSvgIcon-CkgtuW0R.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-CGCpKIdF.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-DKsPwUov.js";import"./DialogBase-HvamU2B6.js";import"./Close-D3K-TfhB.js";import"./HelpPopover-D25Mpr3H.js";import"./MarkdownPopover-DNVsh5w0.js";import"./LightTooltip-62AS7rvO.js";import"./MarkdownSynapse-CAMsGIQ_.js";import"./SkeletonButton-BJ8gNvUN.js";import"./SkeletonInlineBlock-Ba8buGB9.js";import"./SkeletonTable-CBmaqvB9.js";import"./SkeletonParagraph-DG99-NLx.js";import"./HelpOutlineTwoTone-kVx3xHfZ.js";import"./DialogTitle-wI-tOTZ1.js";import"./DialogContent-BxBnhDnO.js";import"./Dialog-D8h7d6Fa.js";import"./Modal-CYS4qXwo.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-BXwT-rTA.js";import"./WarningDialog-bSdR7cJx.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
