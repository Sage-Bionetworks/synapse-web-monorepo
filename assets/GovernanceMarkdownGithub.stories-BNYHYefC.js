import{u as o}from"./VerificationSubmission-CNoSrCdk.js";import{g as u,bb as d,bc as l,B as S,bd as f,M as O}from"./useFiles-BI7PLl8w.js";import"./StringUtils-CwQ1lgbR.js";import{h as i,H as n}from"./index-CL7-_Da7.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-DI7BPE1x.js";import"./SynapseConstants-Bh0ooQxO.js";import"./OrientationBanner-35DwZATM.js";import"./index-FM-5jib5.js";import"./index-BI5lQOsu.js";import"./iframe-Bh992iam.js";import"./spreadSx-CwcO6WA9.js";import"./react-OMVIaA_-.js";import"./FullWidthAlert-DYlV_lj8.js";import"./Alert-CSMrm0RL.js";import"./createTheme-DCfJyqXD.js";import"./DefaultPropsProvider-BYMwOOeu.js";import"./useSlot-F7y2gpDj.js";import"./useForkRef-DAOZ23j2.js";import"./createSimplePaletteValueFilter-Bd9oOxX0.js";import"./createSvgIcon-SJuMpeuT.js";import"./Close-smqNtMz1.js";import"./IconButton-BCLck6uA.js";import"./useTimeout-Ca45XijG.js";import"./ButtonBase-DnUof1w4.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DkDa1NGx.js";import"./Paper-GEfitkMs.js";import"./useTheme-oX98t7df.js";import"./useTheme-CCVugcwa.js";import"./Stack-GuEyk8LE.js";import"./extendSxProp-DJ2y7QTv.js";import"./getThemeProps-C1QTpv83.js";import"./Box-pSBGXNvB.js";import"./AlertTitle-VnVGY_MP.js";import"./Typography-Y4Fx5F_G.js";import"./index-C4bo6hUO.js";import"./ClickAwayListener-BBaWZo9D.js";import"./getReactElementRef-D9oPioMP.js";import"./index-CFUDUs03.js";import"./index-B26qpHd_.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DIJaZVy9.js";import"./Tooltip-BsozqXdX.js";import"./index-D2NSnX6k.js";import"./useControlled-DkznNG6r.js";import"./Popper-BxbtDxmn.js";import"./Button-BFyoJlXb.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-oeDnacJk.js";import"./QueryClientProvider-DcA49eyX.js";import"./Link-vLahYdB5.js";import"./Collapse-BKp_c0SL.js";import"./_baseUniq-BIfjH-XX.js";import"./_Uint8Array-BgUaH4Y0.js";import"./isArray-qN4X7jQ5.js";import"./_getTag-aJdxkrP6.js";import"./isEqual-D_Pln4BK.js";import"./merge-C8OUjJCU.js";import"./_initCloneObject-DRShmAf3.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-xWe4npSh.js";import"./inputBaseClasses-D4AFzInG.js";import"./calculateFriendlyFileSize-ofeU2shc.js";import"./CheckCircleTwoTone-Cedrn3d2.js";import"./InfoTwoTone-DPXhSbpu.js";import"./useMutation-DutVxwog.js";import"./dayjs.min-BO-A9L92.js";import"./chunk-AYJ5UCUI-DnbrDPKC.js";import"./cloneDeep-BWho0j_J.js";import"./Skeleton-DnQq6Znq.js";import"./SkeletonButton-B95tPr5t.js";import"./SkeletonInlineBlock-CDOHVTAt.js";import"./SkeletonTable-Bqxin2jA.js";import"./times-Dzo54y4V.js";import"./toInteger-COXm6_82.js";import"./isSymbol-Bx-umEl-.js";import"./SkeletonParagraph-Di-MXEfF.js";import"./MarkdownSynapse-B6jC-9RV.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
