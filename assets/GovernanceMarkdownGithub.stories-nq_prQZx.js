import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-BQEO-69M.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-C5O5Nce4.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-1RZqu6-8.js";import"./SynapseConstants-ByJ4SBiX.js";import"./OrientationBanner-BUQ62TYj.js";import"./index-BDqCLLtG.js";import"./index-CcrsiwgI.js";import"./iframe-DkAN1I_g.js";import"./spreadSx-CwcO6WA9.js";import"./react-BSbW4s-G.js";import"./FullWidthAlert-5Ne4J_9o.js";import"./Alert-xBWLXl1Y.js";import"./createTheme-D0pL0qQP.js";import"./DefaultPropsProvider-H9_8ZvTU.js";import"./useSlot-CDWcpGsY.js";import"./useForkRef-CWW1kaxd.js";import"./createSimplePaletteValueFilter-CdCRSs_B.js";import"./createSvgIcon-EFbRc6ub.js";import"./Close-mR81D45w.js";import"./IconButton-B-H21jSi.js";import"./useTimeout-KPLmy49i.js";import"./ButtonBase-CixOXMZC.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-D1i1Xybt.js";import"./Paper-C5Va8tEQ.js";import"./useTheme-Bv7DV3GC.js";import"./useTheme-C9aeDpm1.js";import"./Stack-DB53MkM8.js";import"./extendSxProp-BOrFJbhA.js";import"./getThemeProps-CqvZsTgu.js";import"./Box-5WPD-AqJ.js";import"./AlertTitle-BRV0cPHG.js";import"./Typography-Blcis-6R.js";import"./index-D79hvqRM.js";import"./ClickAwayListener-BOUF5eQl.js";import"./getReactElementRef-DODCH2Uv.js";import"./index-FmU7P8-W.js";import"./index-BQKvVLPL.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BGALCZc1.js";import"./Tooltip-DW8zSJ13.js";import"./index-EWxYWF3M.js";import"./useControlled-C9ig_TM1.js";import"./Popper-D-2uPAjO.js";import"./Button-xIVjleXs.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-Ca66mrDJ.js";import"./QueryClientProvider-DhcOouJr.js";import"./Link-JpAHplQA.js";import"./Collapse-CoBc5Um2.js";import"./_baseUniq-DWDW-Ywk.js";import"./_Uint8Array-DP_PQern.js";import"./isArray-L2CpAKpI.js";import"./_getTag-DMmtDXrU.js";import"./isEqual-CxigYvVh.js";import"./merge-C9M7mJ3m.js";import"./_initCloneObject-16YS23Lt.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-BlJ0L8LZ.js";import"./inputBaseClasses-DSbshDwR.js";import"./calculateFriendlyFileSize-D-Ld3tQe.js";import"./CheckCircleTwoTone-Co6ze5Ep.js";import"./InfoTwoTone-S22d2WfP.js";import"./useMutation-C2MhW39A.js";import"./dayjs.min-CYWw-vQ3.js";import"./chunk-AYJ5UCUI-HMrZDw_1.js";import"./cloneDeep-4lWfUU40.js";import"./Skeleton-CNNLcJzv.js";import"./SkeletonButton-Dl089ttf.js";import"./SkeletonInlineBlock-DU8-MJaz.js";import"./SkeletonTable-CuDhYiKq.js";import"./times-lnOhNviC.js";import"./toInteger-B2rtjwzt.js";import"./isSymbol-yAH-YvQ0.js";import"./SkeletonParagraph-DNsRlXEF.js";import"./MarkdownSynapse-DR7-iZLf.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
