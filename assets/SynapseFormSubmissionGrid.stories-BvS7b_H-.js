import{j as l}from"./jsx-runtime-DS5StVVG.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-BI5WaB2N.js";import{g as T}from"./handlers-DZwLwQq0.js";import{aF as S,M as a}from"./useFiles-D2J0lDEf.js";import"./OrientationBanner-LE5NNPEZ.js";import"./index-cX-36PVo.js";import"./StringUtils-DN6u4g4A.js";import{l as _}from"./index-DehM9o59.js";import{S as E}from"./SynapseFormSubmissionGrid-CgtBLpdT.js";import"./mockSchema-BkCjRXER.js";import"./mockFileEntity-B1zGz3Yh.js";import"./mock_file_handle-DwnN5i7-.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-qI8Kqza8.js";import"./mockTeam-lSMsjvUS.js";import"./SynapseConstants-CaV0FCaG.js";import"./uniqueId-DCX6bmKm.js";import"./toString-CMJ3T8l9.js";import"./isObjectLike-D3taRsKZ.js";import"./iframe-9EJDT6Vt.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BdJ4UU4t.js";import"./times-CDCLamh_.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-Dd4xfpSi.js";import"./asyncJobHandlers-B6wG41uu.js";import"./BasicMockedCrudService-C_5Ytzhk.js";import"./cloneDeep-CZOyHOHD.js";import"./_Uint8Array-YYzzYD9-.js";import"./_initCloneObject-CiNG-Awp.js";import"./_getTag-DbOHal0V.js";import"./isEqual-Dt-4NKhD.js";import"./_baseIsEqual-DcWszeYx.js";import"./mockAnnotationColumns-jcnRRq1_.js";import"./tableQueryHandlers-Da79nBuh.js";import"./omit-B-euVzGn.js";import"./_baseGet-CkR-yfck.js";import"./isNil-t2bB1iUd.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-klNNUCYg.js";import"./_baseFlatten-ClfNuKtb.js";import"./pick-BH1I1q57.js";import"./_baseSet-Dg7ivTOS.js";import"./hasIn-Ch1ZMewA.js";import"./accessRequirementAclHandlers-CS_xDDYi.js";import"./mockAccessRequirementAcls-DLsn0qtd.js";import"./mockAccessRequirements-xbTJLHAI.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-5OtZEItt.js";import"./accessRequirementHandlers-DnpInSbI.js";import"./wikiHandlers-B3yhnjRL.js";import"./mockWikiPageKey-CY9o5khY.js";import"./teamHandlers-fuEmkH3V.js";import"./dataAccessRequestHandlers-D2tY3OZU.js";import"./MockResearchProject-3GnfzfgL.js";import"./mock_discussion-B-qBVtun.js";import"./fakerUtils-BdX-SQJE.js";import"./index-CQV-G63v.js";import"./mockTableEntity-D3QYmtMH.js";import"./mockFileEntityACLVariants-CiL3rSUW.js";import"./entityHandlers-C9UtkBWy.js";import"./mockEntity-CwWf97qJ.js";import"./mockEvaluationQueue-Lg06fXiy.js";import"./featureFlagHandlers-BjW_Beey.js";import"./fileHandlers-CifjOXZ4.js";import"./personalAccessTokenHandlers-C5lRSZmG.js";import"./researchProjectHandlers-B5wEkJeC.js";import"./resetTwoFactorAuthHandlers-DVtwlRJV.js";import"./userProfileHandlers-DbLQOKeq.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-D0NEqPRG.js";import"./FullWidthAlert-C4RioFof.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-DxLNdAsW.js";import"./createTheme-Bf7RaJZp.js";import"./resolveComponentProps-BckopApa.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-C8gc3lry.js";import"./createSvgIcon-C97cKv-E.js";import"./DefaultPropsProvider-Dj-ET5XP.js";import"./Close-ClleilIz.js";import"./IconButton-Dnrmx_JM.js";import"./ButtonBase-De4KvzrO.js";import"./useTimeout-CtHEIWtS.js";import"./useIsFocusVisible-8oN7zW9b.js";import"./useEventCallback-Bf6o-zFC.js";import"./Paper-BnU681ZV.js";import"./Stack-mOfhED7S.js";import"./getThemeProps-B2jfOwXN.js";import"./useTheme-BagD9k6_.js";import"./Box-CilYK6-7.js";import"./AlertTitle-BG01MePs.js";import"./Typography-5l8xUtlm.js";import"./useTheme-Byb0Hnvw.js";import"./Grow-2xpSizAP.js";import"./index-q3SnWJ3I.js";import"./utils-COVIZagF.js";import"./ClickAwayListener-C4HP-2Tv.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-ZIrjiZox.js";import"./index-JhzEDNxb.js";import"./useControlled-CeFwsNUA.js";import"./useId-2Kxm9uM_.js";import"./Popper-CfQZLj9d.js";import"./Button-Cp5tKDML.js";import"./useQuery-7tsM9kOw.js";import"./utils-DxymWvTy.js";import"./Link-CXcIbBMo.js";import"./Collapse-D2dc9D9e.js";import"./tinycolor-Begke6kS.js";import"./Fade-CQyasUig.js";import"./Skeleton-B3HMeOtD.js";import"./inputBaseClasses-LXtxNwLa.js";import"./calculateFriendlyFileSize-C78IjuJR.js";import"./CheckCircleTwoTone-CqTc5vaA.js";import"./InfoTwoTone-DNtkufyt.js";import"./useMutation-DUd97SQY.js";import"./dayjs.min-CHLyGnUf.js";import"./chunk-AYJ5UCUI-Blpg1t-L.js";import"./index-BJZZKCw6.js";import"./react-BsOov9i0.js";import"./util-CmHzlDss.js";import"./WideButton-wj_-AHq2.js";import"./DeleteTwoTone-BY_7X5kM.js";import"./createSvgIcon-D_ZBevAo.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-B6Tq6dIa.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-DYaFmuBe.js";import"./DialogBase-D49obOsB.js";import"./Close-yZxRbB1B.js";import"./HelpPopover-CEwxAoRb.js";import"./MarkdownPopover-BXjgZQqO.js";import"./LightTooltip-BgZe1i0e.js";import"./MarkdownSynapse-REMYywWy.js";import"./SkeletonButton-DR3Wscs0.js";import"./SkeletonInlineBlock-FTKT13Xy.js";import"./SkeletonTable-CHqtt29F.js";import"./SkeletonParagraph-y1PWjO4C.js";import"./HelpOutlineTwoTone-DiHPvoO-.js";import"./DialogTitle-J0UxOc_6.js";import"./DialogContent-29nzYHao.js";import"./Dialog-CTP1mLCA.js";import"./Modal-rx3Tt7s0.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-DHgCipIj.js";import"./WarningDialog-DhNe1qgA.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
