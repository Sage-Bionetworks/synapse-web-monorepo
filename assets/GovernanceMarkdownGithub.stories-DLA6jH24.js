import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-D7R6W0Po.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-DuOgI-Ti.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-IQkoIAi8.js";import"./SynapseConstants-BF-cq9I-.js";import"./OrientationBanner-BPE7jN4H.js";import"./index-DRmLmgSG.js";import"./index-BUsvr3pR.js";import"./iframe-BOf6LPjK.js";import"./spreadSx-CwcO6WA9.js";import"./react-CqXSjSjN.js";import"./FullWidthAlert-CyxVaTo-.js";import"./Alert-Bk5JlffV.js";import"./createTheme-UonGQGw4.js";import"./DefaultPropsProvider-Df1PfarS.js";import"./useSlot-wrl7o3Ug.js";import"./useForkRef-CRv5njRE.js";import"./createSimplePaletteValueFilter-CJ-IbVpc.js";import"./createSvgIcon-DKQD7mOV.js";import"./Close-CeUTRSXW.js";import"./IconButton-BLusjQnA.js";import"./useTimeout-BMsv0ZJ3.js";import"./ButtonBase-On86KBDi.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BCAN28JR.js";import"./Paper-WLG-MfiP.js";import"./useTheme-B7irvlgN.js";import"./useTheme-Cf0y_-BP.js";import"./Stack-Be1fl8B2.js";import"./extendSxProp-6X8i3Ual.js";import"./getThemeProps-CiHhwHIs.js";import"./Box-CjXe8gIr.js";import"./AlertTitle-D0l0ox_T.js";import"./Typography-CBmUgXmK.js";import"./index-knRHlM1X.js";import"./ClickAwayListener-CenNq_25.js";import"./getReactElementRef-CRfSQGz0.js";import"./index-Bv-8_qSa.js";import"./index-BJ97qXsD.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BCPuHGGV.js";import"./Tooltip-yDHB8MiT.js";import"./index-CjNVpIRd.js";import"./useControlled-DeIG_K28.js";import"./Popper-Dpckc59n.js";import"./Button-CkV_4l2j.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-BzsoOeu3.js";import"./QueryClientProvider-B1Ol8Yry.js";import"./Link-Bfy-wYj9.js";import"./Collapse-B5BlCAjr.js";import"./_baseUniq-jQ8xeg2H.js";import"./_Uint8Array-XpvvWAw1.js";import"./isArray-7pzLm2zZ.js";import"./_getTag-C6gRbf3L.js";import"./isEqual-D7UROsmS.js";import"./merge-DK1gT9qk.js";import"./_initCloneObject-DK2bw49X.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-fuokgPOZ.js";import"./inputBaseClasses-C7UFnbtn.js";import"./calculateFriendlyFileSize-Do506Vrw.js";import"./CheckCircleTwoTone-CnMK8m3r.js";import"./InfoTwoTone-UlfRuzPu.js";import"./useMutation-CcZ13Imf.js";import"./dayjs.min-DIAzs0dw.js";import"./chunk-AYJ5UCUI-D_jbnITc.js";import"./cloneDeep-Czp6lS9T.js";import"./Skeleton-Bvxz5ehu.js";import"./SkeletonButton-BVkzLLaH.js";import"./SkeletonInlineBlock-DYLvpgvg.js";import"./SkeletonTable-Dzj-ObLw.js";import"./times-BoW8UahK.js";import"./toInteger-DFNK8MIL.js";import"./isSymbol-DfQVpcSz.js";import"./SkeletonParagraph-Bre6bKv-.js";import"./MarkdownSynapse-Vjn_dSYb.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
