import{u as o}from"./VerificationSubmission-BDh1zA9f.js";import{g as u,bd as d,be as l,B as f,bf as S,M as O}from"./useFiles-BAtCl2zW.js";import"./StringUtils-C95LMFI-.js";import{h as i,H as n}from"./index-DLsV80Rd.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-CNZNgdK-.js";import"./SynapseConstants-XI6dYRWk.js";import"./OrientationBanner-B7q8lOlz.js";import"./index-CRCyvnZ0.js";import"./index-BNUkr42D.js";import"./iframe-Ba3BTMJQ.js";import"./spreadSx-CwcO6WA9.js";import"./react-Be8tiLW3.js";import"./FullWidthAlert-BzIUXwFm.js";import"./Alert-D3sOM9Xh.js";import"./createTheme-NhmqE9dQ.js";import"./DefaultPropsProvider-BIfpEvA2.js";import"./useSlot-BwQ6-TBw.js";import"./useForkRef-pDyZK79X.js";import"./createSimplePaletteValueFilter-nQ38Im-Z.js";import"./createSvgIcon-CFqKoRuC.js";import"./Close-DYrdwFiE.js";import"./IconButton-O8RH6c-u.js";import"./useTimeout-BrN7Q3E4.js";import"./ButtonBase-LA74b3wr.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DPMtitov.js";import"./Paper-SGfBtoXB.js";import"./useTheme-C9UhfCaZ.js";import"./useTheme-BiiIEuaW.js";import"./Stack-CCWpXknc.js";import"./useThemeProps-CJIv2GwV.js";import"./getThemeProps-BReT4yLP.js";import"./extendSxProp-BpCHN6MP.js";import"./Box-DkpXgkjV.js";import"./AlertTitle-DRUFccnV.js";import"./Typography-BKcjb63t.js";import"./index-Bdrj1x6q.js";import"./ClickAwayListener-BLlYXqUz.js";import"./getReactElementRef-CkK36AdJ.js";import"./index-ClZPHG2a.js";import"./index-CI1meWOo.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-C_KrjD6B.js";import"./Tooltip-BmMZYRk4.js";import"./index-DxH38UvO.js";import"./useControlled-1x59BUu5.js";import"./Popper-Dm6K9cls.js";import"./Button-SB8XScyN.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-U8UshR-7.js";import"./QueryClientProvider-B5zoqy2B.js";import"./Link-BqlhdZwN.js";import"./Collapse-DYtNuVOV.js";import"./_baseUniq-9RbHjxe5.js";import"./_Uint8Array-BISLfDEB.js";import"./isArray-0Sc2E1VG.js";import"./_getTag-CAM6QWbM.js";import"./isEqual-D_xj1UAB.js";import"./noop-DX6rZLP_.js";import"./merge-CWvb3TbJ.js";import"./_initCloneObject-D6-ehKcT.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-CkpH8R1u.js";import"./inputBaseClasses-B9NzViCC.js";import"./calculateFriendlyFileSize-BpYlpajp.js";import"./CheckCircleTwoTone-B-9ZAYCH.js";import"./InfoTwoTone-Cc5V3tEz.js";import"./useMutation-B97dIDX4.js";import"./dayjs.min-C4odYbRz.js";import"./chunk-AYJ5UCUI-CV2ognkv.js";import"./cloneDeep-C1b6fvoG.js";import"./Skeleton-Btsuz_Uy.js";import"./SkeletonButton-CSP6Z-v9.js";import"./SkeletonInlineBlock-DdGufwJt.js";import"./SkeletonTable-iO2N5zjo.js";import"./times-Cz7G22nA.js";import"./toInteger-SXBPu43b.js";import"./isSymbol-D-0WRXwa.js";import"./SkeletonParagraph-get2FHze.js";import"./MarkdownSynapse-CsWmzYxF.js";import"./Container-DjlBfje9.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(f.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=S(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Qr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const Xr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,Xr as __namedExportsOrder,Qr as default};
