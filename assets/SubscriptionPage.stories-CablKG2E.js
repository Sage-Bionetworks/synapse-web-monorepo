import{j as r}from"./jsx-runtime-Du8NFWEI.js";import{r as e}from"./index-Dl6G-zuu.js";import{b as h}from"./useSubscription-BdprhG06.js";import{$ as s,j as O}from"./index-CcBaOCma.js";import{S as y}from"./SubscriptionItem-hrNZa7FE.js";import{D}from"./DropdownSelect-CMqgsK9r.js";import{B as I}from"./Box-DRYT9rh3.js";import{T,a as d}from"./Tabs-BIOuo03q.js";import{S as v}from"./Stack-D3AEdRlD.js";import{B as R}from"./Button-CLkrjdQe.js";import{M as C}from"./getEndpoint-CjoHA800.js";import{g as E}from"./handlers-BWynNdbU.js";import"./SynapseClient-DP0EClpj.js";import"./OrientationBanner-Bu9ikIUy.js";import"./FullWidthAlert-DPoiEavU.js";import"./Alert-Aa0bm5Nm.js";import"./createTheme-DFSTUSmt.js";import"./index-GEGPABih.js";import"./styled-D9wW3ABP.js";import"./mergeSlotProps-deWJORir.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CEBgoE3Z.js";import"./createSvgIcon-gkOuU5-G.js";import"./Paper-6hBhi2Vr.js";import"./IconButton-CLoAcDX9.js";import"./ButtonBase-BgDXtZj-.js";import"./TransitionGroupContext-B611AcNu.js";import"./useIsFocusVisible-Cwvw9TRl.js";import"./AlertTitle-DKLb405u.js";import"./Typography-DgBbIcOX.js";import"./utils-Bdp_oNP4.js";import"./index-B6qzg4VC.js";import"./Grow-lFU1cKdF.js";import"./ClickAwayListener-5odGQiyi.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-Drr3vXNI.js";import"./index-hJhP8EJR.js";import"./SynapseConstants-DgdtLHZU.js";import"./tinycolor-Begke6kS.js";import"./InfoTwoTone-BOGoGeNw.js";import"./CheckCircleTwoTone-U_UPMvHV.js";import"./colorManipulator-2ZEM0eRC.js";import"./inputBaseClasses-ZfVcQiUT.js";import"./Fade-Bhxuafx5.js";import"./EntityTypeUtils-B_e8UrIf.js";import"./dayjs.min-d18Up55D.js";import"./index-BfyspvgH.js";import"./tiny-invariant-CopsF_GD.js";import"./Link-Cl5bQMMR.js";import"./_getTag-BK1szWWC.js";import"./_Map-CWVOAJuy.js";import"./isArray-ggc3KxVp.js";import"./StringUtils-D4kDWP8q.js";import"./useMutation-xLF48Cw1.js";import"./useInfiniteQuery-DLYPE-cH.js";import"./Topic-C738nEme.js";import"./IconSvg-CJ-gK6N6.js";import"./ErrorOutlined-CnICwQW0.js";import"./GetAppTwoTone-CEgy4oXX.js";import"./InfoOutlined-DJDm_gVQ.js";import"./ConditionalWrapper-Be926PbJ.js";import"./Skeleton-1jrlRaLC.js";import"./useForum-DGs1Ocyc.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntity-CNee3fU8.js";import"./useQueries-C_ijSMnb.js";import"./isEqualWith-C3M3X9js.js";import"./isEqual-fx5nODOB.js";import"./_Uint8Array-kXJ5rGjS.js";import"./_baseTimes-DoMoQz2v.js";import"./_cacheHas-CXp-3pXr.js";import"./_setToArray-CSiN_fit.js";import"./_getAllKeys-YRYHGnch.js";import"./pick-BlIfypZz.js";import"./_baseIndexOf-DlmoT9Yo.js";import"./toInteger-CoOs-5Xi.js";import"./isSymbol-BzKS7Qf1.js";import"./toString-CYyvKWOl.js";import"./_baseClone-fSJhb1mi.js";import"./_initCloneObject-CtX8iLDk.js";import"./_defineProperty-Df4ZcNZr.js";import"./_baseIteratee-B61wiEnd.js";import"./_getMatchData-CZjDTQeV.js";import"./identity-DKeuBCMA.js";import"./_baseSlice-F8doVSIJ.js";import"./isPlainObject-r6ak-40U.js";import"./_overRest-DUrPJxXC.js";import"./QueryFilterUtils-CDDayhI2.js";import"./isNumber-BM-UBS4N.js";import"./useThread-CEK2KRom.js";import"./MenuList-CWcqbzO9.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./List-JFp8Imct.js";import"./MenuItem-Dw5ZhG7D.js";import"./dividerClasses-B5r-ooM0.js";import"./ownerWindow-BN2rbQ_G.js";import"./index-DberjNsh.js";import"./util-BwYjYPTz.js";import"./index-Cyuxf3kn.js";import"./entityHandlers-YpIPMqxG.js";import"./index-8uwHf10k.js";import"./mock_user_profile-DyzXylki.js";import"./mockProject-C5WQTUX9.js";import"./mockTeam-BwddDiL3.js";import"./uniqueId-CSw6ftlJ.js";import"./times-CNSOYeu0.js";import"./mockTableEntity-C38ZZbHo.js";import"./mockFileEntityACLVariants-DY8KDaCB.js";import"./fakerUtils-JZNSDtdI.js";import"./mockFileEntity-CdbBDUeR.js";import"./mock_file_handle-t8pF9a1t.js";import"./mockEntity-DbC21_wK.js";import"./mockSchema-7NrTz0Nf.js";import"./userProfileHandlers-qERnpyXi.js";import"./accessRequirementHandlers-CZUPi8oq.js";import"./mockAccessRequirements-B5WXVDIZ.js";import"./mockWiki-CrgHzIE3.js";import"./MockSubmission-Bob0pL-i.js";import"./mockWikiPageKey-BCPXMVhx.js";import"./BasicMockedCrudService-DJLIVP-i.js";import"./cloneDeep-DCoGJ7oU.js";import"./dataAccessRequestHandlers-BPvFlcQa.js";import"./MockResearchProject-DViFo9Te.js";import"./researchProjectHandlers-CHz8mBgB.js";import"./fileHandlers-iYZtEGEH.js";import"./mock_discussion-D9SmgZW0.js";import"./tableQueryHandlers-E3GenhiR.js";import"./mockEvaluationQueue-BiYUFHwS.js";import"./mockAnnotationColumns-CTpm1e9a.js";import"./personalAccessTokenHandlers-BHWUHo_c.js";import"./teamHandlers-DZV8pquV.js";import"./accessRequirementAclHandlers-qyW4-EGS.js";import"./mockAccessRequirementAcls-B70sUsM0.js";import"./resetTwoFactorAuthHandlers-BsV317ZB.js";import"./main-BZBdB3dd.js";import"./index-CLScwntm.js";import"./index-BXtAqCP_.js";import"./index-HWWQfQl8.js";const o=[{value:"ASC",label:"Date Posted"},{value:"DESC",label:"Most Recent"}];function F(){const[a,b]=e.useState(s.FORUM),[n,S]=e.useState(o[0]),f=e.useId(),c={objectType:a,sortBy:O.CREATED_ON,sortDirection:n.value},{data:m,hasNextPage:j,isFetchingNextPage:l,fetchNextPage:P}=h(c,{staleTime:1/0,select:t=>({pages:t.pages.flatMap(p=>p.results),pageParams:t.pageParams})},[`subscriptionPageFetch_${f}`,c]);return r.jsxs(r.Fragment,{children:[r.jsx(I,{sx:{float:"right"},children:r.jsx(D,{variant:"outlined",options:o.map(t=>t.label),selectedIndex:o.findIndex(t=>t.value===n.value),setSelectedIndex:t=>S(o[t])})}),r.jsxs(T,{sx:{mb:3},value:a,onChange:(t,p)=>{t.stopPropagation(),b(p)},textColor:"secondary",indicatorColor:"secondary",children:[r.jsx(d,{value:s.FORUM,label:"Project Forums"}),r.jsx(d,{value:s.THREAD,label:"Threads"})]}),r.jsx(v,{gap:.5,children:m==null?void 0:m.pages.map(t=>r.jsx(y,{subscription:t},t.subscriptionId))}),j&&r.jsx(R,{variant:"contained",onClick:()=>{P()},disabled:l,sx:{mt:6},children:l?"Loading...":"Load More"})]})}const ao={title:"Synapse/Following/SubscriptionPage",component:F,parameters:{stack:"mock"}},i={name:"SubscriptionPage",args:{},parameters:{msw:{handlers:{...E(C)}}}};var u,g,x;i.parameters={...i.parameters,docs:{...(u=i.parameters)==null?void 0:u.docs,source:{originalSource:`{
  name: 'SubscriptionPage',
  args: {},
  parameters: {
    msw: {
      handlers: {
        ...getHandlers(MOCK_REPO_ORIGIN)
      }
    }
  }
}`,...(x=(g=i.parameters)==null?void 0:g.docs)==null?void 0:x.source}}};const no=["Demo"];export{i as Demo,no as __namedExportsOrder,ao as default};
