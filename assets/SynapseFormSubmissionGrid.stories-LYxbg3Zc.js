import{j as l}from"./jsx-runtime-CXqxCHrr.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-D7B5DUS5.js";import{aF as S,M as a}from"./useFiles-zmIgDHgj.js";import"./OrientationBanner-BM51AJT8.js";import"./index-chvr4nzo.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-IqOx8qf5.js";import{S as E}from"./SynapseFormSubmissionGrid-DtTvtTQ6.js";import"./mockSchema-CcDGb-Ih.js";import"./mockFileEntity-CgMDx3a4.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-BiSUargM.js";import"./mockTeam-BbAf42s4.js";import"./SynapseConstants-B7Xg8pkB.js";import"./uniqueId-VnPzv2Vz.js";import"./toString-y7XO4Sie.js";import"./isObjectLike-IzodiS5Q.js";import"./iframe-mEF7r3QC.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-BORYxnqm.js";import"./times-DWGtqSst.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-CYxypN5Y.js";import"./asyncJobHandlers-DozSkPJd.js";import"./BasicMockedCrudService-DC7MY2XB.js";import"./cloneDeep-BJ-BOCet.js";import"./_Uint8Array-z-B_nzR7.js";import"./_initCloneObject-CMW1C9rS.js";import"./_getTag-B5Qu8EDV.js";import"./isEqual-B86MZMBQ.js";import"./_baseIsEqual-dyv7qhgE.js";import"./mockAnnotationColumns-VdStg_Cf.js";import"./tableQueryHandlers-BaAe74Uk.js";import"./omit-BjrGxXFW.js";import"./_baseGet-Dz7GkiLF.js";import"./isNil-DDPeQmp8.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-vKDFgieM.js";import"./_baseFlatten-DnD84nId.js";import"./pick-HC6LxDMW.js";import"./_baseSet-BSyfA63u.js";import"./hasIn-BkRike-3.js";import"./accessRequirementAclHandlers-BMqr0AAf.js";import"./mockAccessRequirementAcls-_5Jey1hF.js";import"./mockAccessRequirements-C8996DQQ.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-KDo8yPR7.js";import"./wikiHandlers-CmYns1un.js";import"./mockWikiPageKey-DOWbB9XQ.js";import"./teamHandlers-CsJeXTtk.js";import"./dataAccessRequestHandlers-CruD6zWI.js";import"./MockResearchProject-CnwbvutH.js";import"./mock_discussion-BkZmHtwx.js";import"./fakerUtils-CVcuog6W.js";import"./index-B5KLe_Kq.js";import"./mockTableEntity-a1Mx6Ebc.js";import"./mockFileEntityACLVariants-B5-D3Zwe.js";import"./entityHandlers-Dak1mgWG.js";import"./mockEntity-DmW9LaRU.js";import"./mockEvaluationQueue-CxRV3Met.js";import"./featureFlagHandlers-CTZkxgLK.js";import"./fileHandlers-69weBkBm.js";import"./personalAccessTokenHandlers-DM9sDECb.js";import"./researchProjectHandlers-D4ILVWrd.js";import"./resetTwoFactorAuthHandlers-Dav7y-WW.js";import"./userProfileHandlers-DGbhX-QS.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-DyGj_AR7.js";import"./FullWidthAlert-6C2VnmRK.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-9xz83nqa.js";import"./createTheme-BPHeU5pH.js";import"./resolveComponentProps-CbO5b_W8.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CaxDp9Tt.js";import"./createSvgIcon-Dtr3C6X8.js";import"./DefaultPropsProvider-CQhminKs.js";import"./Close-BIQ5NLvL.js";import"./IconButton-CnvaAokU.js";import"./ButtonBase-BLchPz6_.js";import"./useTimeout-BWWIDppC.js";import"./useIsFocusVisible-B8jESHd6.js";import"./useEventCallback-DLF8tsWn.js";import"./Paper-CiYpDnEl.js";import"./Stack-Cqm_sIC4.js";import"./getThemeProps-svO4y_8_.js";import"./useTheme-CxHbQHwg.js";import"./Box-DhrCRVep.js";import"./AlertTitle-BiQA2OHP.js";import"./Typography-TPoZq6Wq.js";import"./useTheme-BltnVY5I.js";import"./Grow-DruuI62p.js";import"./index-B5S9-Spv.js";import"./utils-B6LfoJiy.js";import"./ClickAwayListener-BLAWwxqk.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-3yxV1myM.js";import"./index-HXVr3Mau.js";import"./useControlled-WEflZAwQ.js";import"./useId-B8wqeFko.js";import"./Popper-B5wcKjOJ.js";import"./Button-BpvCZV0i.js";import"./useQuery-Dy_B_T4H.js";import"./utils-Dl0-3C1y.js";import"./Link-7m1R2YkZ.js";import"./Collapse-BEP1-Zw5.js";import"./tinycolor-Begke6kS.js";import"./Fade-sswq0Zcs.js";import"./Skeleton-BetMcy4d.js";import"./inputBaseClasses-B8luTHJ2.js";import"./calculateFriendlyFileSize-JSfKWotV.js";import"./CheckCircleTwoTone-kEK2dVkR.js";import"./InfoTwoTone-DHKS4jcI.js";import"./useMutation-VbtcAGxp.js";import"./dayjs.min-BdvEa-tw.js";import"./chunk-AYJ5UCUI-BN6H7asg.js";import"./index-Cvd5NvQW.js";import"./react-BD6rhIxb.js";import"./util-SEVA7v08.js";import"./WideButton-BB-JeNdp.js";import"./DeleteTwoTone-CTfXu5Gv.js";import"./createSvgIcon-DXMH5XeP.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-DU9GM5W6.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-BO4H7qd0.js";import"./DialogBase-CHfvPM6o.js";import"./Close-DLhSxV5W.js";import"./HelpPopover-BzbHfyTa.js";import"./MarkdownPopover-BVllK_vx.js";import"./LightTooltip-BM7WLSpd.js";import"./MarkdownSynapse-BbrCkaT4.js";import"./SkeletonButton-Cb2217s4.js";import"./SkeletonInlineBlock-B6IpNbJK.js";import"./SkeletonTable-BZB15oC3.js";import"./SkeletonParagraph-aLo-jbSt.js";import"./HelpOutlineTwoTone-Fz6r2Eh-.js";import"./DialogTitle-f8QK_bhT.js";import"./DialogContent-CFWtB6ul.js";import"./Dialog-Db1sOmVN.js";import"./Modal-ZiYu3hM8.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-CsHfhpP9.js";import"./WarningDialog-CK5Kc5-a.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
