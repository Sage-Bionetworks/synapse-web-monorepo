import{j as l}from"./jsx-runtime-7YCwI36c.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-B8M6C2pC.js";import{aH as S,M as a}from"./useFiles-B5k0fHaK.js";import"./OrientationBanner-DjGZBNPH.js";import"./index-C9M_il_J.js";import"./StringUtils-Df7AZImX.js";import{l as _}from"./index-D-8smY63.js";import{S as E}from"./SynapseFormSubmissionGrid-D3TCQuaw.js";import"./mockSchema-BvMMHmLB.js";import"./mockFileEntity-BYvmOyBN.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-DdCf1wsM.js";import"./mockTeam-DfrIOVzt.js";import"./SynapseConstants-BV0-4_QF.js";import"./uniqueId-Dvw_UZkQ.js";import"./toString-CgvljhA6.js";import"./isObjectLike-B9wu438U.js";import"./iframe-M2uNqdbL.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-DfKo8OMF.js";import"./times-DmQE_leI.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-CxwQ7579.js";import"./asyncJobHandlers-CMATu5En.js";import"./BasicMockedCrudService-gRcqoHkh.js";import"./cloneDeep-CD-IgKhG.js";import"./_Uint8Array-CRKTzfcx.js";import"./_initCloneObject-STI8wTbS.js";import"./_getTag-DZdP02yz.js";import"./isEqual-C0SwGJ7g.js";import"./_baseIsEqual-BD0mzzJ-.js";import"./mockAnnotationColumns-yQ0NbRww.js";import"./tableQueryHandlers-BCrTtXbx.js";import"./omit-CXZlJZ_c.js";import"./_baseGet-vMIsAwgT.js";import"./isNil-C1cHp62C.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-DAUGgmio.js";import"./_baseFlatten-CcoQu9mF.js";import"./pick-D24XtY9d.js";import"./_baseSet-CzIEOESr.js";import"./hasIn-uti-PsOs.js";import"./accessRequirementAclHandlers-qZWnvHuq.js";import"./mockAccessRequirementAcls-DetoP7_8.js";import"./mockAccessRequirements-2OGtWjgA.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-DZ_hgIha.js";import"./wikiHandlers-DV5BbYqO.js";import"./mockWikiPageKey-D0PvxgmR.js";import"./teamHandlers-DasVyc-H.js";import"./dataAccessRequestHandlers-B1h-0NZU.js";import"./MockResearchProject-C__lskgX.js";import"./mock_discussion-uFMgkEpO.js";import"./fakerUtils-tXneBTmP.js";import"./index-Bx4Y2Gcl.js";import"./mockTableEntity-B79f1l4T.js";import"./mockFileEntityACLVariants-CRiQxqNA.js";import"./entityHandlers-DichPZhc.js";import"./mockEntity-CC6ZprMx.js";import"./mockEvaluationQueue-CX2so-2v.js";import"./featureFlagHandlers-DFnlusem.js";import"./fileHandlers-BDX-K6rW.js";import"./personalAccessTokenHandlers-DuLZ57jd.js";import"./researchProjectHandlers-C10KyJdo.js";import"./resetTwoFactorAuthHandlers-N_UO_zy5.js";import"./userProfileHandlers-BC85XhiK.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-DOB4L6KT.js";import"./FullWidthAlert-CPVIz4Wz.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-DHZvlRwT.js";import"./createTheme-SdSk3wwD.js";import"./resolveComponentProps-C_boa-fy.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-_q_7mTIm.js";import"./createSvgIcon-BkJZknfb.js";import"./DefaultPropsProvider-CJvfCKAu.js";import"./Close-BiyTYcOV.js";import"./IconButton-PbRpfjbr.js";import"./ButtonBase-CtFMKvXy.js";import"./useTimeout-B8yFsaAv.js";import"./useIsFocusVisible-CqlXx1mp.js";import"./useEventCallback-C8kim-Rr.js";import"./Paper-DxH-uwW9.js";import"./Stack-d5e5w4Ye.js";import"./getThemeProps-DOjU9IFn.js";import"./useTheme-B-J_FYJg.js";import"./Box-CVywjUOl.js";import"./AlertTitle-qqPjl8D9.js";import"./Typography-tuEHvF3F.js";import"./useTheme-CL4VxzvZ.js";import"./Grow-CGZtvPFd.js";import"./index-BUMelamN.js";import"./utils-Ecsgz-ex.js";import"./ClickAwayListener-CulQoVsa.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-5lCyVYpl.js";import"./index-cAvLThiO.js";import"./useControlled-Dl6X9RP0.js";import"./useId-CnHJMbo3.js";import"./Popper-iF4jELXw.js";import"./Button-DAfmUnv3.js";import"./useQuery-Bw2Txi7_.js";import"./utils-DvoQ-FO4.js";import"./Link-YOi7hgdm.js";import"./Collapse-VY5dXbQp.js";import"./tinycolor-Begke6kS.js";import"./Fade-CWwsiTWC.js";import"./Skeleton-CLO42135.js";import"./inputBaseClasses-CDZZCPli.js";import"./calculateFriendlyFileSize-s4H5ytOs.js";import"./CheckCircleTwoTone-QFBnsBZD.js";import"./InfoTwoTone-COYXC-bl.js";import"./mutation-Dso9fTIz.js";import"./dayjs.min-CxuSaHVW.js";import"./chunk-AYJ5UCUI-CPoEp2kj.js";import"./index-DZTeTwJ3.js";import"./react-Cqi5Udnm.js";import"./util-DAMfoFVr.js";import"./WideButton-Bbl31q9F.js";import"./DeleteTwoTone-COAH8oTU.js";import"./createSvgIcon-CvCMisuD.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-DbLSM30j.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-Bj_zfAd6.js";import"./DialogBase-B37xZ4bx.js";import"./Close-CkRRiwYT.js";import"./HelpPopover-L1Gbplmv.js";import"./MarkdownPopover-Dm7u_XH3.js";import"./LightTooltip-CJynzBq8.js";import"./MarkdownSynapse-0AMtaR7N.js";import"./SkeletonButton-BeloOnh2.js";import"./SkeletonInlineBlock-CRLerYnI.js";import"./SkeletonTable-BfrBNQWe.js";import"./SkeletonParagraph-CzsmpWQX.js";import"./HelpOutlineTwoTone-BphNQpuK.js";import"./DialogTitle-Dp7HRBL4.js";import"./DialogContent-6ND99NOI.js";import"./Dialog-CyBRzb4d.js";import"./Modal-w0wZe2CX.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-JxuXEIl9.js";import"./WarningDialog-B-0_BYSZ.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
