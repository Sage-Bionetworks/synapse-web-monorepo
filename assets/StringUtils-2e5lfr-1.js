import{H as E,G as w,I as S,J as y,E as e,i as R}from"./VerificationSubmission-BUSqAuLu.js";const z="Terms of Use",f="org.sagebionetworks.repo.model.TermsOfUseAccessRequirement",d="org.sagebionetworks.repo.model.docker.DockerRepository",_="org.sagebionetworks.repo.model.FileEntity",u="org.sagebionetworks.repo.model.table.MaterializedView",L="org.sagebionetworks.repo.model.table.SubmissionView",i="org.sagebionetworks.repo.model.table.Dataset",c="org.sagebionetworks.repo.model.table.DatasetCollection",I="org.sagebionetworks.repo.model.table.VirtualTable",T="org.sagebionetworks.repo.model.table.TableEntity",U=[E,L,i,c],D=[T,...U,u,I],k="org.sagebionetworks.repo.model.Folder",O="org.sagebionetworks.repo.model.Link",F="org.sagebionetworks.repo.model.Project",P="org.sagebionetworks.repo.model.file.S3FileHandle",Y="org.sagebionetworks.repo.model.file.GoogleCloudFileHandle",g="org.sagebionetworks.repo.model.file.ExternalFileHandle",h="org.sagebionetworks.repo.model.file.ExternalObjectStoreFileHandle",M="org.sagebionetworks.repo.model.file.ProxyFileHandle",B="org.sagebionetworks.repo.model.table.FacetColumnValuesRequest",W="org.sagebionetworks.repo.model.table.FacetColumnRangeRequest";function r(...s){return t=>!!(t&&typeof t=="object"&&"concreteType"in t&&s.includes(t.concreteType))}const Z=r(P,Y),q=r(g),X=r(O),j=r(M,h,g),ee=r(d),se=r(B),te=r(W),re=r(y),oe=r(w),ne=r(S),ae=r(_),Ee=r(f);function ie(s){return s.node_type?s.node_type:s.type===void 0?e.PROJECT:p(s.type)}function ce(s){switch(s){case e.PROJECT:case e.FOLDER:return!0;case e.LINK:case e.DOCKER_REPO:case e.FILE:case e.TABLE:case e.SUBMISSION_VIEW:case e.ENTITY_VIEW:case e.DATASET:case e.DATASET_COLLECTION:case e.MATERIALIZED_VIEW:case e.VIRTUAL_TABLE:return!1;default:throw new Error(`Unknown entity type: ${s}`)}}function Te(s){switch(s){case e.PROJECT:case e.FOLDER:case e.LINK:case e.DOCKER_REPO:case e.FILE:return!1;case e.TABLE:case e.SUBMISSION_VIEW:case e.ENTITY_VIEW:case e.DATASET:case e.DATASET_COLLECTION:case e.MATERIALIZED_VIEW:case e.VIRTUAL_TABLE:return!0;default:throw new Error(`Unknown entity type: ${s}`)}}function le(s){switch(s){case e.PROJECT:return"Project";case e.FOLDER:return"Folder";case e.FILE:return"File";case e.TABLE:return"Table";case e.LINK:return"Link";case e.ENTITY_VIEW:return"View";case e.DOCKER_REPO:return"Docker Repository";case e.SUBMISSION_VIEW:return"Submission View";case e.DATASET:return"Dataset";case e.DATASET_COLLECTION:return"Dataset Collection";case e.MATERIALIZED_VIEW:return"Materialized View";case e.VIRTUAL_TABLE:return"Virtual Table";default:return console.warn("Entity type could not be mapped to name:",s),""}}function p(s){if(Object.values(e).includes(s))return s;switch(s){case"org.sagebionetworks.repo.model.Project":return e.PROJECT;case"org.sagebionetworks.repo.model.Folder":return e.FOLDER;case _:return e.FILE;case"org.sagebionetworks.repo.model.Link":return e.LINK;case"org.sagebionetworks.repo.model.docker.DockerRepository":return e.DOCKER_REPO;case T:return e.TABLE;case"org.sagebionetworks.repo.model.table.SubmissionView":return e.SUBMISSION_VIEW;case E:return e.ENTITY_VIEW;case i:return e.DATASET;case c:return e.DATASET_COLLECTION;case u:return e.MATERIALIZED_VIEW;case I:return e.VIRTUAL_TABLE;default:throw new Error(`Unknown entity type: ${s}`)}}function _e(s){switch(s){case e.PROJECT:return"org.sagebionetworks.repo.model.Project";case e.FOLDER:return"org.sagebionetworks.repo.model.Folder";case e.FILE:return"org.sagebionetworks.repo.model.FileEntity";case e.LINK:return"org.sagebionetworks.repo.model.Link";case e.DOCKER_REPO:return"org.sagebionetworks.repo.model.docker.DockerRepository";case e.TABLE:return"org.sagebionetworks.repo.model.table.TableEntity";case e.SUBMISSION_VIEW:return"org.sagebionetworks.repo.model.table.SubmissionView";case e.ENTITY_VIEW:return"org.sagebionetworks.repo.model.table.EntityView";case e.DATASET:return"org.sagebionetworks.repo.model.table.Dataset";case e.DATASET_COLLECTION:return"org.sagebionetworks.repo.model.table.DatasetCollection";case e.MATERIALIZED_VIEW:return"org.sagebionetworks.repo.model.table.MaterializedView";case e.VIRTUAL_TABLE:return"org.sagebionetworks.repo.model.table.VirtualTable";default:throw new Error(`Unknown entity type: ${s}`)}}function v(s){switch(s){case e.PROJECT:case e.FOLDER:case e.LINK:case e.DOCKER_REPO:case e.SUBMISSION_VIEW:case e.MATERIALIZED_VIEW:case e.VIRTUAL_TABLE:return!1;case e.FILE:case e.TABLE:case e.ENTITY_VIEW:case e.DATASET:case e.DATASET_COLLECTION:return!0;default:throw new Error(`Unknown entity type: ${s}`)}}const K=r(...D),ue=r(T),Le=r(L),N=r(i),H=r(c),Ie=s=>N(s)||H(s),Ae=r(E);function Ce(s){return(s.viewTypeMask&R)!=0}function Re(s){return s.viewTypeMask===R}function J(s){return v(p(s.concreteType))}function de(s){return J(s)?s.isLatestVersion?K(s)?N(s)?"Draft":"Current":`${s.versionNumber.toString()} (Current)`:s.versionNumber.toString():(console.warn("Entity isn't versionable:",s),"")}function Q(s){return s.toLowerCase().startsWith("syn")?s.toLowerCase():`syn${s}`}const n=["name","description","id","etag","createdOn","modifiedOn","createdBy","modifiedBy","parentId","concreteType"],V=[...n,"versionNumber","versionLabel","versionComment","isLatestVersion"],a=[...V,"columnIds","isSearchEnabled"],l=[...a],C=[...l,"items"],Oe={[O]:[...n,"linksTo","linksToClassName"],[d]:[...n,"repositoryName","isManaged"],[_]:[...V,"dataFileHandleId","fileNameOverride"],[L]:[...l,"scopeIds"],[i]:[...C,"size","checksum"],[c]:[...C],[E]:[...l,"scopeIds","viewTypeMask","type"],[T]:a,[u]:[...a,"definingSQL"],[I]:[...a,"definingSQL"],[k]:n,[F]:[...n,"alias"]},ge={ALL_TABLES:[e.TABLE,e.ENTITY_VIEW,e.SUBMISSION_VIEW,e.DATASET,e.DATASET_COLLECTION,e.MATERIALIZED_VIEW,e.VIRTUAL_TABLE],CONTAINER:[e.PROJECT,e.FOLDER]},$=/^10.\d{4,9}\/[-._;()/:a-z0-9]+$/i;function pe(s){return s=s.trim(),$.test(s)?`https://dx.doi.org/${s}`:""}const m=/^(syn\d+)(?:\.(\d+))?$/i;function x(s){const t=m.exec(s);return t&&{targetId:Q(t[1]),targetVersionNumber:t[2]?parseInt(t[2]):void 0}}function Ne(s,t,o="â€¦"){return s.length<=t?s:s.substring(0,t)+o}function Ve(s){s==null&&(s="");let t=0;for(let o=0,A=s.length;o<A;o++){const b=s.charCodeAt(o);t=(t<<5)-t+b,t|=0}return t}function me(s){if(typeof s=="number")return s;if(s.match(m)){const t=x(s).targetId;return parseInt(t.substring(3))}else return parseInt(s)}function be(s){if(s.trim().length<8)return"A valid password must be at least 8 characters long";if(!/[a-zA-Z]/.test(s))return"A valid password must include letters";if(!/\d/.test(s))return"A valid password must include digits (0-9)";if(!/[~!@#$%^&*_\-+=`|\\(){}[\]:;"'<>,.?/]/.test(s))return"A valid password must include special characters ~!@#$%^&*_-+=`|\\(){}[]:;\"'<>,.?/"}function we(s){return new Promise((t,o)=>{setTimeout(()=>{navigator.clipboard.writeText(s).then(t).catch(o)},0)})}export{ee as A,z as B,ae as C,q as D,h as E,_ as F,Y as G,Te as H,X as I,Z as J,Ce as K,j as L,Ee as M,se as N,oe as O,M as P,ne as Q,re as R,m as S,f as T,te as U,U as V,ue as W,Ve as X,Re as Y,Ie as a,ge as b,we as c,pe as d,le as e,Q as f,_e as g,ce as h,Ae as i,p as j,ie as k,P as l,g as m,me as n,N as o,H as p,Le as q,K as r,x as s,Ne as t,J as u,be as v,de as w,v as x,Oe as y,F as z};
