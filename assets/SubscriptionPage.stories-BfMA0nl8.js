import{g as E}from"./handlers-DQ7XJ3Pz.js";import{g as j,B as I,M as N}from"./useFiles-N2sWxoXQ.js";import{j as t}from"./jsx-runtime--VDmQxho.js";import{a as h,b as R}from"./useSubscription-DYqD2ySL.js";import{p as s,m as D}from"./VerificationSubmission-DKyendrM.js";import{r as b}from"./index-CuDCD8Cd.js";import{D as F}from"./DropdownSelect-CT7emv2v.js";import"./StringUtils-BcSmk1fX.js";import"./OrientationBanner-BCQbNnza.js";import{u as v}from"./useEntity-B_x_fZZc.js";import{c as M}from"./useForum-CGT7Bt6g.js";import{T as P}from"./Topic-BOpHl5O1.js";import{c as C}from"./useThread-Bd19ghQf.js";import{B as k}from"./Box-BXO-o3lc.js";import{T as A,a as T}from"./Tabs-DcTKelsp.js";import{S as B}from"./Stack-I2caYhOY.js";import{B as $}from"./Button-D4VXSl38.js";import"./mockSchema-Bc9N0GCp.js";import"./mockFileEntity-SBUMwMy5.js";import"./mock_file_handle-qAzg5fnb.js";import"./mock_user_profile-CCzWeUML.js";import"./mockProject-C82Jtuhn.js";import"./mockTeam-D6mRJ3Da.js";import"./SynapseConstants-wMEBUGx4.js";import"./uniqueId-B2RitIGp.js";import"./toString-Cido_b79.js";import"./isObjectLike-D8j_XhY_.js";import"./iframe-BqzTMP-6.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-b6S760dv.js";import"./times-CZUoS7da.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-CD9iJoTR.js";import"./asyncJobHandlers-C3S4Ajzw.js";import"./index-BR3A0YTJ.js";import"./util-BB3uEwL1.js";import"./BasicMockedCrudService-DxukSu-S.js";import"./cloneDeep-nOAbP7jl.js";import"./_Uint8Array-x6e4vkBj.js";import"./_initCloneObject-C2EI-6Xb.js";import"./_getTag-BuRU9Bgy.js";import"./isEqual-C90r3yLJ.js";import"./mockAnnotationColumns-9CyNuQC4.js";import"./tableQueryHandlers-ejAZbgte.js";import"./omit-B7UpLx4k.js";import"./_baseGet-aJ4iGzn8.js";import"./isNil-DkKNgmMM.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BzBrfKpd.js";import"./_baseFlatten-CnqKZEBO.js";import"./pick-D1XlUt9k.js";import"./_baseSet-CxXCKVY7.js";import"./hasIn-BGC_QG9A.js";import"./accessRequirementAclHandlers-CUkoUAz1.js";import"./mockAccessRequirementAcls-DqZr5rke.js";import"./mockAccessRequirements-S7p6TCtE.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CfZ4orwO.js";import"./accessRequirementHandlers-D67ZHPnd.js";import"./wikiHandlers-BXg5vaSq.js";import"./mockWikiPageKey-BhyDEiGy.js";import"./teamHandlers-CzoWt_sn.js";import"./dataAccessRequestHandlers-CHQdng3u.js";import"./MockResearchProject-Chv2qDtq.js";import"./mock_discussion-BrPe6Xzi.js";import"./fakerUtils-D2O04Bvk.js";import"./index-BMPGzHzC.js";import"./mockTableEntity-DmDB2i0l.js";import"./mockFileEntityACLVariants-Bs0O1VI2.js";import"./entityHandlers-DIZyh5pZ.js";import"./mockEntity-C74efFsx.js";import"./mockEvaluationQueue-yg-FP2U8.js";import"./featureFlagHandlers-8p3sxcrx.js";import"./fileHandlers-CbatJmu8.js";import"./personalAccessTokenHandlers-DmKapYhe.js";import"./researchProjectHandlers-DoT8o_GD.js";import"./resetTwoFactorAuthHandlers-D6VwfM8q.js";import"./userProfileHandlers-BLBc_zlK.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useTimeout-DATmwXFk.js";import"./FullWidthAlert-1M5hpNih.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-p-r8DxH1.js";import"./createTheme-BjDkboqX.js";import"./DefaultPropsProvider-B_Sofjtv.js";import"./useSlot-DS3iUyMI.js";import"./useForkRef-CsgOK780.js";import"./createSimplePaletteValueFilter-esMbi9-T.js";import"./createSvgIcon-DxUNcRk1.js";import"./Close-OfKhpn5t.js";import"./IconButton-CMsWyADJ.js";import"./ButtonBase-AwvyoIOV.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DqVQN-ep.js";import"./Paper-DbEaZNKI.js";import"./useTheme-D1oNS_LI.js";import"./useTheme-D6w9qOOY.js";import"./AlertTitle-B7-3cLF-.js";import"./Typography-DxMOu3Nh.js";import"./index-DGodYfXt.js";import"./extendSxProp-B48CrRxU.js";import"./ClickAwayListener-Deska0ZP.js";import"./getReactElementRef-QT_YGi8b.js";import"./index--qVxq6-z.js";import"./index-Dgn98faf.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DGRSNWMN.js";import"./Tooltip-DrQgQo01.js";import"./index-Dh59YMo3.js";import"./useControlled-BhFUbj8p.js";import"./Popper-CTKKY7d_.js";import"./useQuery-q3zwWk44.js";import"./utils-A-KMXcap.js";import"./Link-DZQNNy4T.js";import"./Collapse-BDOLvwNe.js";import"./tinycolor-Begke6kS.js";import"./Fade-DDna5lT4.js";import"./inputBaseClasses-BS6ehBVH.js";import"./calculateFriendlyFileSize-DLpqeOM4.js";import"./CheckCircleTwoTone-OACbepET.js";import"./InfoTwoTone-89W568jB.js";import"./useMutation-Dngnwen0.js";import"./dayjs.min-BncQY9dT.js";import"./chunk-AYJ5UCUI-DEJIN_fb.js";import"./Skeleton-BVCwjyC9.js";import"./useInfiniteQuery-j10D2IJg.js";import"./IconSvg-D9EwyRVB.js";import"./LayersTwoTone-DfEG8Pgc.js";import"./ContentCopyTwoTone-FHEdadtO.js";import"./HelpOutlineTwoTone-FgImn47T.js";import"./ErrorOutlined-WZOH3Yqc.js";import"./GetAppTwoTone-BCzY7D5d.js";import"./InfoOutlined-BP5CEM5O.js";import"./PhoneTwoTone-nglS6_xF.js";import"./DeleteTwoTone-D4x-mlJu.js";import"./getValidReactChildren-B4X7PJD8.js";import"./MenuList-DYSX5ARg.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./List-CZ6pjOnt.js";import"./MenuItem-BY1_j8x1.js";import"./dividerClasses-D8Cs9nt-.js";import"./index-DmHdRDtR.js";import"./react-dbF9bnqN.js";import"./pickBy-DxOq1wp_.js";import"./_baseIndexOf-rBnIfvEs.js";import"./isString-QTpQCu8n.js";import"./_baseIteratee-BxlGxqBv.js";import"./useQueries-D_--ULMm.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntityBundle-D_QKIY3o.js";import"./ConditionalWrapper-C3mSAglj.js";import"./debounce-Be36O1Ab.js";import"./KeyboardArrowRight-WFetd203.js";import"./getThemeProps-B_gV8fQl.js";function g(i){const{subscription:p}=i,{data:o}=M(p.objectId),{data:m}=v(o==null?void 0:o.projectId,void 0,{enabled:!!o}),{isSubscribed:a,isLoading:n,toggleSubscribed:e}=h(p.objectId,s.FORUM);let c;return o&&(c=`${j(I.PORTAL_ENDPOINT)}Synapse:${o.projectId}/discussion`),t.jsx(P,{isLoading:n,isSubscribed:a,icon:"dashboard",name:m==null?void 0:m.name,nameHref:c,onToggleSubscribe:e})}try{g.displayName="ForumTopic",g.__docgenInfo={description:"",displayName:"ForumTopic",props:{subscription:{defaultValue:null,description:"",name:"subscription",required:!0,type:{name:"Subscription"}}}}}catch{}function H(i){const{subscription:p}=i,{threadData:o}=C(p.objectId),{isSubscribed:m,isLoading:a,toggleSubscribed:n}=h(p.objectId,s.THREAD);let e;return o&&(e=`${j(I.PORTAL_ENDPOINT)}Synapse:${o.projectId}/discussion/threadId=${p.objectId}`),t.jsx(P,{isLoading:a,isSubscribed:m,icon:"discussion",name:o==null?void 0:o.title,nameHref:e,onToggleSubscribe:n})}try{ThreadTopic.displayName="ThreadTopic",ThreadTopic.__docgenInfo={description:"",displayName:"ThreadTopic",props:{subscription:{defaultValue:null,description:"",name:"subscription",required:!0,type:{name:"Subscription"}}}}}catch{}function S(i){const{subscription:p}=i;switch(p.objectType){case s.FORUM:return t.jsx(g,{subscription:p});case s.THREAD:return t.jsx(H,{subscription:p});default:return console.warn(`Subscription type ${i.subscription.objectType} not supported in UI`),t.jsx(t.Fragment,{})}}try{S.displayName="SubscriptionItem",S.__docgenInfo={description:`Simple discriminator component that maps a {@link Subscription} rendered on the {@link SubscriptionPage } to
a {@link Topic } component`,displayName:"SubscriptionItem",props:{subscription:{defaultValue:null,description:"",name:"subscription",required:!0,type:{name:"Subscription"}}}}}catch{}const d=[{value:"ASC",label:"Date Posted"},{value:"DESC",label:"Most Recent"}];function w(){const[i,p]=b.useState(s.FORUM),[o,m]=b.useState(d[0]),a=b.useId(),n={objectType:i,sortBy:D.CREATED_ON,sortDirection:o.value},{data:e,hasNextPage:c,isFetchingNextPage:f,fetchNextPage:O}=R(n,{staleTime:1/0,select:r=>({pages:r.pages.flatMap(l=>l.results),pageParams:r.pageParams})},[`subscriptionPageFetch_${a}`,n]);return t.jsxs(t.Fragment,{children:[t.jsx(k,{sx:{float:"right"},children:t.jsx(F,{variant:"outlined",options:d.map(r=>r.label),selectedIndex:d.findIndex(r=>r.value===o.value),setSelectedIndex:r=>m(d[r])})}),t.jsxs(A,{sx:{mb:3},value:i,onChange:(r,l)=>{r.stopPropagation(),p(l)},textColor:"secondary",indicatorColor:"secondary",children:[t.jsx(T,{value:s.FORUM,label:"Project Forums"}),t.jsx(T,{value:s.THREAD,label:"Threads"})]}),t.jsx(B,{sx:{gap:.5},children:e==null?void 0:e.pages.map(r=>t.jsx(S,{subscription:r},r.subscriptionId))}),c&&t.jsx($,{variant:"contained",onClick:()=>{O()},disabled:f,sx:{mt:6},children:f?"Loading...":"Load More"})]})}const Hr={title:"Synapse/Following/SubscriptionPage",component:w,parameters:{stack:"mock"}},u={name:"SubscriptionPage",args:{},parameters:{msw:{handlers:{...E(N)}}}};var _,y,x;u.parameters={...u.parameters,docs:{...(_=u.parameters)==null?void 0:_.docs,source:{originalSource:`{
  name: 'SubscriptionPage',
  args: {},
  parameters: {
    msw: {
      handlers: {
        ...getHandlers(MOCK_REPO_ORIGIN)
      }
    }
  }
}`,...(x=(y=u.parameters)==null?void 0:y.docs)==null?void 0:x.source}}};const wr=["Demo"];export{u as Demo,wr as __namedExportsOrder,Hr as default};
