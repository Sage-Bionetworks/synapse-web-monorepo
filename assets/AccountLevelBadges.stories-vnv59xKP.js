import{g as f}from"./userProfileHandlers-sHt61dnx.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-FKGDO0i0.js";import{A}from"./AccountLevelBadges-BiqF8UCe.js";import"./VerificationSubmission-D0sL2gwz.js";import"./index-BdtaS5LO.js";import"./iframe-BPJnb6Jo.js";import"./mockEntity-DZyr0zkM.js";import"./mockFileEntity-CwTfMj46.js";import"./StringUtils-Bt2r5KGg.js";import"./mock_file_handle-BgkszYEk.js";import"./mockProject-m3hEPKa5.js";import"./mockTeam-CDLiq7V3.js";import"./SynapseConstants-1tup86se.js";import"./OrientationBanner-wFOLRJbA.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-Dm9xm2_f.js";import"./index-BfVXz5Ag.js";import"./spreadSx-CwcO6WA9.js";import"./react-DPdF_HDn.js";import"./FullWidthAlert-D7gQIHFu.js";import"./Alert-60dOS0Xa.js";import"./createTheme-DJo9Xwcd.js";import"./DefaultPropsProvider-D0yRXNne.js";import"./useSlot-C80kZXPi.js";import"./useForkRef-Bpzs6qo7.js";import"./createSimplePaletteValueFilter-r-PmHHmL.js";import"./createSvgIcon-Do0_SfU5.js";import"./Close-CPHWO9Va.js";import"./IconButton-DeQtcGLQ.js";import"./useTimeout-CsEW3D_k.js";import"./ButtonBase-Cv7odYKj.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-CIClC7Gy.js";import"./Paper-C20E8Cgc.js";import"./useTheme-C81SUhxs.js";import"./useTheme-B8fsbezS.js";import"./Stack-De9kMocI.js";import"./extendSxProp-CuFQzNrO.js";import"./getThemeProps-CtclWu-w.js";import"./Box-CS1Km4YM.js";import"./AlertTitle-CMg5aJHW.js";import"./Typography-D_5e3gyE.js";import"./index-DFR37g5z.js";import"./ClickAwayListener--cQ_J2-K.js";import"./getReactElementRef-B6TLCFd5.js";import"./index-Cea427Jc.js";import"./index-t2RIHcQ-.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-C07EywNj.js";import"./Tooltip-D0rMrlze.js";import"./index-vHk_D0dD.js";import"./useControlled-CQJ1STOz.js";import"./Popper-Z30S9dVL.js";import"./Button-D2bAM9JV.js";import"./uniqueId-BhnyMBVF.js";import"./toString-BjDBuBmB.js";import"./isArray-BuXI0-0e.js";import"./isSymbol-hZJz7tyA.js";import"./times-uccdpEI3.js";import"./_Uint8Array-DrmeFWPX.js";import"./identity-DKeuBCMA.js";import"./toInteger-CC76gooO.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-DELzMMV2.js";import"./QueryClientProvider-qgsuxj5j.js";import"./Link-Ce1G5oI1.js";import"./Collapse-DPxPsRRj.js";import"./_baseUniq-h81h2T5v.js";import"./_getTag-r_4sb1yJ.js";import"./isEqual-BIi-LOer.js";import"./merge-BeGPZ09a.js";import"./_initCloneObject-CmBTonNO.js";import"./tinycolor-Begke6kS.js";import"./Fade-C4mFIZyt.js";import"./inputBaseClasses-Cr2M0koQ.js";import"./calculateFriendlyFileSize-Dm5rKT8Q.js";import"./CheckCircleTwoTone-Dwa6jGH6.js";import"./InfoTwoTone-BPDpi3Ad.js";import"./useMutation-BxjyqccJ.js";import"./dayjs.min-BFzgc83H.js";import"./chunk-AYJ5UCUI-B1XrWbGW.js";import"./cloneDeep-Mq5iqCKt.js";import"./Skeleton-nQxz36_4.js";import"./AccountLevelBadge-BJpHL7VV.js";import"./Card-DiTQgXt_.js";import"./ConfirmationDialog-B9Tz6XB0.js";import"./DialogBase-DMgRHPv7.js";import"./Close-N_W7GIyn.js";import"./HelpPopover-CyEtATyK.js";import"./MarkdownPopover-BlF_tjMJ.js";import"./LightTooltip-CpVIy3A7.js";import"./MarkdownSynapse-D7VIxLcB.js";import"./SkeletonButton-BzXCbQ30.js";import"./SkeletonInlineBlock-Bl8WXAnb.js";import"./SkeletonTable-CaSRwDap.js";import"./SkeletonParagraph-CqIyv9bE.js";import"./HelpOutlineTwoTone-DnfC-qQi.js";import"./DialogTitle-6f5KmhLo.js";import"./DialogContent-CQl0uOId.js";import"./Dialog-CuybTGnK.js";import"./Modal-BLfvrouT.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-DpN6JUaK.js";import"./LoadingScreen-Dx-kv04t.js";import"./LinearProgress-DOtVptRB.js";import"./ToastMessage-CwdZkeLo.js";import"./CSSTransition-DpOBXQ7M.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
