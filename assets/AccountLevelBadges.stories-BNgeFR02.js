import{g as f}from"./userProfileHandlers-DSb0Z0t0.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-CGW-jd1f.js";import{A}from"./AccountLevelBadges-DcP2n2DO.js";import"./VerificationSubmission-D0sL2gwz.js";import"./index-DCo3NwXK.js";import"./iframe-E8oGcv1j.js";import"./mockEntity-DnfWEHkq.js";import"./mockFileEntity-HJCQpgKu.js";import"./StringUtils-Bt2r5KGg.js";import"./mock_file_handle-BgkszYEk.js";import"./mockProject-BmA6yhwI.js";import"./mockTeam-CVFmTHFE.js";import"./SynapseConstants-BGT0B1ls.js";import"./OrientationBanner-BD5rKond.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-CbaPxVoO.js";import"./index-De1Zq6J_.js";import"./spreadSx-CwcO6WA9.js";import"./react-u_1KPmwS.js";import"./FullWidthAlert-B3XOziTT.js";import"./Alert-aEGKfIxj.js";import"./createTheme-D7EPNL7b.js";import"./DefaultPropsProvider-CcfTARJV.js";import"./useSlot-3tuE-c2M.js";import"./useForkRef-C6KDMbou.js";import"./createSimplePaletteValueFilter-BqHZsxiX.js";import"./createSvgIcon-BFK5bQ8n.js";import"./Close-FdA3HKi-.js";import"./IconButton-BZ-jzTu8.js";import"./useTimeout-Dv9ZmSsd.js";import"./ButtonBase-DX38kEaJ.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-B6nvT1pK.js";import"./Paper-DtY-LtaX.js";import"./useTheme-xNbW70z-.js";import"./useTheme-BR8tto29.js";import"./Stack-BDxqZFkj.js";import"./extendSxProp-CRDkfaxY.js";import"./getThemeProps-CTXbjC0Y.js";import"./Box-CR3xkiF7.js";import"./AlertTitle-BUhA3yvl.js";import"./Typography-Dqy4KUKl.js";import"./index-vnh1qUaf.js";import"./ClickAwayListener-BFmT95cs.js";import"./getReactElementRef-z7kCRJG8.js";import"./index-DYa4EW63.js";import"./index-C8LquKll.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-eiV7889k.js";import"./Tooltip-DU9LrmZk.js";import"./index-E7O__Phm.js";import"./useControlled-DMRUVe0w.js";import"./Popper-CcioxHhD.js";import"./Button-D-bx5MZt.js";import"./uniqueId-C5MfKxqV.js";import"./toString-CktccFA4.js";import"./isArray-DKCXyRjL.js";import"./isSymbol-CrdGgY1-.js";import"./times-B1u6bRp2.js";import"./_Uint8Array-Bpe28QCt.js";import"./identity-DKeuBCMA.js";import"./toInteger-TRAVrRY7.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-DALRboo3.js";import"./QueryClientProvider-FUbP8408.js";import"./Link-DvLvJsbQ.js";import"./Collapse-CcwUCllw.js";import"./_baseUniq-CXI3CQZE.js";import"./_getTag-DSOAbaVw.js";import"./isEqual-Dg8dgpub.js";import"./merge-DckDRy64.js";import"./_initCloneObject-oQqNGLLJ.js";import"./tinycolor-Begke6kS.js";import"./Fade-DY8MnK-W.js";import"./inputBaseClasses-BoUH4D83.js";import"./calculateFriendlyFileSize-DQKz6tFX.js";import"./CheckCircleTwoTone-D_cE2H8y.js";import"./InfoTwoTone-DH56TLJq.js";import"./useMutation-BX9VoBnj.js";import"./dayjs.min-D6shjXWv.js";import"./chunk-AYJ5UCUI-Qk_pfhhj.js";import"./cloneDeep-DuWLqYh-.js";import"./Skeleton-BAzE4-tl.js";import"./AccountLevelBadge-BNKz6YLv.js";import"./Card-BaUs0Qsf.js";import"./ConfirmationDialog-DkygW6nG.js";import"./DialogBase-BHoKQOlw.js";import"./Close-BZdMlQ8h.js";import"./HelpPopover-DtjPxbdu.js";import"./MarkdownPopover-D1cbfPpq.js";import"./LightTooltip-o_gW4svU.js";import"./MarkdownSynapse-DWWFUrcd.js";import"./SkeletonButton-CdPlqbtL.js";import"./SkeletonInlineBlock-Gww6vO0T.js";import"./SkeletonTable-HXIXFq7J.js";import"./SkeletonParagraph-SLAYWWnh.js";import"./HelpOutlineTwoTone-Dj5qBrEg.js";import"./DialogTitle-CH0AHRbc.js";import"./DialogContent-BBy5k2KZ.js";import"./Dialog-CbjTHool.js";import"./Modal-D_oNhlCd.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-DMp4Gfye.js";import"./LoadingScreen-CWZqWQcA.js";import"./LinearProgress-CN5v7180.js";import"./ToastMessage-B7Yw94I7.js";import"./CSSTransition-D3e6kBv7.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
