import{j as l}from"./jsx-runtime-BoocIWMh.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-CeTcnp1n.js";import{aF as S,M as a}from"./useFiles-DH0hZnW0.js";import"./OrientationBanner-Bn70Goou.js";import"./index-BYsW-UGM.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-csKsYlnZ.js";import{S as E}from"./SynapseFormSubmissionGrid-Dm4DLAii.js";import"./mockSchema-Cn2XYvNL.js";import"./mockFileEntity-kXKChEGV.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-CDmFtK9G.js";import"./mockTeam-BYZJd-Bp.js";import"./SynapseConstants-B43XihpB.js";import"./uniqueId-CAIHFYEr.js";import"./toString-Dw3XAiZg.js";import"./isObjectLike-DLnZxQK6.js";import"./iframe-CvStSd8l.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-B9qkrgeE.js";import"./times-B3tP24wu.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-G7RJxeEd.js";import"./asyncJobHandlers-DLoMGYt2.js";import"./BasicMockedCrudService-cqKBh_ET.js";import"./cloneDeep-DJYJ4ACu.js";import"./_Uint8Array-Baslgj2I.js";import"./_initCloneObject-BMoAasIP.js";import"./_getTag-Bvap34EV.js";import"./isEqual-65PRO3at.js";import"./_baseIsEqual-BADauply.js";import"./mockAnnotationColumns-CMkDZFeL.js";import"./tableQueryHandlers-DQDgninZ.js";import"./omit-C9ouhLGW.js";import"./_baseGet-CE2a-TKl.js";import"./isNil-DCGkC4xE.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-BiFf4Tsw.js";import"./_baseFlatten-CMg3Hpm_.js";import"./pick-9mWRCb4S.js";import"./_baseSet-CkfNZgBB.js";import"./hasIn-D7fczC96.js";import"./accessRequirementAclHandlers-Dy1Ruv-j.js";import"./mockAccessRequirementAcls-BkAhmPXa.js";import"./mockAccessRequirements-Dbkjdzsz.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-DPXHQisg.js";import"./wikiHandlers-DasTXm59.js";import"./mockWikiPageKey-B7ZBxLfB.js";import"./teamHandlers-Cqr5uZ6Z.js";import"./dataAccessRequestHandlers-DzooFFnf.js";import"./MockResearchProject-DapZgNoo.js";import"./mock_discussion-BfZvwRvZ.js";import"./fakerUtils-B4GY8MR2.js";import"./index-BkzgUzfw.js";import"./mockTableEntity-C8IE_z4z.js";import"./mockFileEntityACLVariants-0FSXfAeA.js";import"./entityHandlers-D3bupF9p.js";import"./mockEntity-bgo7v3-C.js";import"./mockEvaluationQueue-L-GXWfoE.js";import"./featureFlagHandlers-DMO5kgzh.js";import"./fileHandlers-B0yHIfxw.js";import"./personalAccessTokenHandlers-2wrs5n0j.js";import"./researchProjectHandlers-DA5f2gSE.js";import"./resetTwoFactorAuthHandlers-CguazO0J.js";import"./userProfileHandlers-pnqVNHvH.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-BhvU_wXg.js";import"./FullWidthAlert-DCsaqEW2.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-UkVPZ6lx.js";import"./createTheme-CD9FYzWa.js";import"./resolveComponentProps-BFawuUKo.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-CrKJLQLu.js";import"./createSvgIcon-CJNY7FN1.js";import"./DefaultPropsProvider-D7kCmuDE.js";import"./Close-B6CzrqbK.js";import"./IconButton-DWqxDXo3.js";import"./ButtonBase-CSQbkZfT.js";import"./useTimeout-3f2ojJp1.js";import"./useIsFocusVisible-DEWRbVzD.js";import"./useEventCallback-Ck__gsyr.js";import"./Paper-aoD8x6kl.js";import"./Stack-vXmPvWOy.js";import"./getThemeProps-V6bVpuH7.js";import"./useTheme-DObaY_2L.js";import"./Box-Crx_KkJs.js";import"./AlertTitle-DlWqoNQG.js";import"./Typography-B2rL68hj.js";import"./useTheme-B8HxMTzh.js";import"./Grow-BZWyJZLH.js";import"./index-1dw1k-mu.js";import"./utils-IzrHSjbr.js";import"./ClickAwayListener-J_XnNFqp.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-B9mLlwV6.js";import"./index-CUnMnMI3.js";import"./useControlled-DRov2nO8.js";import"./useId-e6r5XecO.js";import"./Popper-DRhu15Is.js";import"./Button-DIhDyw4D.js";import"./useQuery-8tRvAzYp.js";import"./utils-Bt3D-rUS.js";import"./Link-ju7JKeKA.js";import"./Collapse-CEHOIevo.js";import"./tinycolor-Begke6kS.js";import"./Fade-BPG5TcKR.js";import"./Skeleton-B-GAbu1S.js";import"./inputBaseClasses-CNrzxZep.js";import"./calculateFriendlyFileSize-Dx0b0pRy.js";import"./CheckCircleTwoTone-Def5yWF9.js";import"./InfoTwoTone-8mf67b7v.js";import"./useMutation-D-m5yZ5O.js";import"./dayjs.min-BJZESKrl.js";import"./chunk-AYJ5UCUI-ByvWxCXR.js";import"./index-CcVtSZI1.js";import"./react-ClgVEHpJ.js";import"./util-BnsFuA_v.js";import"./WideButton-jRTE1qnd.js";import"./DeleteTwoTone-Bq1AVQQj.js";import"./createSvgIcon-DsfwF63j.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-DSXdEjJc.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-OeJ6fVwB.js";import"./DialogBase-C_A3DTr_.js";import"./Close-oQGUOV3G.js";import"./HelpPopover-D5iWqZ9O.js";import"./MarkdownPopover-Dy8DSbWV.js";import"./LightTooltip-DZhxnvZS.js";import"./MarkdownSynapse-DFxQNJy_.js";import"./SkeletonButton-pGOEsAam.js";import"./SkeletonInlineBlock-CnpwSlNc.js";import"./SkeletonTable-BzAamuHw.js";import"./SkeletonParagraph-Bl58aql1.js";import"./HelpOutlineTwoTone-BLTIqxuM.js";import"./DialogTitle-D_Xy_cgd.js";import"./DialogContent-BABRczYT.js";import"./Dialog-DGpRaN86.js";import"./Modal-DTzYygSa.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-Bufgy5AY.js";import"./WarningDialog-KoznANpM.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
