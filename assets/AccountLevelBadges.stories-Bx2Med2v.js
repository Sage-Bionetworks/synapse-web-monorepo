import{g as f}from"./userProfileHandlers-PBAixkvV.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-6WrTqGM5.js";import{A}from"./AccountLevelBadges-CZpv9fRc.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-BPsY_NwF.js";import"./iframe-BrZuctF3.js";import"./mockEntity-B8B4llfG.js";import"./mockFileEntity-C3JRv4mk.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-kGER9abo.js";import"./mockTeam-Clz7z4UJ.js";import"./SynapseConstants-Cg_4Agmh.js";import"./OrientationBanner-D8ZR4pD2.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-BxSlDoHW.js";import"./index-CsQ_dtFt.js";import"./spreadSx-CwcO6WA9.js";import"./react-CNQHEto8.js";import"./FullWidthAlert-BfiXHZxu.js";import"./Alert-Bw88P3_8.js";import"./createTheme-Cmip4D3k.js";import"./DefaultPropsProvider-DllTIwuT.js";import"./useSlot-DdaJYVUE.js";import"./useForkRef-ChoTOfXn.js";import"./createSimplePaletteValueFilter-tlZ8CI8S.js";import"./createSvgIcon-DJcBpyjP.js";import"./Close-BOsW5qMc.js";import"./IconButton-Ci8W1Yhy.js";import"./useTimeout-BfOIeXZu.js";import"./ButtonBase-DphK-mGP.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DSIdQNfw.js";import"./Paper-BjTwNz8F.js";import"./useTheme-DzUDjm22.js";import"./useTheme-CBnc1aZ_.js";import"./Stack-B0kdWABf.js";import"./extendSxProp-B3wFOf4h.js";import"./getThemeProps-DpnPGkbN.js";import"./Box-sYcFPFE4.js";import"./AlertTitle-Dl0ipMyg.js";import"./Typography-DrYL7mon.js";import"./index-BLf4na4t.js";import"./ClickAwayListener-DlAC2NUk.js";import"./getReactElementRef-MCnNlpng.js";import"./index-B57y3sov.js";import"./index-CiyvAaLz.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-CuMuHmpZ.js";import"./Tooltip-wSUIYq70.js";import"./index-30FK6v6B.js";import"./useControlled-Oabr0Ps4.js";import"./Popper-TK99_ULZ.js";import"./Button-BC4TwfXN.js";import"./uniqueId-DD62n-Kh.js";import"./toString-Csx1xCop.js";import"./isArray-BBPx6tkp.js";import"./isSymbol-B4-_uRPL.js";import"./times-v6ageF6D.js";import"./_Uint8Array-BSammFXB.js";import"./identity-DKeuBCMA.js";import"./toInteger-r9Wtkp2I.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-CON6sbsO.js";import"./QueryClientProvider-DrnsKFO0.js";import"./Link-CHIwKtz4.js";import"./Collapse-B5yca7Jx.js";import"./_baseUniq-C3U75rlo.js";import"./_getTag-CdV3gicE.js";import"./isEqual-Bkbn_e1j.js";import"./merge-8_g12ylz.js";import"./_initCloneObject-CFCSuk4S.js";import"./tinycolor-Begke6kS.js";import"./Fade-CupicnC-.js";import"./inputBaseClasses-CXyb78Fj.js";import"./calculateFriendlyFileSize-BR0yD13t.js";import"./CheckCircleTwoTone-qt2LfLaU.js";import"./InfoTwoTone-fzLd9iyA.js";import"./useMutation-CmpFDWM1.js";import"./dayjs.min-crYlBkAO.js";import"./chunk-AYJ5UCUI-DjQcL2EA.js";import"./cloneDeep-s7ZyiLW1.js";import"./Skeleton-CMFgpc0r.js";import"./AccountLevelBadge-D7jXW085.js";import"./Card-CWgrC7pw.js";import"./ConfirmationDialog-Dlf7WPzO.js";import"./DialogBase-_OzuwfIu.js";import"./Close-BklPriMX.js";import"./HelpPopover-D5W8fY3K.js";import"./MarkdownPopover-CF7pP-uk.js";import"./LightTooltip-Bqk_2y4B.js";import"./MarkdownSynapse-Cn291mYQ.js";import"./SkeletonButton-D-P9p8y_.js";import"./SkeletonInlineBlock-CK7WeUvs.js";import"./SkeletonTable-CpI33Rz4.js";import"./SkeletonParagraph-DEFBP7tl.js";import"./HelpOutlineTwoTone-ClzyjO0H.js";import"./DialogTitle-Dueq345W.js";import"./DialogContent-D41yMeCD.js";import"./DialogActions-B3jxYq8S.js";import"./Dialog-DlpO-Id4.js";import"./Modal-XMdStNj2.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-DhVNNgRe.js";import"./LoadingScreen-CetxdPY1.js";import"./LinearProgress-ziXNcWk_.js";import"./ToastMessage-DGDeV5I_.js";import"./CSSTransition-Ble-Eq8q.js";const St={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Et=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Et as __namedExportsOrder,St as default};
