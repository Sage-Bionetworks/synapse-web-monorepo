import{j as l}from"./jsx-runtime-Mut6b6ZN.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DsgC4t7y.js";import{g as T}from"./handlers-IPugZ1GD.js";import{aD as S,M as a}from"./useFiles-D1zDsRtE.js";import"./OrientationBanner-DFyDzGuH.js";import"./index-vS9mnyWj.js";import"./StringUtils-tNCAfVhp.js";import{l as _}from"./index-CjhV4d9_.js";import{S as E}from"./SynapseFormSubmissionGrid-Bg4OBODx.js";import"./mockSchema-DeM_tQ5U.js";import"./mockFileEntity-BB6N_f2T.js";import"./mock_file_handle-DS_yjaGE.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-oIDjQAIi.js";import"./mockTeam-BLTbjfLY.js";import"./SynapseConstants-Ch0rC1P2.js";import"./uniqueId-VRPMji1p.js";import"./toString-C_k0SCF_.js";import"./isObjectLike-Dt3Q8mbv.js";import"./iframe-1zaoe6gF.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-QwRfeqwJ.js";import"./times-Fzmk8-lD.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-C_V5uoft.js";import"./asyncJobHandlers-BVMnPVFH.js";import"./BasicMockedCrudService-BLCV6kSq.js";import"./cloneDeep-C-sRBbU_.js";import"./_Uint8Array-jbfd-DZF.js";import"./_initCloneObject-9iu-MeYW.js";import"./_getTag-Puwgzc-K.js";import"./isEqual-CuIwC5PF.js";import"./_baseIsEqual-Ci23lrYU.js";import"./mockAnnotationColumns-CfR9SFmY.js";import"./tableQueryHandlers-SMnIGeph.js";import"./omit-jM5I6ZA0.js";import"./_baseGet-DBYe3qO9.js";import"./isNil-S5XSv3sm.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-sRA-gjlr.js";import"./_baseFlatten-BwXe44-C.js";import"./pick-Da5GS_no.js";import"./_baseSet-C0l41a29.js";import"./hasIn-CCIRvjVd.js";import"./accessRequirementAclHandlers-3WhUJTtr.js";import"./mockAccessRequirementAcls-BQTxtQkU.js";import"./mockAccessRequirements-DTBpAV1p.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DHj13qiO.js";import"./accessRequirementHandlers-BOj-wDqN.js";import"./wikiHandlers-CxGq1ZjK.js";import"./mockWikiPageKey-BS3_5ux9.js";import"./teamHandlers-Bn8mFLuJ.js";import"./dataAccessRequestHandlers-BYkmYWBX.js";import"./MockResearchProject-DHR_5rtE.js";import"./mock_discussion-Y5k-4YNO.js";import"./fakerUtils-DHrCKuD_.js";import"./index-CM9ZvG3K.js";import"./mockTableEntity-DPDjGU54.js";import"./mockFileEntityACLVariants-SGUzSBMi.js";import"./entityHandlers-DPbErSBy.js";import"./mockEntity-yb7QIEVf.js";import"./mockEvaluationQueue-BFEvEsDU.js";import"./featureFlagHandlers-CE6qXFGL.js";import"./fileHandlers-ArRXAt7H.js";import"./personalAccessTokenHandlers-3sLDKlhd.js";import"./researchProjectHandlers-BzQXgQXi.js";import"./resetTwoFactorAuthHandlers-CAxH_PJW.js";import"./userProfileHandlers-Br5_5Iw4.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-DwVNEQzN.js";import"./FullWidthAlert-Dmbyyznq.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-CaW4HrEE.js";import"./createTheme-DpNzE4d4.js";import"./resolveComponentProps-DPiFg_7Y.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-B963EUWM.js";import"./createSvgIcon-B9xlizw1.js";import"./DefaultPropsProvider-2M3YnDDd.js";import"./Close-l5PLK5SY.js";import"./IconButton-DWP4WfZS.js";import"./ButtonBase-CFptddls.js";import"./useTimeout-MfSepqIs.js";import"./useIsFocusVisible-BSo-X-iu.js";import"./useEventCallback-7NNh7VNL.js";import"./Paper-pEQNvCle.js";import"./Stack-C83qUTSK.js";import"./getThemeProps-Cc8P44uD.js";import"./useTheme-CJ_GeJUx.js";import"./Box-VEfKzwzZ.js";import"./AlertTitle-DYy2gM_I.js";import"./Typography-C735P2Wu.js";import"./useTheme-CfGNks2Q.js";import"./Grow-Dq35ME0n.js";import"./index-ChtUdljt.js";import"./utils-CMYcSCNM.js";import"./ClickAwayListener-CCYfSXt6.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-C4YQYU6J.js";import"./index-BxOngdo6.js";import"./useControlled-Dm40RTb9.js";import"./useId-CTXoB2V5.js";import"./Popper-KpOZuT_B.js";import"./Button-CwJlsjun.js";import"./useQuery-CCyZLsCb.js";import"./utils-CkpiaAWG.js";import"./Link-UtnI4NMQ.js";import"./Collapse-CJSUDuZs.js";import"./tinycolor-Begke6kS.js";import"./Fade-CYw9ikGp.js";import"./Skeleton-Cq9f4rV_.js";import"./inputBaseClasses-CmBA2hPH.js";import"./calculateFriendlyFileSize-Dgr-X9ZX.js";import"./CheckCircleTwoTone-DHHVQUzF.js";import"./InfoTwoTone-pCgBZYpo.js";import"./mutation-nnr-ZiFk.js";import"./dayjs.min-BzPAf8fo.js";import"./chunk-AYJ5UCUI-cKaE7QDH.js";import"./index-BGE9F3qY.js";import"./react-DHhj6IBI.js";import"./util-Re2IkVJ4.js";import"./WideButton-CFzahwx2.js";import"./DeleteTwoTone-DoD4vY_R.js";import"./createSvgIcon-DHJU12Yk.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-BZLZQgYk.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-959acWZe.js";import"./DialogBase-i36w09uo.js";import"./Close-e2ns1cKh.js";import"./HelpPopover-B3RT8ZBT.js";import"./MarkdownPopover-DKQzRyKN.js";import"./LightTooltip-B9lL3u_O.js";import"./MarkdownSynapse-72NTH1Ou.js";import"./useMutation-BjQNG8bx.js";import"./SkeletonButton-3krPt36-.js";import"./SkeletonInlineBlock-BMTN9F7v.js";import"./SkeletonTable-DaO5p_8Z.js";import"./SkeletonParagraph-BLNI0khD.js";import"./HelpOutlineTwoTone-DNf4-4jH.js";import"./DialogTitle-Chdr3Qr_.js";import"./DialogContent-DY7IZxSV.js";import"./Dialog-DNDuNg6G.js";import"./Modal-OxvBq5s-.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-BydHRRW8.js";import"./WarningDialog-BZe0RTAD.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},To={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const _o=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,_o as __namedExportsOrder,To as default};
