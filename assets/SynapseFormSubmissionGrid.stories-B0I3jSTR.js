import{j as l}from"./jsx-runtime-JMjDAiku.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-DHPhgAH7.js";import{g as T}from"./handlers-CoPK8uzS.js";import{aF as S,M as a}from"./useFiles-BKoaRBy7.js";import"./OrientationBanner-C4LioKg8.js";import"./index-CZYh0tRp.js";import"./StringUtils-Bj0SG9ce.js";import{l as _}from"./index-D3_4O8X-.js";import{S as E}from"./SynapseFormSubmissionGrid-tzKbMl0N.js";import"./mockSchema-BFZ1qvCn.js";import"./mockFileEntity-Be486MFX.js";import"./mock_file_handle-C2NjfX48.js";import"./mock_user_profile-Bg50HGfI.js";import"./mockProject-Do411xag.js";import"./mockTeam-CELSMvNb.js";import"./SynapseConstants-BAkIMR8-.js";import"./uniqueId-D4MtxxHB.js";import"./toString-UPy0TL2W.js";import"./isObjectLike-DXDyFbLA.js";import"./iframe-CCE2QgdW.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-D8Zw-095.js";import"./times-Creqe7cA.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-Bm4GM7e8.js";import"./asyncJobHandlers-DRuPN0_g.js";import"./BasicMockedCrudService-DbJwFD6D.js";import"./cloneDeep-D1htCpIz.js";import"./_Uint8Array-CRK6RbyJ.js";import"./_initCloneObject-Bn1ipTO5.js";import"./_getTag-CzbInwKL.js";import"./isEqual-BeXmNxMu.js";import"./_baseIsEqual-CCn7fuDD.js";import"./mockAnnotationColumns-CJyya0GI.js";import"./tableQueryHandlers-Br9OxCrC.js";import"./omit-C9JVauin.js";import"./_baseGet-racL40Xd.js";import"./isNil-jJiu7qUq.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-cNoXgvrO.js";import"./_baseFlatten-BWFH6oA7.js";import"./pick-BWAl8ipU.js";import"./_baseSet-DfuLGNbp.js";import"./hasIn-C5LnKrQ_.js";import"./accessRequirementAclHandlers-Db8w5Itc.js";import"./mockAccessRequirementAcls-B0UWniXU.js";import"./mockAccessRequirements-5grHcgm9.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-DiBhlaV-.js";import"./accessRequirementHandlers-MlH-ETiZ.js";import"./wikiHandlers-B-ojTIAo.js";import"./mockWikiPageKey-Czqf-3j8.js";import"./teamHandlers-DAMB-iYn.js";import"./dataAccessRequestHandlers-DFAJTRx9.js";import"./MockResearchProject-BbypLOwm.js";import"./mock_discussion-zPkRujag.js";import"./fakerUtils-DgWJQ8F3.js";import"./index-BQag8sCG.js";import"./mockTableEntity-D52oCdlr.js";import"./mockFileEntityACLVariants-CkSrsaZj.js";import"./entityHandlers-bkpvQ5Uy.js";import"./mockEntity-DPp6HbWO.js";import"./mockEvaluationQueue-BP_jkdJY.js";import"./featureFlagHandlers-C2UNjnOv.js";import"./fileHandlers-dpQ5ClJw.js";import"./personalAccessTokenHandlers-gInX0YkW.js";import"./researchProjectHandlers-CV2FaWzX.js";import"./resetTwoFactorAuthHandlers-CdBGrT2M.js";import"./userProfileHandlers-7vETOKGe.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-l1GBX2CH.js";import"./FullWidthAlert-_xWROjSF.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-DhU8zZuo.js";import"./createTheme-BsMgtWZT.js";import"./resolveComponentProps-CNbOM-P8.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-DQdHfMmH.js";import"./createSvgIcon-BIs1E3cK.js";import"./DefaultPropsProvider-omTkMwKz.js";import"./Close-CXRj7muF.js";import"./IconButton-CB2yg_JS.js";import"./ButtonBase-B2wgZIDS.js";import"./useTimeout-BJT5itvQ.js";import"./useIsFocusVisible-CJXqI5Ok.js";import"./useEventCallback-CMwoN8rY.js";import"./Paper-CfNAfVct.js";import"./Stack-B6FqdQE3.js";import"./getThemeProps-DNrBl4wZ.js";import"./useTheme-knQsgu-L.js";import"./Box-CZfJ9FNL.js";import"./AlertTitle-CaGh6uKR.js";import"./Typography-CsnhBgcI.js";import"./useTheme-N2s54T76.js";import"./Grow-C4EvBoga.js";import"./index-C283ZE_A.js";import"./utils-D_mGwy7L.js";import"./ClickAwayListener-DChUe8a7.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DLYYTJAc.js";import"./index-CXLskV8c.js";import"./useControlled-BOEsG-Ke.js";import"./useId-sjHSV8uf.js";import"./Popper-CgUdf8Yp.js";import"./Button-Cbd-R7S0.js";import"./useQuery-B2W7WvCN.js";import"./utils-BTDD21Gu.js";import"./Link-BK0CPbSA.js";import"./Collapse-D7BpYLKk.js";import"./tinycolor-Begke6kS.js";import"./Fade-Dsc-ng1t.js";import"./Skeleton-BD-shLg_.js";import"./inputBaseClasses-CzPMbH9V.js";import"./calculateFriendlyFileSize-Cls87z73.js";import"./CheckCircleTwoTone-BDkgaxM-.js";import"./InfoTwoTone-Dd48EZp1.js";import"./useMutation-Dl-XAcpb.js";import"./dayjs.min-CPUkpIN-.js";import"./chunk-AYJ5UCUI-DhzNmnWU.js";import"./index-CbpQBUYj.js";import"./react-mnnoerZo.js";import"./util-CPO4bASY.js";import"./WideButton-BzMyjHvo.js";import"./DeleteTwoTone-B9p6fN6y.js";import"./createSvgIcon-CN8amcV3.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-C4Jyr3DG.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-BZ1blrks.js";import"./DialogBase-CsQAIBlx.js";import"./Close-DxSNQc7-.js";import"./HelpPopover-BWFkksrx.js";import"./MarkdownPopover-BRi2cBwb.js";import"./LightTooltip-Ca_meIUK.js";import"./MarkdownSynapse-DPVlc_dN.js";import"./SkeletonButton-KiqloEa3.js";import"./SkeletonInlineBlock-7xCamVgv.js";import"./SkeletonTable-Cf4FmdAM.js";import"./SkeletonParagraph-le08uM64.js";import"./HelpOutlineTwoTone-C5-4nG3I.js";import"./DialogTitle-CvEyqh2J.js";import"./DialogContent-DMWK1QDX.js";import"./Dialog-Dt-eZ1jS.js";import"./Modal-Bwb_44p3.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-wU2G6vto.js";import"./WarningDialog-Dm5C9PnV.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
