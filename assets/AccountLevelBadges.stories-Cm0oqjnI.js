import{g as f}from"./userProfileHandlers-yJ8UYEvT.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-Beh68O0r.js";import{A}from"./AccountLevelBadges-4j1_Lqlx.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-CEWmuCXB.js";import"./iframe-B5rs55Pd.js";import"./mockEntity-KYco3UYc.js";import"./mockFileEntity-DSLmJEDi.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-ChtdZghv.js";import"./mockTeam-CAbGDFQy.js";import"./SynapseConstants-D0NSmgCZ.js";import"./OrientationBanner-BZ8oNh3t.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-BBkAb27i.js";import"./index-DqVY_MdG.js";import"./spreadSx-CwcO6WA9.js";import"./react-Cy3MuSEQ.js";import"./FullWidthAlert-BtCkhzZ3.js";import"./Alert-BKYnRrQJ.js";import"./createTheme-CCW9jeh0.js";import"./DefaultPropsProvider---V3OlnO.js";import"./useSlot-HxkH3zom.js";import"./useForkRef-BjME3TBq.js";import"./createSimplePaletteValueFilter-DMImf7ZH.js";import"./createSvgIcon-excwm1Bq.js";import"./Close-L3mo_2vy.js";import"./IconButton-D6h92Nv_.js";import"./useTimeout-Cn7Uzbmj.js";import"./ButtonBase-uwFg90Zi.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-_VcLKcI3.js";import"./Paper-ByAOIlTc.js";import"./useTheme-BQ11NupA.js";import"./useTheme-CAAyb6Hf.js";import"./Stack-Dz_8zDqt.js";import"./extendSxProp-eoSEBB6W.js";import"./getThemeProps-BvRhKV-H.js";import"./Box-O9YaUbMX.js";import"./AlertTitle-D8M-AeO7.js";import"./Typography-CmzLS_3x.js";import"./index-Cm_4ILsu.js";import"./ClickAwayListener-D_fSXknu.js";import"./getReactElementRef-BHEdfli1.js";import"./index-wGYHSRzj.js";import"./index-CZaeG_Zw.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-amcfaYIw.js";import"./Tooltip-BfyIksiy.js";import"./index-EjTZ2IHQ.js";import"./useControlled-CCY7r0wx.js";import"./Popper-YRgzSLhl.js";import"./Button-Dq-oY-14.js";import"./uniqueId-CQ_AaOgz.js";import"./toString-Ct2O2woV.js";import"./isArray-BtIqvJez.js";import"./isSymbol-BXNXa0aU.js";import"./times-DbYfL1oY.js";import"./_Uint8Array-DVWjLwzM.js";import"./identity-DKeuBCMA.js";import"./toInteger-cjaqhma4.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-u57ZdOBo.js";import"./QueryClientProvider-D1Z109eC.js";import"./Link-CZH2FWuL.js";import"./Collapse-CTNMUOeL.js";import"./_baseUniq-5JOGYzKc.js";import"./_getTag-NbEUeoAA.js";import"./isEqual-DD744pPA.js";import"./merge-B8auVx-M.js";import"./_initCloneObject-BBfrylM9.js";import"./tinycolor-Begke6kS.js";import"./Fade-DJjZuyOW.js";import"./inputBaseClasses-C-wk8k42.js";import"./calculateFriendlyFileSize-DOc3ApXu.js";import"./CheckCircleTwoTone-BjPNSBnS.js";import"./InfoTwoTone-C06WRRzI.js";import"./useMutation-DdOlkJWg.js";import"./dayjs.min-CVRkaDCo.js";import"./chunk-AYJ5UCUI-CXz_weJf.js";import"./cloneDeep-cgBlVPgb.js";import"./Skeleton-CFdSDccd.js";import"./AccountLevelBadge-YsMerqiG.js";import"./Card-BKCeCRQE.js";import"./ConfirmationDialog-Dy-PvtwX.js";import"./DialogBase-B3cldkDT.js";import"./Close-BaszavuE.js";import"./HelpPopover-C8JPLrME.js";import"./MarkdownPopover-C-K8wlsr.js";import"./LightTooltip-CjhFmxn9.js";import"./MarkdownSynapse-CNkPN_bc.js";import"./SkeletonButton-DQe85F23.js";import"./SkeletonInlineBlock-DJspSBMv.js";import"./SkeletonTable-BPVbgSvO.js";import"./SkeletonParagraph-B0GBzdM9.js";import"./HelpOutlineTwoTone-BBP6OYPb.js";import"./DialogTitle-CRwopf1G.js";import"./DialogContent-DszghZZl.js";import"./Dialog-CZMJ1uAf.js";import"./Modal-B40VYLer.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-B-qvJ3JW.js";import"./LoadingScreen-BupkQhtP.js";import"./LinearProgress-ClABNLFt.js";import"./ToastMessage-CecKdAme.js";import"./CSSTransition-C8L1yl0v.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
