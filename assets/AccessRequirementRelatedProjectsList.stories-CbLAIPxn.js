import{M as E,f as _}from"./useFiles--Fji3vMM.js";import{l as h}from"./index-BnLLd1aH.js";import{j as r}from"./jsx-runtime-D7u9V72l.js";import"./VerificationSubmission-CMrrYimb.js";import"./StringUtils-Bdqa-HwM.js";import"./OrientationBanner-kwVrgmyF.js";import"./index-DIRP2mCL.js";import{n as x}from"./useAccessRequirements-DvdBWxqn.js";import{p as T}from"./pluralize-DPOYryAZ.js";import{E as O}from"./EntityLink-TI469yFc.js";import{T as M}from"./Typography-M9KF5p_g.js";import{L as S}from"./List-BXHXVZck.js";import{L as k}from"./ListItem-BOg315UK.js";import{A as C}from"./Alert-CkX9fRjW.js";import"./SynapseConstants-CH854TFV.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useTimeout-CBZZ7H3Q.js";import"./FullWidthAlert-CLcKqRsk.js";import"./spreadSx-CwcO6WA9.js";import"./Stack-6RwAq8kg.js";import"./DefaultPropsProvider-CvtzjoSb.js";import"./createTheme-ZwoTvgm9.js";import"./extendSxProp-Cb7ZLztd.js";import"./getThemeProps-B-Dxxkrj.js";import"./useTheme-DPM9nS2f.js";import"./Box-BEiNcjcE.js";import"./AlertTitle-7AwEmAD3.js";import"./useForkRef-b5KNrNfS.js";import"./useSlot-DE-Pgg-g.js";import"./useTheme-C8L1Kxxv.js";import"./ClickAwayListener-CdviVauh.js";import"./getReactElementRef-JAQ7byAz.js";import"./index-B7KIz0eC.js";import"./iframe-DvWt0ZAp.js";import"./index-04G71cQJ.js";import"./ownerDocument-DW-IO8s5.js";import"./Paper-CLP7fHbB.js";import"./Grow-mgM_dyBK.js";import"./Tooltip-CwW5wt2J.js";import"./index-BtRE8HK7.js";import"./useControlled-CAHdEYiv.js";import"./Popper-DlvAbLM7.js";import"./isFocusVisible-B8k4qzLc.js";import"./Button-Cc2ZrLOs.js";import"./createSimplePaletteValueFilter-nNG9q7Sh.js";import"./ButtonBase-B0cxrwnL.js";import"./CircularProgress-ZnNsf0Kr.js";import"./useQuery-C98ICP4o.js";import"./utils-DA3XjsWl.js";import"./Link-CduNptY6.js";import"./Collapse-BF5Saqfq.js";import"./_baseUniq-BSKzbIRa.js";import"./_Uint8Array-B1YxsvGR.js";import"./_baseTimes-36S_kd0L.js";import"./isObjectLike-B2qG3IjH.js";import"./isArray-Dxzbedgu.js";import"./_getTag-CwQEadFU.js";import"./isEqual-Cz5E7whK.js";import"./merge-T2Rtq5_x.js";import"./_initCloneObject-AR8w6wIq.js";import"./identity-DKeuBCMA.js";import"./createSvgIcon-Bxzmu4vz.js";import"./tinycolor-Begke6kS.js";import"./Fade-D9b2Gutx.js";import"./inputBaseClasses-6e4vcwCJ.js";import"./calculateFriendlyFileSize-U7O1PnIw.js";import"./CheckCircleTwoTone-Chv9Dcrx.js";import"./InfoTwoTone-O5vZVGFV.js";import"./index-heaGSp29.js";import"./useMutation-CVuLVRZr.js";import"./dayjs.min-B7G6KnF3.js";import"./chunk-AYJ5UCUI-Ce6RdxID.js";import"./cloneDeep-BnbH_ri7.js";import"./Skeleton-ObQKd-kN.js";import"./util-Bp4OArLA.js";import"./index-DAtIT332.js";import"./react-DOJgxBXV.js";import"./index-Dvn1o0ea.js";import"./_baseOrderBy-1JQEbS3x.js";import"./toString-CPw9HAlL.js";import"./isSymbol-DSELZabb.js";import"./_baseGet-DYsHkXAn.js";import"./_baseIteratee-LI2B_oVL.js";import"./hasIn-DGB82JtV.js";import"./_baseMap-0HMckll3.js";import"./_baseEach-KOeVB8cq.js";import"./useQueries-B89UAg-M.js";import"./useInfiniteQuery-BlS7OYPO.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./useEntity-BhP784S8.js";import"./pickBy-Dfz0cTG3.js";import"./isString-EhQi2DBA.js";import"./toInteger-wvXnbprJ.js";import"./pick-DYp2Kj5c.js";import"./_baseSet-CH45vpzR.js";import"./omit-BvjUGlUo.js";import"./_baseSlice-F8doVSIJ.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntityBundle-Bmfn0oXc.js";import"./useGetEntityHeaders-CBHD4x-5.js";import"./EntityIcon-CL5WSShh.js";import"./IconSvg-CHR3Bj3t.js";import"./LayersTwoTone-DpgafO2G.js";import"./ContentCopyTwoTone-Bp6cIGx7.js";import"./HelpOutlineTwoTone-DO5Y07MP.js";import"./ErrorOutlined-Ba1JruJ4.js";import"./GetAppTwoTone-BveBlWOi.js";import"./InfoOutlined-Dz8p2ygO.js";import"./PhoneTwoTone-BDVMpVn5.js";import"./DeleteTwoTone-Cn24v05F.js";import"./ErrorChip-DGjwPlwp.js";import"./Chip-BrDiUvpf.js";import"./Avatar-5EKGw5Qj.js";import"./isHostComponent-DVu5iVWx.js";import"./isMuiElement-BZPXxZOU.js";import"./listItemButtonClasses-DNH7t5LQ.js";import"./Close-BI6GuXhT.js";import"./IconButton-nQiKeKZm.js";const c=p=>{const n={ids:[p.accessRequirementId]},{data:e,isError:a,error:f}=x(n),t=(e==null?void 0:e.pages.flatMap(o=>o.results)[0])??void 0,d=(t==null?void 0:t.relatedProjectIds.length)||0,A=`${T("project",d,!0)}${d>0?":":""}`;return r.jsxs(r.Fragment,{children:[t&&r.jsxs(r.Fragment,{children:[r.jsx(M,{variant:"body1",children:A}),r.jsx(S,{sx:{listStyleType:"disc",pl:4},children:t.relatedProjectIds.map(o=>r.jsx(k,{sx:{display:"list-item",py:"4px",".no-margin-y":{my:0}},children:r.jsx(O,{entity:o,link:!1,showIcon:!1,className:"no-margin-y"})},o))})]}),a&&r.jsx(C,{severity:"error",children:f.message})]})};try{c.displayName="AccessRequirementRelatedProjectsList",c.__docgenInfo={description:"",displayName:"AccessRequirementRelatedProjectsList",props:{accessRequirementId:{defaultValue:null,description:"",name:"accessRequirementId",required:!0,type:{name:"number"}}}}}catch{}const He={title:"Governance/AccessRequirementRelatedProjectsList",component:c},i={args:{accessRequirementId:9603055}},s={args:{accessRequirementId:9605913}},m={args:{accessRequirementId:1234567},parameters:{stack:"mock",msw:{handlers:[h.rest.post(`${E}${_}`,async(p,n,e)=>{const a={results:[{id:"1234567",type:"org.sagebionetworks.repo.model.ManagedACTAccessRequirement",createdOn:"2017-08-23T18:48:20.892Z",modifiedOn:"2023-12-14T00:43:41.315Z",name:"Team AR without Related Projects",version:"1",relatedProjectIds:[],reviewerIds:[]}]};return n(e.status(200),e.json(a))})]}}};var l,u,R;i.parameters={...i.parameters,docs:{...(l=i.parameters)==null?void 0:l.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 9603055
  }
}`,...(R=(u=i.parameters)==null?void 0:u.docs)==null?void 0:R.source}}};var j,g,y;s.parameters={...s.parameters,docs:{...(j=s.parameters)==null?void 0:j.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 9605913
  }
}`,...(y=(g=s.parameters)==null?void 0:g.docs)==null?void 0:y.source}}};var I,P,q;m.parameters={...m.parameters,docs:{...(I=m.parameters)==null?void 0:I.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 1234567
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [
      // searchAccessRequirements
      rest.post(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_SEARCH}\`, async (req, res, ctx) => {
        const zeroRelatedProjects = {
          results: [{
            id: '1234567',
            type: 'org.sagebionetworks.repo.model.ManagedACTAccessRequirement',
            createdOn: '2017-08-23T18:48:20.892Z',
            modifiedOn: '2023-12-14T00:43:41.315Z',
            name: 'Team AR without Related Projects',
            version: '1',
            relatedProjectIds: [],
            reviewerIds: []
          }]
        };
        return res(ctx.status(200), ctx.json(zeroRelatedProjects));
      })]
    }
  }
}`,...(q=(P=m.parameters)==null?void 0:P.docs)==null?void 0:q.source}}};const Ke=["ManyProjects","OneProject","ZeroProjectsMock"];export{i as ManyProjects,s as OneProject,m as ZeroProjectsMock,Ke as __namedExportsOrder,He as default};
