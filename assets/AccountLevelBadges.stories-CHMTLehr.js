import{g as f}from"./userProfileHandlers-B74EKMBS.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-CzKjjYtp.js";import{A}from"./AccountLevelBadges-BmnAlAvx.js";import"./VerificationSubmission-D0sL2gwz.js";import"./index-DMkgKICF.js";import"./iframe-DmVsNHze.js";import"./mockEntity-Cnsr83i_.js";import"./mockFileEntity-Euu6aO5l.js";import"./StringUtils-Bt2r5KGg.js";import"./mock_file_handle-BgkszYEk.js";import"./mockProject-BzbSfANa.js";import"./mockTeam-BpF9eYkR.js";import"./SynapseConstants-DhETcuUG.js";import"./OrientationBanner-BO2Urp1Z.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-DmNLJKNh.js";import"./index-D4HCKe9w.js";import"./spreadSx-CwcO6WA9.js";import"./react-Cf5Ec-mS.js";import"./FullWidthAlert-DTnEraAC.js";import"./Alert-DZeS4a6d.js";import"./createTheme-DDjBIDwT.js";import"./DefaultPropsProvider-ZG31g4it.js";import"./useSlot-B6tvNwBv.js";import"./useForkRef-CtbIu23o.js";import"./createSimplePaletteValueFilter-BfnPoD90.js";import"./createSvgIcon-KWX4yQl-.js";import"./Close-BXYzJc-1.js";import"./IconButton-C_01hWEL.js";import"./useTimeout-B3vqbFY1.js";import"./ButtonBase-5xAiWb9k.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-ClcLOpgT.js";import"./Paper-D9hajRDM.js";import"./useTheme-CMCRSdXO.js";import"./useTheme-B-XUUHR4.js";import"./Stack-pvEbUifr.js";import"./extendSxProp-BRR-amD5.js";import"./getThemeProps-vcNQnBjM.js";import"./Box-CnC4K3Hl.js";import"./AlertTitle-B8t1dWfY.js";import"./Typography-COIcc1hS.js";import"./index-Dv8t99-T.js";import"./ClickAwayListener-DTjm8Qvd.js";import"./getReactElementRef-Cq2rgrLM.js";import"./index-CDdDji97.js";import"./index-ij53IW3H.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BAl4bw2D.js";import"./Tooltip-BiehG5fl.js";import"./index-Cr6df_e3.js";import"./useControlled-CG4yijLR.js";import"./Popper-D6_eAqlt.js";import"./Button-B4c76i7l.js";import"./uniqueId-DySWb7yp.js";import"./toString-D5g_QE-Z.js";import"./isArray-DGXFKXW_.js";import"./isSymbol-C0RTHsY7.js";import"./times-CqWp89Mi.js";import"./_Uint8Array-v1dD2eCV.js";import"./identity-DKeuBCMA.js";import"./toInteger-DyvaWaYA.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-c65xEHlU.js";import"./QueryClientProvider-C2sJR7rF.js";import"./Link-D-8puque.js";import"./Collapse-TlU8ywi5.js";import"./_baseUniq-BWQ-3uky.js";import"./_getTag-nqsjAOYQ.js";import"./isEqual-CR012Pz3.js";import"./merge-h4l3whDn.js";import"./_initCloneObject-DBdarpnq.js";import"./tinycolor-Begke6kS.js";import"./Fade-CQjdMO4r.js";import"./inputBaseClasses-ByCdm5ps.js";import"./calculateFriendlyFileSize-DXggbpxX.js";import"./CheckCircleTwoTone-BcVs8xEZ.js";import"./InfoTwoTone-QwWHAuS5.js";import"./useMutation-Ddf_PzNC.js";import"./dayjs.min-CwuDG8BM.js";import"./chunk-AYJ5UCUI-CwOFpPmP.js";import"./cloneDeep-ChqpFpcu.js";import"./Skeleton-BWhOU1Pc.js";import"./AccountLevelBadge-DHeKcuTe.js";import"./Card-CAhNU8Ua.js";import"./ConfirmationDialog-sfF_5ueN.js";import"./DialogBase-oi6KI0GN.js";import"./Close-BA64hhaF.js";import"./HelpPopover-MguKU2y2.js";import"./MarkdownPopover-DqUcB6FQ.js";import"./LightTooltip-DzntLZDS.js";import"./MarkdownSynapse-sCcxACVe.js";import"./SkeletonButton-D8F-osuW.js";import"./SkeletonInlineBlock-C8_IBTRt.js";import"./SkeletonTable-Q-mqnuga.js";import"./SkeletonParagraph-C9JmycIn.js";import"./HelpOutlineTwoTone-FctHalbx.js";import"./DialogTitle-B9NyctZP.js";import"./DialogContent-LyHJUI-V.js";import"./Dialog-CPec4dlq.js";import"./Modal-hoinBx6D.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-tURbt0Eh.js";import"./LoadingScreen-Ca8yOGnX.js";import"./LinearProgress-CASe0_Fr.js";import"./ToastMessage-B9-g3Cy7.js";import"./CSSTransition-Bz-XY7j2.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
