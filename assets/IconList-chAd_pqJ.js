import{j as n}from"./jsx-runtime-C5ysBaSF.js";import{r as l}from"./index-nsQxvz3s.js";import{I as p}from"./IconSvg-DP7fvJO4.js";import{u as q}from"./QueryContext-Dxi_GQYu.js";import{m as _}from"./merge-DPAljtzM.js";const j={sx:{fontSize:"24px"}};function d(r){const{iconConfigs:c,iconNames:f,commonIconProps:a=j,useTheme:g,useBackground:I}=r;let i=!1;const u=g?"icon-list themed":"icon-list",y=I?`${u} bg-circle`:u,C=q(),{addValueToSelectedFacet:m}=C,x=l.useCallback(o=>{m({columnName:"dataType"},o)},[m]),t=l.useMemo(()=>{const o={};for(const[e,s]of Object.entries(c))o[e]=_({},a,s);return o},[c,a]),h=()=>Array.from(new Set(f)).map(e=>{const s=t[e];if(s)return n.jsx(p,{...s,onClick:()=>x(e)},e);i=!0});return n.jsxs("span",{className:y,children:[h(),i&&t.other?n.jsx(p,{...t.other}):n.jsx(n.Fragment,{})]})}try{d.displayName="IconList",d.__docgenInfo={description:"",displayName:"IconList",props:{iconConfigs:{defaultValue:null,description:"",name:"iconConfigs",required:!0,type:{name:"IconConfigs"}},iconNames:{defaultValue:null,description:"",name:"iconNames",required:!0,type:{name:"string[]"}},commonIconProps:{defaultValue:null,description:"",name:"commonIconProps",required:!1,type:{name:'Omit<IconSvgProps, "icon">'}},useTheme:{defaultValue:null,description:"",name:"useTheme",required:!1,type:{name:"boolean"}},useBackground:{defaultValue:null,description:"",name:"useBackground",required:!1,type:{name:"boolean"}}}}}catch{}export{d as I};
