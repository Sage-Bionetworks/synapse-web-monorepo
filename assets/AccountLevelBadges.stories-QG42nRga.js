import{g as f}from"./userProfileHandlers-DtTDsZKn.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-6Eopo0xs.js";import{A}from"./AccountLevelBadges-DkKOH2J-.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-D3avfXNk.js";import"./iframe-Cz0yRYSQ.js";import"./mockEntity-CzDWXwdj.js";import"./mockFileEntity-CxoQ38CX.js";import"./StringUtils-C95LMFI-.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-Bqlc9FqC.js";import"./mockTeam-C9KeOZNO.js";import"./SynapseConstants-Bd5uMFWd.js";import"./OrientationBanner-BSDlOhEl.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-BgcdhoxH.js";import"./index-Hq9GMvWN.js";import"./spreadSx-CwcO6WA9.js";import"./react-CNQEch4T.js";import"./FullWidthAlert-BRRQ8k9I.js";import"./Alert-Q-zP0WQf.js";import"./createTheme-BYmso0tz.js";import"./DefaultPropsProvider-0orHMIEF.js";import"./useSlot-DsnxFfh1.js";import"./useForkRef-Ba32e_nF.js";import"./createSimplePaletteValueFilter-W2Zo5aou.js";import"./createSvgIcon-AN35XKd_.js";import"./Close-DfokZKzC.js";import"./IconButton-DyX-TFkE.js";import"./useTimeout-h73ObAmM.js";import"./ButtonBase-EgupweKT.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-B04Cl_da.js";import"./Paper-DyztGkog.js";import"./useTheme-D93wozFQ.js";import"./useTheme-D3m_In28.js";import"./Stack-BWD33RJX.js";import"./useThemeProps-xhGgonhN.js";import"./getThemeProps-D-XMYL24.js";import"./extendSxProp-CaJIvMa_.js";import"./Box-Coa0Hm63.js";import"./AlertTitle-CAGvnUl-.js";import"./Typography-Bn1QEpSJ.js";import"./index-vkeMoorD.js";import"./ClickAwayListener-Tz4LQtH4.js";import"./getReactElementRef-ZSL1cRU-.js";import"./index-Dz78O9fy.js";import"./index-BsWHRc5B.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-Mg9gNMCu.js";import"./Tooltip-PLHpmtuF.js";import"./index-bI8fuLwa.js";import"./useControlled-DjqDKOV6.js";import"./Popper-BdXdlnhi.js";import"./Button-BTB592up.js";import"./uniqueId-D_0v6F0y.js";import"./toString-IG9H0QgB.js";import"./isArray-DqrD0I4d.js";import"./isSymbol-6x7f5015.js";import"./times-BR3Bm9UJ.js";import"./_Uint8Array-Nn_bOMDG.js";import"./identity-DKeuBCMA.js";import"./toInteger-BWDKPG0A.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-C632Gpdg.js";import"./QueryClientProvider-BNaKABDx.js";import"./Link-D4cnvwEL.js";import"./Collapse-C7CbTo5y.js";import"./_baseUniq-y6CeNGmm.js";import"./_getTag-CCxMSq7g.js";import"./isEqual-CdAtuOnJ.js";import"./noop-DX6rZLP_.js";import"./merge-Ds3aECQA.js";import"./_initCloneObject-B9n5P3J6.js";import"./tinycolor-Begke6kS.js";import"./Fade-Bb6hCor6.js";import"./inputBaseClasses-CYg77Bp9.js";import"./calculateFriendlyFileSize-DAK12mf4.js";import"./CheckCircleTwoTone-Dt6znZiS.js";import"./InfoTwoTone-B7HNLyVQ.js";import"./useMutation-DkUvZSje.js";import"./dayjs.min-BvJHBx7G.js";import"./chunk-AYJ5UCUI-BVFhXq1p.js";import"./cloneDeep-B0KeqOcz.js";import"./Skeleton-Bp3OxjtJ.js";import"./AccountLevelBadge-DYQ6-TE_.js";import"./Card-D_ZeBr0Z.js";import"./ConfirmationDialog-DdulXdhH.js";import"./DialogBase-CwfusBv8.js";import"./Close-yXMu0GoQ.js";import"./HelpPopover-Dx32skrX.js";import"./MarkdownPopover-BnO-5zR7.js";import"./LightTooltip-BPBAEFTj.js";import"./MarkdownSynapse--LedYpEO.js";import"./SkeletonButton-C1JSj4Cg.js";import"./SkeletonInlineBlock-DJB2EYD9.js";import"./SkeletonTable-D0VrWirv.js";import"./SkeletonParagraph-BG0c53x3.js";import"./HelpOutlineTwoTone-rY6F4JHM.js";import"./Dialog-BRLzwK2V.js";import"./DialogActions-BwE6U6vv.js";import"./Modal-BKZPbiEr.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-S4J0QI4u.js";import"./DialogContent-Z0mymicf.js";import"./DialogTitle-CZ7UPdqy.js";import"./LoadingScreen-ByAKRMgu.js";import"./LinearProgress-BVyoMXeg.js";import"./ToastMessage-CzhAK1C1.js";import"./CSSTransition-3vKDz5er.js";const kt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Ut=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Ut as __namedExportsOrder,kt as default};
