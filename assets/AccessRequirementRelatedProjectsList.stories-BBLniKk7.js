import{M as E,f as _}from"./useFiles-Dm5G10cS.js";import{l as h}from"./index-BYE-T3h-.js";import{j as r}from"./jsx-runtime-C3ogRbLI.js";import"./VerificationSubmission-DKyendrM.js";import"./StringUtils-BcSmk1fX.js";import"./OrientationBanner-CU3A5aiX.js";import"./index-7Bqgw_Nk.js";import{n as x}from"./useAccessRequirements-BJBApKPI.js";import{p as T}from"./pluralize-DDqVxGx5.js";import{E as O}from"./EntityLink-C4gN6suc.js";import{T as M}from"./Typography-Di-Dztpm.js";import{L as S}from"./List-B9wI-0g4.js";import{L as k}from"./ListItem-IVbFI5cH.js";import{A as C}from"./Alert-GmDE_fQh.js";import"./SynapseConstants-Cu1_hkM-.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useTimeout-CrYJWRws.js";import"./FullWidthAlert-DPZhA9eJ.js";import"./spreadSx-CwcO6WA9.js";import"./Stack-Bsk1SXWK.js";import"./DefaultPropsProvider-DjwvSCQ6.js";import"./createTheme-DZnemi5A.js";import"./extendSxProp-TmA7a6n0.js";import"./getThemeProps-ltRrQ4k_.js";import"./useTheme-DX10MvBa.js";import"./Box-TXIhPUVR.js";import"./AlertTitle-BFYluwcq.js";import"./useForkRef-0c5Xled9.js";import"./useSlot-_DOKpZQU.js";import"./useTheme-CfhzM8OT.js";import"./ClickAwayListener-DDZ5zP33.js";import"./getReactElementRef-C5JhnwkH.js";import"./index-COejetYF.js";import"./iframe-76Ft5xlu.js";import"./index-DVpd846o.js";import"./ownerDocument-DW-IO8s5.js";import"./Paper-D1p4MEKu.js";import"./Grow-5HnAqb89.js";import"./Tooltip-CzwSX8Xn.js";import"./index-Cn3a4A7j.js";import"./useControlled-BIY0s71L.js";import"./Popper-B_IiIxz5.js";import"./isFocusVisible-B8k4qzLc.js";import"./Button-DPTABYes.js";import"./createSimplePaletteValueFilter-B5Afh-Cr.js";import"./ButtonBase-IClCv5pr.js";import"./CircularProgress-BKEAHSP2.js";import"./useQuery-BYlql_kZ.js";import"./utils-BrMZ7D3t.js";import"./Link-BdOeldiG.js";import"./Collapse-pdvdDRED.js";import"./_baseUniq-bm2RQmM0.js";import"./_Uint8Array-D5eLjQqb.js";import"./_baseTimes-36S_kd0L.js";import"./isObjectLike-rpww-nrg.js";import"./isArray-Dxzbedgu.js";import"./_getTag-CliP6LJJ.js";import"./isEqual-h6k8NwMA.js";import"./merge-CnjsetUv.js";import"./_initCloneObject-DGLMpSFd.js";import"./identity-DKeuBCMA.js";import"./createSvgIcon-D0sXf-9N.js";import"./tinycolor-Begke6kS.js";import"./Fade-DYV9CmU4.js";import"./inputBaseClasses-D-axTxXE.js";import"./calculateFriendlyFileSize-Yd1LXqV5.js";import"./CheckCircleTwoTone-D3Fvz0TX.js";import"./InfoTwoTone-CIGZbw3d.js";import"./index-7Er0euq9.js";import"./useMutation-DHWjdRbY.js";import"./dayjs.min-B6l9Knyo.js";import"./chunk-AYJ5UCUI-BkHYh9MM.js";import"./cloneDeep-CUx7sbYF.js";import"./Skeleton-DftmuptQ.js";import"./util-DLcFeUMg.js";import"./index-CSuriLJp.js";import"./react-CqKh3AxL.js";import"./index-CldA13OP.js";import"./_baseOrderBy-B3XFDpci.js";import"./toString-I6Lb7g4z.js";import"./isSymbol-CUP1dyKf.js";import"./_baseGet-f-5oD9sL.js";import"./_baseIteratee-DxWBPMQ7.js";import"./hasIn-CLgOrt0o.js";import"./_baseMap-B4mgMYcy.js";import"./_baseEach-BhUzoImG.js";import"./useQueries-3LJZruA-.js";import"./useInfiniteQuery-D30QlLHC.js";import"./_commonjs-dynamic-modules-TDtrdbi3.js";import"./useEntity-cTwgnXQ7.js";import"./pickBy-Dny-o4iL.js";import"./isString-T96pVRqh.js";import"./toInteger-CxZPUCgj.js";import"./pick-Dou4o2df.js";import"./_baseSet-fiuy2Kgf.js";import"./omit-CPEiuCLC.js";import"./_baseSlice-F8doVSIJ.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./useEntityBundle-ht9BqmOA.js";import"./useGetEntityHeaders-C0jPPwkP.js";import"./EntityIcon-D9HQf0Ci.js";import"./IconSvg-D8FuM4bt.js";import"./LayersTwoTone-BvuXQ5Ev.js";import"./ContentCopyTwoTone-teIt5C0I.js";import"./HelpOutlineTwoTone-BZuQlzji.js";import"./ErrorOutlined-D5o0pYwH.js";import"./GetAppTwoTone-CbjLJp2f.js";import"./InfoOutlined-BHWxlHZF.js";import"./PhoneTwoTone-CpIFNvMd.js";import"./DeleteTwoTone-CQUzFZPI.js";import"./ErrorChip-Bf7YFC-k.js";import"./Chip-DzQFqmB4.js";import"./Avatar-BYqXw6oM.js";import"./isHostComponent-DVu5iVWx.js";import"./isMuiElement-r4tmx7fo.js";import"./listItemButtonClasses-Bwj9OYfd.js";import"./Close-DHdhE8Ij.js";import"./IconButton-7GiAwj0K.js";const c=p=>{const n={ids:[p.accessRequirementId]},{data:e,isError:a,error:f}=x(n),t=(e==null?void 0:e.pages.flatMap(o=>o.results)[0])??void 0,d=(t==null?void 0:t.relatedProjectIds.length)||0,A=`${T("project",d,!0)}${d>0?":":""}`;return r.jsxs(r.Fragment,{children:[t&&r.jsxs(r.Fragment,{children:[r.jsx(M,{variant:"body1",children:A}),r.jsx(S,{sx:{listStyleType:"disc",pl:4},children:t.relatedProjectIds.map(o=>r.jsx(k,{sx:{display:"list-item",py:"4px",".no-margin-y":{my:0}},children:r.jsx(O,{entity:o,link:!1,showIcon:!1,className:"no-margin-y"})},o))})]}),a&&r.jsx(C,{severity:"error",children:f.message})]})};try{c.displayName="AccessRequirementRelatedProjectsList",c.__docgenInfo={description:"",displayName:"AccessRequirementRelatedProjectsList",props:{accessRequirementId:{defaultValue:null,description:"",name:"accessRequirementId",required:!0,type:{name:"number"}}}}}catch{}const He={title:"Governance/AccessRequirementRelatedProjectsList",component:c},i={args:{accessRequirementId:9603055}},s={args:{accessRequirementId:9605913}},m={args:{accessRequirementId:1234567},parameters:{stack:"mock",msw:{handlers:[h.rest.post(`${E}${_}`,async(p,n,e)=>{const a={results:[{id:"1234567",type:"org.sagebionetworks.repo.model.ManagedACTAccessRequirement",createdOn:"2017-08-23T18:48:20.892Z",modifiedOn:"2023-12-14T00:43:41.315Z",name:"Team AR without Related Projects",version:"1",relatedProjectIds:[],reviewerIds:[]}]};return n(e.status(200),e.json(a))})]}}};var l,u,R;i.parameters={...i.parameters,docs:{...(l=i.parameters)==null?void 0:l.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 9603055
  }
}`,...(R=(u=i.parameters)==null?void 0:u.docs)==null?void 0:R.source}}};var j,g,y;s.parameters={...s.parameters,docs:{...(j=s.parameters)==null?void 0:j.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 9605913
  }
}`,...(y=(g=s.parameters)==null?void 0:g.docs)==null?void 0:y.source}}};var I,P,q;m.parameters={...m.parameters,docs:{...(I=m.parameters)==null?void 0:I.docs,source:{originalSource:`{
  args: {
    accessRequirementId: 1234567
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [
      // searchAccessRequirements
      rest.post(\`\${MOCK_REPO_ORIGIN}\${ACCESS_REQUIREMENT_SEARCH}\`, async (req, res, ctx) => {
        const zeroRelatedProjects = {
          results: [{
            id: '1234567',
            type: 'org.sagebionetworks.repo.model.ManagedACTAccessRequirement',
            createdOn: '2017-08-23T18:48:20.892Z',
            modifiedOn: '2023-12-14T00:43:41.315Z',
            name: 'Team AR without Related Projects',
            version: '1',
            relatedProjectIds: [],
            reviewerIds: []
          }]
        };
        return res(ctx.status(200), ctx.json(zeroRelatedProjects));
      })]
    }
  }
}`,...(q=(P=m.parameters)==null?void 0:P.docs)==null?void 0:q.source}}};const Ke=["ManyProjects","OneProject","ZeroProjectsMock"];export{i as ManyProjects,s as OneProject,m as ZeroProjectsMock,Ke as __namedExportsOrder,He as default};
