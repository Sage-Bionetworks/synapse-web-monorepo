import{j as l}from"./jsx-runtime-BotgeFwT.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-dxY1kvC5.js";import{g as T}from"./handlers-DXA0VMJJ.js";import{aH as S,M as a}from"./useFiles-YWmmbZpp.js";import"./OrientationBanner-npM_DAfi.js";import"./index-BmHOuB5_.js";import"./StringUtils-lE31obNl.js";import{l as _}from"./index-BQofMx1G.js";import{S as E}from"./SynapseFormSubmissionGrid-81xaYqye.js";import"./mockSchema-Bq_UG_qk.js";import"./mockFileEntity-XCHPplZ0.js";import"./mock_file_handle-3wYKbysY.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-DqodxaP9.js";import"./mockTeam-CO2ZLbtR.js";import"./SynapseConstants-CnrTnmux.js";import"./uniqueId-C8M0zGKe.js";import"./toString-CADLfgD7.js";import"./isObjectLike-CWYzZSfP.js";import"./iframe-DmkXVs35.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-B9gLo0gN.js";import"./times-Bc7_9mOU.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-DjXm62Ax.js";import"./asyncJobHandlers-BiTHk_P0.js";import"./BasicMockedCrudService-B0BG39qs.js";import"./cloneDeep-BTdt0L8H.js";import"./_Uint8Array-CGacEQoi.js";import"./_initCloneObject-BV2YsZzp.js";import"./_getTag-CopO-oHq.js";import"./isEqual-CY8rJ0kx.js";import"./_baseIsEqual-DFrETrYV.js";import"./mockAnnotationColumns-BogEXqWl.js";import"./tableQueryHandlers-BB_p5nKn.js";import"./omit-BBdeqXAL.js";import"./_baseGet-d84j3mQa.js";import"./isNil-D9M1sZm8.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-selKAKi3.js";import"./_baseFlatten-pNmuhEBj.js";import"./pick-CuVLiGuh.js";import"./_baseSet-BcAJrEMk.js";import"./hasIn-BVu-bAYg.js";import"./accessRequirementAclHandlers-DnEhLf59.js";import"./mockAccessRequirementAcls-DlmKeChN.js";import"./mockAccessRequirements-I_j4iDEc.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-B6wTqEDI.js";import"./accessRequirementHandlers-mX-oMz10.js";import"./wikiHandlers-CvmqNaUN.js";import"./mockWikiPageKey-BPLdxg8s.js";import"./teamHandlers-Duem-f-G.js";import"./dataAccessRequestHandlers-C6h1gDeI.js";import"./MockResearchProject-BU6CPjnI.js";import"./mock_discussion-z1MYCicS.js";import"./fakerUtils-DMj_lHrA.js";import"./index-ChzcnzHF.js";import"./mockTableEntity-CuT3iBBJ.js";import"./mockFileEntityACLVariants-ftTQOlDF.js";import"./entityHandlers-Bj3h8urK.js";import"./mockEntity-BwLQTfDT.js";import"./mockEvaluationQueue-VXu8P_-U.js";import"./featureFlagHandlers-Dm3xYd1W.js";import"./fileHandlers-dZmFjkqE.js";import"./personalAccessTokenHandlers-CdKJA0BK.js";import"./researchProjectHandlers-DFtCvf8T.js";import"./resetTwoFactorAuthHandlers-DiQfWac6.js";import"./userProfileHandlers-BA8P-jh0.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-BqBTwtnY.js";import"./FullWidthAlert-DjX9Mevx.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-BLpP3v3-.js";import"./createTheme-Dc38ti7g.js";import"./resolveComponentProps-DrsR2GgO.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-88GE3SiY.js";import"./createSvgIcon-C_8Qv0R-.js";import"./DefaultPropsProvider-DEc5OxJn.js";import"./Close-6gD9trmr.js";import"./IconButton-kd3QgWK8.js";import"./ButtonBase-B52ubW7h.js";import"./useTimeout-BOP_xpZf.js";import"./useIsFocusVisible-TkDIjfto.js";import"./useEventCallback-CjAGHQTa.js";import"./Paper-B7_Z-2Tf.js";import"./Stack-BFmS--Ta.js";import"./getThemeProps-n6ESmhoJ.js";import"./useTheme-DExkflWm.js";import"./Box-XMBgXLk7.js";import"./AlertTitle-BPtjEeV0.js";import"./Typography-D37JOTkb.js";import"./useTheme-CbDAVqIb.js";import"./Grow-DtJN852e.js";import"./index-DhnVKWT6.js";import"./utils-CYEEhIBi.js";import"./ClickAwayListener-ERiY_cle.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-DBTVbtNi.js";import"./index-BAuhL-tv.js";import"./useControlled-BNPn1a16.js";import"./useId-v77cI_FZ.js";import"./Popper-CdSbBsOI.js";import"./Button-VHXrIHUx.js";import"./useQuery-Csyq51Xr.js";import"./utils-PqR9SzMK.js";import"./Link-DvEm6E_0.js";import"./Collapse-CMoxLgNk.js";import"./tinycolor-Begke6kS.js";import"./Fade-QisYz2mh.js";import"./Skeleton-_Who98MO.js";import"./inputBaseClasses-DCAmaP-g.js";import"./calculateFriendlyFileSize-BJC9cAcp.js";import"./CheckCircleTwoTone-98ZzfJ5I.js";import"./InfoTwoTone-CB73o47l.js";import"./mutation-BijGxgKZ.js";import"./dayjs.min-Bb5G5LaH.js";import"./chunk-AYJ5UCUI-CmA7Kmoy.js";import"./index-BJgwkqhp.js";import"./react-aMpCzbk9.js";import"./util-D4XGW-8a.js";import"./WideButton-C0w1SSEx.js";import"./DeleteTwoTone-vBmznAXK.js";import"./createSvgIcon-H0r-_U0R.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-DMk2AAIg.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-I8Z9zkio.js";import"./DialogBase-Co-3wLYR.js";import"./Close-UusDTIlp.js";import"./HelpPopover-DDcISVnF.js";import"./MarkdownPopover-pvhnTLI2.js";import"./LightTooltip-DPyzVArV.js";import"./MarkdownSynapse-B3vtHfsh.js";import"./SkeletonButton-DHvCiuXj.js";import"./SkeletonInlineBlock-D2OeqMB6.js";import"./SkeletonTable-DSRBUUd4.js";import"./SkeletonParagraph-dO_VX218.js";import"./HelpOutlineTwoTone-DIHmcg9Y.js";import"./DialogTitle-CmU5l_NN.js";import"./DialogContent-Dl3qme6n.js";import"./Dialog-Kohsi3D0.js";import"./Modal-B6CnFVPs.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-BrQ6CXPb.js";import"./WarningDialog-C2D-va7N.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},Oo={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const To=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,To as __namedExportsOrder,Oo as default};
