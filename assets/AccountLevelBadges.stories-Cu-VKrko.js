import{g as f}from"./userProfileHandlers-CBZMpjif.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-CKcUsXxo.js";import{A}from"./AccountLevelBadges-BcjCXCG8.js";import"./VerificationSubmission-CDh9xETu.js";import"./index-g3VecKVC.js";import"./iframe-BwvIV_wz.js";import"./mockEntity-Bw9yx71L.js";import"./mockFileEntity-WBt7sCsU.js";import"./StringUtils-CsrYFBZo.js";import"./mock_file_handle-7frMWCuU.js";import"./mockProject-BKenycwC.js";import"./mockTeam-iEJobfRQ.js";import"./SynapseConstants-f1HHzz_j.js";import"./OrientationBanner-m-cOM088.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-Dr34NRIV.js";import"./index-Dvc8DXNj.js";import"./spreadSx-CwcO6WA9.js";import"./react-PzVUkSXC.js";import"./FullWidthAlert-CUjAN9qZ.js";import"./Alert-BpXwWVSg.js";import"./createTheme-D21a6jVE.js";import"./DefaultPropsProvider-DUqZ9kBw.js";import"./useSlot-DJuYx4Uy.js";import"./useForkRef-Dhz7ykZQ.js";import"./createSimplePaletteValueFilter-slgZ3hH6.js";import"./createSvgIcon-DW48BYr9.js";import"./Close-DwkY6Qiq.js";import"./IconButton-BPZiwUaT.js";import"./useTimeout-n8UuqgZm.js";import"./ButtonBase-DLjfdFYs.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BTmW-fZF.js";import"./Paper-ttVskSGJ.js";import"./useTheme-Dmw3ER-A.js";import"./useTheme-Dc8HS8-T.js";import"./Stack-DrKhoQrj.js";import"./extendSxProp-B4WGgZTT.js";import"./getThemeProps-B50kq3gk.js";import"./Box-CTY3I0FB.js";import"./AlertTitle-gzg991Kd.js";import"./Typography-BhPtSSz2.js";import"./index-BLJFs8HZ.js";import"./ClickAwayListener-BucHVlrs.js";import"./getReactElementRef-IfbnFzgG.js";import"./index-CqCBL84x.js";import"./index--qtQ6bhr.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-CDAsFndF.js";import"./Tooltip-snkrOiqJ.js";import"./index-DxUDSVJR.js";import"./useControlled-IlM_E7l9.js";import"./Popper-C8rE9mDK.js";import"./Button-CuRvemX1.js";import"./uniqueId-BIZmBIpK.js";import"./toString-FiUiE8JL.js";import"./isArray-9GOQtFcp.js";import"./isSymbol-BxQi0hMS.js";import"./times-CJm66HwN.js";import"./_Uint8Array-DayFYAX9.js";import"./identity-DKeuBCMA.js";import"./toInteger-DMvinDWJ.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-Bup0EY49.js";import"./QueryClientProvider-ChpI_0EU.js";import"./Link-CLvRSdAZ.js";import"./Collapse-MKzszx7X.js";import"./_baseUniq-WnlZjegG.js";import"./_getTag-BkCGiN6B.js";import"./isEqual-Dks0Mg8j.js";import"./merge-Dy633DfB.js";import"./_initCloneObject-Dqf9gVZ1.js";import"./tinycolor-Begke6kS.js";import"./Fade-Bok-lFku.js";import"./inputBaseClasses-AHLU7mnu.js";import"./calculateFriendlyFileSize-tudez9ms.js";import"./CheckCircleTwoTone-B4GsZuMD.js";import"./InfoTwoTone-cRma8_X6.js";import"./useMutation-CnqeAjOr.js";import"./dayjs.min-DtZNiT87.js";import"./chunk-AYJ5UCUI-C5dJESas.js";import"./cloneDeep-DozhuijG.js";import"./Skeleton-B2H4n811.js";import"./AccountLevelBadge-kiEE_SZ3.js";import"./Card-C-8IftKf.js";import"./ConfirmationDialog-CfWhooFH.js";import"./DialogBase-Bo1zvLAS.js";import"./Close-Q1tNOo3h.js";import"./HelpPopover-D5sznNAi.js";import"./MarkdownPopover-DJcQhkmM.js";import"./LightTooltip-Bt6aqifN.js";import"./MarkdownSynapse-BZ3bfxga.js";import"./SkeletonButton-DX_35qgn.js";import"./SkeletonInlineBlock-CJElzRNk.js";import"./SkeletonTable-Bi6Qng0B.js";import"./SkeletonParagraph-BuL4Zb7n.js";import"./HelpOutlineTwoTone-PWWeq9Oj.js";import"./DialogTitle-DV4wIclQ.js";import"./DialogContent-BIxxPy2I.js";import"./Dialog-BegfVkrU.js";import"./Modal-C6zDlmuO.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop-DGxR8xHs.js";import"./LoadingScreen-B4Vaf4eS.js";import"./LinearProgress-BAciHsOu.js";import"./ToastMessage-CtdklwA1.js";import"./CSSTransition-kswIckUt.js";const Rt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const St=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,St as __namedExportsOrder,Rt as default};
