import{g as f}from"./userProfileHandlers-DSZ10Wtp.js";import{a as _}from"./mock_user_profile-CijvmO8r.js";import{M as C}from"./useFiles-UkzU0789.js";import{A}from"./AccountLevelBadges-0zF3kpxC.js";import"./VerificationSubmission-dxY1kvC5.js";import"./index-DOOIuumC.js";import"./OrientationBanner-CIZJytWy.js";import"./jsx-runtime-DhlGJ7sc.js";import"./index-CY44XRQW.js";import"./iframe-DNkluCoN.js";import"./index-Bs5qYh7P.js";import"./spreadSx-CwcO6WA9.js";import"./react-CTzCTnsG.js";import"./FullWidthAlert-BX9C0HBZ.js";import"./Alert-V7dKC7Nt.js";import"./createTheme-m5mgIdCN.js";import"./resolveComponentProps-Vs1q-1Id.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-BdXv4TBM.js";import"./createSvgIcon-BA5lmNTr.js";import"./DefaultPropsProvider-KGD77BW7.js";import"./Close-BVh9jbMJ.js";import"./IconButton-C8ZXady0.js";import"./ButtonBase-B4CcYDJP.js";import"./useTimeout-CpA1WuhJ.js";import"./TransitionGroupContext-BrZDDC3s.js";import"./useIsFocusVisible-DqkGnRDC.js";import"./useEventCallback-CmGL17y5.js";import"./Paper-BRFBKtNy.js";import"./Stack-DJs_SaLV.js";import"./getThemeProps-BczNjUdE.js";import"./useTheme-D1aHyYy6.js";import"./Box-EVNXnt5A.js";import"./AlertTitle-BJe3pS1L.js";import"./Typography-Qj9qnpdp.js";import"./useTheme-W23PmfEg.js";import"./Grow-CG2jdriR.js";import"./index-Co8xAmzj.js";import"./utils-1wkIb8xE.js";import"./ClickAwayListener-Bup8plU3.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-W9BRZUCf.js";import"./index-BYHM7TqL.js";import"./useControlled-BsWScnXl.js";import"./useId-Ba0U3ySd.js";import"./Popper-C1811B1Z.js";import"./Button-CO54amw_.js";import"./util-Dl4J1kvw.js";import"./mockEntity-DdltKqdS.js";import"./mockFileEntity-u1iMeACE.js";import"./StringUtils-lE31obNl.js";import"./mock_file_handle-3wYKbysY.js";import"./mockProject-DWgRdJYg.js";import"./mockTeam-COdpMsRJ.js";import"./SynapseConstants-DiureF8E.js";import"./uniqueId-CMLqSG1e.js";import"./toString-BBzsCTE6.js";import"./isObjectLike-BLBiTK-1.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-D7PjBgt8.js";import"./times-G3g49VTC.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-fqtAfUrx.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./useQuery-DhL_nMLP.js";import"./utils-Bj8hR2-k.js";import"./Link-Czf_4hER.js";import"./Collapse-on-WM-XP.js";import"./isNil-SuaWjo4O.js";import"./_Uint8Array-CRsdo2D-.js";import"./_baseIsEqual-mt5wqwRw.js";import"./_getTag-hjWRNB5_.js";import"./tinycolor-Begke6kS.js";import"./Fade-DNHPHyMS.js";import"./Skeleton-Dbx4L9CQ.js";import"./inputBaseClasses-DezGaEjz.js";import"./calculateFriendlyFileSize-53AEO24l.js";import"./CheckCircleTwoTone-BaCBSo7_.js";import"./InfoTwoTone-BNe2WjE8.js";import"./mutation-BnSfJ6J7.js";import"./dayjs.min-D7dgKJuw.js";import"./chunk-AYJ5UCUI-CVcY5UZQ.js";import"./cloneDeep-DVCo1U1i.js";import"./_initCloneObject-EeO3VmfB.js";import"./isEqual-DTloIcwI.js";import"./merge-fkSZy5Yz.js";import"./AccountLevelBadge-wJopNUtc.js";import"./Card-C_gHWe4j.js";import"./ConfirmationDialog-Bh_VcIhx.js";import"./DialogBase-C7f9a065.js";import"./Close-mi5nUiCk.js";import"./createSvgIcon-Cc5GfVSQ.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-BeCZWdia.js";import"./ownerWindow-HkKU3E4x.js";import"./HelpPopover-XkEIPFnk.js";import"./MarkdownPopover-CBNF51Xp.js";import"./LightTooltip-rKGp1Qxv.js";import"./MarkdownSynapse-BWI94Hem.js";import"./SkeletonButton-C0B4iTqr.js";import"./SkeletonInlineBlock-BnO7Syfa.js";import"./SkeletonTable-DhSeXdSo.js";import"./SkeletonParagraph-oLikAP9E.js";import"./HelpOutlineTwoTone-FkTpAtSG.js";import"./DialogTitle-DS55dyXB.js";import"./DialogContent-C3mXSu3I.js";import"./Dialog-D5gxlIV5.js";import"./Modal-DZDXxeH0.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-VN1-mGvG.js";import"./useMutation-DvEUL4Uv.js";import"./LoadingScreen-DSqmKfxv.js";import"./LinearProgress-CYXxx6MQ.js";import"./ToastMessage-Kxfq4iNz.js";import"./CSSTransition-pJT3FHi6.js";const Vt={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const bt=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,bt as __namedExportsOrder,Vt as default};
