import{hj as s}from"./iframe-Ci1lmE8g.js";import{C as c}from"./ChallengeDetailPage-D026YE-x.js";import"./index-r8ZA1smB.js";import"./useGetEntityChallenge-9FSzE1t0.js";import"./useTeamMembers-TkStX58o.js";import"./useGetUserTeams-DdEG2lSH.js";import"./useInfiniteQuery-DWL-Og4B.js";import"./InfiniteQueryUtils-CKlRW-xB.js";import"./ChallengeRegisterButton-DxxhGBa7.js";import"./ExitToApp-CEg29vSt.js";import"./SpinnerButton-BT6ReBlb.js";import"./LoginAwareButton-CjXxD-cM.js";import"./useAccessRequirements-BcP6tXmo.js";import"./index-BdMb-1ps.js";import"./_baseOrderBy-hgHOx6Yr.js";import"./_baseIteratee-BQlpWk-E.js";import"./_baseMap-DOU_FLyJ.js";import"./_baseEach-C_dLu_fx.js";import"./useQueries-DsbpWbBj.js";import"./useEntity-vafuLvak.js";import"./pickBy-DBr0S374.js";import"./isString-D4RD_z4s.js";import"./queryOptions-C9woPjwX.js";import"./useEntityBundle-DbW89d5B.js";import"./AccessRequirementList-BoSZJ_9q.js";import"./groupBy-CGpBq9nU.js";import"./_createAggregator-BD97Dewg.js";import"./DialogBase-BYGdPH-i.js";import"./Close-CELbEfBf.js";import"./HelpPopover-Dp5xAO-J.js";import"./MarkdownPopover-C8x7eb7i.js";import"./LightTooltip-D8-ypvp8.js";import"./MarkdownSynapse-3G1qoarh.js";import"./SkeletonButton-CC-6gNoS.js";import"./SkeletonInlineBlock-B2RYwmUI.js";import"./SkeletonTable-DkbE7er9.js";import"./SkeletonParagraph-ITJPOI8x.js";import"./EntityLink-Bzj0KVFg.js";import"./useGetEntityHeaders-DP9Iv32P.js";import"./EntityIcon-42iM6nRf.js";import"./ErrorChip-FIzpsWdF.js";import"./Chip-7ZjY8iwO.js";import"./UserOrTeamBadge-BLAOGy8C.js";import"./UserBadge-DRfGM4AR.js";import"./MenuItem-DNhPNPdH.js";import"./Card-B9m98vxz.js";import"./TeamBadge-BtVGBgEB.js";import"./UnmanagedACTAccessRequirementItem-DMzWDNsT.js";import"./RequirementItem-DP_I-Bz7.js";import"./LockTwoTone-CrK_l1K_.js";import"./UserSearchBoxV2-CViwSSrF.js";import"./useDebouncedEffect-B_A-YylX.js";import"./use-deep-compare-effect.esm-CoZjJuVi.js";import"./uniq-DZseOKB0.js";import"./without-BMXd1Ulk.js";import"./Select-aab027f3.esm-CQJYo76m.js";import"./defineProperty-CegpTSss.js";import"./ManagedACTAccessRequirementItemView-CYbs5Fpo.js";import"./SelfSignAccessRequirementItem-Bv1rwp1u.js";import"./DataAccessRequestAccessorsFilesForm-4VD9RVpb.js";import"./enums-DHUNt8f7.js";import"./_arrayReduce-CrxnWFSq.js";import"./forEach-B8iwwgef.js";import"./useDataAccessSubmission-DuTCSii6.js";import"./RadioGroup-BSAFIhhK.js";import"./Radio-Dr9D4Szr.js";import"./SwitchBase-Dywev717.js";import"./FormGroup-BsM0vA4B.js";import"./FormControlLabel-CP9zrs5G.js";import"./UploadDocumentField-eYu-FnoW.js";import"./FileUpload-D1d29Wem.js";import"./ManagedACTAccessRequirementFormWikiWrapper-c_CnggJ9.js";import"./GridLegacy-DUg-By5k.js";import"./ResearchProjectForm-BfE4Y_v2.js";import"./TextFieldWithWordLimit-4grzBmCY.js";import"./AuthenticatedRequirement-Cw3I_2ni.js";import"./CertificationRequirement-QNLxH5mK.js";import"./TwoFactorAuthEnabledRequirement-CeYc8Ldq.js";import"./ValidationRequirement-CJLodIRz.js";import"./ChallengeTeamWizard-tyr1m-RW.js";import"./CreateChallengeTeam-DeqkEB1N.js";import"./useTeam-CwU1c4Di.js";import"./papaparse.min-D1KxGBLm.js";import"./Search-DHCdcpMe.js";import"./Box-Bf1kGzep.js";import"./DataGrid-XuORYyXG.js";import"./index-C-_p9hnQ.js";import"./index-Chjiymov.js";import"./index-Li_sw8R-.js";import"./Switch-CV_0XDpF.js";import"./ListItemIcon-BZCG7_P3.js";import"./Badge-8QADILPD.js";import"./usePreviousProps-CmCVe5f3.js";import"./Autocomplete-BgFeKQE2.js";import"./KeyboardArrowRight-CyBo1b-k.js";import"./LastPage-B0OK_dbD.js";import"./ListItemText-B9vILOEk.js";import"./Checkbox-CfXy5gYt.js";import"./InputAdornment-CfqlEkVW.js";import"./extends-CF3RwP-h.js";import"./ConfirmationDialog-C00Ejex4.js";const mo={title:"Synapse/Challenge/ChallengeDetailPage",component:c,parameters:{backgrounds:{default:"Challenge Header",values:[{name:"Challenge Header",value:"#3E68AA"}]}}},r={args:{projectId:s.id},parameters:{stack:"mock"}},o={args:{projectId:"syn51208606"},parameters:{stack:"production"}};var t,m,p;r.parameters={...r.parameters,docs:{...(t=r.parameters)==null?void 0:t.docs,source:{originalSource:`{
  args: {
    projectId: mockProject.id
  },
  parameters: {
    stack: 'mock'
  }
}`,...(p=(m=r.parameters)==null?void 0:m.docs)==null?void 0:p.source}}};var i,e,a;o.parameters={...o.parameters,docs:{...(i=o.parameters)==null?void 0:i.docs,source:{originalSource:`{
  args: {
    projectId: 'syn51208606'
  },
  parameters: {
    stack: 'production'
  }
}`,...(a=(e=o.parameters)==null?void 0:e.docs)==null?void 0:a.source}}};const po=["MockDemo","ProductionDemo"];export{r as MockDemo,o as ProductionDemo,po as __namedExportsOrder,mo as default};
