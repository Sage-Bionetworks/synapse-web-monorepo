import{t as o}from"./VerificationSubmission-OWkqLMYZ.js";import{g as u,b5 as d,b6 as l,B as S,b7 as f,M as O}from"./useFiles-CUZOk7Jz.js";import"./StringUtils-C5rFena9.js";import{h as i,H as n}from"./index-4-DH79mr.js";import{j as _}from"./jsx-runtime-D_zvdyIk.js";import{a as T}from"./MarkdownGithub-qzyIzsvV.js";import"./SynapseConstants-DSt8DWul.js";import"./OrientationBanner-r53K2xh_.js";import"./index-Crkga5QL.js";import"./index-GsaBG8zw.js";import"./iframe-xzCVUG4Y.js";import"./spreadSx-CwcO6WA9.js";import"./react-DA-_H-S7.js";import"./FullWidthAlert-DduwY2NZ.js";import"./Alert-toDvvqGc.js";import"./createTheme-BFE69o89.js";import"./DefaultPropsProvider-BE0ry_NZ.js";import"./useSlot-Bnb_BrAZ.js";import"./useForkRef-BcSumWpH.js";import"./createSimplePaletteValueFilter-CVxb3bkw.js";import"./createSvgIcon-C7XgeMGx.js";import"./Close-B6lYOQEJ.js";import"./IconButton-MaLeM1Vu.js";import"./useTimeout-BCdgOQTg.js";import"./ButtonBase-CIatjECH.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-BaB00T0S.js";import"./Paper-BpBXdwqK.js";import"./useTheme-BbLqDdC9.js";import"./useTheme-BLfClJc5.js";import"./Stack-JkKUVtGc.js";import"./extendSxProp-Rcv_0IQY.js";import"./getThemeProps-DMOl_SnU.js";import"./Box-CuWsxWCp.js";import"./AlertTitle-BwehuD66.js";import"./Typography-Cw2XNjg-.js";import"./index-DZevvUUp.js";import"./ClickAwayListener-CUDdCrci.js";import"./getReactElementRef-Cfv1c7hh.js";import"./index-DGgDoFzh.js";import"./index-BBJA5RKi.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-DD1LUtFX.js";import"./Tooltip-CHuqp0uT.js";import"./index-C987JzfV.js";import"./useControlled-CM_dYV_J.js";import"./Popper-BCcvQoKi.js";import"./Button-DpEdso7U.js";import"./fetchWithExponentialTimeout-CXmnpl-T.js";import"./useQuery-BqRAiEMW.js";import"./QueryClientProvider-GT2kLsWY.js";import"./Link-D7hbXA01.js";import"./Collapse-D6GgNh6a.js";import"./_baseUniq-D3KJmumC.js";import"./_Uint8Array-BDzM8Wqv.js";import"./isArray-C4HGfEIw.js";import"./_getTag-D5H9nNTR.js";import"./isEqual-Bq7Iw1tg.js";import"./merge-BRE3rMyO.js";import"./_initCloneObject-DQGdPQGo.js";import"./identity-DKeuBCMA.js";import"./tinycolor-Begke6kS.js";import"./Fade-CMbKBr8t.js";import"./inputBaseClasses-K2fdwEmf.js";import"./calculateFriendlyFileSize-DdbMjbNi.js";import"./CheckCircleTwoTone-wO_FwCG2.js";import"./InfoTwoTone-BFsX0rHi.js";import"./useMutation-vxsUYoHz.js";import"./dayjs.min-D-599zIW.js";import"./chunk-AYJ5UCUI-BybrNjxD.js";import"./cloneDeep-XgF1c9dW.js";import"./Skeleton-B2QfW8I_.js";import"./SkeletonButton-Cad-L5Bg.js";import"./SkeletonInlineBlock-B_0RFZc4.js";import"./SkeletonTable-DU7o9Zh-.js";import"./times-Bmbk05o0.js";import"./toInteger-CpLI7O7b.js";import"./isSymbol-DVY3Twrh.js";import"./SkeletonParagraph-CCYqSYVV.js";import"./MarkdownSynapse-BchEcHpA.js";const v={termsOfServiceUrl:"https://gh.com/tos.md",latestTermsOfServiceVersion:"1.0.0",currentRequirement:{requirementDate:"2024-11-01T00:00:00Z",minimumTermsOfServiceVersion:"0.0.0"}},h={userId:"12345",lastAgreementDate:null,lastAgreementVersion:null,userCurrentTermsOfServiceState:o.MUST_AGREE_NOW};o.MUST_AGREE_NOW;o.MUST_AGREE_SOON;o.UP_TO_DATE;const g=(r=u(S.REPO_ENDPOINT),e=h)=>[i.get(`${r}${d}`,()=>n.json(e,{status:201})),i.get(`${r}${l}`,()=>n.json(v,{status:201}))];function m(r){const{data:e}=f(),c=e==null?void 0:e.latestTermsOfServiceVersion;return _.jsx(T,{...r,tagName:c})}try{m.displayName="GovernanceMarkdownGithub",m.__docgenInfo={description:"Loads the version of the Governance Github Markdown file that the Synapse backend determines is the current version",displayName:"GovernanceMarkdownGithub",props:{repoOwner:{defaultValue:null,description:"",name:"repoOwner",required:!0,type:{name:"string"}},repoName:{defaultValue:null,description:"",name:"repoName",required:!0,type:{name:"string"}},filePath:{defaultValue:null,description:"",name:"filePath",required:!0,type:{name:"string"}},showDownloadButton:{defaultValue:null,description:"",name:"showDownloadButton",required:!1,type:{name:"boolean"}}}}}catch{}const Zr={title:"Markdown/GovernanceMarkdownGithub",component:m},t={args:{repoOwner:"Sage-Bionetworks",repoName:"Sage-Governance-Documents",filePath:"Terms.md"},parameters:{stack:"mock",msw:{handlers:[...g(O)]}}};var p,s,a;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    repoOwner: 'Sage-Bionetworks',
    repoName: 'Sage-Governance-Documents',
    filePath: 'Terms.md'
  },
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getTermsOfServiceHandlers(MOCK_REPO_ORIGIN)]
    }
  }
}`,...(a=(s=t.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const zr=["TermsOfServiceDemo"];export{t as TermsOfServiceDemo,zr as __namedExportsOrder,Zr as default};
