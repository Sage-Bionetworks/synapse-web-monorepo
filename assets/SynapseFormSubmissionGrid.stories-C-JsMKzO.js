import{j as l}from"./jsx-runtime-DHIV3NgZ.js";import{S as t}from"./types-CP9zjM1W.js";import{u as o}from"./VerificationSubmission-BI5WaB2N.js";import{g as T}from"./handlers-C5XYbkK-.js";import{aD as S,M as a}from"./useFiles-DjXRh0_n.js";import"./OrientationBanner-BhufqD1t.js";import"./index-CiYMHn1W.js";import"./StringUtils-DN6u4g4A.js";import{l as _}from"./index-oly8ZZxj.js";import{S as E}from"./SynapseFormSubmissionGrid-Bc7zEwxF.js";import"./mockSchema-CiQ6251P.js";import"./mockFileEntity-DQVCXvFU.js";import"./mock_file_handle-CFTRkxcS.js";import"./mock_user_profile-CijvmO8r.js";import"./mockProject-BggBAyCb.js";import"./mockTeam-D1Ut9b1b.js";import"./SynapseConstants-fQvBwSlx.js";import"./uniqueId-C6WYovwQ.js";import"./toString-z0lluA1u.js";import"./isObjectLike-vEelmOLE.js";import"./iframe-9bS_PLuc.js";import"./isArray-Dxzbedgu.js";import"./isSymbol-C4jnPpKO.js";import"./times-rmMWXUrn.js";import"./_baseTimes-36S_kd0L.js";import"./identity-DKeuBCMA.js";import"./toInteger-BJwvUQ2x.js";import"./asyncJobHandlers-BnIFkG3v.js";import"./BasicMockedCrudService-Q2fWu_bU.js";import"./cloneDeep-jYEjTLhY.js";import"./_Uint8Array-CtrrdRS6.js";import"./_initCloneObject-BF1nDgPw.js";import"./_getTag-CGOAJCRD.js";import"./isEqual-CQGRlhBE.js";import"./_baseIsEqual-KSbFY_iK.js";import"./mockAnnotationColumns-aZ3kgW8Z.js";import"./tableQueryHandlers-DZh-VciT.js";import"./omit-DQOFGfJd.js";import"./_baseGet-Cz7ydMxW.js";import"./isNil-CQPdfDEX.js";import"./last-DXTTfs9a.js";import"./_baseSlice-F8doVSIJ.js";import"./merge-CVJPWvx4.js";import"./_baseFlatten-Bh4KAMmj.js";import"./pick-DlzQ54xY.js";import"./_baseSet-ChivP43g.js";import"./hasIn-C23Vxcwy.js";import"./accessRequirementAclHandlers-DZqr5qmi.js";import"./mockAccessRequirementAcls-WSB0zE0Q.js";import"./mockAccessRequirements-BonjBCbX.js";import"./ACTAccessRequirement-WDpE4gfi.js";import"./LockAccessRequirement-B_A_PCc_.js";import"./SelfSignAccessRequirement-C_01XAIc.js";import"./mockWiki-CgjxDh2Q.js";import"./accessRequirementHandlers-Bz_PGVkQ.js";import"./wikiHandlers-3380ql8L.js";import"./mockWikiPageKey-C6Z7Bp4K.js";import"./teamHandlers-C22Yh2dF.js";import"./dataAccessRequestHandlers-DC7YHHOq.js";import"./MockResearchProject-CtFjgbWh.js";import"./mock_discussion-Bs2-bUpK.js";import"./fakerUtils-BXtmhd2V.js";import"./index-B_CMFGN1.js";import"./mockTableEntity-DJAXEdv_.js";import"./mockFileEntityACLVariants-D6GqWqn1.js";import"./entityHandlers-DajgZjiC.js";import"./mockEntity-C81WAQ2X.js";import"./mockEvaluationQueue-CWAgI1lK.js";import"./featureFlagHandlers-Dv0UmzZA.js";import"./fileHandlers-3l5hhfPS.js";import"./personalAccessTokenHandlers-D9XC242Y.js";import"./researchProjectHandlers-B3CuVkGA.js";import"./resetTwoFactorAuthHandlers-BPkXnTMr.js";import"./userProfileHandlers-D1K6tsFw.js";import"./fetchWithExponentialTimeout-Cpvpsfq8.js";import"./TransitionGroupContext-BBtvCtfD.js";import"./FullWidthAlert-C8QiR1e2.js";import"./spreadSx-CwcO6WA9.js";import"./Alert-LB2clXnU.js";import"./createTheme-Dr-FRt9h.js";import"./resolveComponentProps-Sf251QpC.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-C9IHRvmt.js";import"./createSvgIcon-BBEbPora.js";import"./DefaultPropsProvider-BAMSfddg.js";import"./Close-ByobNJAN.js";import"./IconButton-D-tqR65J.js";import"./ButtonBase-C-DypvYL.js";import"./useTimeout-BiQhycxo.js";import"./useIsFocusVisible-mZKnxQyk.js";import"./useEventCallback-JqRP_TZc.js";import"./Paper-Bc8Qqi_T.js";import"./Stack-DXiFrEmq.js";import"./getThemeProps-DLQUokRi.js";import"./useTheme-DcLbTF_6.js";import"./Box-BW1oPic-.js";import"./AlertTitle-qhIofB3L.js";import"./Typography-DmEMLsP4.js";import"./useTheme-nIT41qkF.js";import"./Grow-BC_xmw6o.js";import"./index-4OiUqoTL.js";import"./utils-GYwY21oY.js";import"./ClickAwayListener-B8xxEDtm.js";import"./ownerDocument-DW-IO8s5.js";import"./Tooltip-JzxXX3xe.js";import"./index-BFdM0H06.js";import"./useControlled-0q5EUitM.js";import"./useId-Bv47RgPy.js";import"./Popper-BqTYAN2h.js";import"./Button-Ca1xluWo.js";import"./useQuery-CtFs5y4P.js";import"./utils-2YUT114m.js";import"./Link-CCpec3ar.js";import"./Collapse-Bya5aszg.js";import"./tinycolor-Begke6kS.js";import"./Fade-CJ8x8QLn.js";import"./Skeleton-sF-UrVUs.js";import"./inputBaseClasses-DdQjr_My.js";import"./calculateFriendlyFileSize-M5bk7f-W.js";import"./CheckCircleTwoTone-8R91UKy5.js";import"./InfoTwoTone-BvOnGl6w.js";import"./mutation-D54CMcpZ.js";import"./dayjs.min-C1-dRU45.js";import"./chunk-AYJ5UCUI-B7vmRBcT.js";import"./index-D-zz3DaY.js";import"./react-B3nk1sNR.js";import"./util-DVWm2NNz.js";import"./WideButton-CyhARUaz.js";import"./DeleteTwoTone-DlQXOamX.js";import"./createSvgIcon-Cfvsb0GT.js";import"./createChainedFunction-BO_9K8Jh.js";import"./debounce-Be36O1Ab.js";import"./isMuiElement-BBupIKor.js";import"./ownerWindow-HkKU3E4x.js";import"./ConfirmationDialog-DQf4pr6G.js";import"./DialogBase-D4wU0XkT.js";import"./Close-Ca14FoaC.js";import"./HelpPopover-z3HT99dy.js";import"./MarkdownPopover-ByenzOmm.js";import"./LightTooltip-B82bQI8b.js";import"./MarkdownSynapse-CZ3bFOmU.js";import"./useMutation-BiU6JSNc.js";import"./SkeletonButton-BytHrszf.js";import"./SkeletonInlineBlock-DSwJ4nyw.js";import"./SkeletonTable-BnhxsxXu.js";import"./SkeletonParagraph-D0HInUtA.js";import"./HelpOutlineTwoTone-BUSX8EDv.js";import"./DialogTitle-CnDxcN1z.js";import"./DialogContent-DIqdCLDu.js";import"./Dialog-Dgy8rT5r.js";import"./Modal-e5kQahpq.js";import"./getScrollbarSize-Bqq2hMjQ.js";import"./Backdrop-DyRdCxSB.js";import"./WarningDialog-D8shM_GS.js";t.TODO,t.ERROR,t.COMPLETED;t.TODO,t.ERROR,t.COMPLETED,t.COMPLETED;t.COMPLETED,t.COMPLETED,t.COMPLETED;t.PROGRESS;const D={nextPageToken:"123",page:[{formDataId:"25",etag:"10977a7f-e3a4-11e9-94e2-02c936c5ff9c",groupId:"9",name:"AlinaNewAPIProdTest.json",createdBy:"3391841",createdOn:"2019-09-30T17:01:51.622Z",modifiedOn:"2019-09-30T17:02:20.399Z",dataFileHandleId:"43485087",submissionStatus:{state:o.WAITING_FOR_SUBMISSION}}]},R={page:[{formDataId:"33",etag:"11240522-e403-11e9-94e2-02c936c5ff9c",groupId:"9",name:"d.json",createdBy:"3391841",createdOn:"2019-10-01T04:22:13.755Z",modifiedOn:"2019-10-01T04:22:13.755Z",dataFileHandleId:"43505207",submissionStatus:{submittedOn:"2019-10-01T04:22:23.511Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"32",etag:"df863d6c-e402-11e9-94e2-02c936c5ff9c",groupId:"9",name:"zxcz.json",createdBy:"3391841",createdOn:"2019-10-01T04:18:27.523Z",modifiedOn:"2019-10-01T04:18:27.523Z",dataFileHandleId:"43504979",submissionStatus:{submittedOn:"2019-10-01T04:21:00.269Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"31",etag:"a057855f-e401-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Full data submit only.json",createdBy:"3391841",createdOn:"2019-10-01T04:11:43.660Z",modifiedOn:"2019-10-01T04:11:56.364Z",dataFileHandleId:"43504590",submissionStatus:{submittedOn:"2019-10-01T04:12:04.769Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}},{formDataId:"29",etag:"32e85704-e400-11e9-94e2-02c936c5ff9c",groupId:"9",name:"Jeremy Lambert.json",createdBy:"3391841",createdOn:"2019-10-01T03:54:10.880Z",modifiedOn:"2019-10-01T03:54:10.880Z",dataFileHandleId:"43503572",submissionStatus:{submittedOn:"2019-10-01T04:01:51.672Z",state:o.SUBMITTED_WAITING_FOR_REVIEW}}]},To={title:"Portals/SynapseFormSubmissionsGrid",parameters:{stack:"mock"},argTypes:{isAuthenticated:{control:{type:"boolean"}}},args:{isAuthenticated:!0},render:s=>{const{isAuthenticated:i,...r}=s;return l.jsx(S,{children:p=>l.jsx(E,{token:p.accessToken,...r})})}};function b(){return[_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>{var n;const p=s.body,d=r.status(200);return(n=p.filterByState)!=null&&n.includes(o.WAITING_FOR_SUBMISSION)?i(d,r.json(D)):i(d,r.json(R))})]}const e={parameters:{msw:{handlers:[T(a),_.rest.post(`${a}/repo/v1/form/data/list`,async(s,i,r)=>i(r.status(200),r.json({page:[]})))]}},args:{pathpart:"/Apply/FormSubmission",formGroupId:"9",itemNoun:"Compound",formClass:"drug-upload-tool"}},m={parameters:{msw:{handlers:[...T(a),...b()]}},args:{...e.args}};var u,c,f;e.parameters={...e.parameters,docs:{...(u=e.parameters)==null?void 0:u.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [getHandlers(MOCK_REPO_ORIGIN), rest.post(\`\${MOCK_REPO_ORIGIN}/repo/v1/form/data/list\`, async (req, res, ctx) => {
        return res(ctx.status(200), ctx.json({
          page: []
        }));
      })]
    }
  },
  args: {
    pathpart: '/Apply/FormSubmission',
    formGroupId: '9',
    itemNoun: 'Compound',
    formClass: 'drug-upload-tool'
  }
}`,...(f=(c=e.parameters)==null?void 0:c.docs)==null?void 0:f.source}}};var g,I,O;m.parameters={...m.parameters,docs:{...(g=m.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    msw: {
      handlers: [...getHandlers(MOCK_REPO_ORIGIN), ...listFormDataHandlers()]
    }
  },
  args: {
    ...NoSubmissions.args
  }
}`,...(O=(I=m.parameters)==null?void 0:I.docs)==null?void 0:O.source}}};const _o=["NoSubmissions","HasSubmissions"];export{m as HasSubmissions,e as NoSubmissions,_o as __namedExportsOrder,To as default};
