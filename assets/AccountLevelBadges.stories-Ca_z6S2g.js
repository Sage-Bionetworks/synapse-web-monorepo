import{g as f}from"./userProfileHandlers-BEMW0Tiv.js";import{b as _}from"./mock_user_profile-Bg50HGfI.js";import{M as C}from"./useFiles-CeqoVw1o.js";import{A}from"./AccountLevelBadges-CPz1tdr4.js";import"./VerificationSubmission-BDh1zA9f.js";import"./index-B-t7wBGQ.js";import"./iframe-eFKYoG0j.js";import"./mockEntity-6b-jvVWY.js";import"./mockFileEntity-DwSGtCdl.js";import"./StringUtils-NPb0VexC.js";import"./mock_file_handle-BSSHlK6B.js";import"./mockProject-zdvgL39f.js";import"./mockTeam-CiSc0NFV.js";import"./SynapseConstants-CPCmN-gi.js";import"./OrientationBanner-CQIm-Ey1.js";import"./jsx-runtime-D_zvdyIk.js";import"./index-BcLN8RXQ.js";import"./index-B2AGccKG.js";import"./spreadSx-CwcO6WA9.js";import"./react-DxcobhRw.js";import"./FullWidthAlert-BIez5okj.js";import"./Alert-BBi6u3qT.js";import"./createTheme-DPxGCk7e.js";import"./DefaultPropsProvider-BzWAken2.js";import"./useSlot-DbYJ23lg.js";import"./useForkRef-DmkJa-bD.js";import"./createSimplePaletteValueFilter-BZRticgE.js";import"./createSvgIcon-CrjzRFSh.js";import"./Close-CwrIQBfZ.js";import"./IconButton-ByH8Kolw.js";import"./useTimeout-CUZLOZF-.js";import"./ButtonBase-DIrjwtNY.js";import"./isFocusVisible-B8k4qzLc.js";import"./CircularProgress-DFqmzg7D.js";import"./Paper-DASBMk3C.js";import"./useTheme-B4bAnXTN.js";import"./useTheme-BpFXk7Pw.js";import"./Stack-CbTviNUh.js";import"./extendSxProp-DPlEdwEe.js";import"./getThemeProps-BwGkw9Dq.js";import"./Box-DHqzE0KV.js";import"./AlertTitle-cUB69DsC.js";import"./Typography-Cm6ZNAW-.js";import"./index-BjkGhtTa.js";import"./ClickAwayListener-Dhz2ywRL.js";import"./getReactElementRef-BY9sPS19.js";import"./index-ZBSk-buD.js";import"./index-D5UfxxD5.js";import"./ownerDocument-DW-IO8s5.js";import"./Grow-BYbIhAFm.js";import"./Tooltip-D6WWxUQx.js";import"./index-Y3VDk8SE.js";import"./useControlled-BkANWM5f.js";import"./Popper-7a6yE7es.js";import"./Button-PQgF7jJQ.js";import"./uniqueId-PGzIZYPZ.js";import"./toString-Db-DxRjw.js";import"./isArray-Dpn4sx4n.js";import"./isSymbol-Cjo_G4mn.js";import"./times-VIorgX3n.js";import"./_Uint8Array-nwwAmTj4.js";import"./identity-DKeuBCMA.js";import"./toInteger-CC7N9fZB.js";import"./fetchWithExponentialTimeout-UV9FrpR8.js";import"./useQuery-BWzyFAd_.js";import"./QueryClientProvider-CRKWWU78.js";import"./Link-c4vBsqYa.js";import"./Collapse-3gCBuOnS.js";import"./_baseUniq-B5SLkIvU.js";import"./_getTag-bITFctIo.js";import"./isEqual-Dxe0NAh8.js";import"./merge-D1CwwhmI.js";import"./_initCloneObject-D2f-QGXU.js";import"./tinycolor-Begke6kS.js";import"./Fade-D3Qy40VT.js";import"./inputBaseClasses-CY7MzjF7.js";import"./calculateFriendlyFileSize-XuDPvr9B.js";import"./CheckCircleTwoTone-B0-qzMIh.js";import"./InfoTwoTone-DSitWCJH.js";import"./useMutation-B17C9-3a.js";import"./dayjs.min-CjB-a8se.js";import"./chunk-AYJ5UCUI-DPDI74MQ.js";import"./cloneDeep-Dl2F-bJn.js";import"./Skeleton-DbvZ5cWo.js";import"./AccountLevelBadge-BJNZLDB0.js";import"./Card-6-h4uyFa.js";import"./ConfirmationDialog-DbvNW914.js";import"./DialogBase-CoJl4yXZ.js";import"./Close-BhtbRx1O.js";import"./HelpPopover-DhFEmo4M.js";import"./MarkdownPopover-D_LWsAdO.js";import"./LightTooltip-B6b6ViZK.js";import"./MarkdownSynapse-CMEiPMsD.js";import"./SkeletonButton-BJ10trZP.js";import"./SkeletonInlineBlock-CreQRsUy.js";import"./SkeletonTable-Dpex71Pv.js";import"./SkeletonParagraph-DLjrTkgH.js";import"./HelpOutlineTwoTone-CJvdywB7.js";import"./DialogTitle-C0o1E5cS.js";import"./DialogContent-BaUn5GCh.js";import"./DialogActions-D2m4PN6J.js";import"./Dialog-BvdZFCN1.js";import"./Modal-D5fqo92k.js";import"./getScrollbarSize-CaCM53D3.js";import"./ownerWindow-HkKU3E4x.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Backdrop--mvX-O_t.js";import"./LoadingScreen-CTaS2ytc.js";import"./LinearProgress-BmCZXOvf.js";import"./ToastMessage-wB9p7yG9.js";import"./CSSTransition-BeXC_I1v.js";const St={title:"UI/AccountLevelBadges",component:A},r={args:{userId:"3385021"}},t={args:{userId:"345424"}},o={args:{userId:"273980"}},i={parameters:{stack:"mock",msw:{handlers:[...f(C)]}},args:{userId:_.toString()}};var m,p,e;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    userId: '3385021'
  }
}`,...(e=(p=r.parameters)==null?void 0:p.docs)==null?void 0:e.source}}};var s,a,d;t.parameters={...t.parameters,docs:{...(s=t.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    userId: '345424'
  }
}`,...(d=(a=t.parameters)==null?void 0:a.docs)==null?void 0:d.source}}};var n,c,u;o.parameters={...o.parameters,docs:{...(n=o.parameters)==null?void 0:n.docs,source:{originalSource:`{
  args: {
    userId: '273980'
  }
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};var g,l,I;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  parameters: {
    stack: 'mock',
    msw: {
      handlers: [...getUserProfileHandlers(MOCK_REPO_ORIGIN)]
    }
  },
  args: {
    userId: MOCK_USER_ID_3.toString()
  }
}`,...(I=(l=i.parameters)==null?void 0:l.docs)==null?void 0:I.source}}};const Et=["Registered","Certified","CertifiedAndValidated","CertifiedValidatedAndEnabledMFAMock"];export{t as Certified,o as CertifiedAndValidated,i as CertifiedValidatedAndEnabledMFAMock,r as Registered,Et as __namedExportsOrder,St as default};
