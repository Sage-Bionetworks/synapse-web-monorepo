import{i as s,l as c,b5 as g,b6 as p,n as _}from"./SynapseClient-CMNXBMPz.js";import"./OrientationBanner-D9RUUnWX.js";import"./index-Dl6G-zuu.js";import"./EntityTypeUtils-BpOAC-k-.js";import"./getEndpoint-CjoHA800.js";import"./jsx-runtime-Du8NFWEI.js";import{G as E,q as u,r as y,P as l,E as n,e as f,Y as T}from"./index-CIIvWsNs.js";function N(e,t){const{accessToken:r,keyFactory:a}=s();return c({...t,queryKey:a.getDefaultUploadDestinationQueryKey(e),queryFn:()=>g(e,r)})}function O(e,t,r){const{accessToken:a,keyFactory:o}=s();return c({...r,queryKey:o.getUploadDestinationForStorageLocationQueryKey(e,t),queryFn:()=>p(e,t,a)})}function A(e,t){const{keyFactory:r,isInExperimentalMode:a}=s(),{data:o}=c({staleTime:1/0,...t,queryKey:r.getFeatureFlagQueryKey(),queryFn:()=>_.getFeatureFlags()});return a||!!(o!=null&&o[e])}const b="Synapse Storage";function w(e,t){switch(e.concreteType){case n:return{endpoint:e.endpointUrl,bucket:e.bucket,fileKey:e.fileKey};case l:case y:return{url:i(e,t)};case u:case E:return{location:i(e,t)};default:throw new Error(`Couldn't determine location name for file handle: ${JSON.stringify(e)}`)}}function i(e,t){switch(e.concreteType){case l:return e.filePath;case n:case u:case E:return t?F(t):e.concreteType===n?e.bucket:e.bucketName;case y:return e.externalURL;default:throw new Error(`Couldn't determine location name for file handle: ${JSON.stringify(e)}`)}}function K(e){let t;return e.entityType===f.FILE&&(t=e.fileHandles.filter(r=>r.id===e.entity.dataFileHandleId)[0]),t}function F(e){let t="";if(e)switch(e.concreteType){case"org.sagebionetworks.repo.model.file.S3UploadDestination":t=b;break;case"org.sagebionetworks.repo.model.file.ExternalUploadDestination":if(t=e.url,e.uploadType===T.SFTP){const r=t.lastIndexOf("/");r&&(t=t.substring(0,r))}break;case"org.sagebionetworks.repo.model.file.ExternalS3UploadDestination":t="s3://"+e.bucket+"/",e.baseKey!=null&&(t+=e.baseKey);break;case"org.sagebionetworks.repo.model.file.ExternalGoogleCloudUploadDestination":t="gs://"+e.bucket+"/",e.baseKey!=null&&(t+=e.baseKey);break;case"org.sagebionetworks.repo.model.file.ExternalObjectStoreUploadDestination":t=e.endpointUrl+"/"+e.bucket;break}return t}export{O as a,i as b,N as c,w as d,F as e,K as g,A as u};
