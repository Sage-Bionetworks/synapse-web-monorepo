name: "NPM Publish and GitHub tag"
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - run: pnpm install
      - run: pnpm -r publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      # Set PACKAGE_VERSION, pull from package.json
      - name: package-version
        run: node -p -e '`PACKAGE_VERSION=${require("./package.json").version}`' >> $GITHUB_ENV

      # Now check if the synapse-react-client version changed, and if so, create a tag.
      # We will need to revise/generalize this workflow if we publish multiple packages to npm.
      - id: synapse-react-client-version-check
        uses: EndBug/version-check@v2
        with:
          file-name: ./packages/synapse-react-client/package.json
      # Create the tag using the new PACKAGE_VERSION value
      - name: Create tag
        uses: actions/github-script@v6
        if: steps.synapse-react-client-version-check.outputs.changed == 'true'
        with:
          github-token: ${{ github.token }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/synapse-react-client/v${{ steps.synapse-react-client-version-check.outputs.version }}",
              sha: context.sha
            })
