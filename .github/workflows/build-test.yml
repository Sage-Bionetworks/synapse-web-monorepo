# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build/Test All Projects

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    # We should test all active LTS releases, but not until our test suite is less flaky
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/pnpm-setup-action
        with:
          STORE_NX_CACHE: 'true'
      - run: pnpm nx affected --target=build --base=remotes/origin/main
        env:
          NX_REJECT_UNKNOWN_LOCAL_CACHE: 0
  test:
    needs: build
    runs-on:
      labels: ubuntu-latest
    # Job should not last longer than 60 minutes
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/pnpm-setup-action
        with:
          STORE_NX_CACHE: 'true'
      - id: test
        # Test runners run in parallel, so we use `--parallel=1` to avoid running them all at once
        run: pnpm nx affected --target test --base=remotes/origin/main --parallel=1
        env:
          NX_REJECT_UNKNOWN_LOCAL_CACHE: 0
      - name: Upload test report
        if: success() || steps.test.conclusion == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            ./packages/*/coverage/
            ./apps/*/coverage/
  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/pnpm-setup-action
        with:
          STORE_NX_CACHE: 'true'
      - run: pnpm nx affected --target=lint --base=remotes/origin/main
        env:
          NX_REJECT_UNKNOWN_LOCAL_CACHE: 0
  typecheck:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/pnpm-setup-action
        with:
          STORE_NX_CACHE: 'true'
      - run: pnpm nx affected --target=type-check --base=remotes/origin/main
        env:
          NX_REJECT_UNKNOWN_LOCAL_CACHE: 0
  sonarqube-src:
    # For monorepos, create one sonarcloud job per project and specify its directory
    needs: test
    name: scan-synapse-react-client
    runs-on: ubuntu-latest
    if: ${{ github.even_name == 'push' }}
    steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clones is recommended for improving the relevancy of reporting
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: packages/synapse-react-client
