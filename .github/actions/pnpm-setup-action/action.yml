name: 'Set up pnpm and configure environment'
description: 'Installs Node, pnpm, fetches cache (if exists), and runs pnpm install'
runs:
  using: 'composite'
  steps:
    - name: Use Node.js ${{ matrix.node-version || 18 }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version || 18 }}
        registry-url: https://registry.npmjs.org/
    - uses: pnpm/action-setup@v3
      name: Install pnpm
      id: pnpm-install
      with:
        version: 8
        run_install: false
    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
    #    TODO: Storing the Nx cache is failing builds because the cache is not meant to be shared between machines.
    #    This check can be disabled, but may present security risks. See: https://nx.dev/recipes/troubleshooting/unknown-local-cache#you-share-cache-with-another-machine-using-a-network-drive
    #    - name: Set up Nx build cache
    #      uses: actions/cache@v4
    #      with:
    #        path: .nx/cache
    #        key: ${{ runner.os }}-nx-cache
    #        restore-keys: |
    #          ${{ runner.os }}-nx-cache
    - name: Install dependencies (use frozen lockfile)
      run: pnpm install --frozen-lockfile
      shell: bash
