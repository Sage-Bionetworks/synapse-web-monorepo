/////////////////////////////////////////////////////////////
// Synapse React Client (SRC) Core scss                     //
//////////////////////////////////////////////////////////////
// from // from SWC.scss and core.scss
@use '../abstracts/variables' as SRC;
@use '../abstracts/mixins' as SRC_Mixins;
@use 'sass:map';

// Fix scrollbar not showing for some people when css set to scroll: auto
// Ref: https://stackoverflow.com/questions/7492062/css-overflow-scroll-always-show-vertical-scroll-bar
::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 7px;
}

::-webkit-scrollbar-thumb {
  border-radius: 4px;
  background-color: rgba(0, 0, 0, 0.5);
  box-shadow: 0 0 1px rgba(255, 255, 255, 0.5);
}
a:hover {
  cursor: pointer;
}
.forcePlotlyDefaultCursor {
  .js-plotly-plot {
    .plotly {
      .drag {
        cursor: default !important;
      }
    }
  }
}

.SRCBorderedPanel {
  background: SRC.$gray-light;
  border: 1px solid SRC.$border-color-gray;
  padding: 10px;

  &--padded2x {
    padding: 20px;
  }
}

.SRC-noPadding {
  padding: 0px;
}

.SRC-floatLeft,
.wp-block-image .alignleft {
  float: left;
}

.SRC-overflowAuto {
  overflow: auto;
}

.table {
  .SRC-primary-text-color {
    svg {
      width: 18px;
      height: 18px;
    }
    svg,
    path {
      fill: SRC.$primary-action-color;
    }
    .styled-svg-wrapper {
      svg {
        width: 1em; // use MUI default
        height: 1em; // use MUI default
      }
    }
  }
  .btn-download-icon {
    display: flex;
    text-align: left;
  }

  .dropdown button.btn {
    margin: 0 1px;
    border: 0;
    border-radius: 0;
  }

  .SRC-primary-background-color-hover {
    &:hover,
    &[aria-expanded='true'] {
      svg,
      path {
        fill: #fff;
      }
    }
  }
  .SRC-primary-background-color {
    svg,
    path {
      fill: #fff;
    }
  }
}

.SRC-grey-background-hover {
  &:hover,
  &[aria-expanded='true'] {
    background-color: map.get(SRC.$colors, 'gray-400');
  }
}

.SRC-inlineBlock {
  display: inline-block;
}

.SRC-hand-cursor {
  cursor: pointer;
}

.SRC-marginBottomTop {
  margin-top: 15px;
  margin-bottom: 15px;
}

.SRC-boldText {
  font-weight: bold;
}

.SRC-whiteText,
.SRC-whiteText:focus,
.SRC-whiteText:hover,
a.SRC-whiteText {
  color: white !important;
}

.SRC-cardContent a.SRC-whiteText {
  border-bottom: 1px solid white !important;
  // PORTALS-1994: anchor on FF was using the full width
  width: max-content;
}

.SRC-validatedProfileIcon {
  margin-left: 10px;
  svg {
    vertical-align: bottom;
  }
}
.SRC-certified-user-icon {
  margin-right: 5px;
  svg {
    vertical-align: bottom;
  }
}

.SRC-flex {
  display: flex;
}

.SRC-center-text {
  text-align: center;
}

.SRC-no-border-bottom-imp {
  border-bottom: none !important;
}

.SRC-marginAuto {
  margin: auto;
  margin-top: 10px;
  margin-bottom: 10px;
}

.SRC-blackText {
  color: #1a1c29;
}

.SRC-light-background {
  background: #f5f5f5;
}

.SRC-verticalAlignTop {
  vertical-align: top;
}

.SRC-limitMaxWidth {
  max-width: 70%;
}

/*
  checkmark styling start
*/

/* Hide the browser's default checkbox */
/* The container */
.containerCheckbox {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.containerCheckbox input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.SRC-forceLeftDropdown {
  right: auto;
  left: 0;
}

.dropdown:focus ul.dropdown-menu {
  display: block;
}
.dropdown-menu > li > a:hover {
  background-color: unset;
}

.SRC-centerContent {
  display: flex;
  align-items: center;
}

.SRC-centerAndJustifyContent {
  display: flex;
  align-items: center;
  justify-content: center;
}

.SRC-centerContentColumn {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.SRC-hidden {
  visibility: hidden;
  display: none;
}

#root {
  .SRC-menuPadding {
    margin-top: 0px;
    padding-top: 10px;
    padding-right: 15px;
  }
  .SRC-menuPaddingLess {
    padding-top: 15px;
    margin-top: 0px;
  }
}

.SRC-searchBar {
  position: absolute;
  left: 0px;
  margin-left: 10px;
  margin-top: 5px;
}

.SRC-overflowWrap {
  overflow-wrap: break-word;
}

// this implements the fade in for cards
.SRC-card-enter {
  opacity: 0.01;
}

.SRC-card-enter.SRC-card-enter-active {
  opacity: 1;
  transition: opacity 300ms ease-in;
}

.SRC-card-exit {
  opacity: 1;
}

.SRC-card-exit.SRC-card-exit-active {
  opacity: 0.01;
  transition: opacity 300ms ease-in;
}

/*
  UserCard Styling
*/

.UserBadge {
  height: fit-content;
  width: fit-content;
}

.SRC-inline-avatar {
  display: inline-block;
  margin-right: 5px;
  vertical-align: middle;
}

.extraSmall {
  width: 10px !important;
  height: 10px !important;
  padding: 10px !important;
  font-size: 14px;
}

.SRC-isLargeCard {
  div {
    border: 1px solid white;
  }
}

.SRC-userCard {
  display: inline-flex;
  align-items: center;
  .SRC-cardContent {
    width: 100%;
    overflow: hidden;
    white-space: nowrap;
    p,
    span {
      overflow: hidden;
      text-overflow: ellipsis;
    }
    svg {
      flex-shrink: 0;
    }
  }
}

.fade > .SRC-userCard {
  max-width: 450px;
}

.SRC-userCardName {
  font-weight: bold;
  font-size: 16px;
}
.SRC-userCardMediumUp {
  height: 120px;
  width: 100%;
  width: -webkit-fill-available; // for chrome
  width: -moz-available; // for firefox
  padding-left: 25px;
  min-width: 350px;
}

.SRC-eqHeightRow {
  height: 22px;
}

.SRC-cardContent {
  display: inline-flex;
  flex-direction: column;
  padding-left: 17px;
  p {
    margin: 0px 0px 4px 0px;
    line-height: 120%;
  }
}

.SRC-inlineFlex {
  display: inline-flex;
  align-items: center;
}

.SRC-cardContainer {
  max-width: 1335px;
  margin: 0 auto;
}

.SRC-card-grid-row {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
}

.SRC-split {
  display: flex;
  align-content: center;
  align-items: center;
  justify-content: space-between;
}

.SRC-grid-item {
  height: 120px;
  flex-grow: 0;
  flex-shrink: 1;
  margin: 10px 10px;
  width: 350px;
  position: relative;
  box-sizing: border-box;
}

.row.no-gutter > [class*='col-'] {
  padding-right: 0;
  padding-left: 0;
}

@media (min-width: 1501px) {
  .SRC-grid-item {
    flex-basis: 32%;
  }
  .SRC-grid-item.SRC-narrow-grid-item {
    flex-basis: 45%;
  }
}
@media (max-width: 1500px) {
  .SRC-grid-item {
    flex-basis: 31%;
  }
  .SRC-grid-item.SRC-narrow-grid-item {
    flex-basis: 45%;
  }
}
@media (max-width: 1073px) {
  .SRC-grid-item {
    flex-basis: 30%;
  }
  .SRC-grid-item.SRC-narrow-grid-item {
    flex-basis: 45%;
  }
}
@media (max-width: 991px) {
  .SRC-grid-item.SRC-narrow-grid-item {
    flex-grow: 1 !important;
  }
}

@media (max-width: 815px) {
  .SRC-grid-item {
    flex-basis: 45%;
  }
  .SRC-grid-item.SRC-narrow-grid-item {
    flex-basis: 100%;
  }
}
@media (max-width: 555px) {
  .SRC-grid-item {
    flex-basis: 100%;
  }
}

// https://material.io/design/components/snackbars.html#spec
.SRC-modal {
  position: fixed;
  left: 0;
  right: 0;
  z-index: 3;
  bottom: 20px;
  margin: 0 auto;
  padding: 16px;
  display: flex;
  align-items: center;
  justify-content: left;
  background: #1a1c29;
  color: white;
  width: 344px;
  height: 48px;
  border-radius: 4px;
}

.SRC-card-metadata-title {
  color: #ababac;
  margin-top: 16px;
  margin-bottom: 0px;
}

.SRC-cardMetaData {
  padding: 10px 33px;
  max-height: 558px;
  overflow-y: auto;
  background-color: #fff;
}

.SRC-menuLayout {
  padding-right: 40px;
}

.SRC-loadingContainer {
  min-height: 100px;
}

.wp-block-media-text.is-vertically-aligned-top {
  align-items: start;
}
.wp-block-media-text {
  display: grid;
  grid-template-rows: auto;
  align-items: center;
  grid-template-areas: 'media-text-media media-text-content';
  grid-template-columns: 50% auto;
}
.wp-block-media-text > figure > img,
.wp-block-media-text > figure > video {
  max-width: unset;
  width: 100%;
  vertical-align: middle;
}

.SRC-card-overview-title {
  text-transform: uppercase;
  font-weight: bold;
  font-size: 21px;
  margin: 20px 0px;
}
.SRC-no-results-title {
  font-weight: bold;
}

button {
  background: none;
  border: none;
  outline: none;
}

.SRC-markdown-bookmark {
  color: #337ab7;
  &:hover {
    text-decoration: underline;
  }
}

.SRC-fullWidth {
  width: 100%;
}

.SRC-standard-button-shape {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  min-width: 168px;
  padding: 10px;
  height: 40px;
  margin: 21px;
  margin-left: 0px;
}

a.dropdown-item {
  $color: #212529;
  display: block;
  width: 100%;
  padding: 0.55rem 1.5rem;
  clear: both;
  font-weight: 400;
  color: $color;
  text-align: inherit;
  white-space: nowrap;
  background-color: transparent;
  border: 0;
  border-bottom: none;

  &.disabled {
    text-decoration: none;
    outline: none;
    color: lighten($color, 35%);
    cursor: default;
  }
}

.dropdown-divider {
  height: 0;
  margin: 0.5rem 0;
  overflow: hidden;
  border-top: 1px solid #e9ecef;
}

.dropdown .btn {
  padding: 3px;
  margin: 0px 3px;

  &.condenced {
    padding: 1px;
    margin: 0 0 0 1px;
  }
}

.SRC-inactive {
  color: rgba(0, 0, 0, 0.25);
}

.SRC-inactive-bg {
  background-color: rgba(0, 0, 0, 0.25);
  * {
    color: rgba(0, 0, 0, 0.25) !important;
  }
}
.SRC-warning-color {
  color: map.get(SRC.$colors, 'warning');
}
.SRC-danger-color {
  color: map.get(SRC.$colors, 'error');
}

// PORTALS-965: add a max-width to the bootstrap container-fluid class
.container-fluid {
  max-width: 1440px;

  // PORTALS-1339: remove max-width restriction for big tables and charts
  &.container-full-width {
    max-width: none;
  }
}

.js-plotly-plot .plotly {
  .slice {
    cursor: pointer;
  }
  .main-svg {
    overflow: visible;
  }
}

hr ~ .QueryWrapperPlotNav {
  margin-top: 11px;
}

// from SWC.scss

.inlineWidgetContainer {
  display: inline-block;
}

.link {
  color: #2b688f;
}

.SynapseTable {
  min-height: 400px;
  th {
    position: relative;
    background: map.get(SRC.$colors, 'gray-100') padding-box;
    border-right: 1px solid map.get(SRC.$colors, 'gray-400');
  }
  td,
  th {
    & > * {
      padding: 8px 10px;
    }
  }

  tr:nth-of-type(2n) {
    background-color: #fbfbfc;
  }

  tbody > tr > td {
    vertical-align: top;
  }

  .resizer {
    position: absolute;
    right: 0;
    top: 0;
    height: 100%;
    width: 3px;
    padding: 0px;
    background: rgba(0, 0, 0, 0.5);
    cursor: col-resize;
    user-select: none;
    touch-action: none;
  }

  .resizer.isResizing {
    background: SRC.$primary-action-color;
    opacity: 1;
  }

  @media (hover: hover) {
    .resizer {
      opacity: 0;
    }

    *:hover > .resizer {
      opacity: 1;
    }
  }
}

.table > tbody > tr > td {
  vertical-align: top;
}

.SignInButton {
  padding: 0px;
}

.SRC-pointer-events-none {
  pointer-events: none;
}

.SRC-labeled-dropdown {
  display: flex;
  align-items: center;
  margin: 3px 0px 10px;
  &__label {
    color: SRC.$text-color-dark;
    margin-right: 5px;
  }
}

// Core link styles across the portal main area.
// Design would like "body text" to have the special primary link style.
// Other links should have the normal secondary link style.
// You can force normal link style by adding the "secondary-links" css class a container of your anchor.
// Or force the highlighted primary link by adding "highlight-link" css class name to an anchor.
// Links created with MUI get their styling from the MUI theme.
main,
.modal,
#rootPanel {
  a,
  .bootstrap-4-backport a,
  .markdown td a,
  .markdown a.SRC-userCard,
  .secondary-links a,
  .markdown .secondary-links a,
  .modal-body .dropdown-menu a {
    &:not(.btn, .MuiLink-root, .MuiButton-root) {
      @include SRC_Mixins.normalLink;
      &:visited,
      &:active,
      &:link {
        @include SRC_Mixins.normalLink;
      }
    }
  }

  .modal-body .dropdown-menu a {
    &:not(.btn, .MuiLink-root, .MuiButton-root) {
      color: unset;
      &:visited,
      &:active,
      &:link {
        color: unset;
      }
      &:hover {
        color: white;
      }
    }
  }

  .markdown a,
  .SRC-userCardName a,
  a.highlight-link,
  details > summary,
  .modal-body a {
    &:not(.btn, .MuiLink-root, .MuiButton-root) {
      @include SRC_Mixins.highlightLink;
      &:visited,
      &:active,
      &:link {
        @include SRC_Mixins.highlightLink;
      }
    }
  }

  // do not apply special styling to dropdown links or anchors in tabs
  .dropdown,
  .nav-tabs,
  .dropdown-menu,
  .MuiDrawer-root {
    a:not(.btn, .MuiLink-root, .MuiButton-root) {
      @include SRC_Mixins.ignoreLink;
    }
  }
  *,
  .bootstrap-4-backport {
    a.ignoreLink:not(.btn, .MuiLink-root, .MuiButton-root) {
      @include SRC_Mixins.ignoreLink;
      &:visited,
      &:active,
      &:link {
        @include SRC_Mixins.ignoreLink;
      }
    }
  }
}

.searchInputWithIcon {
  span {
    display: block;
    height: 0px;
  }
  svg {
    position: relative;
    top: 8px;
    left: 6px;
    color: #6f7478;
  }
  input {
    padding-left: 32px;
  }
}

.SRC-tag {
  border: 1px solid SRC.$primary-action-color;
  border-radius: 100px;
  padding: 5px 10px;
  color: SRC.$primary-action-color;
  text-transform: uppercase;
}

.SRC-margin-left-5 {
  margin-left: 5px;
}

// TODO - remove after react-select is updated to use MUI theme, see PORTALS-2651
.UserSearchBoxV2,
.AsyncSelect {
  .form-control {
    background-color: map.get(SRC.$colors, 'gray-200');
    border-radius: 3px;
  }
}
