import { Model } from 'json-joy/lib/json-crdt'
import { s } from 'json-joy/lib/json-crdt-patch'
import { ValidationResults } from '@sage-bionetworks/synapse-types'

const gridRowSchema = s.obj({
  data: s.vec(s.con('')),
  metadata: s.obj({
    synapseRow: s.obj({
      rowId: s.con(0),
      versionNumber: s.con(0),
      etag: s.con(''),
    }),
    rowValidation: s.con<ValidationResults | undefined>(undefined),
  }),
})

export const gridSchema = s.obj({
  doc_version: s.con('0.1.0'),
  columnNames: s.vec(s.con('')),
  columnOrder: s.arr([s.con(0)]),
  rows: s.arr([gridRowSchema]),
})

export interface JsonJoyMessage {
  sequenceNumber: number
  methodName: string
  payload?: string
}

export type QueryInputType = 'empty' | 'sql' | 'sessionId' | 'unknown'
export interface QueryInput {
  type: QueryInputType
  input: string
}

export type GridModel = ReturnType<typeof Model.create<typeof gridSchema>>
export type GridModelSnapshot = ReturnType<GridModel['api']['getSnapshot']>

export interface Operation {
  type: 'UPDATE' | 'DELETE' | 'CREATE'
  fromRowIndex: number
  toRowIndex: number
}

/**
 * Object that represents a single row of data in a Grid session that is compatible with react-datasheet-grid.
 * This objects acts as a "ViewModel" and can be translated to/from the Synapse data grid CRDT schema.
 */
export type DataGridRow = {
  [key: string]: string | number | boolean | null | undefined
} & {
  /** The JSON Schema validation results for the row, generated by the hub */
  __validationResults?: ValidationResults
}
